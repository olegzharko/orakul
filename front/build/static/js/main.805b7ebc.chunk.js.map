{"version":3,"sources":["services/login/Login.ts","services/login/forgotPassword.ts","store/main/actions.ts","App/App.tsx","App/useApp.ts","store/main/store.ts","store/scheduler/store.ts","store/appointments/store.ts","store/filter/store.ts","store/registrator/store.ts","store/clients/store.ts","store/immovables/store.ts","store/index.ts","index.tsx","services/getAppointments.ts","services/setSchedulerFilter.ts","services/searchAppointments.ts","services/generator/getCardsByContractType.ts","store/appointments/actions.ts","types.ts","services/createNewCard.ts","services/editCalendarCard.ts","services/getCalendarCard.ts","services/getCalendar.ts","services/moveCalendarCard.ts","services/deleteCalendarCard.ts","store/scheduler/actions.ts","components/Loader/Loader.tsx","services/registrator/getDevelopers.ts","services/registrator/getImmovables.ts","services/registrator/putDeveloper.ts","services/registrator/putImmovable.ts","store/registrator/actions.ts","services/generator/Client/getClients.ts","store/clients/actions.ts","services/getImmovables.ts","store/immovables/actions.ts","services/Constants.ts","services/getDeveloperInfo.ts","services/getFilterData.ts","store/filter/actions.ts","services/login/resetPassword.ts","services/utils/requestApi.ts"],"names":["login","bodyData","a","requestApi","url","DEFAULT_URL","method","data","console","log","forgotPassword","ACTIONS","SET_TOKEN","SET_USER","SET_USER_TYPE","SET_LOADING","SET_MODAL_INFO","setUser","payload","type","setModalInfoAction","setUserTypeAction","dispatch","getState","localStorage","setItem","JSON","stringify","main","user","setModalInfo","setTimeout","open","sendLogin","remember","success","message","token","email","forgotPasswordService","RegistratorScreen","React","lazy","Dashboard","Scheduler","Login","App","useDispatch","useSelector","state","useEffect","localUser","getItem","parse","useApp","UserTypes","RECEPTION","fallback","Loader","REGISTRATOR","GENERATOR","ASSISTANT","MANAGER","initialState","id","extra_type","modalInfo","reducer","action","options","developersInfo","newSelectedAppointment","oldSelectedAppointment","editAppointmentData","isLoading","schedulerLock","SET_OPTIONS","SET_DEVELOPERS_INFO","SET_IS_LOADING","SET_SELECTED_NEW_APPOINTMENT","SET_SELECTED_OLD_APPOINTMENT","SET_EDIT_APPOINTMENT_DATA","SET_SCHEDULER_LOCK","appointments","SET_APPOINTMENTS","ADD_NEW_APPOINTMENT","DELETE_APPOINTMENT","filter","item","i","EDIT_APPOINTMENTS","filterInitialData","SET_FILTER_INITIAL_DATA","developers","immovables","SET_DEVELOPERS","SET_IMMOVABLES","clients","idLoading","SET_CLIENTS","combineReducers","scheduler","registrator","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","store","document","getElementById","getAppointments","headers","Authorization","setSchedulerFilter","searchAppointments","getCardsByContractType","setIsLoading","setAppointments","addNewAppointment","setEditAppointments","deleteAppointment","clearAppointments","fetchAppointments","res","Object","values","fetchAppointmentsByFilter","user_type","fetchAppointmentsByContracts","text","Error","searchAppointmentsServices","createNewCard","editCalendarCard","getCalendarCard","getCalendar","moveCalendarCard","deleteCalendarCard","setDevelopersInfo","setSelectedNewAppointment","setSelectedOldAppointment","setEditAppointmentData","setSchedulerLock","editCalendarCardService","fetchCalendarCard","removeCalendarCard","fetchDeveloperInfo","notDispatch","getDeveloperInfo","fetchSchedulerSettings","moveCalendarCardService","createNewCardService","color","getDevelopers","getImmovables","putDeveloper","putImmovable","fetchDevelopers","fetchImmovables","editDeveloperStatus","editImmovableStatus","getClients","userType","setClients","fetchClients","setImmovables","getFilterData","fetchFilterData","resetPassword","params","body","undefined","Accept","fetch","json"],"mappings":"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","file":"static/js/main.805b7ebc.chunk.js","sourcesContent":["import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\ntype BodyData = {\n  email: string;\n  password: string;\n};\n\nexport default async function login(bodyData: BodyData) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/login`,\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\ntype BodyData = {\n  email: string;\n};\n\nexport default async function forgotPassword(bodyData: BodyData) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/password/forgot`,\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { Dispatch } from 'redux';\nimport login from '../../services/login/Login';\nimport forgotPasswordService from '../../services/login/forgotPassword';\nimport resetPasswordService, {\n  ResetPasswordType,\n} from '../../services/login/resetPassword';\nimport { UserTypes } from '../../types';\nimport { State } from '../types';\n\nexport const ACTIONS = {\n  SET_TOKEN: 'SET_TOKEN',\n  SET_USER: 'SET_USER',\n  SET_USER_TYPE: 'SET_USER_TYPE',\n  SET_LOADING: 'SET_LOADING',\n  SET_MODAL_INFO: 'SET_MODAL_INFO',\n};\n\nexport const setToken = (payload: string) => ({\n  type: ACTIONS.SET_TOKEN,\n  payload,\n});\n\nexport const setLogin = (payload: string) => ({\n  type: ACTIONS.SET_TOKEN,\n  payload,\n});\n\nexport const setUser = (payload: any) => ({\n  type: ACTIONS.SET_USER,\n  payload,\n});\n\nexport const setUserType = (payload: UserTypes) => ({\n  type: ACTIONS.SET_USER_TYPE,\n  payload,\n});\n\nconst setModalInfoAction = (payload: any) => ({\n  type: ACTIONS.SET_MODAL_INFO,\n  payload,\n});\n\n// Thunk actions\nexport const setUserTypeAction = (type: UserTypes) => (\n  dispatch: Dispatch<any>,\n  getState: () => State,\n) => {\n  dispatch(setUserType(type));\n  localStorage.setItem('user', JSON.stringify({ ...getState().main.user, type }));\n};\n\nexport const setModalInfo = (payload: any) => (dispatch: Dispatch<any>) => {\n  dispatch(setModalInfoAction(payload));\n  setTimeout(() => {\n    dispatch(setModalInfoAction({\n      ...payload,\n      open: false,\n    }));\n  }, 2000);\n};\n\nexport const sendLogin = (\n  bodyData: {\n    email: string;\n    password: string;\n  },\n  remember: boolean\n) => async (dispatch: Dispatch<any>) => {\n  const { success, message, data } = await login(bodyData);\n\n  if (success) {\n    dispatch(setToken(data.token));\n    dispatch(setUser(data));\n  } else {\n    dispatch(\n      setModalInfo({\n        success,\n        message,\n        open: true,\n      })\n    );\n  }\n\n  if (remember) localStorage.setItem('user', JSON.stringify(data));\n};\n\nexport const forgotPassword = ({ email }: { email: string }) => async (\n  dispatch: Dispatch<any>\n) => {\n  const { success, message } = await forgotPasswordService({ email });\n\n  if (success) {\n    dispatch(setModalInfo({ success, message, open: true }));\n  }\n};\n\nexport const resetPassword = (data: ResetPasswordType) => async (\n  dispatch: Dispatch<any>\n) => {\n  const { success, message } = await resetPasswordService(data);\n\n  if (success) dispatch(setModalInfo({ success, message, open: true }));\n};\n","import React, { Suspense } from 'react';\nimport './index.scss';\nimport { useApp } from './useApp';\nimport { UserTypes } from '../types';\nimport Loader from '../components/Loader/Loader';\n\n// Lazy\nconst RegistratorScreen = React.lazy(() => import('../Screens/RegistratorScreen'));\nconst Dashboard = React.lazy(() => import('../Screens/DashboardScreen'));\nconst Scheduler = React.lazy(() => import('../Screens/SchedulerScreen'));\nconst Login = React.lazy(() => import('../Screens/LoginScreen'));\n\nconst App: React.FC = () => {\n  const { type } = useApp();\n\n  if (!type) {\n    return (\n      <Suspense fallback={<Loader />}>\n        <Login />\n      </Suspense>\n    );\n  }\n\n  if (type === UserTypes.RECEPTION) {\n    return (\n      <Suspense fallback={<Loader />}>\n        <Scheduler />\n      </Suspense>\n    );\n  }\n\n  if (type === UserTypes.REGISTRATOR) {\n    return (\n      <Suspense fallback={<Loader />}>\n        <RegistratorScreen />\n      </Suspense>\n    );\n  }\n\n  if (type === UserTypes.GENERATOR\n    || type === UserTypes.ASSISTANT\n    || type === UserTypes.MANAGER\n  ) {\n    return (\n      <Suspense fallback={<Loader />}>\n        <Dashboard />\n      </Suspense>\n    );\n  }\n\n  return <h1>You have not access</h1>;\n};\n\nexport default App;\n","import { useSelector, useDispatch } from 'react-redux';\n/* eslint-disable import/prefer-default-export */\nimport { useEffect } from 'react';\nimport { setUser } from '../store/main/actions';\nimport { State } from '../store/types';\n\nexport const useApp = () => {\n  const dispatch = useDispatch();\n  const { user } = useSelector((state: State) => state.main);\n\n  useEffect(() => {\n    const localUser = localStorage.getItem('user');\n\n    if (localUser) {\n      dispatch(setUser(JSON.parse(localUser)));\n    }\n  }, []);\n\n  return { type: user.type };\n};\n","import { UserTypes } from '../../types';\nimport { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\ntype ExtraType = {\n  title: string;\n  type: UserTypes;\n}\n\nexport type User = {\n  type: UserTypes | null;\n  token: null | string;\n  id: number | null;\n  extra_type: ExtraType[];\n};\n\nexport type ModalInfo = {\n  open: boolean;\n  success: boolean;\n  message: string;\n};\n\nexport type MainState = {\n  user: User;\n  modalInfo: ModalInfo;\n};\n\nconst initialState: MainState = {\n  user: {\n    type: null,\n    token: null,\n    id: null,\n    extra_type: [],\n  },\n  modalInfo: {\n    open: false,\n    success: false,\n    message: '',\n  },\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_USER:\n      return { ...state, user: { ...state.user, ...action.payload } };\n    case ACTIONS.SET_MODAL_INFO:\n      return { ...state, modalInfo: action.payload };\n    case ACTIONS.SET_USER_TYPE:\n      return { ...state, user: { ...state.user, type: action.payload } };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\nexport type SchedulerState = {\n  options: any;\n  developersInfo: any;\n  newSelectedAppointment: any;\n  oldSelectedAppointment: any;\n  editAppointmentData: any;\n  isLoading: boolean;\n  schedulerLock: boolean;\n};\n\nconst initialState: SchedulerState = {\n  options: null,\n  developersInfo: {},\n  newSelectedAppointment: null,\n  oldSelectedAppointment: null,\n  editAppointmentData: null,\n  isLoading: false,\n  schedulerLock: true,\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_OPTIONS:\n      return { ...state, options: action.payload };\n    case ACTIONS.SET_DEVELOPERS_INFO:\n      return { ...state, developersInfo: action.payload };\n    case ACTIONS.SET_IS_LOADING:\n      return { ...state, isLoading: action.payload };\n    case ACTIONS.SET_SELECTED_NEW_APPOINTMENT:\n      return { ...state, newSelectedAppointment: action.payload };\n    case ACTIONS.SET_SELECTED_OLD_APPOINTMENT:\n      return { ...state, oldSelectedAppointment: action.payload };\n    case ACTIONS.SET_EDIT_APPOINTMENT_DATA:\n      return { ...state, editAppointmentData: action.payload };\n    case ACTIONS.SET_SCHEDULER_LOCK:\n      return { ...state, schedulerLock: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\nexport type AppointmentsState = {\n  appointments: [];\n  isLoading: false;\n};\n\nconst initialState: AppointmentsState = {\n  appointments: [],\n  isLoading: false,\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_LOADING:\n      return { ...state, isLoading: action.payload };\n    case ACTIONS.SET_APPOINTMENTS:\n      return { ...state, appointments: action.payload };\n    case ACTIONS.ADD_NEW_APPOINTMENT:\n      return {\n        ...state,\n        appointments: [...state.appointments, action.payload],\n      };\n    case ACTIONS.DELETE_APPOINTMENT:\n      return {\n        ...state,\n        appointments: [\n          ...state.appointments.filter((item: any) => item.i !== action.payload)\n        ],\n      };\n    case ACTIONS.EDIT_APPOINTMENTS:\n      return {\n        ...state,\n        appointments: [\n          ...state.appointments.filter(\n            (item: any) => item.i !== action.payload.i\n          ),\n          action.payload,\n        ],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\nexport type FilterState = {\n  filterInitialData: any;\n};\n\nconst initialState: FilterState = {\n  filterInitialData: null,\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_FILTER_INITIAL_DATA:\n      return { ...state, filterInitialData: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\nexport type Developer = {\n  id: number;\n  title: string;\n  full_name: string;\n  tax_code: string;\n  date: string;\n  number: number;\n  pass: boolean;\n  prev: number;\n  next: number;\n  color?: string;\n}\n\nexport type Immovable = {\n  id: number;\n  title: string;\n  immovable_code: string;\n  date: string;\n  number: number;\n  pass: boolean;\n  prev: number;\n  next: number;\n}\n\nexport type DeveloperState = {\n  date_info: string;\n  developers: Developer[]\n}\n\nexport type ImmovableState = {\n  date_info: string;\n  immovables: Immovable[];\n}\n\nexport type RegistratorState = {\n  isLoading: boolean,\n  developers: DeveloperState | null,\n  immovables: ImmovableState | null,\n};\n\nconst initialState: RegistratorState = {\n  isLoading: false,\n  developers: null,\n  immovables: null,\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_LOADING:\n      return { ...state, isLoading: action.payload };\n    case ACTIONS.SET_DEVELOPERS:\n      return { ...state, developers: action.payload };\n    case ACTIONS.SET_IMMOVABLES:\n      return { ...state, immovables: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\n// type ClientCardInfo = {\n//   full_name: string;\n//   id: number;\n//   list: string[];\n// }\n\n// export type GenerateClient = {\n//   client: null | ClientCardInfo,\n//   representative: null | ClientCardInfo,\n//   spouse: null | ClientCardInfo,\n// }\n\nexport type ClientsState = {\n  clients: any[];\n  isLoading: false;\n};\n\nconst initialState: ClientsState = {\n  clients: [],\n  isLoading: false,\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_LOADING:\n      return { ...state, idLoading: action.payload };\n    case ACTIONS.SET_CLIENTS:\n      return { ...state, clients: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\ntype ImmovableCardsType = {\n  id: number,\n  title: string,\n  list: string[],\n}\n\nexport type ImmovablesState = {\n  immovables: ImmovableCardsType[];\n  isLoading: false;\n};\n\nconst initialState: ImmovablesState = {\n  immovables: [],\n  isLoading: false,\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_LOADING:\n      return { ...state, idLoading: action.payload };\n    case ACTIONS.SET_IMMOVABLES:\n      return { ...state, immovables: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","/* eslint-disable import/no-extraneous-dependencies */\nimport { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport main from './main/store';\nimport scheduler from './scheduler/store';\nimport appointments from './appointments/store';\nimport filter from './filter/store';\nimport registrator from './registrator/store';\nimport clients from './clients/store';\nimport immovables from './immovables/store';\n\nconst reducer = combineReducers({\n  main,\n  scheduler,\n  appointments,\n  filter,\n  registrator,\n  clients,\n  immovables,\n});\n\nexport default createStore(reducer, applyMiddleware(thunk));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  // eslint-disable-next-line\n  document.getElementById('root')\n);\n","import { UserTypes } from '../types';\nimport { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getAppointments(token: string, type: UserTypes) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards/${type}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { FilterData } from '../store/types';\nimport { UserTypes } from '../types';\nimport { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function setSchedulerFilter(\n  token: string,\n  bodyData: FilterData & {user_type: UserTypes}\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/filter/sort`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { UserTypes } from '../types';\nimport { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function searchAppointments(\n  token: string,\n  bodyData: {\n    text: string;\n    type: UserTypes;\n  }\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/filter/search`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\nexport default async function getCardsByContractType(token: string, url: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/${url}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { Dispatch } from 'redux';\nimport { FilterData, State } from '../types';\nimport getAppointments from '../../services/getAppointments';\nimport setSchedulerFilter from '../../services/setSchedulerFilter';\nimport searchAppointmentsServices from '../../services/searchAppointments';\nimport getCardsByContractType from '../../services/generator/getCardsByContractType';\n\nexport const ACTIONS = {\n  SET_LOADING: 'SET_LOADING',\n  SET_APPOINTMENTS: 'SET_APPOINTMENTS',\n  ADD_NEW_APPOINTMENT: 'ADD_NEW_APPOINTMENT',\n  EDIT_APPOINTMENTS: 'EDIT_APPOINTMENTS',\n  DELETE_APPOINTMENT: 'DELETE_APPOINTMENT',\n};\n\nexport const setIsLoading = (payload: boolean) => ({\n  type: ACTIONS.SET_LOADING,\n  payload,\n});\n\nexport const setAppointments = (payload: any) => ({\n  type: ACTIONS.SET_APPOINTMENTS,\n  payload,\n});\n\nexport const addNewAppointment = (payload: any) => ({\n  type: ACTIONS.ADD_NEW_APPOINTMENT,\n  payload,\n});\n\nexport const setEditAppointments = (payload: any) => ({\n  type: ACTIONS.EDIT_APPOINTMENTS,\n  payload,\n});\n\nexport const deleteAppointment = (id: string) => ({\n  type: ACTIONS.DELETE_APPOINTMENT,\n  payload: id,\n});\n\nexport const clearAppointments = () => async (\n  dispatch: Dispatch<any>,\n) => {\n  dispatch(setIsLoading(true));\n  dispatch(setAppointments([]));\n};\n\nexport const fetchAppointments = () => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token, type, id } = getState().main.user;\n\n  if (token && type && id) {\n    dispatch(setIsLoading(true));\n    const res = await getAppointments(token, type);\n\n    if (res?.success) {\n      const { data } = res;\n      dispatch(setAppointments(Object.values(data)));\n    }\n\n    dispatch(setIsLoading(false));\n  }\n};\n\nexport const fetchAppointmentsByFilter = (bodyData: FilterData) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token, type } = getState().main.user;\n\n  if (token && type) {\n    const res = await setSchedulerFilter(token, { ...bodyData, user_type: type });\n\n    if (res?.success) {\n      const { data } = res;\n      dispatch(setAppointments(Object.values(data)));\n    }\n  }\n};\n\nexport const fetchAppointmentsByContracts = (url: string) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const res = await getCardsByContractType(token, url);\n\n    if (res?.success) {\n      const { data } = res;\n      dispatch(setAppointments(Object.values(res.data)));\n    }\n  }\n};\n\nexport const searchAppointments = (text: string) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token, type } = getState().main.user;\n\n  if (!token || !type) {\n    throw new Error(`missed token or type in searchAppointments. Token: ${token}, Type: ${type}`);\n  }\n\n  if (token && type) {\n    const res = await searchAppointmentsServices(token, { text, type });\n\n    if (res?.success) {\n      const { data } = res;\n      dispatch(setAppointments(Object.values(data)));\n    }\n  }\n};\n","export type ImmovableItem = {\n  contract_type_id: number | null;\n  building_id: number | null;\n  imm_type_id: number | null;\n  imm_number: string | null;\n  bank: boolean;\n  proxy: boolean;\n};\n\nexport type ImmovableItems = ImmovableItem[];\n\nexport type SelectItem = {\n  id: number;\n  title: string;\n};\n\nexport type ClientItem = {\n  phone: string | null;\n  full_name: string | null;\n};\n\nexport type NewCard = {\n  immovables: ImmovableItems;\n  clients: ClientItem[];\n  date_time: string;\n  dev_company_id: number | null;\n  dev_representative_id: number | null;\n  dev_manager_id: number | null;\n  room_id: number;\n  notary_id: number | null;\n};\n\n// eslint-disable-next-line no-shadow\nexport enum UserTypes {\n  GENERATOR = 'generator',\n  RECEPTION = 'reception',\n  MANAGER = 'manager',\n  ASSISTANT = 'assistant',\n  REGISTRATOR = 'registrator',\n}\n\nexport type ManagerAppointmentCard = {\n  id: number;\n  color: string;\n  instructions: string[];\n  short_info: {\n    dev_representative_id: string;\n    notary: string;\n    notary_assistant_giver: string;\n    notary_assistant_reader: string;\n  };\n  title: string;\n};\n\nexport type ManagerAppointment = {\n  day: string;\n  date: string;\n  cards: ManagerAppointmentCard[];\n};\n\nexport type ManagerAppointments = ManagerAppointment[];\n","import { NewCard } from '../types';\nimport { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function createNewCard(token: string, bodyData: NewCard) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { NewCard } from '../types';\nimport { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function editCalendarCard(\n  token: string,\n  bodyData: NewCard,\n  id: number\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'PUT',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getCalendarCard(token: string, id: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data.data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getCalendar(token: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/calendar`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data.data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { NewCard } from '../types';\nimport { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function moveCalendarCard(\n  token: string,\n  bodyData: {\n    date_time: string;\n    room_id: number;\n  },\n  id: number\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards/move/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'PUT',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function deleteCalendarCard(token: string, id: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'DELETE',\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","/* eslint-disable consistent-return */\nimport { Dispatch } from 'react';\nimport { NewCard } from '../../types';\nimport { State } from '../types';\nimport createNewCardService from '../../services/createNewCard';\nimport editCalendarCardService from '../../services/editCalendarCard';\nimport getCalendarCard from '../../services/getCalendarCard';\nimport getDeveloperInfo from '../../services/getDeveloperInfo';\nimport getCalendar from '../../services/getCalendar';\nimport moveCalendarCardService from '../../services/moveCalendarCard';\nimport { setModalInfo } from '../main/actions';\nimport { addNewAppointment, deleteAppointment, setEditAppointments } from '../appointments/actions';\nimport deleteCalendarCard from '../../services/deleteCalendarCard';\n\nexport const ACTIONS = {\n  SET_OPTIONS: 'SET_OPTIONS',\n  SET_DEVELOPERS_INFO: 'SET_DEVELOPERS_INFO',\n  SET_SELECTED_NEW_APPOINTMENT: 'SET_SELECTED_NEW_APPOINTMENT',\n  SET_SELECTED_OLD_APPOINTMENT: 'SET_SELECTED_OLD_APPOINTMENT',\n  SET_EDIT_APPOINTMENT_DATA: 'SET_EDIT_APPOINTMENT_DATA',\n  SET_IS_LOADING: 'SET_IS_LOADING',\n  SET_SCHEDULER_LOCK: 'SET_SCHEDULER_LOCK',\n};\n\nexport const setSchedulerOptions = (payload: any) => ({\n  type: ACTIONS.SET_OPTIONS,\n  payload,\n});\n\nexport const setDevelopersInfo = (payload: any) => ({\n  type: ACTIONS.SET_DEVELOPERS_INFO,\n  payload,\n});\n\nexport const setSelectedNewAppointment = (payload: any) => ({\n  type: ACTIONS.SET_SELECTED_NEW_APPOINTMENT,\n  payload,\n});\n\nexport const setSelectedOldAppointment = (payload: any) => ({\n  type: ACTIONS.SET_SELECTED_OLD_APPOINTMENT,\n  payload,\n});\n\nexport const setEditAppointmentData = (payload: any) => ({\n  type: ACTIONS.SET_EDIT_APPOINTMENT_DATA,\n  payload,\n});\n\nexport const setSchedulerLock = (payload: boolean) => ({\n  type: ACTIONS.SET_SCHEDULER_LOCK,\n  payload,\n});\n\nexport const setIsLoading = (payload: boolean) => ({\n  type: ACTIONS.SET_IS_LOADING,\n  payload,\n});\n\n// Thunk actions\nexport const editCalendarCard = (bodyData: NewCard, id: number) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const { success, message, data } = await editCalendarCardService(\n      token,\n      bodyData,\n      id\n    );\n\n    dispatch(\n      setModalInfo({\n        open: true,\n        success,\n        message,\n      })\n    );\n\n    if (success) {\n      dispatch(setEditAppointments(data));\n    }\n  }\n};\n\nexport const fetchCalendarCard = (id: string) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const data = await getCalendarCard(token, id);\n    dispatch(setEditAppointmentData(data));\n  }\n};\n\nexport const removeCalendarCard = (id: string) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const { data, success, message } = await deleteCalendarCard(token, id);\n\n    dispatch(\n      setModalInfo({\n        open: true,\n        success,\n        message,\n      })\n    );\n\n    if (success) {\n      dispatch(setSelectedOldAppointment(null));\n      dispatch(setEditAppointmentData(null));\n      dispatch(deleteAppointment(id));\n    }\n  }\n};\n\nexport const fetchDeveloperInfo = (\n  id: number,\n  notDispatch: boolean = false\n) => async (dispatch: Dispatch<any>, getState: () => State) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const data = await getDeveloperInfo(token, id);\n\n    if (!notDispatch) {\n      dispatch(setDevelopersInfo(data));\n    }\n  }\n};\n\nexport const fetchSchedulerSettings = () => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    dispatch(setIsLoading(true));\n    const data = await getCalendar(token);\n    dispatch(setSchedulerOptions(data));\n    dispatch(setIsLoading(false));\n  }\n};\n\nexport const moveCalendarCard = (\n  bodyData: {\n    date_time: string;\n    room_id: number;\n  },\n  id: number\n) => async (dispatch: Dispatch<any>, getState: () => State) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const { success, data } = await moveCalendarCardService(\n      token,\n      bodyData,\n      id\n    );\n\n    if (success) {\n      dispatch(setEditAppointments(data));\n    }\n  }\n};\n\nexport const createNewCard = (data: NewCard) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const res = await createNewCardService(token, data);\n\n    dispatch(\n      setModalInfo({\n        open: true,\n        success: res.success,\n        message: res.message,\n      })\n    );\n\n    if (res.success) {\n      dispatch(addNewAppointment(res.data));\n    }\n  }\n};\n","import React from 'react';\nimport { LoopCircleLoading } from 'react-loadingg';\n\nconst Loader = () => <LoopCircleLoading color=\"#165153\" />;\n\nexport default Loader;\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\nexport default async function getDevelopers(token: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/registrator/developers`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\nexport default async function getImmovables(token: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/registrator/immovables`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\nexport type EditDeveloperProps = {\n  date: string | null,\n  number: string,\n  pass: boolean,\n}\n\nexport default async function putDeveloper(\n  token: string, id: string, bodyData: EditDeveloperProps\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/registrator/developer/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'PUT',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\nexport type EditImmovableProps = {\n  date: string | null,\n  number: string,\n  pass: boolean,\n}\n\nexport default async function putImmovable(\n  token: string, id: string, bodyData: EditImmovableProps\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/registrator/immovable/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'PUT',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { Dispatch } from 'redux';\nimport getDevelopers from '../../services/registrator/getDevelopers';\nimport getImmovables from '../../services/registrator/getImmovables';\nimport putDeveloper, { EditDeveloperProps } from '../../services/registrator/putDeveloper';\nimport putImmovable from '../../services/registrator/putImmovable';\nimport { setModalInfo } from '../main/actions';\nimport { State } from '../types';\nimport { Developer, Immovable } from './store';\n\nexport const ACTIONS = {\n  SET_LOADING: 'SET_LOADING',\n  SET_DEVELOPERS: 'SET_DEVELOPERS',\n  SET_IMMOVABLES: 'SET_IMMOVABLES',\n};\n\nconst setIsLoading = (payload: boolean) => ({\n  type: ACTIONS.SET_LOADING,\n  payload,\n});\n\nconst setDevelopers = (payload: Developer) => ({ type: ACTIONS.SET_DEVELOPERS, payload });\nconst setImmovables = (payload: Immovable) => ({ type: ACTIONS.SET_IMMOVABLES, payload });\n\nexport const fetchDevelopers = () => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  dispatch(setIsLoading(true));\n  const { token } = getState().main.user;\n\n  if (token) {\n    const { success, data } = await getDevelopers(token);\n\n    if (success) {\n      dispatch(setDevelopers(data));\n    }\n  }\n  dispatch(setIsLoading(false));\n};\n\nexport const fetchImmovables = () => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  dispatch(setIsLoading(true));\n  const { token } = getState().main.user;\n\n  if (token) {\n    const { success, data } = await getImmovables(token);\n\n    if (success) {\n      dispatch(setImmovables(data));\n    }\n  }\n  dispatch(setIsLoading(false));\n};\n\nexport const editDeveloperStatus = (id: string, bodyData: EditDeveloperProps) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const { success, message } = await putDeveloper(token, id, bodyData);\n\n    dispatch(\n      setModalInfo({\n        open: true,\n        success,\n        message,\n      })\n    );\n  }\n};\n\nexport const editImmovableStatus = (id: string, bodyData: EditDeveloperProps) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const { success, message } = await putImmovable(token, id, bodyData);\n\n    dispatch(\n      setModalInfo({\n        open: true,\n        success,\n        message,\n      })\n    );\n  }\n};\n","import { UserTypes } from '../../../types';\nimport { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function getClients(token: string, id: string, userType: UserTypes) {\n  try {\n    const url = userType === UserTypes.MANAGER ? `/api/manager/clients/${id}` : `/api/generator/client/main/${id}`;\n    const data = await requestApi({\n      url: `${DEFAULT_URL}${url}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { Dispatch } from 'redux';\nimport { UserTypes } from '../../types';\nimport getClients from '../../services/generator/Client/getClients';\nimport { State } from '../types';\n\nexport const ACTIONS = {\n  SET_CLIENTS: 'SET_CLIENTS',\n  SET_LOADING: 'SET_LOADING',\n};\n\nexport const setClients = (payload: any) => ({ type: ACTIONS.SET_CLIENTS, payload });\nexport const setIsLoading = (payload: boolean) => ({ type: ACTIONS.SET_LOADING, payload });\n\n// Thunk actions\nexport const fetchClients = (id: string, userType: UserTypes) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    dispatch(setIsLoading(true));\n    const { success, data } = await getClients(token, id, userType);\n\n    if (success) {\n      dispatch(setClients(data));\n    }\n    dispatch(setIsLoading(false));\n  }\n};\n","import { UserTypes } from '../types';\nimport { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getImmovables(token: string, id: string, userType: UserTypes) {\n  try {\n    const url = userType === UserTypes.MANAGER ? `/api/manager/immovables/${id}` : `/api/generator/immovable/main/${id}`;\n    const data = await requestApi({\n      url: `${DEFAULT_URL}${url}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { Dispatch } from 'redux';\nimport { UserTypes } from '../../types';\nimport getImmovables from '../../services/getImmovables';\nimport { State } from '../types';\n\nexport const ACTIONS = {\n  SET_IMMOVABLES: 'SET_IMMOVABLES',\n  SET_LOADING: 'SET_LOADING',\n};\n\nexport const setImmovables = (payload: any) => ({ type: ACTIONS.SET_IMMOVABLES, payload });\nexport const setIsLoading = (payload: boolean) => ({ type: ACTIONS.SET_LOADING, payload });\n\n// Thunk actions\nexport const fetchImmovables = (id: string, userType: UserTypes) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    dispatch(setIsLoading(true));\n    const { success, data } = await getImmovables(token, id, userType);\n\n    if (success) {\n      dispatch(setImmovables(data));\n    }\n    dispatch(setIsLoading(false));\n  }\n};\n","/* eslint-disable import/prefer-default-export */\nexport const DEFAULT_URL = '';\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getDeveloperInfo(token: string, id: number) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/filter/developer/info/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data.data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { UserTypes } from '../types';\nimport { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getFilterData(token: string, type: UserTypes) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/filter/dropdown/${type}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data.data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { Dispatch } from 'redux';\nimport getFilterData from '../../services/getFilterData';\nimport { State } from '../types';\n\nexport const ACTIONS = {\n  SET_FILTER_INITIAL_DATA: 'SET_FILTER_INITIAL_DATA',\n};\n\nexport const setFilterInitialData = (payload: any) => ({\n  type: ACTIONS.SET_FILTER_INITIAL_DATA,\n  payload,\n});\n\nexport const fetchFilterData = () => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token, type } = getState().main.user;\n\n  if (token && type) {\n    const data = await getFilterData(token, type);\n    dispatch(setFilterInitialData(data));\n  }\n};\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\nexport type ResetPasswordType = {\n  token: string;\n  email: string;\n  password: string;\n  c_password: string;\n};\n\nexport default async function resetPassword(bodyData: ResetPasswordType) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/password/update`,\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","type RequestOptions = {\n  url: string;\n  method?: 'GET' | 'POST' | 'DELETE' | 'PATCH' | 'PUT';\n  bodyData?: any;\n  headers?: {};\n};\n\nconst requestApi = async (options: RequestOptions) => {\n  const { url, method = 'GET', headers = {}, bodyData } = options;\n\n  const params = {\n    body: undefined as string | undefined,\n    method: method || 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'applicatioin/json',\n      ...headers,\n    },\n  };\n\n  if (bodyData) {\n    params.body = JSON.stringify(bodyData);\n  }\n\n  const res: any = await fetch(url, params);\n  const json: any = await res.json();\n\n  return json || {};\n};\n\nexport default requestApi;\n"],"sourceRoot":""}