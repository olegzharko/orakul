{"version":3,"sources":["components/PrimaryButton/PrimaryButton.tsx","components/SectionWithTitle/SectionWithTitle.tsx","components/CustomInput/index.ts","components/CustomSelect/CustomSelect.tsx","components/CustomInput/CustomInput.tsx","utils/formatDates.ts","components/CustomDatePicker/CustomDatePicker.tsx","components/CustomSwitch/CustomSwitch.tsx","components/RequestModal/useRequestModal.ts","components/RequestModal/RequestModal.tsx","components/Card/Card.tsx","components/RadioButtonsGroup/RadioButtonsGroup.tsx","components/Header/utils/useDebounce.ts","components/Modal/Modal.tsx","components/Header/components/UserSelect/UserSelect.tsx","components/Header/components/UserSelect/useUserSelect.ts","components/Header/Header.tsx","components/Header/useHeader.ts","components/PhoneMaskInput/PhoneMaskInput.tsx","components/AddFormButton/AddFormButton.tsx","components/RadioButtonsGroup/index.ts","components/ContentPanel/ContentPanel.tsx","components/ControlPanel/ControlPanel.tsx","components/ConfirmDialog/ConfirmDialog.tsx","components/RemoveFormButton/RemoveFormButton.tsx","components/Dashboard/useDashboard.ts","components/Dashboard/components/DashboardSection/DashboardSection.tsx","components/Dashboard/components/DashbordControl/DashbordControl.tsx","components/Dashboard/Dashboard.tsx","components/Filter/Filter.tsx","components/Filter/useFilter.ts","Screens/DashboardScreen/useDashboardScreen.ts","Screens/DashboardScreen/components/DashboardContainer/components/FilterContainer/components/Contracts/Contracts.tsx","Screens/DashboardScreen/components/DashboardContainer/components/FilterContainer/FilterContainer.tsx","Screens/DashboardScreen/components/DashboardContainer/components/FilterContainer/useFilterContainer.ts","Screens/DashboardScreen/components/DashboardContainer/DashboardContainer.tsx","Screens/DashboardScreen/components/DashboardContainer/useDashboardContainer.ts","Screens/DashboardScreen/components/ManageContainer/components/Navigation/Navigation.tsx","Screens/DashboardScreen/components/ManageContainer/components/Navigation/useNavigation.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/GeneratorContainer/components/ImmovableDashboard/Dashboard.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/GeneratorContainer/components/ImmovableDashboard/useDashboard.ts","services/generator/Immovable/reqImmovableTemplate.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/GeneratorContainer/components/ImmovableFields/components/Templates/useTemplates.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/GeneratorContainer/components/ImmovableFields/components/Templates/Templates.tsx","services/generator/Immovable/reqImmovableGeneral.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/GeneratorContainer/components/ImmovableFields/components/General/useGeneral.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/GeneratorContainer/components/ImmovableFields/components/General/General.tsx","services/generator/Immovable/reqImmovableOwnership.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/GeneratorContainer/components/ImmovableFields/components/Ownership/useOwnership.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/GeneratorContainer/components/ImmovableFields/components/Ownership/Ownership.tsx","services/generator/Immovable/reqImmovableRating.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/GeneratorContainer/components/ImmovableFields/components/Rating/useRating.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/GeneratorContainer/components/ImmovableFields/components/Rating/Rating.tsx","services/generator/Immovable/reqImmovablePayment.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/GeneratorContainer/components/ImmovableFields/components/SecurityPayment/useSecurityPayment.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/GeneratorContainer/components/ImmovableFields/components/SecurityPayment/SecurityPayment.tsx","services/generator/Immovable/reqImmovableTermination.ts","utils/numbers.ts","services/generator/Immovable/reqImmovableInstallment.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/GeneratorContainer/components/ImmovableFields/useFields.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/GeneratorContainer/components/ImmovableFields/components/Installment/useInstallment.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/GeneratorContainer/components/ImmovableFields/components/Termination/Termination.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/GeneratorContainer/components/ImmovableFields/components/Termination/useTermination.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/GeneratorContainer/components/ImmovableFields/components/Installment/Installment.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/GeneratorContainer/components/ImmovableFields/Fields.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/GeneratorContainer/GeneratorContainer.tsx","components/CardWithClose/CardWithClose.tsx","services/generator/Immovable/deleteImmovable.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/ManagerContainer/components/Dashboard/useDashboard.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/ManagerContainer/components/Dashboard/Dashboard.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/ManagerContainer/components/Fields/components/Checks/Checks.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/ManagerContainer/components/Fields/components/Contract/Contract.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/ManagerContainer/components/Fields/components/General/General.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/ManagerContainer/components/Fields/components/Responsible/Responsible.tsx","services/manager/Immovables/reqManagerImmovables.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/ManagerContainer/components/Fields/useImmovableFields.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/ManagerContainer/components/Fields/ImmovableFields.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/ManagerContainer/ManagerContainer.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/Immovable.tsx","services/manager/Clients/deleteManagerClient.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/ManagerContainer/components/Dashboard/useDashboard.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/ManagerContainer/components/Dashboard/Dashboard.tsx","services/manager/Clients/reqManagerClient.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/ManagerContainer/components/Fields/useFields.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/ManagerContainer/components/Fields/Fields.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/ManagerContainer/ManagerContainer.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsDashboard/ClientsDashboard.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsDashboard/useClientsDashboard.ts","services/generator/Client/AddNewCityModal/reqGeneratorCityCreate.ts","services/generator/Client/AddNewCityModal/getGeneratorDistricts.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/components/Address/components/AddCityModal/useAddCityModal.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/components/Address/components/AddCityModal/AddCityModal.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/components/Address/components/Fields/Fields.tsx","services/generator/Client/reqClientAddress.ts","services/generator/Client/reqClientCities.ts","services/generator/Client/reqClientDistricts.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/components/Address/useAddress.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/components/Address/Address.tsx","services/generator/Client/reqClientCitizenship.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/components/Citizenship/useCitizenship.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/components/Citizenship/Citizenship.tsx","services/generator/Client/reqClientContacts.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/components/Contacts/useContracts.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/components/Contacts/Contacts.tsx","services/generator/Client/reqClientName.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/components/Fio/useFio.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/components/Fio/Fio.tsx","services/generator/Client/reqClientPassport.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/components/Passport/usePassport.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/components/Passport/Passport.tsx","services/generator/Client/reqClientConsents.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/components/Statement/useStatement.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/components/Statement/Statement.tsx","services/generator/Client/reqClientRepresentative.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/components/PowerOfAttorney/usePowerOfAttorney.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/components/PowerOfAttorney/PowerOfAttorney.tsx","services/generator/Client/reqTermination.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/components/Termination/useTermination.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/components/Termination/Termination.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/ClientsFields.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/useClientsFields.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/GeneratorContainer.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/Clients.tsx","components/TitleInfoDuet/TitleInfoDuet.tsx","services/generator/Developer/getDevelopers.ts","services/generator/Developer/reqRepresentative.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Seller/components/Dashboard/useDashboard.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Seller/components/Dashboard/Dashboard.tsx","services/generator/Developer/reqDeveloper.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Seller/components/Fields/useFields.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Seller/components/Fields/Fields.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Seller/Seller.tsx","services/generator/SideNotary/getSideNotaries.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/SideNotary/components/Dashboard/useDashboard.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/SideNotary/components/Dashboard/Dashboard.tsx","services/generator/SideNotary/reqNotaryData.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/SideNotary/components/Fields/useFields.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/SideNotary/components/Fields/Fields.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/SideNotary/SideNotary.tsx","components/SecondaryButton/SecondaryButton.tsx","services/generator/Immovable/reqImmovableExchange.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Main/components/GeneratorMain/components/ExchangeRate/useExchangeRate.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Main/components/GeneratorMain/components/ExchangeRate/ExchangeRate.tsx","services/generator/Main/getMainData.ts","services/generator/Main/createContract.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Main/components/GeneratorMain/useGeneratorMain.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Main/components/GeneratorMain/GeneratorMain.tsx","services/manager/Main/putMainDeveloper.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Main/components/ManagerMain/components/Participants/Participants.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Main/components/ManagerMain/components/Participants/useParticipants.ts","services/manager/Main/putMainPersons.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Main/components/ManagerMain/components/Persons/usePersons.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Main/components/ManagerMain/components/Persons/Persons.tsx","services/manager/Main/getMain.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Main/components/ManagerMain/useManagerMain.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Main/components/ManagerMain/ManagerMain.tsx","services/assistant/reqAssistantMain.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Main/components/Assistant/useAssistantMain.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Main/components/Assistant/AssistantMain.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Main/Main.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/WorkSpace.tsx","Screens/DashboardScreen/components/ManageContainer/ManageContainer.tsx","Screens/DashboardScreen/components/ManageContainer/useManageContainer.ts","Screens/DashboardScreen/DashboardScreen.tsx"],"names":["PrimaryButton","label","onClick","disabled","className","useState","isClicked","setIsClicked","handleClick","useCallback","e","useEffect","SectionWithTitle","title","children","onClear","headerColor","style","backgroundColor","color","type","src","alt","CustomSelect","onChange","data","selectedValue","size","required","disableDefaultValue","selected","setSelected","FormControl","variant","InputLabel","Select","error","value","event","val","target","length","defaultValue","MenuItem","map","id","memo","CustomInput","text","setText","changeMonthWitDate","date","Date","replace","formatDate","day","getDate","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","customTheme","createMuiTheme","palette","primary","main","CustomDatePicker","selectedDate","onSelect","setValue","theme","utils","DateFnsUtils","locale","deLocale","margin","format","parseDate","parse","Number","isNaN","cancelLabel","okLabel","KeyboardButtonProps","CustomSwitch","FormControlLabel","control","Switch","checked","name","labelPlacement","useRequestModal","dispatch","useDispatch","modalInfo","useSelector","state","useMemo","handleClose","setModalInfo","open","RequestModal","success","message","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Card","link","haveStatus","to","ReactHtmlParser","RadioButtonsGroup","buttons","unicId","setSelectedValue","handleChange","htmlFor","uuidv4","useDebounce","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","Modal","UserSelect","history","useHistory","isOpen","setIsOpen","extra_type","user","userType","handleOpen","handleUserType","push","setUserTypeAction","userTypeButtons","filter","useUserSelect","Header","searchText","setSearchText","count","setCount","searchAppointments","prev","onSearch","onLogout","localStorage","clear","setUser","token","onLogoClick","window","location","reload","useHeader","placeholder","PhoneMaskInput","mask","TextField","AddFormButton","onKeyPress","ContentPanel","ControlPanel","ConfirmDialog","handleConfirm","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","RemoveFormButton","index","DashboardViewType","DashboardSection","cards","TABLE","card","content","item","DashboardControl","CARDS","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","Dashboard","props","selectedType","setSelectedType","useDashboard","isChangeTypeButton","sections","section","Filter","meta","onFilterDataChange","horizontal","filterInitialData","schedulerLock","scheduler","shouldRender","setShouldRender","readers","reader","notaries","notary","accompanyings","accompanying","contractTypes","contract_type","developers","developer","sortType","sort_type","representative","setRepresentative","shouldRenderFilter","Boolean","selectedNotary","setSelectedNotary","selectedReader","setSelectedReader","selectedAccompanying","setSelectedAccompanying","selectedContractType","setSelectedContractType","selectedDeveloper","setSelectedDeveloper","selectedRepresentative","setSelectedRepresentative","selectedSortType","setSelectedSortType","clearAll","fetchFilterData","getDeveloperInfo","then","notary_id","reader_id","accompanying_id","contract_type_id","developer_id","dev_representative_id","useFilter","DashboardContractNavigation","Contracts","FilterContainer","fetchAppointmentsByFilter","onContractsFilterChange","url","fetchAppointmentsByContracts","useFilterContainer","filter_type","DashboardContainer","modalProps","appointments","isLoading","fetchAppointments","clearAppointments","isAppointmentsEmpty","formatAppointments","instructions","useDashboardContainer","Loader","Navigation","useParams","shouldShowSeller","UserTypes","GENERATOR","shouldShowImmovable","ASSISTANT","shouldShowClient","shouldShowSideNotaries","useNavigation","MAIN","SELLER","IMMOVABLES","CLIENTS","SIDE_NOTARIES","immovables","fetchImmovables","setImmovables","immovable","list","reqImmovableTemplate","a","method","bodyData","requestApi","DEFAULT_URL","headers","Authorization","console","log","Templates","initialData","contractType","setContractType","statementTemplates","setStatementTemplates","questionnaireTemplates","setQuestionnaireTemplates","bankTemplates","setBankTemplates","taxesTemplates","setTaxesTemplates","contractTemplates","setContractTemplates","communalTemplates","setCommunalTemplates","terminationContracts","setTerminationContracts","terminationRefunds","setTerminationRefunds","processingPersonalTemplates","setProcessingPersonalTemplates","setNotaries","type_id","contract_template_id","taxes_template_id","bank_template_id","questionnaire_template_id","statement_template_id","ready","translate","sign_date","final_sign_date","communal_template_id","termination_contract_id","termination_refund_id","termination_refund_reg_date","termination_refund_reg_number","termination_refund_notary_id","processing_personal_data_template_id","setData","onSave","reqData","statement_templates","questionnaire_templates","bank_templates","taxes_templates","contract_templates","communal_templates","termination_contracts","termination_refunds","processing_personal_data_templates","useTemplates","reqImmovableGeneral","General","roominess","setRoominess","building","setBuilding","immType","setImmType","imm_type_id","building_id","roominess_id","imm_number","registration_number","price_grn","total_space","living_space","floor","isSaveButtonDisable","imm_type","useGeneral","reqImmovableOwnership","Ownership","setNotary","reg_date","reg_number","discharge_date","discharge_number","useOwnership","reqImmovableRating","Rating","valuation","setValuation","property_valuation_id","price","property_valuation","useRating","reqImmovablePayment","SecurityPayment","clients","setClients","final_date","reg_num","first_part_grn","client_id","useSecurityPayment","reqImmovableTermination","isNumber","parseFloat","reqImmovableInstallment","InstallmentRadioButtons","Termination","price_dollar","first_client_id","second_client_id","useTermination","installmentRadioButtons","MONTH","QUARTER","Installment","total_month","total_price","useInstallment","Fields","immovableId","general","setGeneral","ownerShip","setOwnerShip","securityPayment","setSecurityPayment","retting","setRetting","termination","setTermination","templates","setTemplates","installment","setInstallment","isCorrectId","res","useFields","GeneratorContainer","path","CardWithClose","preventDefault","deleteImmovable","clientId","showModal","setShowModal","immovableNeedToRemove","setImmovableNeedToRemove","clientRemove","personId","onModalShow","onModalConfirm","onModalCancel","undefined","MANAGER","toString","Checks","checksList","newData","Object","keys","forEach","key","Contract","types","immovableTypes","buildings","immovable_type_id","immovable_number","immovable_reg_num","Responsible","reqManagerImmovables","ImmovableFields","setTitle","setImmovableTypes","setBuildings","setReader","setAccompanying","contracts","setContracts","checkList","setCheckList","responsible","setResponsible","checks","setChecks","isOnSaveDisabled","immovable_id","immovable_type","check_list","reduce","acc","useImmovableFields","ManagerContainer","Immovable","deleteManagerClient","cardId","personNeedToRemove","setPersonNeedToRemove","fetchClients","person","full_name","reqManagerClient","marriedTypes","setMarriedTypes","passportTypes","setPassportTypes","client","setClient","clientChecks","setClientChecks","spouse","setSpouse","spouseChecks","setSpouseChecks","confidant","setConfidant","confidantChecks","setConfidantChecks","onClientChecksChange","onSpouseChecksChange","onConfidantChecksChange","onClientClear","clearClient","onSpouseClear","clearSpouse","onConfidantClear","clearConfidant","clientChecksValues","spouseChecksValues","confidantChecksValues","info","isSaveButtonDisabled","surname","passport_type_id","patronymic","phone","email","married_type_id","previous_buyer","married_types","passport_type","ClientsDashboard","useClientsDashboard","values","reqGeneratorCityCreate","getGeneratorDistricts","AddCityModal","region","setRegion","cityTypes","setCityTypes","districts","setDistricts","region_id","district_id","city_type_id","allData","setAllData","district","regions","city_type","useAddCityModal","cities","addressType","buildingType","buildingPartType","apartmentType","actual","onRegionChange","onDistrictChange","actual_region_id","actual_district_id","actual_city_id","city_id","actual_address_type_id","address_type_id","actual_address","address","actual_building_type_id","building_type_id","actual_building_num","building_num","actual_building_part_id","building_part_id","actual_building_part_num","building_part_num","actual_apartment_type_id","apartment_type_id","actual_apartment_num","apartment_num","reqClientAddress","reqClientCities","regionId","districtId","reqClientDistricts","Address","setRegions","actualRegions","setActualRegions","setCities","actualCities","setActualCities","actualDistricts","setActualDistricts","setAddressType","setBuildingType","setBuildingPartType","setApartmentType","registration","setRegistration","setActual","actualData","setActualData","onActualRegionChange","onActualDistrictChange","address_type","building_type","building_part","apartment_type","useAddress","reqClientCitizenship","Citizenship","citizenships","citizenship_id","useCitizenship","reqClientContacts","Contacts","useContracts","reqClientName","Fio","surname_n","name_n","patronymic_n","surname_r","name_r","patronymic_r","surname_o","name_o","patronymic_o","surname_d","name_d","patronymic_d","useFio","reqClientPassport","Passport","gender","tax_code","passport_code","passport_department","passport_demographic_code","passport_date","passport_finale_date","date_of_birth","sexButtons","passport_types","usePassport","reqClientConsents","Statement","rakulNotary","setRakulNotary","consentTemplates","setConsentTemplates","marriageTypes","setMarriageTypes","consentSpouseWords","setConsentSpouseWords","consent_template_id","mar_series","mar_series_num","mar_date","mar_depart","mar_reg_num","consent_spouse_word_id","duplicate","duplicate_date","widow","widow_date","consent_templates","consent_spouse_words","useStatement","reqClientRepresentative","PowerOfAttorney","otherNotary","setOtherNotary","other_notary","usePowerOfAttorney","reqTermination","userId","spouseWords","setSpouseWords","spouse_word_id","spouse_words","ClientsFields","setUserType","fioData","setFioData","contacts","setContacts","citizenship","setCitizenship","passport","setPassport","setAddress","consents","setConsents","useClientsFields","Clients","TitleInfoDuet","getDevelopers","reqRepresentative","setDevelopers","setLoading","devRepresentative","setDevRepresentative","representativeDoc","setRepresentativeDoc","dev_companies","dev_representative","representative_id","representative_info","representative_doc","reqDeveloper","developerId","setDeveloper","developerIsId","dev_company","ceo_spouse_info","Seller","getSideNotaries","setIsLoading","reqNotaryData","notaryId","short_name","short_patronymic","activity_n","denominative","setDenominate","activity_o","ablative","setAblative","shouldLoadData","onDenominativeClear","onAblativeClear","isButtonDisabled","SideNotary","SecondaryButton","reqImmovableExchange","ExchangeRate","contractBuy","setContractBuy","contractSell","setContractSell","exchangeRate","setExchangeRate","onRefreshRate","contract_buy","contract_sell","exchange_rate","useExchangeRate","exchange_date","getMainData","createContract","GeneratorMain","code","setCode","setInstructions","exchange","setExchange","document","href","date_info","room","time","card_id","useGeneratorMain","putMainDeveloper","Participants","firstRender","setFirstRender","representatives","setRepresentatives","manager","setManager","manager_id","generator_id","generation_ready","useParticipants","generator","putMainPersons","initialPersonData","person_type","Persons","onDataChange","onClearAll","onAdd","onRemove","_","mapIndex","usePersons","contact_person_type","marginLeft","getMain","ManagerMain","participantsData","setParticipantsData","personsData","setPersonsData","mainTitle","contact_person_info","useManagerMain","reqAssistantMain","AssistantMain","setGenerator","cancelled","onImmovableChange","onGeneralClear","onImmovableClear","i","useAssistantMain","Main","WorkSpace","selectedNav","ManageContainer","setSelectedNav","contractData","useManageContainer","DashboardScreen"],"mappings":"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","file":"static/js/7.b6fc3c67.chunk.js","sourcesContent":["/* eslint-disable prettier/prettier */\n/* eslint-disable react/button-has-type */\nimport React, { useCallback, useState, useEffect } from 'react';\nimport './index.scss';\n\ntype Props = {\n  label: string;\n  onClick: (e: any) => void;\n  disabled?: boolean;\n  className?: string;\n};\n\nconst PrimaryButton = ({\n  label, onClick, disabled, className\n}: Props) => {\n  const [isClicked, setIsClicked] = useState<boolean>(false);\n\n  const handleClick = useCallback((e) => {\n    setIsClicked(true);\n    onClick(e);\n  }, [onClick]);\n\n  useEffect(() => {\n    setIsClicked(false);\n  }, [onClick]);\n\n  return (\n    <button\n      className={\n        `primary-button\n        ${disabled ? 'disabled' : ''}\n        ${className || ''}\n        ${isClicked ? 'clicked' : ''}\n        `\n      }\n      onClick={handleClick}\n      disabled={disabled}\n    >\n      {label}\n    </button>\n  );\n};\n\nexport default PrimaryButton;\n","import React from 'react';\nimport './index.scss';\n\ntype Props = {\n  title: string;\n  children: React.ReactNode;\n  headerColor?: string;\n  onClear?: () => void;\n}\n\nconst SectionWithTitle = ({ title, children, onClear, headerColor }: Props) => (\n  <div className=\"section-with-title\">\n    <div\n      className=\"section-with-title__header\"\n      style={{\n        backgroundColor: headerColor || '',\n      }}\n    >\n      <h2\n        className=\"section-title\"\n        style={{\n          color: headerColor ? 'white' : '',\n        }}\n      >\n        {title}\n      </h2>\n      {onClear && (\n        <button type=\"button\" className=\"clear-button\">\n          <img\n            src=\"/images/clear-form.svg\"\n            alt=\"close\"\n            className=\"clear-icon\"\n            onClick={onClear}\n          />\n        </button>\n      )}\n    </div>\n    <div className=\"section-with-title__body\">\n      {children}\n    </div>\n  </div>\n);\n\nexport default SectionWithTitle;\n","export { default } from './CustomInput';\n","/* eslint-disable object-curly-newline */\n/* eslint-disable no-unused-vars */\nimport React, { useState, memo, useEffect } from 'react';\nimport './index.scss';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\ntype Data = {\n  id: number;\n  title: string;\n};\n\ntype Props = {\n  onChange: (value: string) => void;\n  data: Data[];\n  label: string;\n  selectedValue?: string | null | number;\n  disabled?: boolean;\n  size?: 'medium' | 'small';\n  className?: string;\n  required?: boolean;\n  disableDefaultValue?: boolean;\n};\n\nconst CustomSelect = ({\n  onChange,\n  data,\n  label,\n  selectedValue,\n  disabled,\n  size = 'medium',\n  className,\n  required,\n  disableDefaultValue,\n}: Props) => {\n  const [selected, setSelected] = useState(selectedValue || '');\n\n  useEffect(() => {\n    setSelected(selectedValue || '');\n  }, [selectedValue]);\n\n  const handleChange = (event: any) => {\n    const val = event.target.value;\n    setSelected(val);\n    onChange(val);\n  };\n\n  return (\n    <FormControl variant=\"outlined\" className={`customSelect ${className || ''}`} size={size}>\n      <InputLabel>{label}</InputLabel>\n      <Select\n        error={required && !selected}\n        value={selected}\n        onChange={handleChange}\n        disabled={disabled || data.length === 0}\n        defaultValue=\"\"\n      >\n        {!disableDefaultValue && (\n          <MenuItem value=\"\">\n            <em>Выбрать</em>\n          </MenuItem>\n        )}\n        {data.map(({ id, title }: Data) => (\n          <MenuItem value={id} key={id}>\n            {title}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default memo(CustomSelect);\n","/* eslint-disable no-unused-vars */\n/* eslint-disable react/react-in-jsx-scope */\nimport React, { useState, useEffect } from 'react';\nimport './index.scss';\nimport { TextField } from '@material-ui/core';\n\ntype Props = {\n  label: string;\n  value?: string | number | null;\n  onChange?: (value: string) => void;\n  type?: string;\n  disabled?: boolean;\n  required?: boolean;\n};\n\nconst CustomInput = ({\n  label,\n  onChange,\n  value = '',\n  type = 'string',\n  disabled,\n  required,\n}: Props) => {\n  const [text, setText] = useState(value || '');\n\n  useEffect(() => {\n    setText(value || '');\n  }, [value]);\n\n  const handleChange = (event: any) => {\n    setText(event.target.value);\n    onChange && onChange(event.target.value);\n  };\n\n  return (\n    <TextField\n      error={required && !text}\n      label={label}\n      variant=\"outlined\"\n      value={text}\n      onChange={handleChange}\n      type={type}\n      className=\"custom-input\"\n      disabled={disabled || false}\n    />\n  );\n};\n\nexport default CustomInput;\n","export const changeMonthWitDate = (date: string): Date => new Date(date && date.replace(/(\\d{2}).(\\d{2}).(\\d{4})/, '$2.$1.$3'));\n\nexport const formatDate = (date: Date | null): string | null => {\n  if (!date) return null;\n\n  const day = date.getDate() <= 9 ? `0${date.getDate()}` : date.getDate();\n  const month = date.getMonth() < 9 ? `0${date.getMonth() + 1}` : date.getMonth() + 1;\n  const year = date.getFullYear();\n  const hours = date.getHours() <= 9 ? `0${date.getHours()}` : date.getHours();\n  const minutes = date.getMinutes() <= 9 ? `0${date.getMinutes()}` : date.getMinutes();\n\n  return `${day}.${month}.${year} ${hours}:${minutes}`;\n};\n","/* eslint-disable quotes */\n/* eslint-disable react/jsx-curly-brace-presence */\nimport React, { useEffect, useState } from 'react';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport { MaterialUiPickersDate } from '@material-ui/pickers/typings/date';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core';\nimport deLocale from \"date-fns/locale/uk\";\n\ntype Props = {\n  label: string;\n  onSelect: (value: any) => void;\n  selectedDate?: Date | null;\n  required?: boolean;\n  disabled?: boolean;\n}\n\nconst customTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#165153',\n    }\n  },\n});\n\nconst CustomDatePicker = ({ selectedDate, onSelect, label, required, disabled }: Props) => {\n  const [value, setValue] = useState<MaterialUiPickersDate | undefined>(selectedDate);\n\n  useEffect(() => {\n    setValue(selectedDate);\n  }, [selectedDate]);\n\n  const handleChange = (data: any) => {\n    const parseDate = Date.parse(data);\n    if (Number.isNaN(parseDate) === true) {\n      onSelect(null);\n    } else {\n      onSelect(data);\n    }\n\n    setValue(data);\n  };\n\n  return (\n    <MuiThemeProvider theme={customTheme}>\n      <MuiPickersUtilsProvider utils={DateFnsUtils} locale={deLocale}>\n        <KeyboardDatePicker\n          error={required && !value}\n          margin=\"normal\"\n          label={label}\n          format=\"dd/MM/yyyy\"\n          value={value}\n          onChange={handleChange}\n          cancelLabel=\"Закрити\"\n          okLabel=\"Зберегти\"\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n          disabled={disabled || false}\n        />\n      </MuiPickersUtilsProvider>\n    </MuiThemeProvider>\n\n  );\n};\n\nexport default CustomDatePicker;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable prettier/prettier */\nimport React, { useEffect, useState, memo } from 'react';\nimport { FormControlLabel, Switch } from '@material-ui/core';\nimport './index.scss';\n\ntype Props = {\n  label: string\n  onChange: (val: boolean) => void;\n  selected: boolean;\n  disabled?: boolean;\n};\n\nconst CustomSwitch = ({\n  label,\n  onChange,\n  selected,\n  disabled\n}: Props) => {\n  const handleChange = (event: any) => {\n    onChange(event.target.checked);\n  };\n\n  return (\n    <FormControlLabel\n      control={(\n        <Switch\n          checked={selected || false}\n          onChange={handleChange}\n          name=\"checkedB\"\n          color=\"primary\"\n        />\n      )}\n      label={label}\n      labelPlacement=\"start\"\n      className=\"custom-switch\"\n      disabled={disabled || false}\n    />\n  );\n};\n\nexport default memo(CustomSwitch);\n","/* eslint-disable implicit-arrow-linebreak */\nimport { useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setModalInfo } from '../../store/main/actions';\nimport { State } from '../../store/types';\n\nexport const useRequestModal = () => {\n  const dispatch = useDispatch();\n  const { modalInfo } = useSelector((state: State) => state.main);\n\n  const modalProps = useMemo(\n    () => ({\n      ...modalInfo,\n      handleClose: () =>\n        dispatch(\n          setModalInfo({\n            ...modalInfo,\n            open: false,\n          })\n        ),\n    }),\n    [modalInfo]\n  );\n\n  return modalProps;\n};\n","import React from 'react';\nimport './index.scss';\nimport MModal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\ntype Props = {\n  open: boolean;\n  handleClose: () => void;\n  success: boolean;\n  message: string;\n};\n\n// eslint-disable-next-line prettier/prettier\nconst RequestModal = ({\n  open, handleClose, success, message\n}: Props) => (\n  <MModal\n    className=\"modal-container\"\n    open={open}\n    onClose={handleClose}\n    closeAfterTransition\n    BackdropComponent={Backdrop}\n    BackdropProps={{\n      timeout: 500,\n    }}\n  >\n    <Fade in={open}>\n      <div className={`modal ${success ? 'modal-success' : 'modal-failed'}`}>\n        <p className=\"message\">{message}</p>\n      </div>\n    </Fade>\n  </MModal>\n);\n\nexport default RequestModal;\n","import * as React from 'react';\nimport './index.scss';\nimport { Link } from 'react-router-dom';\nimport ReactHtmlParser from 'react-html-parser';\n\ntype Props = {\n  title: string;\n  children: React.ReactNode;\n  link: string\n  headerColor?: string;\n  haveStatus?: boolean;\n}\n\nconst Card = ({ title, headerColor, children, link, haveStatus }: Props) => {\n  const getTextColor = () => {\n    if (haveStatus) return 'black';\n    if (headerColor) return 'white';\n\n    return '';\n  };\n\n  const getTitleBackgroundColor = () => {\n    if (haveStatus) return '';\n    if (headerColor) return headerColor;\n\n    return '';\n  };\n\n  return (\n    <Link to={link} className=\"card\">\n      <div className=\"card__header\" style={{ backgroundColor: getTitleBackgroundColor() }}>\n        <span style={{ color: getTextColor() }}>{ReactHtmlParser(title)}</span>\n        {haveStatus && (\n          <div className=\"status\" style={{ backgroundColor: headerColor || '' }} />\n        )}\n      </div>\n      <div className=\"card__main\">\n        {children}\n      </div>\n    </Link>\n  );\n};\n\nexport default Card;\n","/* eslint-disable react/require-default-props */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/no-unused-prop-types */\nimport React, { useState, memo, useEffect } from 'react';\nimport './index.scss';\nimport { v4 as uuidv4 } from 'uuid';\n\ntype Button = {\n  id: number | string;\n  title: string;\n};\n\ntype Props = {\n  buttons: Button[];\n  unicId: string;\n  onChange: (id: number | string) => void;\n  selected?: number | string | null;\n};\n\nexport const RadioButtonsGroup = ({\n  buttons,\n  onChange,\n  selected,\n  unicId,\n}: Props) => {\n  const [selectedValue, setSelectedValue] = useState(selected || buttons[0].id);\n\n  useEffect(() => {\n    setSelectedValue(selected || buttons[0].id);\n    onChange(selected || buttons[0].id);\n  }, [selected]);\n\n  const handleChange = (id: number | string) => {\n    setSelectedValue(id);\n    onChange(id);\n  };\n\n  return (\n    <div className=\"radio-buttons-group\">\n      {buttons.map(({ id, title }: Button) => (\n        <div\n          key={uuidv4()}\n          className={`radio-buttons-group__element ${\n            buttons.length === 1 ? 'edit' : ''\n          }`}\n        >\n          <input\n            type=\"radio\"\n            id={unicId + title}\n            value={id}\n            // eslint-disable-next-line eqeqeq\n            checked={selectedValue == id}\n            onChange={() => handleChange(id)}\n            className=\"input\"\n          />\n          <label htmlFor={unicId + title} className=\"label\">\n            {title}\n          </label>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioButtonsGroup);\n","import React, { useState, useEffect } from 'react';\n\nconst useDebounce = (value: string, delay: number) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value]);\n\n  return debouncedValue;\n};\n\nexport default useDebounce;\n","import React, { ReactElement } from 'react';\nimport MModal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\ntype Props = {\n  open: boolean;\n  handleClose: () => void;\n  children: ReactElement;\n};\n\nconst Modal = ({\n  open, handleClose, children\n}: Props) => (\n  <MModal\n    className=\"modal-container\"\n    open={open}\n    onClose={handleClose}\n    closeAfterTransition\n    BackdropComponent={Backdrop}\n    BackdropProps={{\n      timeout: 500,\n    }}\n  >\n    <Fade in={open}>{children}</Fade>\n  </MModal>\n);\n\nexport default Modal;\n","import React, { useState, useCallback } from 'react';\nimport Modal from '../../../Modal';\nimport PrimaryButton from '../../../PrimaryButton';\nimport './index.scss';\nimport { useUserSelect } from './useUserSelect';\n\nconst UserSelect = () => {\n  const {\n    isOpen,\n    userTypeButtons,\n    handleOpen,\n    handleClose,\n  } = useUserSelect();\n\n  if (!userTypeButtons.length) return null;\n\n  return (\n    <div className=\"user-select\">\n      <img src=\"/images/user.svg\" alt=\"user\" onClick={handleOpen} />\n      <Modal\n        open={isOpen}\n        handleClose={handleClose}\n      >\n        <div className=\"user-select__modal\">\n          {\n            userTypeButtons.map(({ label, onClick }) => (\n              <PrimaryButton\n                key={label}\n                label={label}\n                onClick={onClick}\n                className=\"user-select__button\"\n              />\n            ))\n          }\n\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default UserSelect;\n","import { useCallback, useState, useMemo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { setUserTypeAction } from '../../../../store/main/actions';\nimport { State } from '../../../../store/types';\nimport { UserTypes } from '../../../../types';\n\nexport const useUserSelect = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const extra_type = useSelector((state: State) => state.main.user.extra_type);\n  const userType = useSelector((state: State) => state.main.user.type);\n\n  const handleOpen = useCallback(() => {\n    setIsOpen(true);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setIsOpen(false);\n  }, []);\n\n  const handleUserType = useCallback((type: UserTypes) => {\n    setIsOpen(false);\n    setTimeout(() => {\n      history.push('/');\n      dispatch(setUserTypeAction(type));\n    }, 100);\n  }, []);\n\n  const userTypeButtons = useMemo(() => (\n    extra_type\n      .filter(({ type }) => type !== userType)\n      .map(({ title, type }) => ({\n        label: title,\n        onClick: () => handleUserType(type),\n      }))\n  ), [extra_type, userType]);\n\n  return {\n    isOpen,\n    userTypeButtons,\n    handleOpen,\n    handleClose,\n  };\n};\n","import * as React from 'react';\nimport './index.scss';\nimport { Link } from 'react-router-dom';\n\nimport { useHeader } from './useHeader';\nimport UserSelect from './components/UserSelect';\n\nconst Header = () => {\n  const {\n    onSearch,\n    onLogout,\n    onLogoClick,\n    searchText,\n  } = useHeader();\n\n  return (\n    <div className=\"header container\">\n      <img\n        className=\"header__logo\"\n        src=\"/images/logo.svg\"\n        alt=\"logo\"\n        onClick={onLogoClick}\n      />\n      <div className=\"header__search\">\n        <input\n          type=\"text\"\n          placeholder=\"Пошук...\"\n          onChange={onSearch}\n          value={searchText}\n        />\n        <img src=\"/images/search.svg\" alt=\"search\" />\n      </div>\n      <div className=\"header__control\">\n        <UserSelect />\n        <img src=\"/images/log-out.svg\" alt=\"logout\" onClick={onLogout} />\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport {\n  ChangeEvent, useState, useEffect, useCallback\n} from 'react';\nimport { setUser } from '../../store/main/actions';\nimport { searchAppointments } from '../../store/appointments/actions';\nimport useDebounce from './utils/useDebounce';\n\nexport const useHeader = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [searchText, setSearchText] = useState<string>('');\n  const [count, setCount] = useState<number>(0);\n\n  const debouncedValue = useDebounce(searchText, 1000);\n\n  useEffect(() => {\n    if (!count) {\n      setCount((prev: number) => prev + 1);\n      return;\n    }\n\n    dispatch(searchAppointments(debouncedValue));\n  }, [debouncedValue]);\n\n  const onSearch = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value);\n  }, [searchText]);\n\n  const onLogout = useCallback(() => {\n    localStorage.clear();\n    dispatch(setUser({ type: null, token: null }));\n    history.push('/');\n  }, []);\n\n  const onLogoClick = useCallback(() => {\n    window.location.reload();\n  }, []);\n\n  return {\n    onSearch,\n    onLogout,\n    onLogoClick,\n    searchText,\n  };\n};\n","/* eslint-disable no-unused-vars */\n/* eslint-disable react/react-in-jsx-scope */\nimport React, { useState, useEffect } from 'react';\nimport './index.scss';\nimport InputMask from 'react-input-mask';\nimport { TextField } from '@material-ui/core';\n\ntype Props = {\n  label: string;\n  value?: string | number | null;\n  onChange?: (value: string) => void;\n  disabled?: boolean;\n  required?: boolean;\n};\n\nconst PhoneMaskInput = ({\n  label,\n  onChange,\n  value = '',\n  disabled,\n}: Props) => {\n  const [text, setText] = useState(value || '');\n\n  useEffect(() => {\n    setText(value || '');\n  }, [value]);\n\n  const handleChange = (event: any) => {\n    setText(event.target.value);\n    onChange && onChange(event.target.value);\n  };\n\n  return (\n    <InputMask\n      className=\"custom-input\"\n      mask=\"+38(999)999-99-99\"\n      value={text}\n      disabled={disabled || false}\n      onChange={handleChange}\n    >\n      {() => <TextField variant=\"outlined\" label={label} disabled={disabled || false} />}\n    </InputMask>\n  );\n};\n\nexport default PhoneMaskInput;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport './index.scss';\n\ntype Props = {\n  onClick: () => void;\n  disabled?: boolean;\n};\n\nconst AddFormButton = ({ onClick, disabled }: Props) => {\n  const handleClick = () => {\n    if (disabled) return;\n    onClick();\n  };\n\n  return (\n    <div\n      className={`add-form-button ${disabled ? 'disabled' : ''}`}\n      onClick={handleClick}\n      onKeyPress={handleClick}\n    >\n      <img src=\"/images/plus.svg\" alt=\"plus\" />\n    </div>\n  );\n};\n\nexport default AddFormButton;\n","export { default } from './RadioButtonsGroup';\n","import * as React from 'react';\nimport './index.scss';\n\ntype Props = {\n  children: React.ReactNode\n}\n\nconst ContentPanel = ({ children }: Props) => (\n  <div className=\"contentPanel\">\n    {children}\n  </div>\n);\n\nexport default ContentPanel;\n","import * as React from 'react';\nimport './index.scss';\n\ntype Props = {\n  children: React.ReactNode\n}\n\nconst ControlPanel = ({ children }: Props) => (\n  <div className=\"controlPanel\">\n    {children}\n  </div>\n);\n\nexport default ControlPanel;\n","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport React from 'react';\n\ntype Props = {\n  open: boolean;\n  handleClose: () => void;\n  handleConfirm: () => void;\n  title: string;\n  message: string;\n}\n\nconst ConfirmDialog = ({ open, handleClose, handleConfirm, title, message }: Props) => (\n  <Dialog\n    open={open}\n    onClose={handleClose}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n  >\n    <DialogTitle>{title}</DialogTitle>\n    <DialogContent>\n      <DialogContentText>{message}</DialogContentText>\n    </DialogContent>\n    <DialogActions>\n      <Button onClick={handleClose} color=\"primary\">\n        Закрити\n      </Button>\n      <Button onClick={handleConfirm} color=\"primary\" autoFocus>\n        Підтвердити\n      </Button>\n    </DialogActions>\n  </Dialog>\n);\n\nexport default ConfirmDialog;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport './index.scss';\n\ntype Props = {\n  onClick: (index: number) => void;\n  index: number;\n  disabled?: boolean;\n};\n\nconst RemoveFormButton = ({ onClick, index, disabled }: Props) => {\n  const handleClick = () => {\n    if (disabled) return;\n    onClick(index);\n  };\n\n  return (\n    <div\n      className={`remove-form-button ${disabled ? 'disabled' : ''}`}\n      onClick={handleClick}\n      onKeyPress={() => onClick(index)}\n    >\n      <img src=\"/images/minus.svg\" alt=\"minus\" />\n    </div>\n  );\n};\n\nexport default RemoveFormButton;\n","import { useMemo, useState } from 'react';\nimport { SectionCard } from './components/DashboardSection/DashboardSection';\n\n// eslint-disable-next-line no-shadow\nexport enum DashboardViewType {\n  CARDS,\n  TABLE\n}\n\nexport type Section = {\n  title: string;\n  cards: SectionCard[];\n}\n\nexport type Props = {\n  link: string,\n  sections: Section[],\n  isChangeTypeButton?: boolean,\n  style?: DashboardViewType,\n  haveStatus?: boolean;\n}\n\nexport const useDashboard = ({ style }: Props) => {\n  const [selectedType, setSelectedType] = useState(style || DashboardViewType.CARDS);\n\n  return { selectedType, setSelectedType };\n};\n","import * as React from 'react';\nimport Card from '../../../Card';\nimport { DashboardViewType } from '../../useDashboard';\n\nexport type SectionCard = {\n  id: number;\n  title: string;\n  content: string[];\n  color?: string;\n}\n\ntype Props = {\n  link: string;\n  title: string,\n  cards: SectionCard[],\n  style: DashboardViewType;\n  haveStatus?: boolean;\n}\n\nconst DashboardSection = ({ link, title, cards, style, haveStatus }: Props) => (\n  <div className=\"dashboard__main-section\">\n    <h2>{title}</h2>\n    <div className={`cards ${style === DashboardViewType.TABLE ? 'table' : ''}`}>\n      {cards?.map((card: SectionCard) => (\n        <Card\n          haveStatus={haveStatus}\n          key={card.id}\n          title={card.title}\n          headerColor={card.color}\n          link={`/${link}/${card.id}`}\n        >\n          {card.content.map((item: string) => (\n            <span key={item} className=\"card__content-item\">{item}</span>\n          ))}\n        </Card>\n      ))}\n    </div>\n  </div>\n);\n\nexport default DashboardSection;\n","import * as React from 'react';\nimport { DashboardViewType } from '../../useDashboard';\nimport './index.scss';\n\ntype Props = {\n  selected: DashboardViewType;\n  onClick: (value: DashboardViewType) => void;\n}\n\nconst DashboardControl = ({ selected, onClick }: Props) => (\n  <div className=\"dashboard__space-control\">\n    <svg\n      className={`${DashboardViewType.CARDS === selected ? 'selected' : ''}`}\n      onClick={() => onClick(DashboardViewType.CARDS)}\n      width=\"18\"\n      height=\"18\"\n      viewBox=\"0 0 18 18\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.50008 0.666748H7.33341C7.83341 0.666748 8.16675 1.00008 8.16675 1.50008V7.33341C8.16675 7.83341 7.83341 8.16675 7.33341 8.16675H1.50008C1.00008 8.16675 0.666748 7.83341 0.666748 7.33341V1.50008C0.666748 1.00008 1.00008 0.666748 1.50008 0.666748ZM2.33341 6.50008H6.50008V2.33341H2.33341V6.50008ZM16.5001 0.666748H10.6667C10.1667 0.666748 9.83342 1.00008 9.83342 1.50008V7.33341C9.83342 7.83341 10.1667 8.16675 10.6667 8.16675H16.5001C17.0001 8.16675 17.3334 7.83341 17.3334 7.33341V1.50008C17.3334 1.00008 17.0001 0.666748 16.5001 0.666748ZM11.5001 6.50008H15.6667V2.33341H11.5001V6.50008ZM16.5001 9.83342H10.6667C10.1667 9.83342 9.83342 10.1667 9.83342 10.6667V16.5001C9.83342 17.0001 10.1667 17.3334 10.6667 17.3334H16.5001C17.0001 17.3334 17.3334 17.0001 17.3334 16.5001V10.6667C17.3334 10.1667 17.0001 9.83342 16.5001 9.83342ZM11.5001 15.6667H15.6667V11.5001H11.5001V15.6667ZM7.33341 9.83342H1.50008C1.00008 9.83342 0.666748 10.1667 0.666748 10.6667V16.5001C0.666748 17.0001 1.00008 17.3334 1.50008 17.3334H7.33341C7.83341 17.3334 8.16675 17.0001 8.16675 16.5001V10.6667C8.16675 10.1667 7.83341 9.83342 7.33341 9.83342ZM2.33341 15.6667H6.50008V11.5001H2.33341V15.6667Z\" fill=\"#165153\" />\n    </svg>\n    <svg\n      className={`${DashboardViewType.TABLE === selected ? 'selected' : ''}`}\n      onClick={() => onClick(DashboardViewType.TABLE)}\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 20 20\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M3.33325 0.833252H16.6666C18.0833 0.833252 19.1666 1.91659 19.1666 3.33325V6.66659C19.1666 8.08325 18.0833 9.16658 16.6666 9.16658H3.33325C1.91659 9.16658 0.833252 8.08325 0.833252 6.66659V3.33325C0.833252 1.91659 1.91659 0.833252 3.33325 0.833252ZM16.6666 7.49992C17.1666 7.49992 17.4999 7.16658 17.4999 6.66658V3.33325C17.4999 2.83325 17.1666 2.49992 16.6666 2.49992H3.33325C2.83325 2.49992 2.49992 2.83325 2.49992 3.33325V6.66658C2.49992 7.16658 2.83325 7.49992 3.33325 7.49992H16.6666ZM16.6666 10.8333H3.33325C1.91659 10.8333 0.833252 11.9166 0.833252 13.3333V16.6666C0.833252 18.0833 1.91659 19.1666 3.33325 19.1666H16.6666C18.0833 19.1666 19.1666 18.0833 19.1666 16.6666V13.3333C19.1666 11.9166 18.0833 10.8333 16.6666 10.8333ZM16.6666 17.4999C17.1666 17.4999 17.4999 17.1666 17.4999 16.6666V13.3333C17.4999 12.8333 17.1666 12.4999 16.6666 12.4999H3.33325C2.83325 12.4999 2.49992 12.8333 2.49992 13.3333V16.6666C2.49992 17.1666 2.83325 17.4999 3.33325 17.4999H16.6666ZM5.58325 4.41659C5.74992 4.58325 5.83325 4.74992 5.83325 4.99992C5.83325 5.24992 5.74992 5.41659 5.58325 5.58325C5.41658 5.74992 5.24992 5.83325 4.99992 5.83325C4.74992 5.83325 4.58325 5.74992 4.41659 5.58325C4.33325 5.49992 4.24992 5.41659 4.24992 5.33325C4.16659 5.24992 4.16659 5.08325 4.16659 4.99992C4.16659 4.91659 4.16659 4.74992 4.24992 4.66659C4.29159 4.62492 4.31242 4.58325 4.33325 4.54159C4.35409 4.49992 4.37492 4.45825 4.41659 4.41659C4.49992 4.33325 4.58325 4.24992 4.66659 4.24992C4.91658 4.16659 5.08325 4.16659 5.33325 4.24992C5.41658 4.24992 5.49992 4.33325 5.58325 4.41659ZM5.83325 14.9999C5.83325 14.7499 5.74992 14.5833 5.58325 14.4166C5.24992 14.0833 4.74992 14.0833 4.41659 14.4166C4.37492 14.4583 4.35409 14.4999 4.33325 14.5416C4.31242 14.5833 4.29159 14.6249 4.24992 14.6666C4.16659 14.7499 4.16659 14.9166 4.16659 14.9999C4.16659 15.2499 4.24992 15.4166 4.41659 15.5833C4.58325 15.7499 4.74992 15.8333 4.99992 15.8333C5.24992 15.8333 5.41658 15.7499 5.58325 15.5833C5.74992 15.4166 5.83325 15.2499 5.83325 14.9999Z\" fill=\"#C0C1C1\" />\n    </svg>\n  </div>\n);\n\nexport default DashboardControl;\n","import React from 'react';\nimport './index.scss';\nimport { v4 as uuidv4 } from 'uuid';\nimport DashboardSection from './components/DashboardSection';\nimport DashboardControl from './components/DashbordControl';\nimport { Section, Props, useDashboard } from './useDashboard';\n\nconst Dashboard = (props: Props) => {\n  const { selectedType, setSelectedType } = useDashboard(props);\n\n  return (\n    <div className=\"dashboard\">\n      {props.isChangeTypeButton\n        && <DashboardControl selected={selectedType} onClick={setSelectedType} />}\n      {props.sections && (\n        <div className=\"dashboard__main\">\n          {props.sections.map((section: Section) => (\n            <DashboardSection\n              key={uuidv4()}\n              link={props.link}\n              title={section.title}\n              style={selectedType}\n              cards={section.cards}\n              haveStatus={props.haveStatus}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport './index.scss';\nimport CustomSelect from '../CustomSelect';\nimport { useFilter, Props } from './useFilter';\n\nconst Filter = (props: Props) => {\n  const meta = useFilter(props);\n\n  if (!meta.shouldRenderFilter) {\n    return null;\n  }\n\n  return (\n    <div className={`filter ${props.horizontal ? 'horizontal' : ''}`}>\n      {!props.horizontal && (\n        <div className=\"filter__header\">\n          <span className=\"title\">Фільтр</span>\n          <img\n            src=\"/images/clear-form.svg\"\n            alt=\"clear form\"\n            onClick={meta.clearAll}\n            className=\"filter__clear\"\n          />\n        </div>\n      )}\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '115px' : '100%' }}>\n        <CustomSelect\n          data={meta.notaries}\n          selectedValue={meta.selectedNotary}\n          onChange={meta.setSelectedNotary}\n          label=\"Нотаріус\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '90px' : '100%' }}>\n        <CustomSelect\n          data={meta.readers}\n          selectedValue={meta.selectedReader}\n          onChange={meta.setSelectedReader}\n          label=\"Читач\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '110px' : '100%' }}>\n        <CustomSelect\n          data={meta.accompanyings}\n          selectedValue={meta.selectedAccompanying}\n          onChange={meta.setSelectedAccompanying}\n          label=\"Видавач\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '150px' : '100%' }}>\n        <CustomSelect\n          data={meta.contractTypes}\n          selectedValue={meta.selectedContractType}\n          onChange={meta.setSelectedContractType}\n          label=\"Тип договору\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '140px' : '100%' }}>\n        <CustomSelect\n          data={meta.developers}\n          selectedValue={meta.selectedDeveloper}\n          onChange={meta.setSelectedDeveloper}\n          label=\"Забудовник\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '125px' : '100%' }}>\n        <CustomSelect\n          data={meta.representative}\n          selectedValue={meta.selectedRepresentative}\n          onChange={meta.setSelectedRepresentative}\n          label=\"Підписант\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      {!props.horizontal && (\n        <div\n          className=\"filter__select\"\n        >\n          <CustomSelect\n            data={meta.sortType}\n            selectedValue={meta.selectedSortType}\n            onChange={meta.setSelectedSortType}\n            label=\"Сортувати\"\n            size=\"medium\"\n          />\n        </div>\n      )}\n\n      {props.horizontal && (\n        <div className=\" df\">\n          <img\n            src=\"/images/clear-form.svg\"\n            alt=\"clear form\"\n            onClick={meta.clearAll}\n            className=\"filter__clear\"\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Filter;\n","import {\n  useEffect, useMemo, useState, useCallback\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FilterData, State } from '../../store/types';\nimport { SelectItem } from '../../types';\nimport { fetchFilterData } from '../../store/filter/actions';\nimport getDeveloperInfo from '../../services/getDeveloperInfo';\n\nexport type Props = {\n  onFilterDataChange: (data: FilterData) => void;\n  horizontal?: boolean;\n}\n\nexport const useFilter = ({ onFilterDataChange, horizontal }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n  const { filterInitialData } = useSelector((state: State) => state.filter);\n  const { schedulerLock } = useSelector((state: State) => state.scheduler);\n\n  const [shouldRender, setShouldRender] = useState<boolean>(false);\n\n  const readers = useMemo(() => filterInitialData?.reader, [filterInitialData]);\n  const notaries = useMemo(() => filterInitialData?.notary, [\n    filterInitialData,\n  ]);\n  const accompanyings = useMemo(() => filterInitialData?.accompanying, [\n    filterInitialData,\n  ]);\n  const contractTypes = useMemo(() => filterInitialData?.contract_type, [\n    filterInitialData,\n  ]);\n  const developers = useMemo(() => filterInitialData?.developer, [\n    filterInitialData,\n  ]);\n  const sortType = useMemo(() => filterInitialData?.sort_type, [\n    filterInitialData,\n  ]);\n  const [representative, setRepresentative] = useState<SelectItem[]>([]);\n\n  const shouldRenderFilter = useMemo(() => Boolean(filterInitialData), [\n    filterInitialData,\n  ]);\n\n  // selected values and CTA\n  const [selectedNotary, setSelectedNotary] = useState<string | null>(null);\n  const [selectedReader, setSelectedReader] = useState<string | null>(null);\n  const [selectedAccompanying, setSelectedAccompanying] = useState<\n    string | null\n  >(null);\n  const [selectedContractType, setSelectedContractType] = useState<\n    string | null\n  >(null);\n  const [selectedDeveloper, setSelectedDeveloper] = useState<string | null>(\n    null\n  );\n  const [selectedRepresentative, setSelectedRepresentative] = useState<\n    string | null\n  >(null);\n  const [selectedSortType, setSelectedSortType] = useState<string | null>(null);\n\n  const clearAll = useCallback(() => {\n    setSelectedNotary(null);\n    setSelectedReader(null);\n    setSelectedAccompanying(null);\n    setSelectedContractType(null);\n    setSelectedDeveloper(null);\n    setSelectedRepresentative(null);\n    setSelectedSortType(null);\n  }, []);\n\n  // useEffects\n  useEffect(() => {\n    dispatch(fetchFilterData());\n  }, []);\n\n  useEffect(() => {\n    setSelectedRepresentative(null);\n    if (token && selectedDeveloper) {\n      getDeveloperInfo(token, +selectedDeveloper)\n        .then((data) => setRepresentative(data.representative || []));\n    }\n  }, [selectedDeveloper]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      setShouldRender(true);\n      return;\n    }\n\n    const data: FilterData = {\n      notary_id: selectedNotary || null,\n      reader_id: selectedReader || null,\n      accompanying_id: selectedAccompanying || null,\n      contract_type_id: selectedContractType || null,\n      developer_id: selectedDeveloper || null,\n      dev_representative_id: selectedRepresentative || null,\n    };\n\n    if (!horizontal) {\n      data.sort_type = selectedSortType;\n    }\n\n    onFilterDataChange(data);\n  }, [\n    selectedNotary,\n    selectedReader,\n    selectedAccompanying,\n    selectedContractType,\n    selectedDeveloper,\n    selectedRepresentative,\n    selectedSortType,\n  ]);\n\n  useEffect(() => {\n    if (schedulerLock) return;\n    clearAll();\n  }, [schedulerLock]);\n\n  return {\n    shouldRenderFilter,\n    notaries,\n    readers,\n    accompanyings,\n    contractTypes,\n    developers,\n    representative,\n    sortType,\n    selectedNotary,\n    selectedReader,\n    selectedRepresentative,\n    selectedDeveloper,\n    selectedContractType,\n    selectedAccompanying,\n    selectedSortType,\n    setSelectedNotary,\n    setSelectedReader,\n    setSelectedAccompanying,\n    setSelectedContractType,\n    setSelectedDeveloper,\n    setSelectedRepresentative,\n    setSelectedSortType,\n    clearAll,\n  };\n};\n","// eslint-disable-next-line no-shadow\nexport enum DashboardContractNavigation {\n  MAIN = 'main',\n  SELLER = 'seller',\n  IMMOVABLES = 'immovables',\n  CLIENTS = 'clients',\n  SIDE_NOTARIES = 'side-notaries',\n}\n","import React, { useCallback, useEffect, useState } from 'react';\nimport './index.scss';\nimport { v4 as uuidv4 } from 'uuid';\n\ntype Props = {\n  data: any,\n  onChange: (value: string) => void;\n}\n\nconst Contracts = ({ data, onChange }: Props) => {\n  const [selected, setSelected] = useState<string | null>(null);\n\n  const handleChange = useCallback((type: string) => {\n    if (selected === type) return;\n    setSelected(type);\n    onChange(type);\n  }, [selected]);\n\n  useEffect(() => {\n    setSelected(data ? data[0].type : null);\n  }, [data]);\n\n  if (!data) {\n    return null;\n  }\n\n  return (\n    <div className=\"dashboard__filter-contracts\">\n      <span className=\"title\">Договори</span>\n      <div className=\"cards\">\n        {data.map((item: any) => (\n          <div\n            key={uuidv4()}\n            className={`item ${selected === item.type ? 'selected' : ''}`}\n            onClick={() => handleChange(item.type)}\n          >\n            <div className=\"item__left\">\n              <img src=\"/images/contract.svg\" alt=\"contract\" />\n              <span className=\"name\">{item.title}</span>\n            </div>\n            <span className=\"quantity\">{item.count}</span>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Contracts;\n","import React from 'react';\nimport ControlPanel from '../../../../../../components/ControlPanel';\nimport Filter from '../../../../../../components/Filter';\nimport Contracts from './components/Contracts';\nimport { useFilterContainer } from './useFilterContainer';\n\nconst FilterContainer = () => {\n  const {\n    filterInitialData,\n    onFilterDataChange,\n    onContractsFilterChange\n  } = useFilterContainer();\n\n  return (\n    <ControlPanel>\n      <div className=\"dashboard__filter\">\n        <Contracts data={filterInitialData?.filter_type} onChange={onContractsFilterChange} />\n        <Filter onFilterDataChange={onFilterDataChange} />\n      </div>\n    </ControlPanel>\n  );\n};\n\nexport default FilterContainer;\n","import { useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAppointmentsByContracts, fetchAppointmentsByFilter } from '../../../../../../store/appointments/actions';\nimport { FilterData, State } from '../../../../../../store/types';\n\nexport const useFilterContainer = () => {\n  const dispatch = useDispatch();\n  const { filterInitialData } = useSelector((state: State) => state.filter);\n\n  const onFilterDataChange = useCallback((data: FilterData) => {\n    dispatch(fetchAppointmentsByFilter(data));\n  }, []);\n\n  const onContractsFilterChange = useCallback((url: string) => {\n    dispatch(fetchAppointmentsByContracts(url));\n  }, []);\n\n  return {\n    filterInitialData,\n    onFilterDataChange,\n    onContractsFilterChange,\n  };\n};\n","import React from 'react';\nimport Filter from './components/FilterContainer';\nimport { useRequestModal } from '../../../../components/RequestModal/useRequestModal';\nimport Modal from '../../../../components/RequestModal';\nimport Dashboard from '../../../../components/Dashboard';\nimport { useDashboardContainer } from './useDashboardContainer';\nimport ContentPanel from '../../../../components/ContentPanel';\nimport Loader from '../../../../components/Loader/Loader';\n\nconst DashboardContainer = () => {\n  const modalProps = useRequestModal();\n  const {\n    formatAppointments,\n    isLoading,\n  } = useDashboardContainer();\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <div className=\"dashboard-screen\">\n      <Filter />\n      <ContentPanel>\n        <Dashboard\n          link=\"main\"\n          sections={formatAppointments}\n          isChangeTypeButton\n        />\n      </ContentPanel>\n      <Modal {...modalProps} />\n    </div>\n  );\n};\n\nexport default DashboardContainer;\n","import { useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAppointments, clearAppointments } from '../../../../store/appointments/actions';\nimport { State } from '../../../../store/types';\n\nexport const useDashboardContainer = () => {\n  const dispatch = useDispatch();\n  const { appointments, isLoading } = useSelector((state: State) => state.appointments);\n  const { type } = useSelector((state: State) => state.main.user);\n\n  useEffect(() => {\n    dispatch(fetchAppointments());\n\n    return () => {\n      dispatch(clearAppointments());\n    };\n  }, [type]);\n\n  const isAppointmentsEmpty = useMemo(() => !appointments.length, [appointments]);\n\n  const formatAppointments = useMemo(() => appointments.map((item: any) => ({\n    title: `${item.day || ''} ${item.date || ''}`,\n    cards: item.cards?.map((card: any) => ({\n      id: card.id,\n      title: card.title,\n      content: card.instructions,\n      color: card.color,\n    }))\n  })), [appointments]);\n\n  return {\n    formatAppointments,\n    isLoading,\n    isAppointmentsEmpty\n  };\n};\n","import * as React from 'react';\nimport ControlPanel from '../../../../../../components/ControlPanel';\nimport { DashboardContractNavigation } from '../../../../useDashboardScreen';\nimport { useNavigation } from './useNavigation';\n\ntype Props = {\n  selected?: DashboardContractNavigation;\n}\n\nconst Navigation = ({ selected }: Props) => {\n  const meta = useNavigation();\n\n  return (\n    <ControlPanel>\n      <button\n        className={`navigation-button ${\n          selected === DashboardContractNavigation.MAIN ? 'selected' : ''\n        }`}\n        type=\"button\"\n        onClick={() => meta.handleClick(DashboardContractNavigation.MAIN)}\n      >\n        <img src=\"/images/navigation/book-open.svg\" alt=\"main\" />\n        Головна\n      </button>\n\n      {meta.shouldShowSeller && (\n        <button\n          className={`navigation-button ${\n            selected === DashboardContractNavigation.SELLER ? 'selected' : ''\n          }`}\n          type=\"button\"\n          onClick={() => meta.handleClick(DashboardContractNavigation.SELLER)}\n        >\n          <img src=\"/images/navigation/developer.svg\" alt=\"seller\" />\n          Продавець\n        </button>\n      )}\n\n      {meta.shouldShowImmovable && (\n        <button\n          className={`navigation-button ${\n            selected === DashboardContractNavigation.IMMOVABLES ? 'selected' : ''\n          }`}\n          type=\"button\"\n          onClick={() => meta.handleClick(DashboardContractNavigation.IMMOVABLES)}\n        >\n          <img src=\"/images/navigation/immovable.svg\" alt=\"immovables\" />\n          Нерухомість\n        </button>\n      )}\n\n      {meta.shouldShowClient && (\n        <button\n          className={`navigation-button ${\n            selected === DashboardContractNavigation.CLIENTS ? 'selected' : ''\n          }`}\n          type=\"button\"\n          onClick={() => meta.handleClick(DashboardContractNavigation.CLIENTS)}\n        >\n          <img src=\"/images/navigation/user.svg\" alt=\"clients\" />\n          Клієнти\n        </button>\n      )}\n\n      {meta.shouldShowSideNotaries && (\n        <button\n          className={`navigation-button ${\n            selected === DashboardContractNavigation.SIDE_NOTARIES ? 'selected' : ''\n          }`}\n          type=\"button\"\n          onClick={() => meta.handleClick(DashboardContractNavigation.SIDE_NOTARIES)}\n        >\n          <img src=\"/images/navigation/book-open.svg\" alt=\"side notaries\" />\n          Сторонній нотаріус\n        </button>\n      )}\n    </ControlPanel>\n  );\n};\n\nexport default Navigation;\n","import { useMemo } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { UserTypes } from '../../../../../../types';\nimport { State } from '../../../../../../store/types';\nimport { DashboardContractNavigation } from '../../../../useDashboardScreen';\n\nexport const useNavigation = () => {\n  const history = useHistory();\n  const { id } = useParams<{ id: string }>();\n  const { user } = useSelector((state: State) => state.main);\n\n  const handleClick = (type: DashboardContractNavigation) => {\n    history.push(`/${type}/${id}`);\n  };\n\n  const shouldShowSeller = useMemo(() => user.type === UserTypes.GENERATOR, [user.type]);\n  const shouldShowImmovable = useMemo(() => user.type !== UserTypes.ASSISTANT, [user.type]);\n  const shouldShowClient = useMemo(() => user.type !== UserTypes.ASSISTANT, [user.type]);\n  const shouldShowSideNotaries = useMemo(() => user.type === UserTypes.GENERATOR, [user.type]);\n\n  return {\n    shouldShowSeller,\n    shouldShowImmovable,\n    shouldShowClient,\n    shouldShowSideNotaries,\n    handleClick,\n  };\n};\n","import * as React from 'react';\nimport Card from '../../../../../../../../../../../../components/Card';\nimport Loader from '../../../../../../../../../../../../components/Loader/Loader';\nimport { useDashboard } from './useDashboard';\n\nconst Dashboard = () => {\n  const meta = useDashboard();\n\n  if (meta.isLoading) {\n    return (\n      <Loader />\n    );\n  }\n\n  return (\n    <div className=\"immovable__dashboard\">\n      <div className=\"dashboard-header section-title\">Нерухомість</div>\n\n      <div className=\"grid\">\n        {(meta.immovables || []).map((immovable) => (\n          <Card\n            key={immovable.id}\n            title={immovable.title}\n            link={`/immovables/${meta.id}/${immovable.id}`}\n          >\n            {immovable.list.map((item) => (\n              <span>{item}</span>\n            ))}\n          </Card>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { UserTypes } from '../../../../../../../../../../../../types';\nimport { fetchImmovables, setImmovables } from '../../../../../../../../../../../../store/immovables/actions';\nimport { State } from '../../../../../../../../../../../../store/types';\n\nexport const useDashboard = () => {\n  const { id } = useParams<{ id: string }>();\n  const dispatch = useDispatch();\n\n  const { immovables, isLoading } = useSelector((state: State) => state.immovables);\n\n  useEffect(() => {\n    dispatch(fetchImmovables(id, UserTypes.GENERATOR));\n\n    return () => { dispatch(setImmovables([])); };\n  }, []);\n\n  return {\n    id,\n    isLoading,\n    immovables,\n  };\n};\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqImmovableTemplate(\n  token: string,\n  id: string,\n  method: 'GET' | 'PUT' | undefined = 'GET',\n  bodyData?: any\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/immovable/template/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeMonthWitDate, formatDate } from '../../../../../../../../../../../../../../utils/formatDates';\nimport { SelectItem } from '../../../../../../../../../../../../../../types';\nimport { setModalInfo } from '../../../../../../../../../../../../../../store/main/actions';\nimport { State } from '../../../../../../../../../../../../../../store/types';\nimport reqImmovableTemplate from '../../../../../../../../../../../../../../services/generator/Immovable/reqImmovableTemplate';\n\ntype InitialData = {\n  bank_template_id: number | null,\n  taxes_template_id: number | null,\n  contract_template_id: number | null,\n  questionnaire_template_id: number | null,\n  statement_template_id: number | null,\n  type_id: number | null,\n  communal_template_id: number | null,\n  termination_contract_id: number | null,\n  termination_refund_id: number | null,\n  termination_refund_reg_number: string | null,\n  termination_refund_notary_id: string | null,\n  processing_personal_data_template_id: string | null,\n  ready: boolean,\n  translate: boolean,\n  sign_date: any,\n  final_sign_date: any,\n  termination_refund_reg_date: any,\n  contract_type?: SelectItem[],\n  statement_templates?: SelectItem[],\n  questionnaire_templates?: SelectItem[],\n  bank_templates?: SelectItem[],\n  taxes_templates?: SelectItem[],\n  communal_templates?: SelectItem[],\n  termination_contracts?: SelectItem[],\n  termination_refunds?: SelectItem[],\n  processing_personal_data_templates?: SelectItem[],\n  notary?: SelectItem[],\n  contract_templates?: any,\n}\n\nexport type Props = {\n  id: string,\n  initialData?: InitialData,\n}\n\nexport const useTemplates = ({ initialData, id }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  // Initial data\n  const [contractType, setContractType] = useState<SelectItem[]>([]);\n  const [statementTemplates, setStatementTemplates] = useState<SelectItem[]>([]);\n  const [questionnaireTemplates, setQuestionnaireTemplates] = useState<SelectItem[]>([]);\n  const [bankTemplates, setBankTemplates] = useState<SelectItem[]>([]);\n  const [taxesTemplates, setTaxesTemplates] = useState<SelectItem[]>([]);\n  const [contractTemplates, setContractTemplates] = useState<SelectItem[]>([]);\n  const [communalTemplates, setCommunalTemplates] = useState<SelectItem[]>([]);\n  const [terminationContracts, setTerminationContracts] = useState<SelectItem[]>([]);\n  const [terminationRefunds, setTerminationRefunds] = useState<SelectItem[]>([]);\n  const [processingPersonalTemplates, setProcessingPersonalTemplates] = useState<SelectItem[]>([]);\n  const [notaries, setNotaries] = useState<SelectItem[]>([]);\n\n  const [data, setData] = useState<InitialData>({\n    type_id: null,\n    contract_template_id: null,\n    taxes_template_id: null,\n    bank_template_id: null,\n    questionnaire_template_id: null,\n    statement_template_id: null,\n    ready: false,\n    translate: false,\n    sign_date: null,\n    final_sign_date: null,\n    communal_template_id: null,\n    termination_contract_id: null,\n    termination_refund_id: null,\n    termination_refund_reg_date: null,\n    termination_refund_reg_number: null,\n    termination_refund_notary_id: null,\n    processing_personal_data_template_id: null,\n  });\n\n  const onClear = useCallback(() => {\n    setData({\n      type_id: null,\n      contract_template_id: null,\n      taxes_template_id: null,\n      bank_template_id: null,\n      questionnaire_template_id: null,\n      statement_template_id: null,\n      ready: false,\n      translate: false,\n      sign_date: null,\n      final_sign_date: null,\n      communal_template_id: null,\n      termination_contract_id: null,\n      termination_refund_id: null,\n      termination_refund_reg_date: null,\n      termination_refund_reg_number: null,\n      termination_refund_notary_id: null,\n      processing_personal_data_template_id: null,\n    });\n  }, []);\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const reqData = {\n        ...data,\n        sign_date: formatDate(data.sign_date),\n        final_sign_date: formatDate(data.final_sign_date),\n        termination_refund_reg_date: formatDate(data.termination_refund_reg_date)\n      };\n\n      const { success, message } = await reqImmovableTemplate(token, id, 'PUT', reqData);\n      dispatch(\n        setModalInfo({\n          open: true,\n          success,\n          message,\n        })\n      );\n    }\n  }, [data, token]);\n\n  useEffect(() => {\n    setContractType(initialData?.contract_type || []);\n    setStatementTemplates(initialData?.statement_templates || []);\n    setQuestionnaireTemplates(initialData?.questionnaire_templates || []);\n    setBankTemplates(initialData?.bank_templates || []);\n    setTaxesTemplates(initialData?.taxes_templates || []);\n    setContractTemplates(initialData?.contract_templates || []);\n    setCommunalTemplates(initialData?.communal_templates || []);\n    setTerminationContracts(initialData?.termination_contracts || []);\n    setTerminationRefunds(initialData?.termination_refunds || []);\n    setProcessingPersonalTemplates(initialData?.processing_personal_data_templates || []);\n    setNotaries(initialData?.notary || []);\n    setData({\n      type_id: initialData?.type_id || null,\n      contract_template_id: initialData?.contract_template_id || null,\n      taxes_template_id: initialData?.taxes_template_id || null,\n      bank_template_id: initialData?.bank_template_id || null,\n      questionnaire_template_id: initialData?.questionnaire_template_id || null,\n      statement_template_id: initialData?.statement_template_id || null,\n      communal_template_id: initialData?.communal_template_id || null,\n      termination_contract_id: initialData?.termination_contract_id || null,\n      termination_refund_id: initialData?.termination_refund_id || null,\n      termination_refund_reg_number: initialData?.termination_refund_reg_number || null,\n      termination_refund_notary_id: initialData?.termination_refund_notary_id || null,\n      processing_personal_data_template_id:\n        initialData?.processing_personal_data_template_id || null,\n      ready: initialData?.ready || false,\n      translate: initialData?.translate || false,\n      sign_date: initialData?.sign_date\n        ? changeMonthWitDate(initialData?.sign_date) : null,\n      final_sign_date: initialData?.final_sign_date\n        ? changeMonthWitDate(initialData?.final_sign_date) : null,\n      termination_refund_reg_date: initialData?.termination_refund_reg_date\n        ? changeMonthWitDate(initialData?.termination_refund_reg_date) : null,\n    });\n  }, [initialData]);\n\n  useEffect(() => {\n    if (initialData?.contract_templates) {\n      setContractTemplates(initialData?.contract_templates\n        .filter((item: any) => item.type_id === data.type_id));\n    }\n  }, [data.type_id, initialData?.contract_templates]);\n\n  return {\n    data,\n    contractType,\n    statementTemplates,\n    questionnaireTemplates,\n    bankTemplates,\n    taxesTemplates,\n    contractTemplates,\n    communalTemplates,\n    terminationContracts,\n    terminationRefunds,\n    processingPersonalTemplates,\n    notaries,\n    setData,\n    onClear,\n    onSave,\n  };\n};\n","import * as React from 'react';\nimport CustomDatePicker from '../../../../../../../../../../../../../../components/CustomDatePicker';\nimport CustomInput from '../../../../../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../../../../../components/CustomSelect';\nimport CustomSwitch from '../../../../../../../../../../../../../../components/CustomSwitch';\nimport PrimaryButton from '../../../../../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../../../../../components/SectionWithTitle';\nimport { useTemplates, Props } from './useTemplates';\n\nconst Templates = (props: Props) => {\n  const meta = useTemplates(props);\n\n  return (\n    <div className=\"templates\">\n      <SectionWithTitle title=\"Договір\">\n        <div className=\"grid\">\n          <CustomSelect\n            label=\"Тип договору\"\n            data={meta.contractType}\n            onChange={(e) => meta.setData({ ...meta.data, type_id: +e })}\n            selectedValue={meta.data.type_id}\n          />\n          <CustomSelect\n            label=\"Шаблон договору\"\n            data={meta.contractTemplates}\n            onChange={(e) => meta.setData({ ...meta.data, contract_template_id: +e })}\n            selectedValue={meta.data.contract_template_id}\n          />\n          <CustomDatePicker\n            label=\"Дата підписання договору\"\n            onSelect={(e) => meta.setData({ ...meta.data, sign_date: e })}\n            selectedDate={meta.data.sign_date}\n          />\n\n          <CustomSwitch\n            label=\"Оброблений\"\n            onChange={(e) => meta.setData({ ...meta.data, ready: e })}\n            selected={meta.data.ready}\n          />\n          <CustomDatePicker\n            label=\"ПД - дата підписання ОД\"\n            onSelect={(e) => meta.setData({ ...meta.data, final_sign_date: e })}\n            selectedDate={meta.data.final_sign_date}\n          />\n          <CustomSwitch\n            label=\"Усний переклад\"\n            onChange={(e) => meta.setData({ ...meta.data, translate: e })}\n            selected={meta.data.translate}\n          />\n        </div>\n      </SectionWithTitle>\n\n      <SectionWithTitle title=\"Оплата рахунку\">\n        <div className=\"flex-center\">\n          <CustomSelect\n            label=\"Шаблон рахунку\"\n            data={meta.bankTemplates}\n            onChange={(e) => meta.setData({ ...meta.data, bank_template_id: +e })}\n            selectedValue={meta.data.bank_template_id}\n            className=\"single\"\n          />\n        </div>\n      </SectionWithTitle>\n\n      <SectionWithTitle title=\"Оплата податків\">\n        <div className=\"flex-center\">\n          <CustomSelect\n            label=\"Шаблон рахунку податків\"\n            data={meta.taxesTemplates}\n            onChange={(e) => meta.setData({ ...meta.data, taxes_template_id: +e })}\n            selectedValue={meta.data.taxes_template_id}\n            className=\"single\"\n          />\n        </div>\n      </SectionWithTitle>\n\n      <SectionWithTitle title=\"Запит щодо зареєстрованих осіб\">\n        <div className=\"flex-center\">\n          <CustomSelect\n            label=\"Шаблон запиту\"\n            data={meta.statementTemplates}\n            onChange={(e) => meta.setData({ ...meta.data, statement_template_id: +e })}\n            selectedValue={meta.data.statement_template_id}\n            className=\"single\"\n          />\n        </div>\n      </SectionWithTitle>\n\n      <SectionWithTitle title=\"Анкета фінансового моніторінгу\">\n        <div className=\"flex-center\">\n          <CustomSelect\n            label=\"Шаблон анкети\"\n            data={meta.questionnaireTemplates}\n            onChange={(e) => meta.setData({ ...meta.data, questionnaire_template_id: +e })}\n            selectedValue={meta.data.questionnaire_template_id}\n            className=\"single\"\n          />\n        </div>\n      </SectionWithTitle>\n\n      <SectionWithTitle title=\"Довіреність щодо надання комунальних та інших послуг\">\n        <div className=\"flex-center\">\n          <CustomSelect\n            label=\"Шаблон по коммунальним\"\n            data={meta.communalTemplates}\n            onChange={(e) => meta.setData({ ...meta.data, communal_template_id: +e })}\n            selectedValue={meta.data.communal_template_id}\n            className=\"single\"\n          />\n        </div>\n      </SectionWithTitle>\n\n      <SectionWithTitle title=\"Заява-згода на обробку персональних даних\">\n        <div className=\"flex-center\">\n          <CustomSelect\n            label=\"Шаблон на обробку персональних даних\"\n            data={meta.processingPersonalTemplates}\n            onChange={\n              (e) => meta.setData({ ...meta.data, processing_personal_data_template_id: e })\n            }\n            selectedValue={meta.data.processing_personal_data_template_id}\n            className=\"single\"\n          />\n        </div>\n      </SectionWithTitle>\n\n      <SectionWithTitle title=\"Договір розірвання ПД\">\n        <div className=\"flex-center\">\n          <CustomSelect\n            label=\"Шаблон договору розірвання ПД\"\n            data={meta.terminationContracts}\n            onChange={(e) => meta.setData({ ...meta.data, termination_contract_id: +e })}\n            selectedValue={meta.data.termination_contract_id}\n            className=\"single\"\n          />\n        </div>\n      </SectionWithTitle>\n\n      <SectionWithTitle title=\"Заява про повернення коштів\">\n        <div className=\"grid-center-duet\">\n          <CustomSelect\n            label=\"Шаблон договору розірвання ПД\"\n            data={meta.terminationRefunds}\n            onChange={(e) => meta.setData({ ...meta.data, termination_refund_id: +e })}\n            selectedValue={meta.data.termination_refund_id}\n          />\n\n          <CustomSelect\n            label=\"Нотаріус\"\n            data={meta.notaries}\n            onChange={(e) => meta.setData({ ...meta.data, termination_refund_notary_id: e })}\n            selectedValue={meta.data.termination_refund_notary_id}\n          />\n\n          <CustomDatePicker\n            label=\"Дата посвідчення\"\n            onSelect={(e) => meta.setData({ ...meta.data, termination_refund_reg_date: e })}\n            selectedDate={meta.data.termination_refund_reg_date}\n          />\n\n          <CustomInput\n            label=\"Реєстровий номер\"\n            onChange={(e) => meta.setData({ ...meta.data, termination_refund_reg_number: e })}\n            value={meta.data.termination_refund_reg_number}\n          />\n        </div>\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={meta.onSave} disabled={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default Templates;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqImmovableGeneral(\n  token: string,\n  id: string,\n  method: 'GET' | 'PUT' | undefined = 'GET',\n  bodyData?: any\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/immovable/general/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport reqImmovableGeneral from '../../../../../../../../../../../../../../services/generator/Immovable/reqImmovableGeneral';\nimport { setModalInfo } from '../../../../../../../../../../../../../../store/main/actions';\nimport { State } from '../../../../../../../../../../../../../../store/types';\nimport { SelectItem } from '../../../../../../../../../../../../../../types';\n\ntype InitialData = {\n  imm_type_id: number | null;\n  building_id: string;\n  roominess_id: string;\n  imm_number: string;\n  registration_number: string;\n  price_grn: string;\n  total_space: string;\n  living_space: string;\n  floor: string;\n  section: any;\n  roominess?: SelectItem[],\n  building?: SelectItem[],\n  imm_type?: SelectItem[]\n}\n\nexport type Props = {\n  id: string,\n  initialData?: InitialData,\n}\n\nexport const useGeneral = ({ initialData, id }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  // Initial data\n  const [roominess, setRoominess] = useState<SelectItem[]>([]);\n  const [building, setBuilding] = useState<SelectItem[]>([]);\n  const [immType, setImmType] = useState<SelectItem[]>([]);\n  const [data, setData] = useState<InitialData>({\n    imm_type_id: null,\n    building_id: '',\n    roominess_id: '',\n    imm_number: '',\n    registration_number: '',\n    price_grn: '',\n    total_space: '',\n    living_space: '',\n    floor: '',\n    section: '',\n  });\n\n  const onClear = useCallback(() => {\n    setData({\n      imm_type_id: null,\n      building_id: '',\n      roominess_id: '',\n      imm_number: '',\n      registration_number: '',\n      price_grn: '',\n      total_space: '',\n      living_space: '',\n      floor: '',\n      section: '',\n    });\n  }, []);\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const { success, message } = await reqImmovableGeneral(token, id, 'PUT', data);\n      dispatch(\n        setModalInfo({\n          open: true,\n          success,\n          message,\n        })\n      );\n    }\n  }, [data, token]);\n\n  const isSaveButtonDisable = useMemo(\n    () => !data.building_id\n      || !data.imm_number\n      || !data.imm_type_id,\n    [data.building_id, data.imm_number, data.imm_type_id]\n  );\n\n  useEffect(() => {\n    setRoominess(initialData?.roominess || []);\n    setBuilding(initialData?.building || []);\n    setImmType(initialData?.imm_type || []);\n    setData({\n      imm_type_id: initialData?.imm_type_id || null,\n      building_id: initialData?.building_id || '',\n      roominess_id: initialData?.roominess_id || '',\n      imm_number: initialData?.imm_number || '',\n      registration_number: initialData?.registration_number || '',\n      price_grn: initialData?.price_grn || '',\n      total_space: initialData?.total_space || '',\n      living_space: initialData?.living_space || '',\n      floor: initialData?.floor || '',\n      section: initialData?.section || '',\n    });\n  }, [initialData]);\n\n  return {\n    roominess,\n    building,\n    immType,\n    data,\n    isSaveButtonDisable,\n    setData,\n    onClear,\n    onSave,\n  };\n};\n","import * as React from 'react';\nimport CustomInput from '../../../../../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../../../../../components/CustomSelect';\nimport PrimaryButton from '../../../../../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../../../../../components/SectionWithTitle';\nimport { useGeneral, Props } from './useGeneral';\n\nconst General = (props: Props) => {\n  const meta = useGeneral(props);\n\n  return (\n    <>\n      <SectionWithTitle title=\"Загальні дані\" onClear={meta.onClear}>\n        <div className=\"general grid-center-duet\">\n          <CustomSelect\n            required\n            label=\"Тип нерухомості\"\n            data={meta.immType}\n            onChange={(e) => meta.setData({ ...meta.data, imm_type_id: +e })}\n            selectedValue={meta.data.imm_type_id}\n          />\n          <CustomSelect\n            required\n            label=\"Адреса\"\n            data={meta.building}\n            onChange={(e) => meta.setData({ ...meta.data, building_id: e })}\n            selectedValue={meta.data.building_id}\n          />\n\n          <CustomInput\n            required\n            label=\"Номер нерухомості\"\n            onChange={(e) => meta.setData({ ...meta.data, imm_number: e })}\n            value={meta.data.imm_number}\n          />\n          <CustomInput\n            label=\"Реєстраційний номер\"\n            onChange={(e) => meta.setData({ ...meta.data, registration_number: e })}\n            value={meta.data.registration_number}\n          />\n\n          <CustomInput\n            label=\"Повна вартість в гривнях\"\n            onChange={(e) => meta.setData({ ...meta.data, price_grn: e })}\n            value={meta.data.price_grn}\n          />\n\n          <div />\n\n          <div className=\"duet\">\n            <CustomInput\n              label=\"Загальна площа\"\n              onChange={(e) => meta.setData({ ...meta.data, total_space: e })}\n              value={meta.data.total_space}\n            />\n            <CustomInput\n              label=\"Житлова площа\"\n              onChange={(e) => meta.setData({ ...meta.data, living_space: e })}\n              value={meta.data.living_space}\n            />\n          </div>\n\n          <div className=\"trio\">\n            <CustomSelect\n              label=\"К-ть кімнат\"\n              data={meta.roominess}\n              onChange={(e) => meta.setData({ ...meta.data, roominess_id: e })}\n              selectedValue={meta.data.roominess_id}\n            />\n            <CustomInput\n              label=\"№ поверху\"\n              onChange={(e) => meta.setData({ ...meta.data, floor: e })}\n              value={meta.data.floor}\n            />\n            <CustomInput\n              type=\"number\"\n              label=\"№ секції\"\n              onChange={(e) => meta.setData({ ...meta.data, section: +e })}\n              value={meta.data.section}\n            />\n          </div>\n        </div>\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={meta.onSave} disabled={meta.isSaveButtonDisable} />\n      </div>\n    </>\n  );\n};\n\nexport default General;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqImmovableOwnership(\n  token: string,\n  id: string,\n  method: 'GET' | 'PUT' | undefined = 'GET',\n  bodyData?: any\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/immovable/ownership/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeMonthWitDate, formatDate } from '../../../../../../../../../../../../../../utils/formatDates';\nimport { setModalInfo } from '../../../../../../../../../../../../../../store/main/actions';\nimport { State } from '../../../../../../../../../../../../../../store/types';\nimport reqImmovableOwnership from '../../../../../../../../../../../../../../services/generator/Immovable/reqImmovableOwnership';\n\ntype InitialData = {\n  reg_date: any;\n  reg_number: number | string;\n  discharge_date: any;\n  discharge_number: number | string;\n  notary_id: string | null;\n  notary?: any,\n}\n\nexport type Props = {\n  id: string,\n  initialData?: InitialData,\n}\n\nexport const useOwnership = ({ initialData, id }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  const [notary, setNotary] = useState([]);\n\n  // Initial data\n  const [data, setData] = useState<InitialData>({\n    reg_date: null,\n    reg_number: '',\n    discharge_date: null,\n    discharge_number: '',\n    notary_id: null,\n  });\n\n  const onClear = useCallback(() => {\n    setData({\n      reg_date: null,\n      reg_number: '',\n      discharge_date: null,\n      discharge_number: '',\n      notary_id: null,\n    });\n  }, []);\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const reqData = {\n        ...data,\n        reg_date: formatDate(data.reg_date),\n        discharge_date: formatDate(data.discharge_date),\n      };\n\n      const { success, message } = await reqImmovableOwnership(token, id, 'PUT', reqData);\n      dispatch(\n        setModalInfo({\n          open: true,\n          success,\n          message,\n        })\n      );\n    }\n  }, [data, token]);\n\n  useEffect(() => {\n    setData({\n      reg_date: initialData?.reg_date ? changeMonthWitDate(initialData?.reg_date) : null,\n      reg_number: initialData?.reg_number || '',\n      discharge_date: initialData?.discharge_date\n        ? changeMonthWitDate(initialData?.discharge_date) : null,\n      discharge_number: initialData?.discharge_number || '',\n      notary_id: initialData?.notary_id || null,\n    });\n    setNotary(initialData?.notary || []);\n  }, [initialData]);\n\n  return {\n    data,\n    notary,\n    setData,\n    onClear,\n    onSave,\n  };\n};\n","import { data } from 'jquery';\nimport * as React from 'react';\nimport CustomDatePicker from '../../../../../../../../../../../../../../components/CustomDatePicker';\nimport CustomInput from '../../../../../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../../../../../components/CustomSelect';\nimport PrimaryButton from '../../../../../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../../../../../components/SectionWithTitle';\nimport { useOwnership, Props } from './useOwnership';\n\nconst Ownership = (props: Props) => {\n  const meta = useOwnership(props);\n\n  return (\n    <div className=\"ownership\">\n      <SectionWithTitle title=\"Право власності\" onClear={meta.onClear}>\n        <div className=\"grid-center-duet mb20\">\n          <CustomSelect\n            label=\"Нотаріус\"\n            data={meta.notary}\n            onChange={(e) => meta.setData({ ...meta.data, notary_id: e })}\n            selectedValue={meta.data.notary_id}\n          />\n          {/* <CustomSelect\n            label=\"Нотаріус\"\n            data={meta.notary}\n            onChange={(e) => meta.setData({ ...meta.data, notary_id: e })}\n            selectedValue={meta.data.notary_id}\n          /> */}\n        </div>\n        <div className=\"grid-center-duet\">\n          <CustomDatePicker\n            label=\"Дата запису про право власності\"\n            onSelect={(e) => meta.setData({ ...meta.data, reg_date: e })}\n            selectedDate={meta.data.reg_date}\n          />\n          <CustomInput\n            type=\"number\"\n            label=\"Номер запису про право власності\"\n            onChange={(e) => meta.setData({ ...meta.data, reg_number: +e })}\n            value={meta.data.reg_number}\n          />\n\n          <CustomDatePicker\n            label=\"Дата витягу про право власності\"\n            onSelect={(e) => meta.setData({ ...meta.data, discharge_date: e })}\n            selectedDate={meta.data.discharge_date}\n          />\n          <CustomInput\n            label=\"Номер витягу про право власності\"\n            onChange={(e) => meta.setData({ ...meta.data, discharge_number: +e })}\n            value={meta.data.discharge_number}\n          />\n        </div>\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={meta.onSave} disabled={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default Ownership;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqImmovableRating(\n  token: string,\n  id?: string,\n  method: 'GET' | 'PUT' | undefined = 'GET',\n  bodyData?: any\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/immovable/valuation/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeMonthWitDate, formatDate } from '../../../../../../../../../../../../../../utils/formatDates';\nimport { SelectItem } from '../../../../../../../../../../../../../../types';\nimport { setModalInfo } from '../../../../../../../../../../../../../../store/main/actions';\nimport { State } from '../../../../../../../../../../../../../../store/types';\nimport reqImmovableRating from '../../../../../../../../../../../../../../services/generator/Immovable/reqImmovableRating';\n\ntype InitialData = {\n  property_valuation_id: number | null,\n  date: any,\n  price: string | null,\n  title: string | null,\n  property_valuation?: SelectItem[]\n}\n\nexport type Props = {\n  id: string,\n  initialData?: InitialData,\n}\n\nexport const useRating = ({ initialData, id }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  // Initial data\n  const [valuation, setValuation] = useState<SelectItem[]>([]);\n  const [data, setData] = useState<InitialData>({\n    property_valuation_id: null,\n    date: null,\n    price: null,\n    title: null,\n  });\n\n  const onClear = useCallback(() => {\n    setData({\n      property_valuation_id: null,\n      date: null,\n      price: null,\n      title: null,\n    });\n  }, []);\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const reqData = {\n        ...data,\n        date: formatDate(data.date),\n      };\n\n      const { success, message } = await reqImmovableRating(token, id, 'PUT', reqData);\n      dispatch(\n        setModalInfo({\n          open: true,\n          success,\n          message,\n        })\n      );\n    }\n  }, [data, token]);\n\n  useEffect(() => {\n    setValuation(initialData?.property_valuation || []);\n    setData({\n      property_valuation_id: initialData?.property_valuation_id || null,\n      date: initialData?.date ? changeMonthWitDate(initialData?.date) : null,\n      price: initialData?.price || null,\n      title: initialData?.title || null,\n    });\n  }, [initialData]);\n\n  return {\n    data,\n    valuation,\n    setData,\n    onClear,\n    onSave,\n  };\n};\n","import * as React from 'react';\nimport CustomDatePicker from '../../../../../../../../../../../../../../components/CustomDatePicker';\nimport CustomInput from '../../../../../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../../../../../components/CustomSelect';\nimport PrimaryButton from '../../../../../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../../../../../components/SectionWithTitle';\nimport { useRating, Props } from './useRating';\n\nconst Rating = (props: Props) => {\n  const { data, valuation, setData, onClear, onSave } = useRating(props);\n\n  return (\n    <div className=\"rating\">\n      <SectionWithTitle title=\"Оцінка\" onClear={onClear}>\n        <div className=\"grid mb20\">\n          <CustomSelect\n            label=\"Оцінка від компанії\"\n            data={valuation}\n            onChange={(e) => setData({ ...data, property_valuation_id: +e })}\n            selectedValue={data.property_valuation_id}\n          />\n          <CustomDatePicker\n            label=\"Дата оцінки\"\n            onSelect={(e) => setData({ ...data, date: e })}\n            selectedDate={data.date}\n          />\n          <CustomInput\n            label=\"Ціна в грн\"\n            onChange={(e) => setData({ ...data, price: e })}\n            value={data.price}\n          />\n        </div>\n        <CustomInput\n          label=\"Назва документа у родовому відмінку\"\n          onChange={(e) => setData({ ...data, title: e })}\n          value={data.title}\n        />\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={onSave} disabled={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default Rating;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqImmovablePayment(\n  token: string,\n  id: string,\n  method: 'GET' | 'PUT' | undefined = 'GET',\n  bodyData?: any\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/immovable/payment/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SelectItem } from '../../../../../../../../../../../../../../types';\nimport { changeMonthWitDate, formatDate } from '../../../../../../../../../../../../../../utils/formatDates';\nimport reqImmovablePayment from '../../../../../../../../../../../../../../services/generator/Immovable/reqImmovablePayment';\nimport { setModalInfo } from '../../../../../../../../../../../../../../store/main/actions';\nimport { State } from '../../../../../../../../../../../../../../store/types';\n\ntype InitialData = {\n  sign_date: any,\n  final_date: any,\n  reg_num: string | null,\n  first_part_grn: number | null,\n  client_id: number | null,\n  clients?: SelectItem[],\n}\n\nexport type Props = {\n  id: string,\n  initialData?: InitialData,\n}\n\nexport const useSecurityPayment = ({ initialData, id }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  const [clients, setClients] = useState<SelectItem[]>([]);\n  // Initial data\n  const [data, setData] = useState<InitialData>({\n    sign_date: null,\n    final_date: null,\n    reg_num: null,\n    first_part_grn: null,\n    client_id: null,\n  });\n\n  const onClear = useCallback(() => {\n    setData({\n      sign_date: null,\n      final_date: null,\n      reg_num: null,\n      first_part_grn: null,\n      client_id: null,\n    });\n  }, []);\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const reqData = {\n        ...data,\n        sign_date: formatDate(data.sign_date),\n        final_date: formatDate(data.final_date),\n      };\n\n      const { success, message } = await reqImmovablePayment(token, id, 'PUT', reqData);\n      dispatch(\n        setModalInfo({\n          open: true,\n          success,\n          message,\n        })\n      );\n    }\n  }, [data, token]);\n\n  useEffect(() => {\n    setClients(initialData?.clients || []);\n    setData({\n      sign_date: initialData?.sign_date\n        ? changeMonthWitDate(initialData?.sign_date) : null,\n      final_date: initialData?.final_date\n        ? changeMonthWitDate(initialData?.final_date) : null,\n      reg_num: initialData?.reg_num || null,\n      first_part_grn: initialData?.first_part_grn || null,\n      client_id: initialData?.client_id || null,\n    });\n  }, [initialData]);\n\n  return {\n    data,\n    clients,\n    setData,\n    onClear,\n    onSave,\n  };\n};\n","import * as React from 'react';\nimport CustomDatePicker from '../../../../../../../../../../../../../../components/CustomDatePicker';\nimport CustomInput from '../../../../../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../../../../../components/CustomSelect';\nimport PrimaryButton from '../../../../../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../../../../../components/SectionWithTitle';\nimport { useSecurityPayment, Props } from './useSecurityPayment';\n\nconst SecurityPayment = (props: Props) => {\n  const meta = useSecurityPayment(props);\n\n  return (\n    <div className=\"security-payment\">\n      <SectionWithTitle title=\"Забезпечувальний платіж\" onClear={meta.onClear}>\n        <div className=\"grid\">\n          <CustomInput\n            type=\"number\"\n            label=\"I частина з. платежу у грн\"\n            onChange={(e) => meta.setData({ ...meta.data, first_part_grn: +e })}\n            value={meta.data.first_part_grn}\n          />\n          <CustomSelect\n            label=\"Клієнти\"\n            data={meta.clients}\n            onChange={(e) => meta.setData({ ...meta.data, client_id: +e })}\n            selectedValue={meta.data.client_id}\n          />\n          <CustomInput\n            label=\"Номер договору резервування\"\n            onChange={(e) => meta.setData({ ...meta.data, reg_num: e })}\n            value={meta.data.reg_num}\n          />\n          <CustomDatePicker\n            label=\"Дата підписання\"\n            onSelect={(e) => meta.setData({ ...meta.data, sign_date: e })}\n            selectedDate={meta.data.sign_date}\n          />\n          <CustomDatePicker\n            label=\"Дата закінчення\"\n            onSelect={(e) => meta.setData({ ...meta.data, final_date: e })}\n            selectedDate={meta.data.final_date}\n          />\n        </div>\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={meta.onSave} disabled={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default SecurityPayment;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqImmovableTermination(\n  token: string,\n  id?: string,\n  method: 'GET' | 'PUT' | undefined = 'GET',\n  bodyData?: any\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/immovable/termination/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","export const isNumber = (value: any): boolean => !Number.isNaN(parseFloat(value));\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqImmovableInstallment(\n  token: string,\n  id?: string,\n  method: 'GET' | 'PUT' | undefined = 'GET',\n  bodyData?: any\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/immovable/installment/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { useMemo, useState, useEffect } from 'react';\nimport { State } from '../../../../../../../../../../../../store/types';\nimport reqImmovableGeneral from '../../../../../../../../../../../../services/generator/Immovable/reqImmovableGeneral';\nimport reqImmovableOwnership from '../../../../../../../../../../../../services/generator/Immovable/reqImmovableOwnership';\nimport reqImmovablePayment from '../../../../../../../../../../../../services/generator/Immovable/reqImmovablePayment';\nimport reqImmovableRating from '../../../../../../../../../../../../services/generator/Immovable/reqImmovableRating';\nimport reqImmovableTemplate from '../../../../../../../../../../../../services/generator/Immovable/reqImmovableTemplate';\nimport reqImmovableTermination from '../../../../../../../../../../../../services/generator/Immovable/reqImmovableTermination';\nimport { isNumber } from '../../../../../../../../../../../../utils/numbers';\nimport reqImmovableInstallment from '../../../../../../../../../../../../services/generator/Immovable/reqImmovableInstallment';\n\nexport const useFields = () => {\n  const { token } = useSelector((state: State) => state.main.user);\n  const { immovableId } = useParams<{clientId: string, immovableId: string}>();\n\n  // Fields Data\n  const [general, setGeneral] = useState();\n  const [ownerShip, setOwnerShip] = useState();\n  const [securityPayment, setSecurityPayment] = useState();\n  const [retting, setRetting] = useState();\n  const [termination, setTermination] = useState();\n  const [templates, setTemplates] = useState();\n  const [installment, setInstallment] = useState();\n\n  const isCorrectId = useMemo(() => isNumber(immovableId), [immovableId]);\n\n  useEffect(() => {\n    if (token && isCorrectId) {\n      // get GENERAL\n      (async () => {\n        const res = await reqImmovableGeneral(token, immovableId);\n\n        if (res?.success) {\n          setGeneral(res.data);\n        }\n      })();\n\n      // get OWNERSHIP\n      (async () => {\n        const res = await reqImmovableOwnership(token, immovableId);\n\n        if (res?.success) {\n          setOwnerShip(res.data);\n        }\n      })();\n\n      // get SECURITY_PAYMENT\n      (async () => {\n        const res = await reqImmovablePayment(token, immovableId);\n\n        if (res?.success) {\n          setSecurityPayment(res.data);\n        }\n      })();\n\n      // get RATING\n      (async () => {\n        const res = await reqImmovableRating(token, immovableId);\n\n        if (res?.success) {\n          setRetting(res.data);\n        }\n      })();\n\n      // get TERMINATION\n      (async () => {\n        const res = await reqImmovableTermination(token, immovableId);\n\n        if (res?.success) {\n          setTermination(res.data);\n        }\n      })();\n\n      // get TEMPLATES\n      (async () => {\n        const res = await reqImmovableTemplate(token, immovableId);\n\n        if (res?.success) {\n          setTemplates(res.data);\n        }\n      })();\n\n      // get INSTALLMENT\n      (async () => {\n        const res = await reqImmovableInstallment(token, immovableId);\n\n        if (res?.success) {\n          setInstallment(res.data);\n        }\n      })();\n    }\n  }, [token, isCorrectId]);\n\n  return {\n    general,\n    immovableId,\n    ownerShip,\n    securityPayment,\n    retting,\n    termination,\n    templates,\n    installment,\n  };\n};\n","import { useState, useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport reqImmovableInstallment from '../../../../../../../../../../../../../../services/generator/Immovable/reqImmovableInstallment';\nimport { setModalInfo } from '../../../../../../../../../../../../../../store/main/actions';\nimport { State } from '../../../../../../../../../../../../../../store/types';\n\ntype InitialData = {\n  total_month: number | null\n  total_price: number | null,\n  type: any\n}\n\nexport type Props = {\n  id: string,\n  initialData?: InitialData,\n}\n\n// eslint-disable-next-line no-shadow\nexport enum InstallmentRadioButtons {\n  MONTH='month',\n  QUARTER='quarter'\n}\n\nconst installmentRadioButtons = [\n  {\n    id: InstallmentRadioButtons.MONTH,\n    title: 'Щомісячно'\n  },\n  {\n    id: InstallmentRadioButtons.QUARTER,\n    title: 'Поквартально'\n  }\n];\n\nexport const useInstallment = ({ initialData, id }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  const [data, setData] = useState<InitialData>({\n    total_month: null,\n    total_price: null,\n    type: InstallmentRadioButtons.MONTH\n  });\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const { success, message } = await reqImmovableInstallment(token, id, 'PUT', data);\n      dispatch(\n        setModalInfo({\n          open: true,\n          success,\n          message,\n        })\n      );\n    }\n  }, [data, token]);\n\n  const onClear = useCallback(() => {\n    setData({\n      total_month: null,\n      total_price: null,\n      type: InstallmentRadioButtons.MONTH\n    });\n  }, []);\n\n  useEffect(() => {\n    setData({\n      total_month: initialData?.total_month || null,\n      total_price: initialData?.total_price || null,\n      type: initialData?.type || InstallmentRadioButtons.MONTH\n    });\n  }, [initialData]);\n\n  return {\n    installmentRadioButtons,\n    data,\n    setData,\n    onSave,\n    onClear\n  };\n};\n","import * as React from 'react';\nimport CustomDatePicker from '../../../../../../../../../../../../../../components/CustomDatePicker';\nimport CustomInput from '../../../../../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../../../../../components/CustomSelect';\nimport PrimaryButton from '../../../../../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../../../../../components/SectionWithTitle';\nimport { Props, useTermination } from './useTermination';\n\nconst Termination = (props: Props) => {\n  const meta = useTermination(props);\n\n  return (\n    <div className=\"termination\">\n      <SectionWithTitle title=\"Розірвання попереднього договору\" onClear={meta.onClear}>\n        <div className=\"grid mb20\">\n          <CustomSelect\n            label=\"Нотаріус\"\n            data={meta.notaries}\n            onChange={(e) => meta.setData({ ...meta.data, notary_id: e })}\n            selectedValue={meta.data.notary_id}\n          />\n\n          <CustomDatePicker\n            label=\"Дата посвідчення\"\n            selectedDate={meta.data.reg_date}\n            onSelect={(e) => meta.setData({ ...meta.data, reg_date: e })}\n          />\n\n          <CustomInput\n            label=\"Реєстровий номер\"\n            value={meta.data.reg_number}\n            onChange={(e) => meta.setData({ ...meta.data, reg_number: e })}\n          />\n\n          <CustomInput\n            label=\"Сума повернення коштів в гривнях\"\n            value={meta.data.price_grn}\n            onChange={(e) => meta.setData({ ...meta.data, price_grn: e })}\n          />\n\n          <CustomInput\n            label=\"Сума повернення коштів в доларах\"\n            value={meta.data.price_dollar}\n            onChange={(e) => meta.setData({ ...meta.data, price_dollar: e })}\n          />\n        </div>\n\n        <div className=\"grid\">\n          <CustomSelect\n            label=\"Клієнт 1\"\n            data={meta.clients}\n            onChange={(e) => meta.setData({ ...meta.data, first_client_id: e })}\n            selectedValue={meta.data.first_client_id}\n          />\n\n          <CustomSelect\n            label=\"Клієнт 2\"\n            data={meta.clients}\n            onChange={(e) => meta.setData({ ...meta.data, second_client_id: e })}\n            selectedValue={meta.data.second_client_id}\n          />\n        </div>\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={meta.onSave} disabled={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default Termination;\n","import { useCallback, useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport reqImmovableTermination from '../../../../../../../../../../../../../../services/generator/Immovable/reqImmovableTermination';\nimport { setModalInfo } from '../../../../../../../../../../../../../../store/main/actions';\nimport { State } from '../../../../../../../../../../../../../../store/types';\nimport { SelectItem } from '../../../../../../../../../../../../../../types';\nimport { changeMonthWitDate, formatDate } from '../../../../../../../../../../../../../../utils/formatDates';\n\ntype InitialData = {\n  notary_id: string | null,\n  reg_date: any,\n  reg_number: string | null,\n  price_grn: string | null,\n  price_dollar: string | null,\n  first_client_id: string | null,\n  second_client_id: string | null,\n  notary?: SelectItem[],\n  clients?: SelectItem[],\n}\n\nexport type Props = {\n  id: string,\n  initialData?: InitialData,\n}\n\nexport const useTermination = ({ id, initialData }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  const [notaries, setNotaries] = useState<SelectItem[]>([]);\n  const [clients, setClients] = useState<SelectItem[]>([]);\n  const [data, setData] = useState<InitialData>({\n    notary_id: null,\n    reg_date: null,\n    reg_number: null,\n    price_grn: null,\n    price_dollar: null,\n    first_client_id: null,\n    second_client_id: null,\n  });\n\n  const onClear = useCallback(() => {\n    setData({\n      notary_id: null,\n      reg_date: null,\n      reg_number: null,\n      price_grn: null,\n      price_dollar: null,\n      first_client_id: null,\n      second_client_id: null,\n    });\n  }, []);\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const reqData = {\n        ...data,\n        reg_date: formatDate(data.reg_date),\n      };\n\n      const { success, message } = await reqImmovableTermination(token, id, 'PUT', reqData);\n      dispatch(\n        setModalInfo({\n          open: true,\n          success,\n          message,\n        })\n      );\n    }\n  }, [data]);\n\n  useEffect(() => {\n    setNotaries(initialData?.notary || []);\n    setClients(initialData?.clients || []);\n    setData({\n      notary_id: initialData?.notary_id || null,\n      reg_number: initialData?.reg_number || null,\n      price_grn: initialData?.price_grn || null,\n      price_dollar: initialData?.price_dollar || null,\n      reg_date: initialData?.reg_date ? changeMonthWitDate(initialData?.reg_date) : null,\n      first_client_id: initialData?.first_client_id || null,\n      second_client_id: initialData?.second_client_id || null,\n    });\n  }, [initialData]);\n\n  return {\n    notaries,\n    clients,\n    data,\n    onClear,\n    onSave,\n    setData,\n  };\n};\n","import React from 'react';\nimport CustomInput from '../../../../../../../../../../../../../../components/CustomInput';\nimport PrimaryButton from '../../../../../../../../../../../../../../components/PrimaryButton';\nimport { RadioButtonsGroup } from '../../../../../../../../../../../../../../components/RadioButtonsGroup/RadioButtonsGroup';\nimport SectionWithTitle from '../../../../../../../../../../../../../../components/SectionWithTitle';\nimport { useInstallment, Props } from './useInstallment';\n\nconst Installment = (props: Props) => {\n  const {\n    installmentRadioButtons,\n    data,\n    setData,\n    onSave,\n    onClear,\n  } = useInstallment(props);\n\n  return (\n    <div className=\"installment\">\n      <SectionWithTitle title=\"Розстрочка\" onClear={onClear}>\n        <div className=\"grid\">\n          <CustomInput\n            type=\"number\"\n            label=\"Сума\"\n            onChange={(e) => setData({ ...data, total_price: +e })}\n            value={data.total_price}\n          />\n\n          <CustomInput\n            type=\"number\"\n            label=\"Кількість місяців\"\n            onChange={(e) => setData({ ...data, total_month: +e })}\n            value={data.total_month}\n          />\n\n          <RadioButtonsGroup\n            unicId=\"installmentRadio\"\n            buttons={installmentRadioButtons}\n            selected={data.type}\n            onChange={(e) => setData({ ...data, type: e })}\n          />\n        </div>\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={onSave} disabled={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default Installment;\n","import React from 'react';\nimport Templates from './components/Templates';\nimport General from './components/General';\nimport Ownership from './components/Ownership';\nimport Rating from './components/Rating';\nimport SecurityPayment from './components/SecurityPayment';\nimport { useFields } from './useFields';\nimport Termination from './components/Termination';\nimport Installment from './components/Installment';\n\nconst Fields = () => {\n  const meta = useFields();\n\n  return (\n    <div className=\"immovable__fields\">\n      <General initialData={meta.general} id={meta.immovableId} />\n      <Ownership initialData={meta.ownerShip} id={meta.immovableId} />\n      <SecurityPayment initialData={meta.securityPayment} id={meta.immovableId} />\n      <Installment initialData={meta.installment} id={meta.immovableId} />\n      <Rating initialData={meta.retting} id={meta.immovableId} />\n      <Termination initialData={meta.termination} id={meta.immovableId} />\n      <Templates initialData={meta.templates} id={meta.immovableId} />\n    </div>\n  );\n};\n\nexport default Fields;\n","import * as React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport ImmovableDashboard from './components/ImmovableDashboard';\nimport ImmovableFields from './components/ImmovableFields';\n\nconst GeneratorContainer = () => (\n  <main className=\"immovable\">\n    <Switch>\n      <Route path=\"/immovables/:clientId/:immovableId\">\n        <ImmovableFields />\n      </Route>\n      <ImmovableDashboard />\n    </Switch>\n  </main>\n);\n\nexport default GeneratorContainer;\n","import * as React from 'react';\nimport './index.scss';\nimport { Link, useHistory } from 'react-router-dom';\n\ntype Props = {\n  title: string;\n  children: React.ReactNode;\n  link: string\n  onClick: (id: string | undefined) => void;\n  id?: string;\n}\n\nconst CardWithClose = ({ id, title, children, link, onClick }: Props) => {\n  const handleClick = (e: any) => {\n    e.preventDefault();\n    onClick(id);\n  };\n\n  return (\n    <Link to={link} className=\"card-close\">\n      <div className=\"card-close__header\">\n        <span>{title}</span>\n        <button\n          type=\"button\"\n          onClick={handleClick}\n          className=\"card-close__button\"\n        >\n          <img src=\"/images/x.svg\" alt=\"delete\" />\n        </button>\n      </div>\n      <div className=\"card-close__main\">\n        {children}\n      </div>\n    </Link>\n  );\n};\n\nexport default CardWithClose;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function deleteImmovable(\n  token: string,\n  clientId: string,\n  immovableId: string,\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/manager/immovable/delete/${immovableId}/${clientId}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'DELETE',\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useCallback, useState } from 'react';\nimport { fetchImmovables, setImmovables } from '../../../../../../../../../../../../store/immovables/actions';\nimport { State } from '../../../../../../../../../../../../store/types';\nimport { UserTypes } from '../../../../../../../../../../../../types';\nimport { setModalInfo } from '../../../../../../../../../../../../store/main/actions';\nimport deleteImmovable from '../../../../../../../../../../../../services/generator/Immovable/deleteImmovable';\n\nexport const useDashboard = () => {\n  const { id } = useParams<{ id: string }>();\n  const dispatch = useDispatch();\n\n  const { token } = useSelector((state: State) => state.main.user);\n  const { immovables, isLoading } = useSelector((state: State) => state.immovables);\n\n  const [showModal, setShowModal] = useState<boolean>(false);\n  const [immovableNeedToRemove, setImmovableNeedToRemove] = useState<any>();\n\n  const clientRemove = useCallback((personId: string) => {\n    (async () => {\n      if (token) {\n        const { success, message, data } = await deleteImmovable(token, id, personId);\n\n        if (success) {\n          dispatch(setImmovables(data));\n          dispatch(\n            setModalInfo({\n              open: true,\n              success,\n              message,\n            })\n          );\n        }\n      }\n    })();\n  }, [token, immovableNeedToRemove, id]);\n\n  const onModalShow = useCallback((personId: string) => {\n    setShowModal(true);\n    setImmovableNeedToRemove(personId);\n  }, []);\n\n  const onModalConfirm = useCallback(() => {\n    setShowModal(false);\n    clientRemove(immovableNeedToRemove);\n  }, [immovableNeedToRemove, clientRemove]);\n\n  const onModalCancel = useCallback(() => {\n    setShowModal(false);\n    setImmovableNeedToRemove(undefined);\n  }, []);\n\n  useEffect(() => {\n    dispatch(fetchImmovables(id, UserTypes.MANAGER));\n\n    return () => { dispatch(setImmovables([])); };\n  }, []);\n\n  return {\n    id,\n    isLoading,\n    immovables,\n    showModal,\n    onModalCancel,\n    onModalConfirm,\n    onModalShow,\n  };\n};\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport CardWithClose from '../../../../../../../../../../../../components/CardWithClose';\nimport ConfirmDialog from '../../../../../../../../../../../../components/ConfirmDialog';\nimport Loader from '../../../../../../../../../../../../components/Loader/Loader';\nimport { useDashboard } from './useDashboard';\n\nconst Dashboard = () => {\n  const meta = useDashboard();\n\n  if (meta.isLoading) {\n    return (\n      <Loader />\n    );\n  }\n\n  return (\n    <div className=\"immovable__dashboard\">\n      <div className=\"dashboard-header section-title\">Нерухомість</div>\n\n      <div className=\"grid\">\n        {meta.immovables.map((immovable) => (\n          <CardWithClose\n            key={immovable.id}\n            title={immovable.title}\n            onClick={() => meta.onModalShow(immovable.id.toString())}\n            link={`/immovables/${meta.id}/${immovable.id}`}\n          >\n            {immovable.list.map((item) => (\n              <span>{item}</span>\n            ))}\n          </CardWithClose>\n        ))}\n\n        <Link to={`/immovables/${meta.id}/create`} className=\"add-item-card\">\n          <img src=\"/images/plus-big.svg\" alt=\"create\" />\n        </Link>\n      </div>\n\n      <ConfirmDialog\n        open={meta.showModal}\n        title=\"Видалення нерухомості\"\n        message=\"Ви впевнені, що бажаєте видалити дану нерухомість?\"\n        handleClose={() => meta.onModalCancel()}\n        handleConfirm={() => meta.onModalConfirm()}\n      />\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import * as React from 'react';\nimport CustomSwitch from '../../../../../../../../../../../../../../components/CustomSwitch';\nimport SectionWithTitle from '../../../../../../../../../../../../../../components/SectionWithTitle';\n\nexport type ManagerChecksData = {\n  value: boolean;\n  title: string;\n  key: string;\n}[];\n\ntype Props = {\n  checksList: ManagerChecksData;\n  data: {[key: string]: boolean},\n  onChange: (arg: {[key: string]: boolean}) => void,\n}\n\nconst Checks = ({ data, onChange, checksList }: Props) => {\n  const handleClear = () => {\n    const newData: {[key: string]: boolean} = {};\n    Object.keys(data).forEach((key) => { newData[key] = false; });\n    onChange(newData);\n  };\n\n  return (\n    <SectionWithTitle title=\"Перевірки\" onClear={handleClear}>\n      <div className=\"grid\">\n        {checksList.map((item) => (\n          <CustomSwitch\n            key={item.key}\n            label={item.title}\n            onChange={(e) => onChange({ ...data, [item.key]: e, })}\n            selected={data ? data[item.key] : false}\n          />\n        ))}\n      </div>\n    </SectionWithTitle>\n  );\n};\n\nexport default Checks;\n","import * as React from 'react';\nimport CustomInput from '../../../../../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../../../../../components/CustomSelect';\nimport SectionWithTitle from '../../../../../../../../../../../../../../components/SectionWithTitle';\nimport { SelectItem } from '../../../../../../../../../../../../../../types';\n\ntype Props = {\n  onChange: (arg: ManagerContractData) => void;\n  types: SelectItem[],\n  data: ManagerContractData;\n}\n\nexport type ManagerContractData = {\n  contract_type_id: string | null,\n};\n\nconst Contract = ({ data, onChange, types }: Props) => {\n  const handleClear = () => {\n    onChange({\n      contract_type_id: null\n    });\n  };\n\n  return (\n    <SectionWithTitle title=\"Договір\" onClear={handleClear}>\n      <div className=\"middle-column-fields\">\n        <div style={{ width: '360px' }}>\n          <CustomSelect\n            label=\"Тип договору\"\n            data={types}\n            onChange={(e) => onChange({ ...data, contract_type_id: e })}\n            selectedValue={data?.contract_type_id}\n          />\n        </div>\n      </div>\n    </SectionWithTitle>\n  );\n};\n\nexport default Contract;\n","import * as React from 'react';\nimport CustomInput from '../../../../../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../../../../../components/CustomSelect';\nimport SectionWithTitle from '../../../../../../../../../../../../../../components/SectionWithTitle';\nimport { SelectItem } from '../../../../../../../../../../../../../../types';\n\ntype Props = {\n  title: string;\n  onChange: (arg: ManagerGeneralData) => void;\n  immovableTypes: SelectItem[],\n  buildings: SelectItem[],\n  data: ManagerGeneralData;\n}\n\nexport type ManagerGeneralData = {\n  immovable_type_id: string | null,\n  building_id: string | null,\n  immovable_number: string | null,\n  immovable_reg_num: string | null,\n}\n\nconst General = ({ title, data, onChange, immovableTypes, buildings }: Props) => {\n  const handleClear = () => {\n    onChange({\n      immovable_type_id: null,\n      building_id: null,\n      immovable_number: null,\n      immovable_reg_num: null,\n    });\n  };\n\n  return (\n    <SectionWithTitle title={title} onClear={handleClear}>\n      <div className=\"grid-center-duet\">\n        <CustomSelect\n          required\n          label=\"Тип нерухомості\"\n          data={immovableTypes}\n          onChange={(e) => onChange({ ...data, immovable_type_id: e })}\n          selectedValue={data?.immovable_type_id}\n        />\n\n        <CustomSelect\n          required\n          label=\"Будинок\"\n          data={buildings}\n          onChange={(e) => onChange({ ...data, building_id: e })}\n          selectedValue={data?.building_id}\n        />\n\n        <CustomInput\n          required\n          label=\"Номер нерухомості\"\n          onChange={(e) => onChange({ ...data, immovable_number: e })}\n          value={data?.immovable_number}\n        />\n\n        <CustomInput\n          label=\"Реєстраційний номер\"\n          onChange={(e) => onChange({ ...data, immovable_reg_num: e })}\n          value={data?.immovable_reg_num}\n        />\n      </div>\n    </SectionWithTitle>\n  );\n};\n\nexport default General;\n","import * as React from 'react';\nimport CustomInput from '../../../../../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../../../../../components/CustomSelect';\nimport SectionWithTitle from '../../../../../../../../../../../../../../components/SectionWithTitle';\nimport { SelectItem } from '../../../../../../../../../../../../../../types';\n\ntype Props = {\n  onChange: (arg: ManagerResponsibleData) => void;\n  reader: SelectItem[],\n  accompanying: SelectItem[],\n  data: ManagerResponsibleData;\n}\n\nexport type ManagerResponsibleData = {\n  reader_id: string | null,\n  accompanying_id: string | null,\n};\n\nconst Responsible = ({ data, onChange, reader, accompanying }: Props) => {\n  const handleClear = () => {\n    onChange({\n      reader_id: null,\n      accompanying_id: null,\n    });\n  };\n\n  return (\n    <SectionWithTitle title=\"Відповідaльні особи\" onClear={handleClear}>\n      <div className=\"grid-center-duet\">\n        <CustomSelect\n          label=\"Читач\"\n          data={reader}\n          onChange={(e) => onChange({ ...data, reader_id: e })}\n          selectedValue={data?.reader_id}\n        />\n\n        <CustomSelect\n          label=\"Видавач\"\n          data={accompanying}\n          onChange={(e) => onChange({ ...data, accompanying_id: e })}\n          selectedValue={data?.accompanying_id}\n        />\n      </div>\n    </SectionWithTitle>\n  );\n};\n\nexport default Responsible;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqManagerImmovables(\n  token: string,\n  clientId: string,\n  id: string,\n  method: 'GET' | 'PUT' | undefined = 'GET',\n  bodyData?: any\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/manager/immovable/${clientId}${id === 'create' ? '' : `/${id}`}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useParams, useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useMemo, useEffect, useState, useCallback } from 'react';\nimport { SelectItem } from '../../../../../../../../../../../../types';\nimport { State } from '../../../../../../../../../../../../store/types';\nimport reqManagerImmovables from '../../../../../../../../../../../../services/manager/Immovables/reqManagerImmovables';\nimport { ManagerGeneralData } from './components/General/General';\nimport { ManagerResponsibleData } from './components/Responsible/Responsible';\nimport { ManagerContractData } from './components/Contract/Contract';\nimport { ManagerChecksData } from './components/Checks/Checks';\nimport { setModalInfo } from '../../../../../../../../../../../../store/main/actions';\n\nexport const useImmovableFields = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n  const { immovableId, clientId } = useParams<{clientId: string, immovableId: string}>();\n  const [title, setTitle] = useState('');\n\n  // Selects\n  const [immovableTypes, setImmovableTypes] = useState<SelectItem[]>([]);\n  const [buildings, setBuildings] = useState<SelectItem[]>([]);\n  const [reader, setReader] = useState<SelectItem[]>([]);\n  const [accompanying, setAccompanying] = useState<SelectItem[]>([]);\n  const [contracts, setContracts] = useState<SelectItem[]>([]);\n  const [checkList, setCheckList] = useState<ManagerChecksData>([]);\n\n  // Fields Data\n  const [general, setGeneral] = useState<ManagerGeneralData>({\n    immovable_type_id: null,\n    building_id: null,\n    immovable_number: null,\n    immovable_reg_num: null,\n  });\n  const [responsible, setResponsible] = useState<ManagerResponsibleData>({\n    reader_id: null,\n    accompanying_id: null,\n  });\n  const [contractType, setContractType] = useState<ManagerContractData>({\n    contract_type_id: null,\n  });\n  const [checks, setChecks] = useState<any>();\n\n  const isOnSaveDisabled = useMemo(() => !general.immovable_type_id\n    || !general.building_id\n    || !general.immovable_number,\n  [general]);\n\n  const onSave = useCallback(async () => {\n    const bodyData = {\n      ...general,\n      ...responsible,\n      ...contractType,\n      ...checks,\n    };\n\n    if (token) {\n      const res = await reqManagerImmovables(token, clientId, immovableId, 'PUT', bodyData);\n\n      dispatch(\n        setModalInfo({\n          open: true,\n          success: res?.success,\n          message: res?.message,\n        })\n      );\n\n      if (res?.success && immovableId === 'create') {\n        history.push(`/immovables/${clientId}/${res?.data.immovable_id}`);\n      }\n    }\n  }, [token, immovableId, general, responsible, contractType, checks]);\n\n  useEffect(() => {\n    if (token) {\n      // get MANAGER_GENERAL\n      (async () => {\n        const res = await reqManagerImmovables(token, clientId, immovableId);\n\n        if (res?.success) {\n          setTitle(res?.data.title);\n\n          setImmovableTypes(res?.data.immovable_type || []);\n          setBuildings(res?.data.building || []);\n          setGeneral({\n            immovable_type_id: res?.data.immovable_type_id || '',\n            building_id: res?.data.building_id || '',\n            immovable_number: res?.data.immovable_number || '',\n            immovable_reg_num: res?.data.immovable_reg_num || '',\n          });\n\n          setReader(res?.data.reader);\n          setAccompanying(res?.data.accompanying);\n          setResponsible({\n            reader_id: res?.data.reader_id || null,\n            accompanying_id: res?.data.accompanying_id || null,\n          });\n\n          setContracts(res?.data.contract_type);\n          setContractType({ contract_type_id: res?.data.contract_type_id || null });\n\n          setCheckList(res?.data.check_list || []);\n          setChecks(res?.data.check_list.reduce((acc: any, item: any) => {\n            acc[item.key] = item.value;\n            return acc;\n          }, {}));\n        }\n      })();\n    }\n  }, [token]);\n\n  return {\n    title,\n    general,\n    immovableTypes,\n    buildings,\n    reader,\n    accompanying,\n    responsible,\n    contracts,\n    contractType,\n    checkList,\n    checks,\n    isOnSaveDisabled,\n    setChecks,\n    setContractType,\n    setGeneral,\n    setResponsible,\n    onSave,\n  };\n};\n","import React from 'react';\nimport PrimaryButton from '../../../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../../../components/SectionWithTitle';\nimport Checks from './components/Checks/Checks';\nimport Contract from './components/Contract';\nimport General from './components/General';\nimport Responsible from './components/Responsible';\nimport { useImmovableFields } from './useImmovableFields';\n\nconst ImmovableFields = () => {\n  const meta = useImmovableFields();\n\n  return (\n    <div className=\"immovable__fields\">\n      <General\n        title={meta.title}\n        data={meta.general}\n        onChange={meta.setGeneral}\n        immovableTypes={meta.immovableTypes}\n        buildings={meta.buildings}\n      />\n\n      <Responsible\n        data={meta.responsible}\n        reader={meta.reader}\n        accompanying={meta.accompanying}\n        onChange={meta.setResponsible}\n      />\n\n      <Contract\n        data={meta.contractType}\n        types={meta.contracts}\n        onChange={meta.setContractType}\n      />\n\n      {meta.checks && (\n        <Checks\n          checksList={meta.checkList}\n          data={meta.checks}\n          onChange={meta.setChecks}\n        />\n      )}\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={meta.onSave} disabled={meta.isOnSaveDisabled} />\n      </div>\n    </div>\n  );\n};\n\nexport default ImmovableFields;\n","import * as React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport ImmovableDashboard from './components/Dashboard';\nimport ImmovableFields from './components/Fields';\n\nconst ManagerContainer = () => (\n  <main className=\"immovable\">\n    <Switch>\n      <Route path=\"/immovables/:clientId/:immovableId\">\n        <ImmovableFields />\n      </Route>\n      <ImmovableDashboard />\n    </Switch>\n  </main>\n);\n\nexport default ManagerContainer;\n","import * as React from 'react';\nimport './index.scss';\nimport { useSelector } from 'react-redux';\nimport { State } from '../../../../../../../../store/types';\nimport { UserTypes } from '../../../../../../../../types';\nimport GeneratorContainer from './components/GeneratorContainer';\nimport ManagerContainer from './components/ManagerContainer';\n\nconst Immovable = () => {\n  const { user: { type } } = useSelector((state: State) => state.main);\n\n  if (type === UserTypes.GENERATOR) {\n    return <GeneratorContainer />;\n  }\n\n  if (type === UserTypes.MANAGER) {\n    return <ManagerContainer />;\n  }\n\n  return null;\n};\n\nexport default Immovable;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function deleteManagerClient(\n  token: string,\n  clientId: string,\n  cardId: string,\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/manager/client/delete/${clientId}/${cardId}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'DELETE',\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useCallback, useState } from 'react';\n\nimport { UserTypes } from '../../../../../../../../../../../../types';\nimport { State } from '../../../../../../../../../../../../store/types';\nimport { fetchClients, setClients } from '../../../../../../../../../../../../store/clients/actions';\nimport reqClientName from '../../../../../../../../../../../../services/generator/Client/reqClientName';\nimport { setModalInfo } from '../../../../../../../../../../../../store/main/actions';\nimport deleteManagerClient from '../../../../../../../../../../../../services/manager/Clients/deleteManagerClient';\n\nexport const useDashboard = () => {\n  const { id } = useParams<{ id: string }>();\n  const dispatch = useDispatch();\n\n  const { token } = useSelector((state: State) => state.main.user);\n  const { clients, isLoading } = useSelector((state: State) => state.clients);\n\n  const [showModal, setShowModal] = useState<boolean>(false);\n  const [personNeedToRemove, setPersonNeedToRemove] = useState<any>();\n\n  const clientRemove = useCallback((personId: string) => {\n    (async () => {\n      if (token) {\n        const { success, message, data } = await deleteManagerClient(token, personId, id);\n\n        if (success) {\n          dispatch(setClients(data));\n          dispatch(\n            setModalInfo({\n              open: true,\n              success,\n              message,\n            })\n          );\n        }\n      }\n    })();\n  }, [token, personNeedToRemove]);\n\n  const onModalShow = useCallback((personId: string) => {\n    setShowModal(true);\n    setPersonNeedToRemove(personId);\n  }, []);\n\n  const onModalConfirm = useCallback(() => {\n    setShowModal(false);\n    clientRemove(personNeedToRemove);\n  }, [personNeedToRemove]);\n\n  const onModalCancel = useCallback(() => {\n    setShowModal(false);\n    setPersonNeedToRemove(undefined);\n  }, []);\n\n  useEffect(() => {\n    dispatch(fetchClients(id, UserTypes.MANAGER));\n\n    return () => { dispatch(setClients([])); };\n  }, [id]);\n\n  return {\n    id,\n    isLoading,\n    clients,\n    showModal,\n    onModalCancel,\n    onModalConfirm,\n    onModalShow,\n  };\n};\n","import * as React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Link } from 'react-router-dom';\nimport CardWithClose from '../../../../../../../../../../../../components/CardWithClose';\nimport ConfirmDialog from '../../../../../../../../../../../../components/ConfirmDialog';\nimport Loader from '../../../../../../../../../../../../components/Loader/Loader';\nimport './index.scss';\nimport { useDashboard } from './useDashboard';\n\nconst Dashboard = () => {\n  const meta = useDashboard();\n\n  if (meta.isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <main className=\"clients\">\n      <div className=\"dashboard-header section-title\">Клієнти</div>\n\n      <div className=\"grid\">\n        {(meta.clients || []).map((person: any) => (\n          <CardWithClose\n            key={person.id}\n            title={person.full_name}\n            onClick={() => meta.onModalShow(person.id.toString())}\n            link={`/clients/${meta.id}/${person.id}`}\n          >\n            {(person.list || []).map((item: any) => (\n              <span>{item}</span>\n            ))}\n          </CardWithClose>\n        ))}\n\n        <Link to={`/clients/${meta.id}/create`} className=\"add-item-card\">\n          <img src=\"/images/plus-big.svg\" alt=\"create\" />\n        </Link>\n      </div>\n\n      <ConfirmDialog\n        open={meta.showModal}\n        title=\"Видалення клієнта\"\n        message=\"Ви впевнені, що бажаєте видалити даного клієнта?\"\n        handleClose={() => meta.onModalCancel()}\n        handleConfirm={() => meta.onModalConfirm()}\n      />\n    </main>\n  );\n};\n\nexport default Dashboard;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqManagerClient(\n  token: string,\n  clientId: string,\n  personId: string,\n  method: 'GET' | 'PUT' | undefined = 'GET',\n  bodyData?: any\n) {\n  try {\n    const url = method === 'GET'\n      ? `/api/manager/client${personId === 'create' ? '' : `/${personId}`}`\n      : `/api/manager/client/${clientId}${personId === 'create' ? '' : `/${personId}`}`;\n    const data = await requestApi({\n      url: `${DEFAULT_URL}${url}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useParams, useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useCallback, useState, useMemo } from 'react';\nimport { SelectItem } from '../../../../../../../../../../../../types';\nimport { State } from '../../../../../../../../../../../../store/types';\nimport reqManagerClient from '../../../../../../../../../../../../services/manager/Clients/reqManagerClient';\nimport { setModalInfo } from '../../../../../../../../../../../../store/main/actions';\nimport { isNumber } from '../../../../../../../../../../../../utils/numbers';\n\nexport const useFields = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const { token } = useSelector((state: State) => state.main.user);\n  const { clientId, personId } = useParams<{clientId: string, personId: string}>();\n\n  // Selects\n  const [marriedTypes, setMarriedTypes] = useState<SelectItem[]>([]);\n  const [passportTypes, setPassportTypes] = useState<SelectItem[]>([]);\n\n  // Fields Data\n  const [client, setClient] = useState<any>({});\n  const [clientChecks, setClientChecks] = useState<any>([]);\n  const [general, setGeneral] = useState<any>({});\n  const [spouse, setSpouse] = useState<any>({});\n  const [spouseChecks, setSpouseChecks] = useState<any>([]);\n  const [confidant, setConfidant] = useState<any>({});\n  const [confidantChecks, setConfidantChecks] = useState<any>([]);\n\n  const onClientChecksChange = useCallback((index: number, value: boolean) => {\n    clientChecks[index].value = value;\n    setClientChecks([...clientChecks]);\n  }, [clientChecks]);\n\n  const onSpouseChecksChange = useCallback((index: number, value: boolean) => {\n    spouseChecks[index].value = value;\n    setSpouseChecks([...spouseChecks]);\n  }, [spouseChecks]);\n\n  const onConfidantChecksChange = useCallback((index: number, value: boolean) => {\n    confidantChecks[index].value = value;\n    setConfidantChecks([...confidantChecks]);\n  }, [confidantChecks]);\n\n  const onClientClear = useCallback(() => {\n    const clearClient: any = {};\n    Object.keys(client).forEach((item: string) => {\n      if (typeof client[item] === 'boolean') {\n        clearClient[item] = false;\n      } else {\n        clearClient[item] = '';\n      }\n    });\n    setClient(clearClient);\n    setClientChecks((prev: any) => prev.map((item: any) => {\n      item.value = false;\n      return item;\n    }));\n  }, [client]);\n\n  const onSpouseClear = useCallback(() => {\n    const clearSpouse: any = {};\n    Object.keys(spouse).forEach((item: string) => {\n      clearSpouse[item] = '';\n    });\n    setSpouse(clearSpouse);\n    setSpouseChecks((prev: any) => prev.map((item: any) => {\n      item.value = false;\n      return item;\n    }));\n  }, [spouse]);\n\n  const onConfidantClear = useCallback(() => {\n    const clearConfidant: any = {};\n    Object.keys(confidant).forEach((item: string) => {\n      clearConfidant[item] = '';\n    });\n    setConfidant(clearConfidant);\n    setConfidantChecks((prev: any) => prev.map((item: any) => {\n      item.value = false;\n      return item;\n    }));\n  }, [confidant]);\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      // format clientsChecks for request\n      const clientChecksValues: any = {};\n      clientChecks.forEach((item: any) => {\n        clientChecksValues[item.key] = item.value;\n      });\n\n      // format spouseChecks for request\n      const spouseChecksValues: any = {};\n      spouseChecks.forEach((item: any) => {\n        spouseChecksValues[item.key] = item.value;\n      });\n\n      // format confidantChecks for request\n      const confidantChecksValues: any = {};\n      confidantChecks.forEach((item: any) => {\n        confidantChecksValues[item.key] = item.value;\n      });\n\n      const bodyData = {\n        client: {\n          data: client,\n          info: clientChecksValues,\n        },\n        spouse: {\n          data: spouse,\n          info: spouseChecksValues,\n        },\n        representative: {\n          data: confidant,\n          info: confidantChecksValues,\n        }\n      };\n\n      const res = await reqManagerClient(token, clientId, personId, 'PUT', bodyData);\n\n      dispatch(\n        setModalInfo({\n          open: true,\n          success: res?.success,\n          message: res?.message,\n        })\n      );\n\n      if (res?.success && personId === 'create' && isNumber(res?.data.client_id)) {\n        history.push(`/clients/${clientId}/${res?.data.client_id}`);\n      }\n    }\n  }, [token, client, spouse, confidant, clientChecks, spouseChecks, confidantChecks]);\n\n  const isSaveButtonDisabled = useMemo(() => !client.name\n    || !client.surname\n    || !client.passport_type_id, [client.name, client.surname, client.passport_type_id]);\n\n  useEffect(() => {\n    if (token) {\n      // get CLIENT_DATA\n      (async () => {\n        const res = await reqManagerClient(token, clientId, personId);\n\n        if (res?.success) {\n          setClient(res?.data.client.data || {\n            surname: '',\n            name: '',\n            patronymic: '',\n            phone: '',\n            email: '',\n            married_type_id: null,\n            passport_type_id: null,\n            previous_buyer: false,\n          });\n          setClientChecks(res?.data.client.info);\n          setSpouse(res?.data.spouse.data || {\n            surname: '',\n            name: '',\n            patronymic: '',\n          });\n          setSpouseChecks(res?.data.spouse.info);\n          setConfidant(res?.data.confidant.data || {\n            surname: '',\n            name: '',\n            patronymic: '',\n          });\n          setConfidantChecks(res?.data.confidant.info);\n          setMarriedTypes(res?.data.married_types || []);\n          setPassportTypes(res?.data.passport_type || []);\n        }\n      })();\n    }\n  }, [token, personId]);\n\n  return {\n    clientId,\n    personId,\n    client,\n    clientChecks,\n    general,\n    spouse,\n    spouseChecks,\n    confidant,\n    confidantChecks,\n    marriedTypes,\n    passportTypes,\n    isSaveButtonDisabled,\n    setClient,\n    setGeneral,\n    setSpouse,\n    setConfidant,\n    onClientChecksChange,\n    onSpouseChecksChange,\n    onConfidantChecksChange,\n    onClientClear,\n    onSpouseClear,\n    onConfidantClear,\n    onSave,\n  };\n};\n","import * as React from 'react';\n\nimport CustomInput from '../../../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../../../components/CustomSelect';\nimport CustomSwitch from '../../../../../../../../../../../../components/CustomSwitch';\nimport PhoneMaskInput from '../../../../../../../../../../../../components/PhoneMaskInput';\nimport PrimaryButton from '../../../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../../../components/SectionWithTitle';\n\nimport { useFields } from './useFields';\n\nconst Fields = () => {\n  const meta = useFields();\n\n  return (\n    <main className=\"clients\">\n      <div\n        className=\"dashboard-header section-title\"\n        style={{\n          backgroundColor: '#2323B5',\n          color: 'white',\n        }}\n      >\n        Клієнт\n      </div>\n\n      <SectionWithTitle title=\"\" onClear={meta.onClientClear}>\n        <div className=\"grid\">\n          <CustomInput\n            required\n            label=\"Прізвище\"\n            onChange={(e) => meta.setClient({ ...meta.client, surname: e })}\n            value={meta.client?.surname}\n          />\n\n          <CustomInput\n            required\n            label=\"Ім’я\"\n            onChange={(e) => meta.setClient({ ...meta.client, name: e })}\n            value={meta.client?.name}\n          />\n\n          <CustomInput\n            label=\"По батькові\"\n            onChange={(e) => meta.setClient({ ...meta.client, patronymic: e })}\n            value={meta.client?.patronymic}\n          />\n\n          <PhoneMaskInput\n            label=\"Номер телефону\"\n            onChange={(e) => meta.setClient({ ...meta.client, phone: e })}\n            value={meta.client?.phone}\n          />\n\n          <CustomInput\n            label=\"E-mail\"\n            onChange={(e) => meta.setClient({ ...meta.client, email: e })}\n            value={meta.client?.email}\n          />\n\n          <CustomSwitch\n            label=\"Покупець по попередньому договору\"\n            selected={meta.client?.previous_buyer}\n            onChange={(e) => meta.setClient({ ...meta.client, previous_buyer: e })}\n          />\n        </div>\n      </SectionWithTitle>\n\n      <SectionWithTitle title=\"Перевірки ПОКУПЦЯ\">\n        <div className=\"grid\">\n          {meta.clientChecks.map(({ title, key, value }: any, index: number) => (\n            <CustomSwitch\n              key={key}\n              label={title}\n              onChange={(e) => meta.onClientChecksChange(index, e)}\n              selected={value}\n            />\n          ))}\n        </div>\n      </SectionWithTitle>\n\n      <SectionWithTitle title=\"Загальні дані\">\n        <div className=\"grid-center-duet\">\n          <CustomSelect\n            label=\"Тип свідоцтва про шлюб\"\n            data={meta.marriedTypes}\n            onChange={(e) => meta.setClient({ ...meta.client, married_type_id: e })}\n            selectedValue={meta.client.married_type_id}\n          />\n\n          <CustomSelect\n            required\n            label=\"Тип документа\"\n            data={meta.passportTypes}\n            onChange={(e) => meta.setClient({ ...meta.client, passport_type_id: e })}\n            selectedValue={meta.client.passport_type_id}\n          />\n        </div>\n      </SectionWithTitle>\n\n      <SectionWithTitle title=\"Подружжя\" headerColor=\"#FFB800\" onClear={meta.onSpouseClear}>\n        <div className=\"grid\">\n          <CustomInput\n            label=\"Прізвище\"\n            onChange={(e) => meta.setSpouse({ ...meta.spouse, surname: e })}\n            value={meta.spouse.surname}\n          />\n\n          <CustomInput\n            label=\"Ім’я\"\n            onChange={(e) => meta.setSpouse({ ...meta.spouse, name: e })}\n            value={meta.spouse.name}\n          />\n\n          <CustomInput\n            label=\"По батькові\"\n            onChange={(e) => meta.setSpouse({ ...meta.spouse, patronymic: e })}\n            value={meta.spouse.patronymic}\n          />\n\n          {meta.spouseChecks.map(({ title, key, value }: any, index: number) => (\n            <CustomSwitch\n              key={key}\n              label={title}\n              onChange={(e) => meta.onSpouseChecksChange(index, e)}\n              selected={value}\n            />\n          ))}\n        </div>\n      </SectionWithTitle>\n\n      <SectionWithTitle title=\"Представник\" headerColor=\"#04BC00\" onClear={meta.onConfidantClear}>\n        <div className=\"grid\">\n          <CustomInput\n            label=\"Прізвище\"\n            onChange={(e) => meta.setConfidant({ ...meta.confidant, surname: e })}\n            value={meta.confidant.surname}\n          />\n\n          <CustomInput\n            label=\"Ім’я\"\n            onChange={(e) => meta.setConfidant({ ...meta.confidant, name: e })}\n            value={meta.confidant.name}\n          />\n\n          <CustomInput\n            label=\"По батькові\"\n            onChange={(e) => meta.setConfidant({ ...meta.confidant, patronymic: e })}\n            value={meta.confidant.patronymic}\n          />\n\n          {meta.confidantChecks.map(({ title, key, value }: any, index: number) => (\n            <CustomSwitch\n              key={key}\n              label={title}\n              onChange={(e) => meta.onConfidantChecksChange(index, e)}\n              selected={value}\n            />\n          ))}\n        </div>\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={meta.onSave} disabled={meta.isSaveButtonDisabled} />\n      </div>\n    </main>\n  );\n};\n\nexport default Fields;\n","import * as React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Dashboard from './components/Dashboard';\nimport Fields from './components/Fields';\n\nconst ManagerContainer = () => (\n  <Switch>\n    <Route path=\"/clients/:clientId/:personId\">\n      <Fields />\n    </Route>\n    <Dashboard />\n  </Switch>\n);\n\nexport default ManagerContainer;\n","import * as React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Card from '../../../../../../../../../../../../components/Card';\nimport Loader from '../../../../../../../../../../../../components/Loader/Loader';\nimport './index.scss';\nimport { useClientsDashboard } from './useClientsDashboard';\n\nconst ClientsDashboard = () => {\n  const meta = useClientsDashboard();\n\n  if (meta.isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <main className=\"clients\">\n      <div className=\"grid mb20\">\n        <div className=\"clients__colorful-title blue\">Клієнт</div>\n        <div className=\"clients__colorful-title yellow\">Подружжя</div>\n        <div className=\"clients__colorful-title green\">Представник</div>\n      </div>\n\n      {meta.clients.map((client) => (\n        <div className=\"grid\" key={uuidv4()}>\n          {Object.values(client).map((person: any) => {\n            if (!person) return <div />;\n\n            return (\n              <Card\n                key={person.id}\n                title={person.full_name}\n                // onClick={() => meta.onModalShow(person.id.toString())}\n                link={`/clients/${meta.id}/${person.id}`}\n              >\n                {(person.list || []).map((item: any) => (\n                  <span>{item}</span>\n                ))}\n              </Card>\n            );\n          })}\n        </div>\n      ))}\n\n      {/* <ConfirmDialog\n        open={meta.showModal}\n        title=\"Видалення клієнта\"\n        message=\"Ви впевнені, що бажаєте видалити даного клієнта\"\n        handleClose={() => meta.onModalCancel()}\n        handleConfirm={() => meta.onModalConfirm()}\n      /> */}\n    </main>\n  );\n};\n\nexport default ClientsDashboard;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { UserTypes } from '../../../../../../../../../../../../types';\nimport { State } from '../../../../../../../../../../../../store/types';\nimport { fetchClients } from '../../../../../../../../../../../../store/clients/actions';\n\nexport const useClientsDashboard = () => {\n  const { id } = useParams<{ id: string }>();\n  const dispatch = useDispatch();\n\n  const { clients, isLoading } = useSelector((state: State) => state.clients);\n\n  // !can use remove client here in future\n\n  // const [showModal, setShowModal] = useState<boolean>(false);\n  // const [personNeedToRemove, setPersonNeedToRemove] = useState<any>();\n\n  // const clientRemove = useCallback((personId: string) => {\n  //   (async () => {\n  //     if (token) {\n  //       const { success, message, data } = await reqClientName(token, id, personId, 'DELETE');\n\n  //       if (success) {\n  //         dispatch(setClients(data));\n  //         dispatch(\n  //           setModalInfo({\n  //             open: true,\n  //             success,\n  //             message,\n  //           })\n  //         );\n  //       }\n  //     }\n  //   })();\n  // }, [token, personNeedToRemove]);\n\n  // const onModalShow = useCallback((personId: string) => {\n  //   setShowModal(true);\n  //   setPersonNeedToRemove(personId);\n  // }, []);\n\n  // const onModalConfirm = useCallback(() => {\n  //   setShowModal(false);\n  //   clientRemove(personNeedToRemove);\n  // }, [personNeedToRemove]);\n\n  // const onModalCancel = useCallback(() => {\n  //   setShowModal(false);\n  //   setPersonNeedToRemove(undefined);\n  // }, []);\n\n  useEffect(() => {\n    dispatch(fetchClients(id, UserTypes.GENERATOR));\n  }, [id]);\n\n  return {\n    id,\n    isLoading,\n    clients,\n    // showModal,\n    // onModalCancel,\n    // onModalConfirm,\n    // onModalShow,\n  };\n};\n","import { DEFAULT_URL } from '../../../Constants';\nimport requestApi from '../../../utils/requestApi';\n\nexport default async function reqGeneratorCityCreate(\n  token: string,\n  method: 'GET' | 'POST' | undefined = 'GET',\n  bodyData?: any\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/city/create`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from '../../../Constants';\nimport requestApi from '../../../utils/requestApi';\n\nexport default async function getGeneratorDistricts(\n  token: string,\n  id: string,\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/region/district/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'GET',\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport reqGeneratorCityCreate from '../../../../../../../../../../../../../../../../services/generator/Client/AddNewCityModal/reqGeneratorCityCreate';\nimport { State } from '../../../../../../../../../../../../../../../../store/types';\nimport getGeneratorDistricts from '../../../../../../../../../../../../../../../../services/generator/Client/AddNewCityModal/getGeneratorDistricts';\nimport { setModalInfo } from '../../../../../../../../../../../../../../../../store/main/actions';\n\nexport type Props = {\n  open: boolean;\n  onClose: (value: boolean) => void;\n};\n\nexport const useAddCityModal = ({ onClose }: Props) => {\n  const dispatch = useDispatch();\n  const { personId } = useParams<{personId: string}>();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  const [region, setRegion] = useState([]);\n  const [cityTypes, setCityTypes] = useState([]);\n  const [districts, setDistricts] = useState([]);\n  const [allData, setAllData] = useState({\n    region_id: '',\n    district_id: '',\n    city_type_id: '',\n    title: '',\n  });\n\n  const handleClose = useCallback(() => {\n    onClose(false);\n  }, []);\n\n  const onClear = useCallback(() => {\n    setAllData({\n      region_id: '',\n      district_id: '',\n      city_type_id: '',\n      title: '',\n    });\n  }, []);\n\n  const onSave = useCallback(async () => {\n    if (token && personId) {\n      const res = await reqGeneratorCityCreate(token, 'POST', allData);\n\n      if (res.success) {\n        handleClose();\n      }\n\n      dispatch(\n        setModalInfo({\n          open: true,\n          success: res?.success,\n          message: res?.message,\n        })\n      );\n    }\n  }, [allData, token, personId]);\n\n  useEffect(() => {\n    if (token && allData.region_id) {\n      (async () => {\n        const res = await getGeneratorDistricts(token, allData.region_id);\n\n        if (res?.success) {\n          setDistricts(res.data.district);\n        }\n      })();\n    }\n  }, [allData.region_id]);\n\n  useEffect(() => {\n    if (token && personId) {\n      (async () => {\n        const res = await reqGeneratorCityCreate(token);\n\n        if (res?.success) {\n          setRegion(res.data.regions);\n          setCityTypes(res.data.city_type);\n        }\n      })();\n    }\n  }, [token, personId]);\n\n  return {\n    region,\n    cityTypes,\n    districts,\n    allData,\n    setAllData,\n    onClear,\n    onSave,\n    handleClose,\n  };\n};\n","import React from 'react';\nimport './index.scss';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport SectionWithTitle from '../../../../../../../../../../../../../../../../components/SectionWithTitle';\nimport CustomSelect from '../../../../../../../../../../../../../../../../components/CustomSelect';\nimport CustomInput from '../../../../../../../../../../../../../../../../components/CustomInput';\nimport PrimaryButton from '../../../../../../../../../../../../../../../../components/PrimaryButton';\nimport { useAddCityModal, Props } from './useAddCityModal';\n\n// eslint-disable-next-line prettier/prettier\nconst AddCityModal = (props: Props) => {\n  const meta = useAddCityModal(props);\n\n  return (\n    <Modal\n      className=\"modal-container\"\n      open={props.open}\n      onClose={meta.handleClose}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}\n    >\n      <Fade in={props.open}>\n        <div className=\"add-city-modal\">\n          <SectionWithTitle title=\"Додати населений пункт\" onClear={meta.onClear}>\n            <div className=\"add-city-modal__grid\">\n              <CustomSelect\n                label=\"Область\"\n                data={meta.region}\n                onChange={(e) => meta.setAllData({ ...meta.allData, region_id: e })}\n                selectedValue={meta.allData.region_id}\n              />\n              <CustomSelect\n                label=\"Район\"\n                data={meta.districts}\n                onChange={(e) => meta.setAllData({ ...meta.allData, district_id: e })}\n                selectedValue={meta.allData.district_id}\n              />\n              <CustomSelect\n                label=\"Тип населеного пункту\"\n                data={meta.cityTypes}\n                onChange={(e) => meta.setAllData({ ...meta.allData, city_type_id: e })}\n                selectedValue={meta.allData.city_type_id}\n              />\n              <CustomInput\n                label=\"Назва у НВ\"\n                onChange={(e) => meta.setAllData({ ...meta.allData, title: e })}\n                value={meta.allData.title}\n              />\n            </div>\n          </SectionWithTitle>\n\n          <div className=\"middle-button\">\n            <PrimaryButton label=\"Зберегти\" onClick={meta.onSave} disabled={false} />\n          </div>\n        </div>\n      </Fade>\n    </Modal>\n  );\n};\n\nexport default AddCityModal;\n","import * as React from 'react';\nimport AddFormButton from '../../../../../../../../../../../../../../../../components/AddFormButton';\nimport CustomInput from '../../../../../../../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../../../../../../../components/CustomSelect';\nimport { SelectItem } from '../../../../../../../../../../../../../../../../types';\n\ntype Props = {\n  regions: SelectItem[],\n  cities: SelectItem[],\n  districts: SelectItem[],\n  addressType: SelectItem[],\n  apartmentType: SelectItem[],\n  buildingType: SelectItem[],\n  buildingPartType: SelectItem[],\n  data: any,\n  onRegionChange: (value: string) => void,\n  onDistrictChange: (value: string) => void,\n  setData: (data: any) => void,\n  setShowModal: (val: boolean) => void,\n  actual?: boolean,\n}\n\nconst Fields = ({\n  regions,\n  cities,\n  districts,\n  addressType,\n  buildingType,\n  buildingPartType,\n  apartmentType,\n  data,\n  actual,\n  onRegionChange,\n  onDistrictChange,\n  setData,\n  setShowModal\n}: Props) => (\n  <div className=\"address__container\">\n    <div className=\"clients__address-container\">\n      <CustomSelect\n        disableDefaultValue\n        label=\"Область\"\n        data={regions}\n        onChange={(e) => onRegionChange(e)}\n        selectedValue={actual ? data.actual_region_id : data.region_id}\n      />\n    </div>\n\n    <div className=\"clients__address-container\">\n      <CustomSelect\n        label=\"Район\"\n        data={districts}\n        onChange={(e) => onDistrictChange(e)}\n        selectedValue={actual ? data.actual_district_id : data.district_id}\n      />\n    </div>\n\n    <div className=\"clients__address-container df\">\n      <CustomSelect\n        label=\"Населений пункт\"\n        data={cities}\n        onChange={(e) => setData({ ...data, [`${actual ? 'actual_city_id' : 'city_id'}`]: e })}\n        selectedValue={actual ? data.actual_city_id : data.city_id}\n      />\n      <div className=\"add-button\">\n        <AddFormButton onClick={() => setShowModal(true)} />\n      </div>\n    </div>\n\n    <div className=\"clients__address-container df duet\">\n      <div className=\"short-width\">\n        <CustomSelect\n          label=\"Тип вулиці\"\n          data={addressType}\n          onChange={(e) => setData({ ...data, [`${actual ? 'actual_address_type_id' : 'address_type_id'}`]: e })}\n          selectedValue={actual ? data.actual_address_type_id : data.address_type_id}\n        />\n      </div>\n      <div className=\"long-width\">\n        <CustomInput\n          label=\"Назва вулиці\"\n          onChange={(e) => setData({ ...data, [`${actual ? 'actual_address' : 'address'}`]: e })}\n          value={actual ? data.actual_address : data.address}\n        />\n      </div>\n    </div>\n\n    <div className=\"clients__address-container df duet\">\n      <div className=\"long-width\">\n        <CustomSelect\n          label=\"Тип будинку\"\n          data={buildingType}\n          onChange={(e) => setData({ ...data, [`${actual ? 'actual_building_type_id' : 'building_type_id'}`]: e })}\n          selectedValue={actual ? data.actual_building_type_id : data.building_type_id}\n        />\n      </div>\n      <div className=\"short-width\">\n        <CustomInput\n          label=\"Номер будинку\"\n          onChange={(e) => setData({ ...data, [`${actual ? 'actual_building_num' : 'building_num'}`]: e })}\n          value={actual ? data.actual_building_num : data.building_num}\n        />\n      </div>\n    </div>\n\n    <div className=\"clients__address-container df duet\">\n      <div className=\"long-width\">\n        <CustomSelect\n          label=\"Частина будівлі\"\n          data={buildingPartType}\n          onChange={(e) => setData({ ...data, [`${actual ? 'actual_building_part_id' : 'building_part_id'}`]: e })}\n          selectedValue={actual ? data.actual_building_part_id : data.building_part_id}\n        />\n      </div>\n      <div className=\"short-width\">\n        <CustomInput\n          label=\"Номер\"\n          onChange={(e) => setData({ ...data, [`${actual ? 'actual_building_part_num' : 'building_part_num'}`]: e })}\n          value={actual ? data.actual_building_part_num : data.building_part_num}\n        />\n      </div>\n    </div>\n\n    <div className=\"clients__address-container df duet\">\n      <div className=\"long-width\">\n        <CustomSelect\n          label=\"Тип приміщення\"\n          data={apartmentType}\n          onChange={(e) => setData({ ...data, [`${actual ? 'actual_apartment_type_id' : 'apartment_type_id'}`]: e })}\n          selectedValue={actual ? data.actual_apartment_type_id : data.apartment_type_id}\n        />\n      </div>\n      <div className=\"short-width\">\n        <CustomInput\n          label=\"Номер приміщення\"\n          onChange={(e) => setData({ ...data, [`${actual ? 'actual_apartment_num' : 'apartment_num'}`]: e })}\n          value={actual ? data.actual_apartment_num : data.apartment_num}\n        />\n      </div>\n    </div>\n  </div>\n);\n\nexport default Fields;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqClientAddress(\n  token: string,\n  id: string,\n  method: 'GET' | 'PUT' | undefined = 'GET',\n  bodyData?: any\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/client/address/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqClientCities(\n  token: string,\n  regionId: string | null,\n  districtId: string | null,\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/client/cities/${regionId}${districtId ? `/${districtId}` : ''}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqClientDistricts(\n  token: string,\n  id: string,\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/client/districts/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useCallback, useState, useEffect } from 'react';\nimport { SelectItem } from '../../../../../../../../../../../../../../types';\nimport { State } from '../../../../../../../../../../../../../../store/types';\nimport { setModalInfo } from '../../../../../../../../../../../../../../store/main/actions';\nimport reqClientAddress from '../../../../../../../../../../../../../../services/generator/Client/reqClientAddress';\nimport reqClientCities from '../../../../../../../../../../../../../../services/generator/Client/reqClientCities';\nimport reqClientDistricts from '../../../../../../../../../../../../../../services/generator/Client/reqClientDistricts';\n\ntype ActualInitialData = {\n  actual_region_id: string | null,\n  actual_city_id: string | null,\n  actual_address_type_id: string | null,\n  actual_address: string | null,\n  actual_building_type_id: string | null,\n  actual_building_num: string | null,\n  actual_building_part_id: string | null,\n  actual_building_part_num: string | null,\n  actual_apartment_type_id: string | null,\n  actual_apartment_num: string | null,\n  actual_district_id: string | null,\n}\n\ntype Data = {\n  region_id: string | null,\n  city_id: string | null,\n  address_type_id: string | null,\n  address: string | null,\n  building_type_id: string | null,\n  building_num: string | null,\n  building_part_id: string | null,\n  building_part_num: string | null,\n  apartment_type_id: string | null,\n  apartment_num: string | null,\n  district_id: string | null,\n}\ninterface InitialData extends ActualInitialData, Data {\n  registration: boolean,\n  actual: boolean,\n  regions?: SelectItem[],\n  address_type?: SelectItem[],\n  building_type?: SelectItem[],\n  apartment_type?: SelectItem[],\n  building_part?: SelectItem[],\n}\n\nexport type Props = {\n  id: string;\n  initialData?: InitialData;\n}\n\nexport const useAddress = ({ initialData, id }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  const [showModal, setShowModal] = useState<boolean>(false);\n\n  const [regions, setRegions] = useState<SelectItem[]>([]);\n  const [actualRegions, setActualRegions] = useState<SelectItem[]>([]);\n  const [cities, setCities] = useState<SelectItem[]>([]);\n  const [actualCities, setActualCities] = useState<SelectItem[]>([]);\n  const [districts, setDistricts] = useState<SelectItem[]>([]);\n  const [actualDistricts, setActualDistricts] = useState<SelectItem[]>([]);\n  const [addressType, setAddressType] = useState<SelectItem[]>([]);\n  const [buildingType, setBuildingType] = useState<SelectItem[]>([]);\n  const [buildingPartType, setBuildingPartType] = useState<SelectItem[]>([]);\n  const [apartmentType, setApartmentType] = useState<SelectItem[]>([]);\n  const [registration, setRegistration] = useState<boolean>(false);\n  const [actual, setActual] = useState<boolean>(false);\n  const [data, setData] = useState<Data>({\n    region_id: null,\n    city_id: null,\n    address_type_id: null,\n    address: null,\n    building_type_id: null,\n    building_num: null,\n    building_part_id: null,\n    building_part_num: null,\n    apartment_type_id: null,\n    apartment_num: null,\n    district_id: null,\n  });\n  const [actualData, setActualData] = useState<ActualInitialData>({\n    actual_region_id: null,\n    actual_city_id: null,\n    actual_address_type_id: null,\n    actual_address: null,\n    actual_building_type_id: null,\n    actual_building_num: null,\n    actual_building_part_id: null,\n    actual_building_part_num: null,\n    actual_apartment_type_id: null,\n    actual_apartment_num: null,\n    actual_district_id: null,\n  });\n\n  const onClear = useCallback(() => {\n    setData({\n      region_id: null,\n      city_id: null,\n      address_type_id: null,\n      address: null,\n      building_type_id: null,\n      building_num: null,\n      building_part_id: null,\n      building_part_num: null,\n      apartment_type_id: null,\n      apartment_num: null,\n      district_id: null,\n    });\n\n    setActualData({\n      actual_region_id: null,\n      actual_city_id: null,\n      actual_address_type_id: null,\n      actual_address: null,\n      actual_building_type_id: null,\n      actual_building_num: null,\n      actual_building_part_id: null,\n      actual_building_part_num: null,\n      actual_apartment_type_id: null,\n      actual_apartment_num: null,\n      actual_district_id: null,\n    });\n  }, []);\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const bodyData = {\n        ...data,\n        ...actualData,\n        actual,\n        registration,\n      };\n\n      const { success, message } = await reqClientAddress(token, id, 'PUT', bodyData);\n      dispatch(\n        setModalInfo({\n          open: true,\n          success,\n          message,\n        })\n      );\n    }\n  }, [data, actualData, actual, registration, token]);\n\n  const onRegionChange = useCallback((value) => {\n    setData({ ...data, region_id: value, district_id: null, city_id: null });\n  }, [data]);\n\n  const onActualRegionChange = useCallback((value) => {\n    setActualData({\n      ...actualData,\n      actual_region_id: value,\n      actual_district_id: null,\n      actual_city_id: null,\n    });\n  }, [actualData]);\n\n  const onDistrictChange = useCallback((value) => {\n    setData({ ...data, district_id: value, city_id: null });\n  }, [data]);\n\n  const onActualDistrictChange = useCallback((value) => {\n    setActualData({ ...actualData, actual_district_id: value, actual_city_id: null });\n  }, [actualData]);\n\n  useEffect(() => {\n    setRegions(initialData?.regions || []);\n    setActualRegions(initialData?.regions || []);\n    setAddressType(initialData?.address_type || []);\n    setBuildingType(initialData?.building_type || []);\n    setBuildingPartType(initialData?.building_part || []);\n    setApartmentType(initialData?.apartment_type || []);\n    setRegistration(initialData?.registration || false);\n    setActual(initialData?.actual || false);\n    setData({\n      region_id: initialData?.region_id || null,\n      city_id: initialData?.city_id || null,\n      address_type_id: initialData?.address_type_id || null,\n      address: initialData?.address || null,\n      building_type_id: initialData?.building_type_id || null,\n      building_num: initialData?.building_num || null,\n      building_part_id: initialData?.building_part_id || null,\n      building_part_num: initialData?.building_part_num || null,\n      apartment_type_id: initialData?.apartment_type_id || null,\n      apartment_num: initialData?.apartment_num || null,\n      district_id: initialData?.district_id || null,\n    });\n    setActualData({\n      actual_region_id: initialData?.actual_region_id || null,\n      actual_city_id: initialData?.actual_city_id || null,\n      actual_address_type_id: initialData?.actual_address_type_id || null,\n      actual_address: initialData?.actual_address || null,\n      actual_building_type_id: initialData?.actual_building_type_id || null,\n      actual_building_num: initialData?.actual_building_num || null,\n      actual_building_part_id: initialData?.actual_building_part_id || null,\n      actual_building_part_num: initialData?.actual_building_part_num || null,\n      actual_apartment_type_id: initialData?.actual_apartment_type_id || null,\n      actual_apartment_num: initialData?.actual_apartment_num || null,\n      actual_district_id: initialData?.actual_district_id || null,\n    });\n  }, [initialData]);\n\n  // Change district and city when changed region\n  useEffect(() => {\n    if (showModal) return;\n    // get DISTRICTS\n    (async () => {\n      if (token && data.region_id) {\n        const res = await reqClientDistricts(token, data.region_id);\n\n        if (res.success) {\n          setDistricts(res.data);\n        }\n      }\n    })();\n\n    // get CITIES\n    (async () => {\n      if (token && data.region_id) {\n        const res = await reqClientCities(token, data.region_id, data.district_id);\n\n        if (res.success) {\n          setCities(res.data);\n        }\n      }\n    })();\n  }, [token, data.region_id, data.district_id, showModal]);\n\n  // Change actual district and city when changed actual region\n  useEffect(() => {\n    if (showModal) return;\n\n    // get DISTRICTS\n    (async () => {\n      if (token && actualData.actual_region_id) {\n        const res = await reqClientDistricts(token, actualData.actual_region_id);\n\n        if (res.success) {\n          setActualDistricts(res.data);\n        }\n      }\n    })();\n\n    // get CITIES\n    (async () => {\n      if (token && actualData.actual_region_id) {\n        const res = await reqClientCities(\n          token, actualData.actual_region_id, actualData.actual_district_id\n        );\n\n        if (res.success) {\n          setActualCities(res.data);\n        }\n      }\n    })();\n  }, [token, actualData.actual_region_id, actualData.actual_district_id, showModal]);\n\n  return {\n    regions,\n    actualRegions,\n    cities,\n    actualCities,\n    districts,\n    actualDistricts,\n    addressType,\n    buildingType,\n    buildingPartType,\n    apartmentType,\n    data,\n    actualData,\n    showModal,\n    registration,\n    actual,\n    setShowModal,\n    setData,\n    setActualData,\n    onRegionChange,\n    onActualRegionChange,\n    onDistrictChange,\n    onActualDistrictChange,\n    onClear,\n    onSave,\n    setRegistration,\n    setActual,\n  };\n};\n","import React from 'react';\nimport CustomSwitch from '../../../../../../../../../../../../../../components/CustomSwitch';\nimport PrimaryButton from '../../../../../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../../../../../components/SectionWithTitle';\nimport AddCityModal from './components/AddCityModal';\nimport Fields from './components/Fields';\nimport { useAddress, Props } from './useAddress';\n\nconst Address = (props: Props) => {\n  const meta = useAddress(props);\n\n  return (\n    <div className=\"clients__address\">\n      <SectionWithTitle title=\"Адреса\" onClear={meta.onClear}>\n        <div className=\"grid-center-duet mb20\">\n          <div className=\"clients__address-container\">\n            <CustomSwitch\n              label=\"Зареєстрований\"\n              onChange={(e) => meta.setRegistration(e)}\n              selected={meta.registration}\n            />\n          </div>\n\n          <div className=\"clients__address-container\">\n            <CustomSwitch\n              label=\"Актуальне місце проживання\"\n              onChange={(e) => meta.setActual(e)}\n              selected={meta.actual}\n            />\n          </div>\n        </div>\n        <div className={`clients__address-fields ${meta.actual ? 'double' : ''}`}>\n          <Fields\n            regions={meta.regions}\n            cities={meta.cities}\n            districts={meta.districts}\n            addressType={meta.addressType}\n            buildingType={meta.buildingType}\n            buildingPartType={meta.buildingPartType}\n            apartmentType={meta.apartmentType}\n            data={meta.data}\n            onRegionChange={meta.onRegionChange}\n            onDistrictChange={meta.onDistrictChange}\n            setData={meta.setData}\n            setShowModal={meta.setShowModal}\n          />\n\n          {meta.actual && (\n            <Fields\n              actual\n              regions={meta.actualRegions}\n              cities={meta.actualCities}\n              districts={meta.actualDistricts}\n              addressType={meta.addressType}\n              buildingType={meta.buildingType}\n              buildingPartType={meta.buildingPartType}\n              apartmentType={meta.apartmentType}\n              data={meta.actualData}\n              onRegionChange={meta.onActualRegionChange}\n              onDistrictChange={meta.onActualDistrictChange}\n              setData={meta.setActualData}\n              setShowModal={meta.setShowModal}\n            />\n          )}\n        </div>\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={meta.onSave} disabled={false} />\n      </div>\n\n      <AddCityModal open={meta.showModal} onClose={meta.setShowModal} />\n    </div>\n  );\n};\n\nexport default Address;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqClientCitizenship(\n  token: string,\n  id: string,\n  method: 'GET' | 'PUT' | undefined = 'GET',\n  bodyData?: any\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/client/citizenships/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useCallback, useState, useEffect } from 'react';\nimport { State } from '../../../../../../../../../../../../../../store/types';\nimport { setModalInfo } from '../../../../../../../../../../../../../../store/main/actions';\nimport reqClientCitizenship from '../../../../../../../../../../../../../../services/generator/Client/reqClientCitizenship';\n\ntype Citizenships = {\n  id: number,\n  title: string,\n}\n\ntype InitialData = {\n  citizenships: Citizenships[],\n  citizenship_id: number,\n}\n\nexport type Props = {\n  id: string;\n  initialData?: InitialData;\n}\n\nexport const useCitizenship = ({ initialData, id }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  const [data, setData] = useState<Citizenships[]>([]);\n  const [selected, setSelected] = useState<number | string | null>();\n\n  useEffect(() => {\n    setData(initialData?.citizenships || []);\n    setSelected(initialData?.citizenship_id);\n  }, [initialData]);\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const { success, message } = await reqClientCitizenship(token, id, 'PUT', { citizenship_id: selected });\n      dispatch(\n        setModalInfo({\n          open: true,\n          success,\n          message,\n        })\n      );\n    }\n  }, [selected, token]);\n\n  return {\n    data,\n    selected,\n    setSelected,\n    onSave,\n  };\n};\n","import * as React from 'react';\nimport CustomSelect from '../../../../../../../../../../../../../../components/CustomSelect';\nimport PrimaryButton from '../../../../../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../../../../../components/SectionWithTitle';\nimport { useCitizenship, Props } from './useCitizenship';\n\nconst Citizenship = (props: Props) => {\n  const { data, selected, setSelected, onSave } = useCitizenship(props);\n\n  return (\n    <div className=\"clients__citizenship\">\n      <SectionWithTitle title=\"Громадянство\">\n        <div className=\"middle-column-fields\">\n          <div className=\"input-container\">\n            <CustomSelect\n              data={data}\n              label=\"Громадянство\"\n              onChange={setSelected}\n              selectedValue={selected}\n            />\n          </div>\n        </div>\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={onSave} disabled={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default Citizenship;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqClientContacts(\n  token: string,\n  id: string,\n  method: 'GET' | 'PUT' | undefined = 'GET',\n  bodyData?: any\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/client/contacts/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useCallback, useState, useEffect } from 'react';\nimport { State } from '../../../../../../../../../../../../../../store/types';\nimport { setModalInfo } from '../../../../../../../../../../../../../../store/main/actions';\nimport reqClientContacts from '../../../../../../../../../../../../../../services/generator/Client/reqClientContacts';\n\ntype InitialData = {\n  email: string | null,\n  phone: string | null,\n}\n\nexport type Props = {\n  id: string;\n  initialData?: InitialData,\n}\n\nexport const useContracts = ({ initialData, id }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  const [data, setData] = useState<InitialData>({\n    email: '',\n    phone: '',\n  });\n\n  useEffect(() => {\n    setData({\n      email: initialData?.email || '',\n      phone: initialData?.phone || '',\n    });\n  }, [initialData]);\n\n  const onClear = useCallback(() => {\n    setData({\n      email: '',\n      phone: '',\n    });\n  }, []);\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const { success, message } = await reqClientContacts(token, id, 'PUT', data);\n      dispatch(\n        setModalInfo({\n          open: true,\n          success,\n          message,\n        })\n      );\n    }\n  }, [data, token]);\n\n  return {\n    data,\n    setData,\n    onClear,\n    onSave,\n  };\n};\n","import * as React from 'react';\nimport CustomInput from '../../../../../../../../../../../../../../components/CustomInput';\nimport PhoneMaskInput from '../../../../../../../../../../../../../../components/PhoneMaskInput';\nimport PrimaryButton from '../../../../../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../../../../../components/SectionWithTitle';\nimport { useContracts, Props } from './useContracts';\n\nconst Contacts = (props: Props) => {\n  const { data, setData, onClear, onSave } = useContracts(props);\n\n  return (\n    <div className=\"clients__contacts\">\n      <SectionWithTitle title=\"Контактна інформація\" onClear={onClear}>\n        <div className=\"middle-column-fields\">\n          <div className=\"input-container\">\n            <PhoneMaskInput\n              label=\"Номер телефону\"\n              onChange={(e) => setData({ ...data, phone: e })}\n              value={data.phone}\n            />\n          </div>\n\n          <div className=\"input-container\">\n            <CustomInput\n              label=\"Email\"\n              onChange={(e) => setData({ ...data, email: e })}\n              value={data.email}\n            />\n          </div>\n        </div>\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={onSave} disabled={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default Contacts;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqClientName(\n  token: string,\n  cardId: string,\n  clientId: string,\n  method: 'GET' | 'PUT' | undefined = 'GET',\n  bodyData?: any\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/client/name/${clientId}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useCallback, useState, useEffect } from 'react';\nimport { State } from '../../../../../../../../../../../../../../store/types';\nimport reqClientName from '../../../../../../../../../../../../../../services/generator/Client/reqClientName';\nimport { setModalInfo } from '../../../../../../../../../../../../../../store/main/actions';\n\ntype InitialData = {\n  surname_n: string;\n  name_n: string;\n  patronymic_n: string;\n  surname_r: string;\n  name_r: string;\n  patronymic_r: string;\n  surname_o: string;\n  name_o: string;\n  patronymic_o: string;\n  surname_d: string;\n  name_d: string;\n  patronymic_d: string;\n}\n\nexport type Props = {\n  id: string;\n  initialData?: InitialData;\n}\n\nexport const useFio = ({ initialData, id }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  const [data, setData] = useState<InitialData>({\n    surname_n: '',\n    name_n: '',\n    patronymic_n: '',\n    surname_r: '',\n    name_r: '',\n    patronymic_r: '',\n    surname_o: '',\n    name_o: '',\n    patronymic_o: '',\n    surname_d: '',\n    name_d: '',\n    patronymic_d: '',\n  });\n\n  useEffect(() => {\n    setData({\n      surname_n: initialData?.surname_n || '',\n      name_n: initialData?.name_n || '',\n      patronymic_n: initialData?.patronymic_n || '',\n      surname_r: initialData?.surname_r || '',\n      name_r: initialData?.name_r || '',\n      patronymic_r: initialData?.patronymic_r || '',\n      surname_o: initialData?.surname_o || '',\n      name_o: initialData?.name_o || '',\n      patronymic_o: initialData?.patronymic_o || '',\n      surname_d: initialData?.surname_d || '',\n      name_d: initialData?.name_d || '',\n      patronymic_d: initialData?.patronymic_d || '',\n    });\n  }, [initialData]);\n\n  const onClear = useCallback(() => {\n    setData({\n      surname_n: '',\n      name_n: '',\n      patronymic_n: '',\n      surname_r: '',\n      name_r: '',\n      patronymic_r: '',\n      surname_o: '',\n      name_o: '',\n      patronymic_o: '',\n      surname_d: '',\n      name_d: '',\n      patronymic_d: '',\n    });\n  }, []);\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const { success, message } = await reqClientName(token, '', id, 'PUT', data);\n      dispatch(\n        setModalInfo({\n          open: true,\n          success,\n          message,\n        })\n      );\n    }\n  }, [data, token]);\n\n  return {\n    data,\n    setData,\n    onClear,\n    onSave,\n  };\n};\n","import * as React from 'react';\nimport CustomInput from '../../../../../../../../../../../../../../components/CustomInput';\nimport PrimaryButton from '../../../../../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../../../../../components/SectionWithTitle';\nimport { useFio, Props } from './useFio';\n\nconst Fio = (props: Props) => {\n  const { data, setData, onClear, onSave } = useFio(props);\n  return (\n    <div className=\"clients__fio\">\n      <div className=\"clients__fio-header\">\n        <span className=\"section-title\">ПІБ</span>\n        <button type=\"button\" className=\"clear-button\">\n          <img\n            src=\"/images/clear-form.svg\"\n            alt=\"close\"\n            className=\"clear-icon\"\n            onClick={onClear}\n          />\n        </button>\n      </div>\n\n      <SectionWithTitle title=\"Називний відмінок: Хто? Що?\">\n        <div className=\"grid\">\n          <CustomInput\n            label=\"Прізвище\"\n            onChange={(e) => setData({ ...data, surname_n: e })}\n            value={data.surname_n}\n          />\n\n          <CustomInput\n            label=\"Ім'я\"\n            onChange={(e) => setData({ ...data, name_n: e })}\n            value={data.name_n}\n          />\n\n          <CustomInput\n            label=\"По батькові\"\n            onChange={(e) => setData({ ...data, patronymic_n: e })}\n            value={data.patronymic_n}\n          />\n        </div>\n      </SectionWithTitle>\n\n      <SectionWithTitle title=\"Родовий відмінок: Кого? Чого?\">\n        <div className=\"grid\">\n          <CustomInput\n            label=\"Прізвище\"\n            onChange={(e) => setData({ ...data, surname_r: e })}\n            value={data.surname_r}\n          />\n\n          <CustomInput\n            label=\"Ім'я\"\n            onChange={(e) => setData({ ...data, name_r: e })}\n            value={data.name_r}\n          />\n\n          <CustomInput\n            label=\"По батькові\"\n            onChange={(e) => setData({ ...data, patronymic_r: e })}\n            value={data.patronymic_r}\n          />\n        </div>\n      </SectionWithTitle>\n\n      <SectionWithTitle title=\"Орудний відмінок: Ким? Чим?\">\n        <div className=\"grid\">\n          <CustomInput\n            label=\"Прізвище\"\n            onChange={(e) => setData({ ...data, surname_o: e })}\n            value={data.surname_o}\n          />\n\n          <CustomInput\n            label=\"Ім'я\"\n            onChange={(e) => setData({ ...data, name_o: e })}\n            value={data.name_o}\n          />\n\n          <CustomInput\n            label=\"По батькові\"\n            onChange={(e) => setData({ ...data, patronymic_o: e })}\n            value={data.patronymic_o}\n          />\n        </div>\n      </SectionWithTitle>\n\n      <SectionWithTitle title=\"Давальний відмінок Кому? Чому?\">\n        <div className=\"grid\">\n          <CustomInput\n            label=\"Прізвище\"\n            onChange={(e) => setData({ ...data, surname_d: e })}\n            value={data.surname_d}\n          />\n\n          <CustomInput\n            label=\"Ім'я\"\n            onChange={(e) => setData({ ...data, name_d: e })}\n            value={data.name_d}\n          />\n\n          <CustomInput\n            label=\"По батькові\"\n            onChange={(e) => setData({ ...data, patronymic_d: e })}\n            value={data.patronymic_d}\n          />\n        </div>\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={onSave} disabled={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default Fio;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqClientPassport(\n  token: string,\n  id: string,\n  method: 'GET' | 'PUT' | undefined = 'GET',\n  bodyData?: any\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/client/passport/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useCallback, useState, useEffect, useMemo } from 'react';\nimport { SelectItem } from '../../../../../../../../../../../../../../types';\nimport { State } from '../../../../../../../../../../../../../../store/types';\nimport { setModalInfo } from '../../../../../../../../../../../../../../store/main/actions';\nimport reqClientPassport from '../../../../../../../../../../../../../../services/generator/Client/reqClientPassport';\nimport { formatDate, changeMonthWitDate } from '../../../../../../../../../../../../../../utils/formatDates';\n\ntype InitialData = {\n  gender: string,\n  date_of_birth: any,\n  tax_code: string,\n  passport_type_id: string,\n  passport_code: string,\n  passport_date: any\n  passport_department: string,\n  passport_demographic_code: string,\n  passport_finale_date: any,\n  passport_types?: SelectItem[],\n}\n\nexport type Props = {\n  id: string;\n  initialData?: InitialData;\n}\n\nexport const usePassport = ({ initialData, id }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  const [passportTypes, setPassportTypes] = useState<SelectItem[]>([]);\n  const [data, setData] = useState<InitialData>({\n    gender: 'female',\n    tax_code: '',\n    passport_type_id: '',\n    passport_code: '',\n    passport_department: '',\n    passport_demographic_code: '',\n    passport_date: null,\n    passport_finale_date: null,\n    date_of_birth: null,\n  });\n\n  const sexButtons = useMemo(() => [\n    {\n      id: 'female',\n      title: 'Жіноча',\n    },\n    {\n      id: 'male',\n      title: 'Чоловіча'\n    }\n  ], []);\n\n  const onClear = useCallback(() => {\n    setData({\n      gender: 'female',\n      tax_code: '',\n      passport_type_id: '',\n      passport_code: '',\n      passport_department: '',\n      passport_demographic_code: '',\n      passport_date: null,\n      passport_finale_date: null,\n      date_of_birth: null,\n\n    });\n  }, []);\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const reqData = {\n        ...data,\n        date_of_birth: formatDate(data.date_of_birth),\n        passport_date: formatDate(data.passport_date),\n        passport_finale_date: formatDate(data.passport_finale_date),\n      };\n\n      const { success, message } = await reqClientPassport(token, id, 'PUT', reqData);\n      dispatch(\n        setModalInfo({\n          open: true,\n          success,\n          message,\n        })\n      );\n    }\n  }, [data, token]);\n\n  useEffect(() => {\n    setPassportTypes(initialData?.passport_types || []);\n    setData({\n      gender: initialData?.gender || 'female',\n      tax_code: initialData?.tax_code || '',\n      passport_type_id: initialData?.passport_type_id || '',\n      passport_code: initialData?.passport_code || '',\n      passport_department: initialData?.passport_department || '',\n      passport_demographic_code: initialData?.passport_demographic_code || '',\n      passport_finale_date: initialData?.passport_finale_date\n        ? changeMonthWitDate(initialData?.passport_finale_date) : null,\n      date_of_birth: initialData?.date_of_birth\n        ? changeMonthWitDate(initialData?.date_of_birth) : null,\n      passport_date: initialData?.passport_date\n        ? changeMonthWitDate(initialData?.passport_date) : null,\n    });\n  }, [initialData]);\n\n  return {\n    sexButtons,\n    passportTypes,\n    data,\n    setData,\n    onClear,\n    onSave,\n  };\n};\n","import * as React from 'react';\nimport CustomDatePicker from '../../../../../../../../../../../../../../components/CustomDatePicker';\nimport CustomInput from '../../../../../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../../../../../components/CustomSelect';\nimport PrimaryButton from '../../../../../../../../../../../../../../components/PrimaryButton';\nimport RadioButtonsGroup from '../../../../../../../../../../../../../../components/RadioButtonsGroup';\nimport SectionWithTitle from '../../../../../../../../../../../../../../components/SectionWithTitle';\nimport { usePassport, Props } from './usePassport';\n\nconst Passport = (props: Props) => {\n  const { sexButtons, passportTypes, data, setData, onClear, onSave } = usePassport(props);\n\n  return (\n    <div className=\"clients__passport\">\n      <SectionWithTitle title=\"Код та Паспортні данні\" onClear={onClear}>\n        <div className=\"grid mb20\">\n          <div className=\"sex\">\n            <p className=\"sex__title\">Стать</p>\n            <RadioButtonsGroup\n              buttons={sexButtons}\n              onChange={(e) => setData({ ...data, gender: e.toString() })}\n              selected={data.gender}\n              unicId=\"clients__passport-sex\"\n            />\n          </div>\n\n          <CustomDatePicker\n            label=\"Дата народження\"\n            onSelect={(e) => setData({ ...data, date_of_birth: e })}\n            selectedDate={data.date_of_birth}\n          />\n          <CustomInput\n            label=\"ІПН\"\n            onChange={(e) => setData({ ...data, tax_code: e })}\n            value={data.tax_code}\n          />\n          <CustomSelect\n            label=\"Тип паспорту\"\n            data={passportTypes}\n            onChange={(e) => setData({ ...data, passport_type_id: e })}\n            selectedValue={data.passport_type_id}\n          />\n          <CustomInput\n            label=\"Серія/Номер паспорту\"\n            onChange={(e) => setData({ ...data, passport_code: e })}\n            value={data.passport_code}\n          />\n          <CustomDatePicker\n            label=\"Дата видачі\"\n            onSelect={(e) => setData({ ...data, passport_date: e })}\n            selectedDate={data.passport_date}\n          />\n        </div>\n\n        <div className=\"mb20\">\n          <CustomInput\n            label=\"Орган що видав паспорт\"\n            onChange={(e) => setData({ ...data, passport_department: e })}\n            value={data.passport_department}\n          />\n        </div>\n\n        <div className=\"grid\">\n          <CustomInput\n            label=\"Запису в ЄДДР (для ID карток)\"\n            onChange={(e) => setData({ ...data, passport_demographic_code: e })}\n            value={data.passport_demographic_code}\n          />\n          <CustomDatePicker\n            label=\"Діє до\"\n            onSelect={(e) => setData({ ...data, passport_finale_date: e })}\n            selectedDate={data.passport_finale_date}\n          />\n        </div>\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={onSave} disabled={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default Passport;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqClientConsents(\n  token: string,\n  clientId: string,\n  personId: string,\n  method: 'GET' | 'PUT' | undefined = 'GET',\n  bodyData?: any\n) {\n  const url = method === 'GET' ? `/api/generator/client/consents/${clientId}/${personId}` : `/api/generator/client/consents/${personId}`;\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}${url}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useCallback, useState, useEffect } from 'react';\nimport { changeMonthWitDate, formatDate } from '../../../../../../../../../../../../../../utils/formatDates';\nimport { SelectItem } from '../../../../../../../../../../../../../../types';\nimport { State } from '../../../../../../../../../../../../../../store/types';\nimport { setModalInfo } from '../../../../../../../../../../../../../../store/main/actions';\nimport reqClientConsents from '../../../../../../../../../../../../../../services/generator/Client/reqClientConsents';\n\ntype InitialData = {\n  notary_id: string,\n  consent_template_id: string,\n  married_type_id: string,\n  mar_series: string,\n  mar_series_num: string,\n  mar_date: any,\n  mar_depart: string,\n  mar_reg_num: string,\n  sign_date: any,\n  reg_num: string,\n  duplicate: boolean,\n  duplicate_date: any,\n  widow: boolean,\n  widow_date: any,\n  consent_spouse_word_id: string,\n  notary?: SelectItem[],\n  consent_templates?: SelectItem[],\n  married_types?: SelectItem[],\n  consent_spouse_words?: SelectItem[],\n}\n\nexport type Props = {\n  clientId: string;\n  personId: string;\n  initialData?: InitialData;\n}\n\nexport const useStatement = ({ initialData, clientId, personId }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  const [rakulNotary, setRakulNotary] = useState<SelectItem[]>([]);\n  const [consentTemplates, setConsentTemplates] = useState<SelectItem[]>([]);\n  const [marriageTypes, setMarriageTypes] = useState<SelectItem[]>([]);\n  const [consentSpouseWords, setConsentSpouseWords] = useState<SelectItem[]>([]);\n  const [data, setData] = useState<InitialData>({\n    notary_id: '',\n    consent_template_id: '',\n    married_type_id: '',\n    mar_series: '',\n    mar_series_num: '',\n    mar_date: null,\n    mar_depart: '',\n    mar_reg_num: '',\n    sign_date: null,\n    reg_num: '',\n    consent_spouse_word_id: '',\n    duplicate: false,\n    duplicate_date: null,\n    widow: false,\n    widow_date: null,\n  });\n\n  useEffect(() => {\n    setRakulNotary(initialData?.notary || []);\n    setConsentTemplates(initialData?.consent_templates || []);\n    setMarriageTypes(initialData?.married_types || []);\n    setConsentSpouseWords(initialData?.consent_spouse_words || []);\n    setData({\n      notary_id: initialData?.notary_id || '',\n      consent_template_id: initialData?.consent_template_id || '',\n      married_type_id: initialData?.married_type_id || '',\n      mar_series: initialData?.mar_series || '',\n      mar_series_num: initialData?.mar_series_num || '',\n      mar_date: initialData?.mar_date ? changeMonthWitDate(initialData?.mar_date) : null,\n      mar_depart: initialData?.mar_depart || '',\n      mar_reg_num: initialData?.mar_reg_num || '',\n      sign_date: initialData?.sign_date\n        ? changeMonthWitDate(initialData?.sign_date) : null,\n      reg_num: initialData?.reg_num || '',\n      consent_spouse_word_id: initialData?.consent_spouse_word_id || '',\n      duplicate: initialData?.duplicate || false,\n      duplicate_date: initialData?.duplicate_date || null,\n      widow: initialData?.widow || false,\n      widow_date: initialData?.widow_date || null,\n    });\n  }, [initialData]);\n\n  const onClear = useCallback(() => {\n    setData({\n      notary_id: '',\n      consent_template_id: '',\n      married_type_id: '',\n      mar_series: '',\n      mar_series_num: '',\n      mar_date: null,\n      mar_depart: '',\n      mar_reg_num: '',\n      sign_date: null,\n      reg_num: '',\n      consent_spouse_word_id: '',\n      duplicate: false,\n      duplicate_date: null,\n      widow: false,\n      widow_date: null,\n    });\n  }, []);\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const reqData = {\n        ...data,\n        mar_date: formatDate(data.mar_date),\n        sign_date: formatDate(data.sign_date),\n        widow_date: data.widow ? formatDate(data.widow_date) : null,\n        duplicate_date: data.duplicate_date ? formatDate(data.duplicate_date) : null,\n      };\n\n      const { success, message } = await reqClientConsents(token, clientId, personId, 'PUT', reqData);\n      dispatch(\n        setModalInfo({\n          open: true,\n          success,\n          message,\n        })\n      );\n    }\n  }, [data, token]);\n\n  return {\n    data,\n    rakulNotary,\n    consentTemplates,\n    marriageTypes,\n    consentSpouseWords,\n    setData,\n    onClear,\n    onSave,\n  };\n};\n","import * as React from 'react';\nimport CustomDatePicker from '../../../../../../../../../../../../../../components/CustomDatePicker';\nimport CustomInput from '../../../../../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../../../../../components/CustomSelect';\nimport CustomSwitch from '../../../../../../../../../../../../../../components/CustomSwitch';\nimport PrimaryButton from '../../../../../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../../../../../components/SectionWithTitle';\nimport { useStatement, Props } from './useStatement';\n\nconst Statement = (props: Props) => {\n  const meta = useStatement(props);\n\n  return (\n    <div className=\"clients__statement\">\n      <SectionWithTitle title=\"Сімейний стан покупця\" onClear={meta.onClear}>\n        <div className=\"grid mb20\">\n          <CustomSelect\n            label=\"Нотаріус\"\n            data={meta.rakulNotary}\n            onChange={(e) => meta.setData({ ...meta.data, notary_id: e })}\n            selectedValue={meta.data.notary_id}\n          />\n          <CustomDatePicker\n            label=\"Дата посвідчення заяви\"\n            onSelect={(e) => meta.setData({ ...meta.data, sign_date: e })}\n            selectedDate={meta.data.sign_date}\n          />\n          <CustomInput\n            label=\"Реєстровий номер\"\n            onChange={(e) => meta.setData({ ...meta.data, reg_num: e })}\n            value={meta.data.reg_num}\n          />\n          <CustomSelect\n            label=\"Шаблон згоди\"\n            data={meta.consentTemplates}\n            onChange={(e) => meta.setData({ ...meta.data, consent_template_id: e })}\n            selectedValue={meta.data.consent_template_id}\n          />\n          <CustomSelect\n            label=\"Тип назви свідоцтва\"\n            data={meta.marriageTypes}\n            onChange={(e) => meta.setData({ ...meta.data, married_type_id: e })}\n            selectedValue={meta.data.married_type_id}\n          />\n          <CustomSelect\n            label=\"Пункт згоди у договорі\"\n            data={meta.consentSpouseWords}\n            onChange={(e) => meta.setData({ ...meta.data, consent_spouse_word_id: e })}\n            selectedValue={meta.data.consent_spouse_word_id}\n          />\n          <CustomInput\n            label=\"Серія свідоцтва\"\n            onChange={(e) => meta.setData({ ...meta.data, mar_series: e })}\n            value={meta.data.mar_series}\n          />\n          <CustomInput\n            label=\"Номер свідоцтва\"\n            onChange={(e) => meta.setData({ ...meta.data, mar_series_num: e })}\n            value={meta.data.mar_series_num}\n          />\n          <CustomDatePicker\n            label=\"Дата видачі\"\n            onSelect={(e) => meta.setData({ ...meta.data, mar_date: e })}\n            selectedDate={meta.data.mar_date}\n          />\n        </div>\n\n        <div className=\"mb20\">\n          <CustomInput\n            label=\"Орган, що видав в орудному відмінку. Ким? Чим?\"\n            onChange={(e) => meta.setData({ ...meta.data, mar_depart: e })}\n            value={meta.data.mar_depart}\n          />\n        </div>\n\n        <div className=\"grid mb20\">\n          <CustomInput\n            label=\"Номер актового запису\"\n            onChange={(e) => meta.setData({ ...meta.data, mar_reg_num: e })}\n            value={meta.data.mar_reg_num}\n          />\n          <CustomSwitch\n            label=\"Видано повторно\"\n            selected={meta.data.duplicate}\n            onChange={(e) => meta.setData({ ...meta.data, duplicate: e })}\n          />\n          <CustomDatePicker\n            label=\"Дата, коли видано повторно\"\n            onSelect={(e) => meta.setData({ ...meta.data, duplicate_date: e })}\n            selectedDate={meta.data.duplicate_date}\n            disabled={!meta.data.duplicate}\n          />\n        </div>\n\n        <div className=\"grid mb20\">\n          <CustomSwitch\n            label=\"Вдівство\"\n            selected={meta.data.widow}\n            onChange={(e) => meta.setData({ ...meta.data, widow: e })}\n          />\n\n          <CustomDatePicker\n            label=\"Вдівство від\"\n            onSelect={(e) => meta.setData({ ...meta.data, widow_date: e })}\n            selectedDate={meta.data.widow_date}\n            disabled={!meta.data.widow}\n          />\n        </div>\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={meta.onSave} disabled={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default Statement;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqClientRepresentative(\n  token: string,\n  clientId: string,\n  personId: string,\n  method: 'GET' | 'PUT' | undefined = 'GET',\n  bodyData?: any\n) {\n  try {\n    const url = method === 'GET'\n      ? `/api/generator/client/representative/${clientId}/${personId}`\n      : `/api/generator/client/representative/${personId}`;\n\n    const data = await requestApi({\n      url: `${DEFAULT_URL}${url}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useCallback, useState, useEffect } from 'react';\nimport { SelectItem } from '../../../../../../../../../../../../../../types';\nimport { State } from '../../../../../../../../../../../../../../store/types';\nimport { setModalInfo } from '../../../../../../../../../../../../../../store/main/actions';\nimport reqClientRepresentative from '../../../../../../../../../../../../../../services/generator/Client/reqClientRepresentative';\nimport { formatDate } from '../../../../../../../../../../../../../../utils/formatDates';\n\ntype InitialData = {\n  notary_id: string,\n  reg_num: string,\n  reg_date: any,\n  notary?: SelectItem[],\n  other_notary?: SelectItem[],\n}\n\nexport type Props = {\n  clientId: string;\n  personId: string;\n  initialData?: InitialData;\n}\n\nexport const usePowerOfAttorney = ({ initialData, clientId, personId }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  const [notary, setNotary] = useState<SelectItem[]>([]);\n  const [otherNotary, setOtherNotary] = useState<SelectItem[]>([]);\n  const [data, setData] = useState<InitialData>({\n    notary_id: '',\n    reg_num: '',\n    reg_date: null,\n  });\n\n  useEffect(() => {\n    setNotary(initialData?.notary || []);\n    setOtherNotary(initialData?.other_notary || []);\n    setData({\n      notary_id: initialData?.notary_id || '',\n      reg_num: initialData?.reg_num || '',\n      reg_date: initialData?.reg_date ? new Date(initialData?.reg_date) : null,\n    });\n  }, [initialData]);\n\n  const onClear = useCallback(() => {\n    setData({\n      notary_id: '',\n      reg_num: '',\n      reg_date: null,\n    });\n  }, []);\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const reqData = {\n        ...data,\n        reg_date: formatDate(data.reg_date),\n      };\n\n      const { success, message } = await reqClientRepresentative(token, clientId, personId, 'PUT', reqData);\n      dispatch(\n        setModalInfo({\n          open: true,\n          success,\n          message,\n        })\n      );\n    }\n  }, [data, token]);\n\n  return {\n    data,\n    notary,\n    otherNotary,\n    setData,\n    onClear,\n    onSave,\n  };\n};\n","import * as React from 'react';\nimport CustomDatePicker from '../../../../../../../../../../../../../../components/CustomDatePicker';\nimport CustomInput from '../../../../../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../../../../../components/CustomSelect';\nimport PrimaryButton from '../../../../../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../../../../../components/SectionWithTitle';\nimport { usePowerOfAttorney, Props } from './usePowerOfAttorney';\n\nconst PowerOfAttorney = (props: Props) => {\n  const meta = usePowerOfAttorney(props);\n\n  return (\n    <div className=\"clients__power-of-attorney\">\n      <SectionWithTitle title=\"Довіреність представника клієнта\" onClear={meta.onClear}>\n        <div className=\"grid\">\n          <CustomSelect\n            label=\"Нотаріус\"\n            data={meta.notary}\n            onChange={(e) => meta.setData({ ...meta.data, notary_id: e })}\n            selectedValue={meta.data.notary_id}\n          />\n          <CustomInput\n            label=\"Реєстровий номер\"\n            onChange={(e) => meta.setData({ ...meta.data, reg_num: e })}\n            value={meta.data.reg_num}\n          />\n          <CustomDatePicker\n            label=\"Дата видачі\"\n            onSelect={(e) => meta.setData({ ...meta.data, reg_date: e })}\n            selectedDate={meta.data.reg_date}\n          />\n        </div>\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={meta.onSave} disabled={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default PowerOfAttorney;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqTermination(\n  token: string,\n  cardId: string,\n  userId: string,\n  method: 'GET' | 'PUT' | undefined = 'GET',\n  bodyData?: any\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/client/termination/${cardId}/${userId}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SelectItem } from '../../../../../../../../../../../../../../types';\nimport { State } from '../../../../../../../../../../../../../../store/types';\nimport reqTermination from '../../../../../../../../../../../../../../services/generator/Client/reqTermination';\nimport { setModalInfo } from '../../../../../../../../../../../../../../store/main/actions';\nimport { changeMonthWitDate, formatDate } from '../../../../../../../../../../../../../../utils/formatDates';\n\ntype InitialData = {\n  spouse_word_id: string | null,\n  consent_template_id: string | null,\n  notary_id: string | null,\n  reg_date: any,\n  reg_number: string | null,\n  consent_templates?: SelectItem[],\n  spouse_words?: SelectItem[],\n  notary?: SelectItem[],\n}\n\nexport type Props = {\n  initialData: any;\n  clientId: string;\n  personId: string;\n}\n\nexport const useTermination = ({ initialData, clientId, personId }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  // pickers\n  const [consentTemplates, setConsentTemplates] = useState<SelectItem[]>([]);\n  const [spouseWords, setSpouseWords] = useState<SelectItem[]>([]);\n  const [notaries, setNotaries] = useState<SelectItem[]>([]);\n\n  const [data, setData] = useState<InitialData>({\n    spouse_word_id: null,\n    consent_template_id: null,\n    notary_id: null,\n    reg_date: null,\n    reg_number: null,\n  });\n\n  useEffect(() => {\n    setConsentTemplates(initialData?.consent_templates || []);\n    setSpouseWords(initialData?.spouse_words || []);\n    setNotaries(initialData?.notary || []);\n    setData({\n      spouse_word_id: initialData?.spouse_word_id || null,\n      consent_template_id: initialData?.consent_template_id || null,\n      notary_id: initialData?.notary_id || null,\n      reg_number: initialData?.reg_number || null,\n      reg_date: initialData?.reg_date ? changeMonthWitDate(initialData?.reg_date) : null,\n    });\n  }, [initialData]);\n\n  const onClear = useCallback(() => {\n    setData({\n      spouse_word_id: null,\n      consent_template_id: null,\n      notary_id: null,\n      reg_date: null,\n      reg_number: null,\n    });\n  }, []);\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const bodyData = {\n        ...data,\n        reg_date: formatDate(data.reg_date),\n      };\n\n      const { success, message } = await reqTermination(token, clientId, personId, 'PUT', bodyData);\n      dispatch(\n        setModalInfo({\n          open: true,\n          success,\n          message,\n        })\n      );\n    }\n  }, [data, token]);\n\n  return {\n    data,\n    consentTemplates,\n    spouseWords,\n    notaries,\n    setData,\n    onClear,\n    onSave,\n  };\n};\n","import * as React from 'react';\nimport CustomDatePicker from '../../../../../../../../../../../../../../components/CustomDatePicker';\nimport CustomInput from '../../../../../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../../../../../components/CustomSelect';\nimport PrimaryButton from '../../../../../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../../../../../components/SectionWithTitle';\nimport { useTermination, Props } from './useTermination';\n\nconst Termination = (props: Props) => {\n  const meta = useTermination(props);\n\n  return (\n    <div className=\"termination\">\n      <SectionWithTitle title=\"Заява-згода на розірвання ПД\" onClear={meta.onClear}>\n        <div className=\"grid\">\n          <CustomSelect\n            label=\"Нотаріус\"\n            data={meta.notaries}\n            onChange={(e) => meta.setData({ ...meta.data, notary_id: e })}\n            selectedValue={meta.data.notary_id}\n          />\n\n          <CustomDatePicker\n            label=\"Дата посвідчення\"\n            onSelect={(e) => meta.setData({ ...meta.data, reg_date: e })}\n            selectedDate={meta.data.reg_date}\n          />\n\n          <CustomInput\n            label=\"Реєстровий номер\"\n            onChange={(e) => meta.setData({ ...meta.data, reg_number: e })}\n            value={meta.data.reg_number}\n          />\n\n          <CustomSelect\n            label=\"Шаблон згоди\"\n            data={meta.consentTemplates}\n            onChange={(e) => meta.setData({ ...meta.data, consent_template_id: e })}\n            selectedValue={meta.data.consent_template_id}\n          />\n\n          <CustomSelect\n            label=\"Пункт згоди у договорі розірвання\"\n            data={meta.spouseWords}\n            onChange={(e) => meta.setData({ ...meta.data, spouse_word_id: e })}\n            selectedValue={meta.data.spouse_word_id}\n          />\n        </div>\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={meta.onSave} disabled={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default Termination;\n","import * as React from 'react';\nimport './index.scss';\nimport Address from './components/Address';\nimport Citizenship from './components/Citizenship';\nimport Contacts from './components/Contacts';\nimport Fio from './components/Fio';\nimport Passport from './components/Passport';\nimport Statement from './components/Statement';\nimport PowerOfAttorney from './components/PowerOfAttorney';\nimport Termination from './components/Termination';\n\nimport { useClientsFields } from './useClientsFields';\n\nconst ClientsFields = () => {\n  const meta = useClientsFields();\n\n  return (\n    <main className=\"clients\">\n      <Fio initialData={meta.fioData} id={meta.personId} />\n      <Contacts initialData={meta.contacts} id={meta.personId} />\n      <Citizenship initialData={meta.citizenship} id={meta.personId} />\n      <Passport initialData={meta.passport} id={meta.personId} />\n      <Address initialData={meta.address} id={meta.personId} />\n\n      {meta.userType === 'client' && (\n        <>\n          <Statement\n            initialData={meta.consents}\n            clientId={meta.clientId}\n            personId={meta.personId}\n          />\n          <PowerOfAttorney\n            initialData={meta.representative}\n            clientId={meta.clientId}\n            personId={meta.personId}\n          />\n          <Termination\n            initialData={meta.termination}\n            clientId={meta.clientId}\n            personId={meta.personId}\n          />\n        </>\n      )}\n    </main>\n  );\n};\n\nexport default ClientsFields;\n","import { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { useState, useEffect, useMemo } from 'react';\nimport { State } from '../../../../../../../../../../../../store/types';\nimport reqClientName from '../../../../../../../../../../../../services/generator/Client/reqClientName';\nimport reqClientContacts from '../../../../../../../../../../../../services/generator/Client/reqClientContacts';\nimport reqClientCitizenship from '../../../../../../../../../../../../services/generator/Client/reqClientCitizenship';\nimport reqClientPassport from '../../../../../../../../../../../../services/generator/Client/reqClientPassport';\nimport reqClientAddress from '../../../../../../../../../../../../services/generator/Client/reqClientAddress';\nimport reqClientConsents from '../../../../../../../../../../../../services/generator/Client/reqClientConsents';\nimport reqClientRepresentative from '../../../../../../../../../../../../services/generator/Client/reqClientRepresentative';\nimport reqTermination from '../../../../../../../../../../../../services/generator/Client/reqTermination';\nimport { isNumber } from '../../../../../../../../../../../../utils/numbers';\n\nexport const useClientsFields = () => {\n  const { token } = useSelector((state: State) => state.main.user);\n  const { clientId, personId } = useParams<{clientId: string, personId: string}>();\n\n  const [userType, setUserType] = useState();\n  // Fields Data\n  const [fioData, setFioData] = useState();\n  const [contacts, setContacts] = useState();\n  const [citizenship, setCitizenship] = useState();\n  const [passport, setPassport] = useState();\n  const [address, setAddress] = useState();\n  const [consents, setConsents] = useState();\n  const [representative, setRepresentative] = useState();\n  const [termination, setTermination] = useState();\n\n  const isCorrectId = useMemo(() => isNumber(personId), [personId]);\n\n  useEffect(() => {\n    if (token && isCorrectId) {\n      // get FIO\n      (async () => {\n        const res = await reqClientName(token, '', personId);\n\n        if (res?.success) {\n          setFioData(res.data);\n          setUserType(res.data.type);\n        }\n      })();\n\n      // get CONTACTS\n      (async () => {\n        const { success, data } = await reqClientContacts(token, personId);\n\n        if (success) {\n          setContacts(data);\n        }\n      })();\n\n      // get CITIZENSHIP\n      (async () => {\n        const { success, data } = await reqClientCitizenship(token, personId);\n\n        if (success) {\n          setCitizenship(data);\n        }\n      })();\n\n      // get PASSPORT\n      (async () => {\n        const { success, data } = await reqClientPassport(token, personId);\n\n        if (success) {\n          setPassport(data);\n        }\n      })();\n\n      // get ADDRESS\n      (async () => {\n        const { success, data } = await reqClientAddress(token, personId);\n\n        if (success) {\n          setAddress(data);\n        }\n      })();\n\n      // get CONSENTS\n      (async () => {\n        const { success, data } = await reqClientConsents(token, clientId, personId);\n\n        if (success) {\n          setConsents(data);\n        }\n      })();\n\n      // get REPRESENTATIVE\n      (async () => {\n        const { success, data } = await reqClientRepresentative(token, clientId, personId);\n\n        if (success) {\n          setRepresentative(data);\n        }\n      })();\n\n      // get TERMINATION\n      (async () => {\n        const { success, data } = await reqTermination(token, clientId, personId);\n\n        if (success) {\n          setTermination(data);\n        }\n      })();\n    }\n  }, [token, clientId, personId, isCorrectId]);\n\n  return {\n    userType,\n    clientId,\n    personId,\n    fioData,\n    contacts,\n    citizenship,\n    passport,\n    address,\n    consents,\n    representative,\n    termination,\n  };\n};\n","import * as React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport ClientsDashboard from './components/ClientsDashboard';\nimport ClientsFields from './components/ClientsFields';\n\nconst GeneratorContainer = () => (\n  <Switch>\n    <Route path=\"/clients/:clientId/:personId\">\n      <ClientsFields />\n    </Route>\n    <ClientsDashboard />\n  </Switch>\n);\n\nexport default GeneratorContainer;\n","import * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { State } from '../../../../../../../../store/types';\nimport { UserTypes } from '../../../../../../../../types';\nimport ManagerContainer from './components/ManagerContainer';\nimport GeneratorView from './components/GeneratorContainer';\n\nconst Clients = () => {\n  const { user: { type } } = useSelector((state: State) => state.main);\n\n  if (type === UserTypes.GENERATOR) {\n    return <GeneratorView />;\n  }\n\n  if (type === UserTypes.MANAGER) {\n    return <ManagerContainer />;\n  }\n\n  return null;\n};\n\nexport default Clients;\n","import * as React from 'react';\nimport './index.scss';\n\ntype Props = {\n  title: string;\n  info: string;\n}\n\nconst TitleInfoDuet = ({ title, info }: Props) => (\n  <div className=\"title-info-duet\">\n    <span className=\"title\">{title}</span>\n    <span className=\"info\">{info}</span>\n  </div>\n);\n\nexport default TitleInfoDuet;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function getDevelopers(token: string, id: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/developer/group/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqRepresentative(\n  token: string,\n  id: string,\n  method: 'POST' | 'GET' = 'GET',\n  bodyData?: any,\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/developer/representative/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect, useCallback, useMemo } from 'react';\nimport { SelectItem } from '../../../../../../../../../../types';\nimport { State } from '../../../../../../../../../../store/types';\nimport getDevelopers from '../../../../../../../../../../services/generator/Developer/getDevelopers';\nimport reqRepresentative from '../../../../../../../../../../services/generator/Developer/reqRepresentative';\nimport { setModalInfo } from '../../../../../../../../../../store/main/actions';\n\ntype DeveloperCardData = {\n  id: string;\n  title: string;\n  color: string;\n  info: {\n    title: string;\n    value: string;\n  }[]\n}\n\ntype RepresentativeData = {\n  title: string,\n  value: string,\n}\n\nexport const useDashboard = () => {\n  const dispatch = useDispatch();\n  const { id } = useParams<{ id: string }>();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  const [developers, setDevelopers] = useState<DeveloperCardData[]>([]);\n  const [isLoading, setLoading] = useState<boolean>(false);\n\n  const [devRepresentative, setDevRepresentative] = useState<SelectItem[]>([]);\n  const [selectedRepresentative, setSelectedRepresentative] = useState<any>();\n\n  const [representative, setRepresentative] = useState<RepresentativeData[]>([]);\n  const [representativeDoc, setRepresentativeDoc] = useState<RepresentativeData[]>([]);\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const data = { dev_representative_id: selectedRepresentative };\n      const res = await reqRepresentative(token, id, 'POST', data);\n\n      dispatch(\n        setModalInfo({\n          open: true,\n          success: res?.success,\n          message: res?.message,\n        })\n      );\n    }\n  }, [token, id, selectedRepresentative]);\n\n  useEffect(() => {\n    if (token) {\n      // get DEVELOPERS\n      (async () => {\n        setLoading(true);\n\n        const res = await getDevelopers(token, id);\n\n        if (res?.success) {\n          setDevelopers(res.data.dev_companies || []);\n          setDevRepresentative(res.data.dev_representative || []);\n          setSelectedRepresentative(res.data.representative_id);\n          setRepresentative(res.data.representative_info || []);\n          setRepresentativeDoc(res.data.representative_doc || []);\n        }\n\n        setLoading(false);\n      })();\n    }\n  }, [token, id]);\n\n  useEffect(() => {\n    if (token && selectedRepresentative) {\n      (async () => {\n        const res = await reqRepresentative(token, selectedRepresentative);\n\n        if (res?.success) {\n          setRepresentative(res.data.representative_info);\n          setRepresentativeDoc(res.data.representative_doc);\n        }\n      })();\n    }\n  }, [selectedRepresentative, token]);\n\n  return {\n    id,\n    developers,\n    isLoading,\n    devRepresentative,\n    representative,\n    selectedRepresentative,\n    representativeDoc,\n    setSelectedRepresentative,\n    onSave,\n  };\n};\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from '../../../../../../../../../../components/Card';\nimport CustomSelect from '../../../../../../../../../../components/CustomSelect';\nimport Loader from '../../../../../../../../../../components/Loader/Loader';\nimport PrimaryButton from '../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../components/SectionWithTitle';\nimport TitleInfoDuet from '../../../../../../../../../../components/TitleInfoDuet';\nimport { useDashboard } from './useDashboard';\n\nconst Dashboard = () => {\n  const meta = useDashboard();\n\n  if (meta.isLoading) {\n    return (\n      <Loader />\n    );\n  }\n\n  return (\n    <div className=\"seller\">\n      <div className=\"dashboard-header section-title\">Продавці</div>\n\n      <div className=\"grid mb50\">\n        {meta.developers.map(({ color, id, title, info }) => (\n          <Card\n            key={id}\n            title={title}\n            headerColor={color}\n            link={`/seller/${meta.id}/${id}`}\n          >\n            {info.map((item) => (\n              <span>{item}</span>\n            ))}\n          </Card>\n        ))}\n      </div>\n\n      <SectionWithTitle title=\"Підписант\">\n        <div className=\"seller__signer\">\n          <CustomSelect\n            label=\"Підписант\"\n            data={meta.devRepresentative}\n            onChange={(e) => meta.setSelectedRepresentative(e)}\n            selectedValue={meta.selectedRepresentative}\n            className=\"seller__signer-select\"\n          />\n        </div>\n\n        <div className=\"seller__signer-title\">\n          Загальна інформація про підписанта\n        </div>\n\n        <div className=\"grid grid-flex-start\">\n          {meta.representative.map(({ title, value }) => (\n            <TitleInfoDuet key={title} title={title} info={value} />\n          ))}\n        </div>\n\n        <div className=\"seller__signer-title\">\n          Дані про договір доручення (довіреності)\n        </div>\n\n        <div className=\"grid grid-flex-start\">\n          {meta.representativeDoc.map(({ title, value }) => (\n            <TitleInfoDuet key={title} title={title} info={value} />\n          ))}\n        </div>\n      </SectionWithTitle>\n\n      <PrimaryButton\n        label=\"Зберегти\"\n        onClick={meta.onSave}\n        disabled={false}\n        className=\"seller__ban-button\"\n      />\n\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqDeveloper(\n  token: string,\n  developerId: string,\n  cardId: string,\n  method: 'POST' | 'GET' = 'GET',\n  bodyData?: any,\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/developer/main/${developerId}/${cardId}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { useState, useEffect } from 'react';\nimport { State } from '../../../../../../../../../../store/types';\nimport reqDeveloper from '../../../../../../../../../../services/generator/Developer/reqDeveloper';\nimport { isNumber } from '../../../../../../../../../../utils/numbers';\n\ntype Developer = {\n  title: string;\n  color: string;\n  info: {\n    title: string;\n    value: string;\n  }[]\n}\n\nexport const useFields = () => {\n  const { token } = useSelector((state: State) => state.main.user);\n  const { developerId, clientId } = useParams<{ developerId: string, clientId: string }>();\n\n  const [developer, setDeveloper] = useState<Developer>();\n  const [spouse, setSpouse] = useState([]);\n\n  useEffect(() => {\n    const developerIsId = isNumber(developerId);\n    if (token && developerIsId) {\n      (async () => {\n        const res = await reqDeveloper(token, developerId, clientId);\n\n        if (res.success) {\n          setDeveloper(res.data.dev_company);\n          setSpouse(res.data.ceo_spouse_info);\n        }\n      })();\n    }\n  }, [token]);\n\n  return {\n    developer,\n    spouse,\n  };\n};\n","import * as React from 'react';\nimport CheckBanFields from '../../../../../../../../../../components/CheckBanFields';\nimport PrimaryButton from '../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../components/SectionWithTitle';\nimport TitleInfoDuet from '../../../../../../../../../../components/TitleInfoDuet';\nimport { useFields } from './useFields';\n\nconst Fields = () => {\n  const meta = useFields();\n\n  return (\n    <main className=\"seller\">\n      <SectionWithTitle title=\"Продавець\">\n        <div className=\"seller__info\">\n          <div className=\"seller__info-title\" style={{ backgroundColor: meta.developer?.color }}>\n            {meta.developer?.title}\n          </div>\n          <div className=\"grid\">\n            {meta.developer?.info.map(({ title, value }) => (\n              <TitleInfoDuet title={title} info={value} />\n            ))}\n          </div>\n        </div>\n      </SectionWithTitle>\n\n      <SectionWithTitle title=\"Подружжя\">\n        <div className=\"grid\">\n          {meta.spouse.map(({ title, value }) => (\n            <TitleInfoDuet title={title} info={value} />\n          ))}\n        </div>\n      </SectionWithTitle>\n    </main>\n  );\n};\n\nexport default Fields;\n","import * as React from 'react';\nimport './index.scss';\nimport { Switch, Route } from 'react-router-dom';\nimport { useSeller } from './useSeller';\nimport Dashboard from './components/Dashboard';\nimport Fields from './components/Fields';\n\nconst Seller = () => {\n  const meta = useSeller();\n\n  return (\n    <main className=\"manage__seller seller\">\n      <Switch>\n        <Route path=\"/seller/:clientId/:developerId\">\n          <Fields />\n        </Route>\n        <Dashboard />\n      </Switch>\n    </main>\n  );\n};\n\nexport default Seller;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function getSideNotaries(token: string, id: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/client/notaries/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useCallback, useState } from 'react';\nimport { State } from '../../../../../../../../../../store/types';\nimport getSideNotaries from '../../../../../../../../../../services/generator/SideNotary/getSideNotaries';\n\ntype SideNotary = {\n  id: number,\n  title: string,\n  list: string[]\n}\n\nexport const useDashboard = () => {\n  const { id } = useParams<{ id: string }>();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  const [notaries, setNotaries] = useState<SideNotary[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>();\n\n  useEffect(() => {\n    if (token) {\n      // get SIDE_NOTARIES\n      (async () => {\n        setIsLoading(true);\n        const res = await getSideNotaries(token, id);\n\n        if (res.success) {\n          setNotaries(res.data.notary);\n        }\n        setIsLoading(false);\n      })();\n    }\n  }, [token, id]);\n\n  return {\n    id,\n    isLoading,\n    notaries,\n  };\n};\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from '../../../../../../../../../../components/Card';\nimport Loader from '../../../../../../../../../../components/Loader/Loader';\nimport { useDashboard } from './useDashboard';\n\nconst Dashboard = () => {\n  const meta = useDashboard();\n\n  if (meta.isLoading) {\n    return (\n      <Loader />\n    );\n  }\n\n  return (\n    <div className=\"side-notaries side-notaries__dashboard\">\n      <div className=\"dashboard-header section-title\">Сторонній нотаріус</div>\n\n      <div className=\"grid grid-stretch\">\n        {meta.notaries.map((notary) => (\n          <Card\n            key={notary.id}\n            title={notary.title}\n            link={`/side-notaries/${meta.id}/${notary.id}`}\n          >\n            {notary.list.map((item) => (\n              <span>{item}</span>\n            ))}\n          </Card>\n        ))}\n\n        <Link to={`/side-notaries/${meta.id}/create`} className=\"add-item-card\">\n          <img src=\"/images/plus-big.svg\" alt=\"create\" />\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqNotaryData(\n  token: string,\n  id: string,\n  clientId: string,\n  method: 'GET' | 'PUT' = 'GET',\n  bodyData?: any,\n) {\n  const url = method === 'PUT' ? `/api/generator/client/notary/${clientId}${id && `/${id}`}` : `/api/generator/client/notary/${id}`;\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}${url}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useParams, useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useCallback, useState, useEffect, useMemo } from 'react';\nimport { State } from '../../../../../../../../../../store/types';\nimport reqNotaryData from '../../../../../../../../../../services/generator/SideNotary/reqNotaryData';\nimport { setModalInfo } from '../../../../../../../../../../store/main/actions';\nimport { isNumber } from '../../../../../../../../../../utils/numbers';\n\ntype SideNotaryDenominativeData = {\n  surname_n: string,\n  name_n: string,\n  short_name: string,\n  patronymic_n: string,\n  short_patronymic: string,\n  activity_n: string,\n}\n\ntype SideNotaryFblativeData = {\n  name_o: string,\n  surname_o: string,\n  patronymic_o: string,\n  activity_o: string,\n}\n\nexport const useFields = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { token } = useSelector((state: State) => state.main.user);\n  const { notaryId, clientId } = useParams<{ notaryId: string, clientId: string }>();\n\n  const [denominative, setDenominate] = useState<SideNotaryDenominativeData>({\n    surname_n: '',\n    name_n: '',\n    short_name: '',\n    patronymic_n: '',\n    short_patronymic: '',\n    activity_n: '',\n  });\n  const [ablative, setAblative] = useState<SideNotaryFblativeData>({\n    name_o: '',\n    surname_o: '',\n    patronymic_o: '',\n    activity_o: '',\n  });\n\n  const shouldLoadData = useMemo(() => notaryId !== 'create' && isNumber(notaryId), [notaryId]);\n\n  useEffect(() => {\n    // get NOTARY_DATA\n    (async () => {\n      if (token && shouldLoadData) {\n        const res = await reqNotaryData(token, notaryId, '');\n\n        if (res.success) {\n          setDenominate({\n            surname_n: res.data.surname_n || '',\n            name_n: res.data.name_n || '',\n            short_name: res.data.short_name || '',\n            patronymic_n: res.data.patronymic_n || '',\n            short_patronymic: res.data.short_patronymic || '',\n            activity_n: res.data.activity_n || '',\n          });\n\n          setAblative({\n            name_o: res.data.name_o || '',\n            surname_o: res.data.surname_o || '',\n            patronymic_o: res.data.patronymic_o || '',\n            activity_o: res.data.activity_o || '',\n          });\n        }\n      }\n    })();\n  }, [token, notaryId]);\n\n  const onDenominativeClear = useCallback(() => {\n    setDenominate({\n      surname_n: '',\n      name_n: '',\n      short_name: '',\n      patronymic_n: '',\n      short_patronymic: '',\n      activity_n: '',\n    });\n  }, []);\n\n  const onAblativeClear = useCallback(() => {\n    setAblative({\n      name_o: '',\n      surname_o: '',\n      patronymic_o: '',\n      activity_o: '',\n    });\n  }, []);\n\n  const onSave = useCallback(async () => {\n    const data = { ...denominative, ...ablative };\n    const id = shouldLoadData ? notaryId : '';\n\n    if (token) {\n      const res = await reqNotaryData(token, id, clientId, 'PUT', data);\n\n      dispatch(\n        setModalInfo({\n          open: true,\n          success: res?.success,\n          message: res?.message,\n        })\n      );\n\n      if (res?.success && notaryId === 'create' && isNumber(res?.data.notary_id)) {\n        history.push(`/side-notaries/${clientId}/${res?.data.notary_id}`);\n      }\n    }\n  }, [denominative, ablative, token]);\n\n  const isButtonDisabled = useMemo(() => !denominative.surname_n\n    || !denominative.short_name\n    || !denominative.short_patronymic\n    || !ablative.activity_o,\n  [denominative, ablative]);\n\n  return {\n    denominative,\n    ablative,\n    isButtonDisabled,\n    setDenominate,\n    setAblative,\n    onDenominativeClear,\n    onAblativeClear,\n    onSave,\n  };\n};\n","import * as React from 'react';\nimport CustomInput from '../../../../../../../../../../components/CustomInput';\nimport PrimaryButton from '../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../components/SectionWithTitle';\nimport { useFields } from './useFields';\n\nconst Fields = () => {\n  const meta = useFields();\n\n  return (\n    <main className=\"side-notaries\">\n      <SectionWithTitle title=\"Називний відмінок та скорочення\" onClear={meta.onDenominativeClear}>\n        <div className=\"grid mb20\">\n          <CustomInput\n            required\n            label=\"Прізвище\"\n            onChange={(e) => meta.setDenominate({ ...meta.denominative, surname_n: e })}\n            value={meta.denominative.surname_n}\n          />\n\n          <CustomInput\n            label=\"Ім'я\"\n            onChange={(e) => meta.setDenominate({ ...meta.denominative, name_n: e })}\n            value={meta.denominative.name_n}\n          />\n\n          <CustomInput\n            label=\"По батькові\"\n            onChange={(e) => meta.setDenominate({ ...meta.denominative, patronymic_n: e })}\n            value={meta.denominative.patronymic_n}\n          />\n        </div>\n\n        <div className=\"grid mb20\">\n          <div />\n          <CustomInput\n            required\n            label=\"Ім'я скорочено з крапкою\"\n            onChange={(e) => meta.setDenominate({ ...meta.denominative, short_name: e })}\n            value={meta.denominative.short_name}\n          />\n\n          <CustomInput\n            required\n            label=\"По батькові скорочено з крапкою\"\n            onChange={(e) => meta.setDenominate({ ...meta.denominative, short_patronymic: e })}\n            value={meta.denominative.short_patronymic}\n          />\n        </div>\n\n        <CustomInput\n          label=\"Назва нотаріального округу в називному відмінку (Хто? Що?), з маленької букви\"\n          onChange={(e) => meta.setDenominate({ ...meta.denominative, activity_n: e })}\n          value={meta.denominative.activity_n}\n        />\n      </SectionWithTitle>\n\n      <SectionWithTitle title=\"Орудний відмінок\" onClear={meta.onAblativeClear}>\n        <div className=\"grid mb20\">\n          <CustomInput\n            label=\"Прізвище\"\n            onChange={(e) => meta.setAblative({ ...meta.ablative, surname_o: e })}\n            value={meta.ablative.surname_o}\n          />\n\n          <CustomInput\n            label=\"Ім'я\"\n            onChange={(e) => meta.setAblative({ ...meta.ablative, name_o: e })}\n            value={meta.ablative.name_o}\n          />\n\n          <CustomInput\n            label=\"По батькові\"\n            onChange={(e) => meta.setAblative({ ...meta.ablative, patronymic_o: e })}\n            value={meta.ablative.patronymic_o}\n          />\n        </div>\n\n        <CustomInput\n          required\n          label=\"Назва нотаріального округу в орудному відмінку (Ким? Чим?), з маленької букви\"\n          onChange={(e) => meta.setAblative({ ...meta.ablative, activity_o: e })}\n          value={meta.ablative.activity_o}\n        />\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={meta.onSave} disabled={meta.isButtonDisabled} />\n      </div>\n    </main>\n  );\n};\n\nexport default Fields;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\nimport { State } from '../../../../../../../../store/types';\nimport { UserTypes } from '../../../../../../../../types';\nimport Dashboard from './components/Dashboard';\nimport Fields from './components/Fields';\n\nconst SideNotary = () => {\n  const { user: { type } } = useSelector((state: State) => state.main);\n\n  if (type === UserTypes.GENERATOR) {\n    return (\n      <Switch>\n        <Route path=\"/side-notaries/:clientId/:notaryId\">\n          <Fields />\n        </Route>\n        <Dashboard />\n      </Switch>\n    );\n  }\n\n  return null;\n};\n\nexport default SideNotary;\n","/* eslint-disable prettier/prettier */\n/* eslint-disable react/button-has-type */\nimport React from 'react';\nimport './index.scss';\n\ntype Props = {\n  label: string;\n  onClick: (e: any) => void;\n  disabled: boolean;\n  className?: string;\n};\n\nconst SecondaryButton = ({\n  label, onClick, disabled, className\n}: Props) => (\n  <button\n    className={`secondary-button ${disabled ? 'disabled' : ''} ${\n      className || ''\n    }`}\n    onClick={onClick}\n    disabled={disabled}\n  >\n    {label}\n  </button>\n);\n\nexport default SecondaryButton;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqImmovableExchange(\n  token: string,\n  id?: string,\n  method: 'GET' | 'PUT' | undefined = 'GET',\n  type?: 'MINFIN' | null,\n  bodyData?: any\n) {\n  try {\n    const url = type === 'MINFIN' ? '/api/exchange' : `/api/generator/immovable/exchange/${id}`;\n    const data = await requestApi({\n      url: `${DEFAULT_URL}${url}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport reqImmovableExchange from '../../../../../../../../../../../../services/generator/Immovable/reqImmovableExchange';\nimport { setModalInfo } from '../../../../../../../../../../../../store/main/actions';\nimport { State } from '../../../../../../../../../../../../store/types';\n\ntype InitialData = {\n  contract_buy: string,\n  exchange_rate: string,\n  contract_sell: string,\n  exchange_date: string,\n}\n\nexport type Props = {\n  id: string,\n  initialData?: InitialData,\n}\n\nexport const useExchangeRate = ({ initialData, id }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  // Initial data\n  const [contractBuy, setContractBuy] = useState('');\n  const [contractSell, setContractSell] = useState('');\n  const [exchangeRate, setExchangeRate] = useState('');\n\n  const onClear = useCallback(() => {\n    setContractBuy('');\n    setContractSell('');\n    setExchangeRate('');\n  }, []);\n\n  const onRefreshRate = useCallback(async () => {\n    if (token) {\n      const res = await reqImmovableExchange(token, '', 'GET', 'MINFIN');\n      if (res.success) {\n        setContractBuy(res.data.contract_buy);\n        setContractSell(res.data.contract_sell);\n        setExchangeRate(res.data.exchange_rate);\n      }\n    }\n  }, [token]);\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const data = {\n        contract_buy: contractBuy,\n        contract_sell: contractSell,\n        exchange_rate: exchangeRate,\n      };\n      const { success, message } = await reqImmovableExchange(token, id, 'PUT', null, data);\n\n      dispatch(\n        setModalInfo({\n          open: true,\n          success,\n          message,\n        })\n      );\n    }\n  }, [contractBuy, contractSell, exchangeRate, token]);\n\n  const isSaveButtonDisable = useMemo(\n    () => !contractBuy || !contractSell || !exchangeRate, [contractBuy, contractSell, exchangeRate]\n  );\n\n  useEffect(() => {\n    setContractBuy(initialData?.contract_buy || '');\n    setContractSell(initialData?.contract_sell || '');\n    setExchangeRate(initialData?.exchange_rate || '');\n  }, [initialData]);\n\n  return {\n    contractBuy,\n    contractSell,\n    exchangeRate,\n    isSaveButtonDisable,\n    setContractBuy,\n    setContractSell,\n    setExchangeRate,\n    onClear,\n    onSave,\n    onRefreshRate\n  };\n};\n","import * as React from 'react';\nimport './index.scss';\nimport CustomInput from '../../../../../../../../../../../../components/CustomInput';\nimport PrimaryButton from '../../../../../../../../../../../../components/PrimaryButton';\nimport SecondaryButton from '../../../../../../../../../../../../components/SecondaryButton';\nimport SectionWithTitle from '../../../../../../../../../../../../components/SectionWithTitle';\nimport { useExchangeRate, Props } from './useExchangeRate';\n\nconst ExchangeRate = (props: Props) => {\n  const {\n    exchangeRate,\n    contractBuy,\n    contractSell,\n    setContractBuy,\n    setContractSell,\n    setExchangeRate,\n    onClear,\n    onSave,\n    onRefreshRate,\n    isSaveButtonDisable\n  } = useExchangeRate(props);\n\n  return (\n    <>\n      <SectionWithTitle title=\"Комерційний курс валют\" onClear={onClear}>\n        <div className=\"middle-column-fields mb20 column\">\n          <span className=\"mb20\">Курс української грн до 1$ CША</span>\n          <span className=\"mb20\">{`Остання дата оновлення курсу доллара: ${props.initialData?.exchange_date || ''}`}</span>\n        </div>\n\n        <div className=\"exchange mb20\">\n          <div className=\"exchange__field\">\n            <CustomInput required label=\"Середній курс долара\" onChange={setExchangeRate} value={exchangeRate} />\n          </div>\n          <div className=\"exchange__field\">\n            <CustomInput required label=\"Курс для договорів - купівля\" onChange={setContractBuy} value={contractBuy} />\n          </div>\n          <div className=\"exchange__field\">\n            <CustomInput required label=\"Курс для договорів - продаж\" onChange={setContractSell} value={contractSell} />\n          </div>\n        </div>\n\n        <div className=\"middle-button\">\n          <SecondaryButton label=\"ОНОВИТИ КУРС\" onClick={onRefreshRate} disabled={false} />\n        </div>\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={onSave} disabled={isSaveButtonDisable} />\n      </div>\n    </>\n  );\n};\n\nexport default ExchangeRate;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function getMainData(token: string, id: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/main/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function createContract(token: string, id: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/create/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { data } from 'jquery';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { State } from '../../../../../../../../../../store/types';\nimport getMainData from '../../../../../../../../../../services/generator/Main/getMainData';\nimport createContract from '../../../../../../../../../../services/generator/Main/createContract';\nimport { setModalInfo } from '../../../../../../../../../../store/main/actions';\nimport reqImmovableExchange from '../../../../../../../../../../services/generator/Immovable/reqImmovableExchange';\n\nexport const useGeneratorMain = () => {\n  const dispatch = useDispatch();\n  const { id } = useParams<{id: string}>();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [title, setTitle] = useState<string>('');\n  const [code, setCode] = useState<string>('');\n  const [instructions, setInstructions] = useState([]);\n  const [exchange, setExchange] = useState();\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const res = await createContract(token, id);\n\n      dispatch(\n        setModalInfo({\n          open: true,\n          success: res?.success,\n          message: res?.message,\n        })\n      );\n\n      if (res?.success && res?.data?.link) {\n        res.data.link.forEach((link: string, index: number) => {\n          setTimeout(() => {\n            document.location.href = link;\n          }, index * 500);\n        });\n      }\n    }\n  }, [token, id]);\n\n  useEffect(() => {\n    if (token) {\n      (async () => {\n        setIsLoading(true);\n        const res = await getMainData(token, id);\n\n        if (res?.success) {\n          const { date, day, room, time } = res.data.date_info;\n          setTitle(`${day} ${date} ${time} ${room}`);\n          setCode(res.data.card_id);\n          setInstructions(res.data.instructions);\n        }\n\n        setIsLoading(false);\n      })();\n\n      (async () => {\n        const res = await reqImmovableExchange(token, id);\n\n        if (res?.success) {\n          setExchange(res.data);\n        }\n      })();\n    }\n  }, [token, id]);\n\n  return {\n    id,\n    code,\n    title,\n    instructions,\n    isLoading,\n    exchange,\n    onSave,\n  };\n};\n","import * as React from 'react';\nimport Loader from '../../../../../../../../../../components/Loader/Loader';\nimport PrimaryButton from '../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../components/SectionWithTitle';\nimport TitleInfoDuet from '../../../../../../../../../../components/TitleInfoDuet';\nimport ExchangeRate from './components/ExchangeRate';\nimport { useGeneratorMain } from './useGeneratorMain';\n\nconst GeneratorMain = () => {\n  const meta = useGeneratorMain();\n\n  if (meta.isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <main className=\"main\">\n      <div className=\"dashboard-header section-title\">\n        <span>{meta.title}</span>\n        <span>{meta.code}</span>\n      </div>\n\n      <ExchangeRate initialData={meta.exchange} id={meta.id} />\n\n      <SectionWithTitle title=\"Дані які не додані до договору \">\n        <div className=\"grid\">\n          {meta.instructions.map(({ title, value }) => (\n            <TitleInfoDuet title={title} info={value} />\n          ))}\n        </div>\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Генерувати\" onClick={meta.onSave} disabled={false} />\n      </div>\n    </main>\n  );\n};\n\nexport default GeneratorMain;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function putMainDeveloper(token: string, id: string, bodyData: any) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/manager/notary/developer/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'PUT',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import * as React from 'react';\nimport CustomSelect from '../../../../../../../../../../../../components/CustomSelect';\nimport CustomSwitch from '../../../../../../../../../../../../components/CustomSwitch';\nimport PrimaryButton from '../../../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../../../components/SectionWithTitle';\nimport { useParticipants, Props } from './useParticipants';\n\nconst Participants = (props: Props) => {\n  const meta = useParticipants(props);\n\n  return (\n    <>\n      <SectionWithTitle title=\"Учасники угоди\" onClear={meta.onClear}>\n        <div className=\"grid\">\n          <CustomSelect\n            label=\"Забудовник\"\n            data={props.initialData?.developer || []}\n            onChange={(e) => meta.setData({ ...meta.data, developer_id: e })}\n            selectedValue={meta.data.developer_id}\n          />\n\n          <CustomSelect\n            label=\"Представник\"\n            data={meta.representatives}\n            onChange={(e) => meta.setData({ ...meta.data, representative_id: e })}\n            selectedValue={meta.data.representative_id}\n          />\n\n          <CustomSelect\n            label=\"Менеджер\"\n            data={meta.manager}\n            onChange={(e) => meta.setData({ ...meta.data, manager_id: e })}\n            selectedValue={meta.data.manager_id}\n          />\n\n          <CustomSelect\n            label=\"Нотаріус\"\n            data={props.initialData?.notary || []}\n            onChange={(e) => meta.setData({ ...meta.data, notary_id: e })}\n            selectedValue={meta.data.notary_id}\n          />\n\n          <CustomSelect\n            label=\"Набирач\"\n            data={props.initialData?.generator || []}\n            onChange={(e) => meta.setData({ ...meta.data, generator_id: e })}\n            selectedValue={meta.data.generator_id}\n          />\n\n          <CustomSwitch\n            label=\"Готово до генерації\"\n            onChange={(e) => meta.setData({ ...meta.data, generation_ready: e })}\n            selected={meta.data.generation_ready}\n          />\n        </div>\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Оновити\" onClick={meta.onSave} disabled={false} />\n      </div>\n    </>\n  );\n};\n\nexport default Participants;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useState, useCallback, useEffect } from 'react';\nimport putMainDeveloper from '../../../../../../../../../../../../services/manager/Main/putMainDeveloper';\nimport { ManagerParticipantsData } from '../../useManagerMain';\nimport { State } from '../../../../../../../../../../../../store/types';\nimport { setModalInfo } from '../../../../../../../../../../../../store/main/actions';\nimport getDeveloperInfo from '../../../../../../../../../../../../services/getDeveloperInfo';\n\nexport type Props = {\n  initialData?: ManagerParticipantsData;\n  cardId: string;\n};\n\nexport const useParticipants = ({ initialData, cardId }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  const [firstRender, setFirstRender] = useState(true);\n  const [representatives, setRepresentatives] = useState(initialData?.representative || []);\n  const [manager, setManager] = useState(initialData?.manager || []);\n  const [data, setData] = useState({\n    developer_id: initialData?.developer_id || null,\n    notary_id: initialData?.notary_id || null,\n    representative_id: initialData?.representative_id || null,\n    manager_id: initialData?.manager_id || null,\n    generator_id: initialData?.generator_id || null,\n    generation_ready: initialData?.generation_ready || false,\n  });\n\n  const onClear = useCallback(() => {\n    setData({\n      developer_id: null,\n      notary_id: null,\n      representative_id: null,\n      manager_id: null,\n      generator_id: null,\n      generation_ready: false,\n    });\n  }, []);\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const res = await putMainDeveloper(token, cardId, data);\n\n      dispatch(\n        setModalInfo({\n          open: true,\n          success: res?.success,\n          message: res?.message,\n        })\n      );\n    }\n  }, [data, cardId, token]);\n\n  useEffect(() => {\n    if (firstRender) {\n      setFirstRender(false);\n      return;\n    }\n\n    if (token && data.developer_id) {\n      (async () => {\n        const res = await getDeveloperInfo(token, Number(data.developer_id));\n        setData({ ...data, representative_id: null, manager_id: null });\n        setRepresentatives(res.representative);\n        setManager(res.manager);\n      })();\n    }\n  }, [data.developer_id, token]);\n\n  return {\n    data,\n    representatives,\n    manager,\n    setData,\n    onClear,\n    onSave,\n  };\n};\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function putMainPersons(token: string, id: string, bodyData: any) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/manager/contact/person/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'PUT',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useState, useCallback } from 'react';\nimport { SelectItem } from '../../../../../../../../../../../../types';\nimport { ContactPersonInfo } from '../../useManagerMain';\nimport { State } from '../../../../../../../../../../../../store/types';\nimport putMainPersons from '../../../../../../../../../../../../services/manager/Main/putMainPersons';\nimport { setModalInfo } from '../../../../../../../../../../../../store/main/actions';\n\nexport type Props = {\n  cardId: string;\n  contact_person_type?: SelectItem[],\n  initialData?: ContactPersonInfo[],\n}\n\ntype InitialPersonData = {\n  person_type: null | string,\n  name: null | string,\n  phone: null | string,\n  email: null | string,\n}\n\nconst initialPersonData = {\n  person_type: null,\n  name: null,\n  phone: null,\n  email: null,\n};\n\nexport const usePersons = ({ initialData, cardId }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  const [data, setData] = useState<InitialPersonData[]>(\n    initialData?.length ? initialData : [initialPersonData]\n  );\n\n  const onDataChange = useCallback((index, value) => {\n    data[index] = value;\n    setData([...data]);\n  }, [data]);\n\n  const onClearAll = useCallback(() => {\n    setData([initialPersonData]);\n  }, []);\n\n  const onAdd = useCallback(() => {\n    setData([...data, initialPersonData]);\n  }, [data]);\n\n  const onRemove = useCallback((index) => {\n    setData((prev) => prev.filter((_, mapIndex) => mapIndex !== index));\n  }, []);\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const res = await putMainPersons(token, cardId, data);\n\n      dispatch(\n        setModalInfo({\n          open: true,\n          success: res?.success,\n          message: res?.message,\n        })\n      );\n    }\n  }, [data, cardId, token]);\n\n  return {\n    data,\n    onDataChange,\n    onClearAll,\n    onAdd,\n    onRemove,\n    onSave,\n  };\n};\n","import * as React from 'react';\nimport AddFormButton from '../../../../../../../../../../../../components/AddFormButton';\nimport CustomInput from '../../../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../../../components/CustomSelect';\nimport PhoneMaskInput from '../../../../../../../../../../../../components/PhoneMaskInput';\nimport PrimaryButton from '../../../../../../../../../../../../components/PrimaryButton';\nimport RemoveFormButton from '../../../../../../../../../../../../components/RemoveFormButton';\nimport SectionWithTitle from '../../../../../../../../../../../../components/SectionWithTitle';\nimport { usePersons, Props } from './usePersons';\n\nconst Persons = (props: Props) => {\n  const meta = usePersons(props);\n\n  return (\n    <>\n      <SectionWithTitle title=\"Контактні особи\" onClear={meta.onClearAll}>\n        {meta.data.map((person, index) => (\n          <div className=\"grid-center-duet main__person-block\">\n            <CustomSelect\n              label=\"Тип особи\"\n              data={props.contact_person_type || []}\n              onChange={(e) => meta.onDataChange(index, { ...person, person_type: e })}\n              selectedValue={person.person_type}\n            />\n\n            <CustomInput\n              label=\"ПІБ\"\n              onChange={(e) => meta.onDataChange(index, { ...person, name: e })}\n              value={person.name}\n            />\n\n            <CustomInput\n              label=\"E-mail\"\n              onChange={(e) => meta.onDataChange(index, { ...person, email: e })}\n              value={person.email}\n            />\n\n            <div className=\"df-jc-sb\">\n              <PhoneMaskInput\n                label=\"Номер телефону\"\n                onChange={(e) => meta.onDataChange(index, { ...person, phone: e })}\n                value={person.phone}\n              />\n\n              {meta.data.length > 1 && (\n              <div style={{ marginLeft: '12px' }}>\n                <RemoveFormButton\n                  onClick={meta.onRemove}\n                  index={index}\n                  disabled={false}\n                />\n              </div>\n              )}\n\n              {index === meta.data.length - 1 && (\n              <div style={{ marginLeft: '12px' }}>\n                <AddFormButton\n                  onClick={meta.onAdd}\n                  disabled={false}\n                />\n              </div>\n              )}\n            </div>\n          </div>\n        ))}\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Редагувати\" onClick={meta.onSave} disabled={false} />\n      </div>\n    </>\n  );\n};\n\nexport default Persons;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function getMain(token: string, id: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/manager/main/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useEffect, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams, useHistory } from 'react-router-dom';\nimport getMain from '../../../../../../../../../../services/manager/Main/getMain';\nimport { State } from '../../../../../../../../../../store/types';\nimport { SelectItem } from '../../../../../../../../../../types';\nimport { isNumber } from '../../../../../../../../../../utils/numbers';\n\nexport type ContactPersonInfo = {\n  person_type: string;\n  name: string;\n  phone: string;\n  email: string;\n  id?: string;\n};\n\ntype ManagerMainData = {\n  date_info: {\n    day: string;\n    date: string;\n    time: string;\n    room: string;\n  },\n  notary: SelectItem[];\n  developer: SelectItem[];\n  representative: SelectItem[];\n  manager: SelectItem[];\n  contact_person_type: SelectItem[];\n  contact_person_info: ContactPersonInfo[];\n  generator: SelectItem[];\n  notary_id: string;\n  developer_id: string;\n  representative_id: string;\n  manager_id: string;\n  generator_id: string;\n}\n\nexport type ManagerParticipantsData = {\n  developer: SelectItem[];\n  developer_id: string | null;\n  representative: SelectItem[];\n  representative_id: string | null;\n  manager: SelectItem[];\n  manager_id: string | null;\n  notary: SelectItem[];\n  notary_id: string | null;\n  generator: SelectItem[];\n  generator_id: string | null;\n  generation_ready: boolean;\n}\n\nexport const useManagerMain = () => {\n  const history = useHistory();\n  const { id } = useParams<{id: string}>();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [data, setData] = useState<ManagerMainData>();\n  const [participantsData, setParticipantsData] = useState<ManagerParticipantsData>();\n  const [personsData, setPersonsData] = useState<ContactPersonInfo[]>();\n\n  const mainTitle = useMemo(() => `${data?.date_info.day} ${data?.date_info.date} ${data?.date_info.time} ${data?.date_info.room}`, [data]);\n\n  useEffect(() => {\n    if (!isNumber(id)) {\n      history.push('/');\n    }\n\n    if (token) {\n      // get MAIN_DATA\n      (async () => {\n        setIsLoading(true);\n        const res = await getMain(token, id);\n\n        if (res?.success) {\n          setData(res?.data);\n          setPersonsData(res?.data.contact_person_info);\n          setParticipantsData({\n            developer: res?.data.developer || [],\n            developer_id: res?.data.developer_id || null,\n            representative: res?.data.representative || [],\n            representative_id: res?.data.representative_id || null,\n            manager: res?.data.manager || [],\n            manager_id: res?.data.manager_id || null,\n            notary: res?.data.notary || [],\n            notary_id: res?.data.notary_id || null,\n            generator: res?.data.generator || null,\n            generator_id: res?.data.generator_id || null,\n            generation_ready: res?.data.generation_ready || false,\n          });\n        }\n\n        setIsLoading(false);\n      })();\n    }\n  }, [token, id]);\n\n  return {\n    id,\n    data,\n    mainTitle,\n    isLoading,\n    participantsData,\n    personsData,\n  };\n};\n","import * as React from 'react';\nimport Loader from '../../../../../../../../../../components/Loader/Loader';\nimport Participants from './components/Participants';\nimport Persons from './components/Persons';\nimport { useManagerMain } from './useManagerMain';\n\nconst ManagerMain = () => {\n  const meta = useManagerMain();\n\n  if (meta.isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <main className=\"main\">\n      <div className=\"dashboard-header section-title\">{meta.mainTitle}</div>\n      <Participants initialData={meta.participantsData} cardId={meta.id} />\n      <Persons\n        initialData={meta.personsData}\n        contact_person_type={meta.data?.contact_person_type}\n        cardId={meta.id}\n      />\n    </main>\n  );\n};\n\nexport default ManagerMain;\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\nexport default async function reqAssistantMain(\n  token: string,\n  id: string,\n  method: 'GET' | 'PUT' | undefined = 'GET',\n  bodyData?: any\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/assistant/card/settings/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { data } from 'jquery';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState, useCallback, useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { State } from '../../../../../../../../../../store/types';\nimport reqAssistantMain from '../../../../../../../../../../services/assistant/reqAssistantMain';\nimport getDeveloperInfo from '../../../../../../../../../../services/getDeveloperInfo';\nimport { setModalInfo } from '../../../../../../../../../../store/main/actions';\n\ntype General = {\n  notary_id: string | null,\n  developer_id: string | null,\n  representative_id: string | null,\n  manager_id: string | null,\n  reader_id: string | null,\n  generator_id: string | null,\n  cancelled: boolean,\n}\n\ntype Immovable = {\n  [key: string]: string | null;\n}\n\nexport const useAssistantMain = () => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n  const { id } = useParams<{id: string}>();\n\n  const [firstRender, setFirstRender] = useState(0);\n  const [title, setTitle] = useState('');\n\n  // selects\n  const [notary, setNotary] = useState([]);\n  const [developer, setDeveloper] = useState([]);\n  const [representative, setRepresentative] = useState([]);\n  const [manager, setManager] = useState([]);\n  const [reader, setReader] = useState([]);\n  const [accompanying, setAccompanying] = useState([]);\n  const [generator, setGenerator] = useState([]);\n\n  // data\n  const [general, setGeneral] = useState<General>({\n    notary_id: null,\n    developer_id: null,\n    representative_id: null,\n    manager_id: null,\n    reader_id: null,\n    generator_id: null,\n    cancelled: false,\n  });\n  const [immovables, setImmovables] = useState<Immovable[]>([]);\n\n  const onImmovableChange = useCallback((index: number, key: string, value: any) => {\n    immovables[index][key] = value;\n    setImmovables([...immovables]);\n  }, [immovables]);\n\n  const onGeneralClear = useCallback(() => {\n    setGeneral({\n      notary_id: null,\n      developer_id: null,\n      representative_id: null,\n      manager_id: null,\n      reader_id: null,\n      generator_id: null,\n      cancelled: false,\n    });\n  }, []);\n\n  const onImmovableClear = useCallback((index: number) => {\n    setImmovables((prev) => prev.map((item, i) => {\n      if (index === i) {\n        return {\n          ...item,\n          accompanying_id: null,\n          reader_id: null,\n        };\n      }\n\n      return item;\n    }));\n  }, [immovables]);\n\n  const onSave = useCallback(async () => {\n    const bodyData = {\n      ...general,\n      immovables\n    };\n\n    if (token) {\n      const res = await reqAssistantMain(token, id, 'PUT', bodyData);\n\n      dispatch(\n        setModalInfo({\n          open: true,\n          success: res?.success,\n          message: res?.message,\n        })\n      );\n    }\n  }, [token, general, immovables]);\n\n  const isSaveButtonDisabled = useMemo(() => !general.developer_id\n    || !general.notary_id, [general.developer_id, general.notary_id]);\n\n  useEffect(() => {\n    if (token) {\n    // GET DATA FOR ASSISTANT\n      (async () => {\n        const res = await reqAssistantMain(token, id);\n\n        if (res?.success) {\n          const { day, date, time, room } = res?.data.date_info;\n          setTitle(`${day} ${date} ${time} ${room}`);\n\n          setNotary(res?.data.notary || []);\n          setDeveloper(res?.data.developer || []);\n          setRepresentative(res?.data.representative || []);\n          setManager(res?.data.manager || []);\n          setReader(res?.data.reader || []);\n          setAccompanying(res?.data.accompanying || []);\n          setGenerator(res?.data.generator || []);\n\n          setGeneral({\n            notary_id: res?.data.notary_id || null,\n            developer_id: res?.data.developer_id || null,\n            representative_id: res?.data.representative_id || null,\n            manager_id: res?.data.manager_id || null,\n            reader_id: res?.data.reader_id || null,\n            generator_id: res?.data.generator_id || null,\n            cancelled: res?.data.cancelled,\n          });\n\n          setImmovables(res?.data.immovables);\n        }\n      })();\n    }\n  }, [token, id]);\n\n  useEffect(() => {\n    if (firstRender < 2) {\n      setFirstRender((prev) => prev + 1);\n      return;\n    }\n\n    setRepresentative([]);\n    setManager([]);\n\n    if (token && general.developer_id) {\n      (async () => {\n        const res = await getDeveloperInfo(token, Number(general.developer_id));\n        setGeneral({ ...general, representative_id: null, manager_id: null });\n        setRepresentative(res.representative);\n        setManager(res.manager);\n      })();\n    }\n  }, [general.developer_id, token]);\n\n  return {\n    title,\n    notary,\n    developer,\n    representative,\n    manager,\n    reader,\n    accompanying,\n    generator,\n    general,\n    immovables,\n    isSaveButtonDisabled,\n    setGeneral,\n    setImmovables,\n    onImmovableChange,\n    onGeneralClear,\n    onImmovableClear,\n    onSave,\n  };\n};\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport CustomSelect from '../../../../../../../../../../components/CustomSelect';\nimport CustomSwitch from '../../../../../../../../../../components/CustomSwitch';\nimport PrimaryButton from '../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../components/SectionWithTitle';\nimport { useAssistantMain } from './useAssistantMain';\n\nconst AssistantMain = () => {\n  const meta = useAssistantMain();\n\n  return (\n    <div className=\"main\">\n      <div className=\"dashboard-header section-title\">{meta.title}</div>\n\n      <SectionWithTitle title=\"Учасники угоди\" onClear={meta.onGeneralClear}>\n        <div className=\"grid\">\n          <CustomSelect\n            required\n            label=\"Забудовник\"\n            data={meta.developer}\n            onChange={(e) => meta.setGeneral({ ...meta.general, developer_id: e })}\n            selectedValue={meta.general.developer_id}\n          />\n\n          <CustomSelect\n            label=\"Представник\"\n            data={meta.representative}\n            onChange={(e) => meta.setGeneral({ ...meta.general, representative_id: e })}\n            selectedValue={meta.general.representative_id}\n          />\n\n          <CustomSelect\n            label=\"Менеджер\"\n            data={meta.manager}\n            onChange={(e) => meta.setGeneral({ ...meta.general, manager_id: e })}\n            selectedValue={meta.general.manager_id}\n          />\n\n          <CustomSelect\n            required\n            label=\"Нотаріус\"\n            data={meta.notary}\n            onChange={(e) => meta.setGeneral({ ...meta.general, notary_id: e })}\n            selectedValue={meta.general.notary_id}\n          />\n\n          <CustomSelect\n            label=\"Набирач\"\n            data={meta.generator}\n            onChange={(e) => meta.setGeneral({ ...meta.general, generator_id: e })}\n            selectedValue={meta.general.generator_id}\n          />\n\n          <CustomSwitch\n            label=\"Скаcовано\"\n            selected={meta.general.cancelled}\n            onChange={(e) => meta.setGeneral({ ...meta.general, cancelled: e })}\n          />\n        </div>\n      </SectionWithTitle>\n\n      {(meta.immovables || []).map((immovable, index) => (\n        <SectionWithTitle title={immovable.address || ''} onClear={() => meta.onImmovableClear(index)}>\n          <div className=\"grid-center-duet\">\n            <CustomSelect\n              label=\"Читач\"\n              data={meta.reader}\n              onChange={(e) => meta.onImmovableChange(index, 'reader_id', e)}\n              selectedValue={immovable.reader_id}\n            />\n\n            <CustomSelect\n              label=\"Видавач\"\n              data={meta.accompanying}\n              onChange={(e) => meta.onImmovableChange(index, 'accompanying_id', e)}\n              selectedValue={immovable.accompanying_id}\n            />\n          </div>\n        </SectionWithTitle>\n      ))}\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={meta.onSave} disabled={meta.isSaveButtonDisabled} />\n      </div>\n    </div>\n  );\n};\n\nexport default AssistantMain;\n","import * as React from 'react';\nimport './index.scss';\nimport { useSelector } from 'react-redux';\nimport { State } from '../../../../../../../../store/types';\nimport { UserTypes } from '../../../../../../../../types';\nimport GeneratorMain from './components/GeneratorMain';\nimport ManagerMain from './components/ManagerMain';\nimport AssistantMain from './components/Assistant';\n\nconst Main = () => {\n  const { user: { type } } = useSelector((state: State) => state.main);\n\n  if (type === UserTypes.GENERATOR) {\n    return <GeneratorMain />;\n  }\n\n  if (type === UserTypes.MANAGER) {\n    return <ManagerMain />;\n  }\n\n  if (type === UserTypes.ASSISTANT) {\n    return <AssistantMain />;\n  }\n\n  return null;\n};\n\nexport default Main;\n","import * as React from 'react';\nimport Immovable from './components/Immovable';\nimport { DashboardContractNavigation } from '../../../../useDashboardScreen';\nimport Clients from './components/Clients';\nimport Seller from './components/Seller';\nimport SideNotary from './components/SideNotary/SideNotary';\nimport Main from './components/Main';\n\ntype Props = {\n  selectedNav?: DashboardContractNavigation\n}\n\nconst WorkSpace = (props: Props) => {\n  if (props.selectedNav === DashboardContractNavigation.MAIN) {\n    return <Main />;\n  }\n\n  if (props.selectedNav === DashboardContractNavigation.SELLER) {\n    return <Seller />;\n  }\n\n  if (props.selectedNav === DashboardContractNavigation.CLIENTS) {\n    return <Clients />;\n  }\n\n  if (props.selectedNav === DashboardContractNavigation.IMMOVABLES) {\n    return <Immovable />;\n  }\n\n  if (props.selectedNav === DashboardContractNavigation.SIDE_NOTARIES) {\n    return <SideNotary />;\n  }\n\n  return null;\n};\n\nexport default WorkSpace;\n","import * as React from 'react';\nimport './index.scss';\nimport ContentPanel from '../../../../components/ContentPanel';\nimport Modal from '../../../../components/RequestModal';\nimport { useRequestModal } from '../../../../components/RequestModal/useRequestModal';\nimport Navigation from './components/Navigation';\nimport WorkSpace from './components/WorkSpace';\nimport { useManageContainer } from './useManageContainer';\n\nconst ManageContainer = () => {\n  const meta = useManageContainer();\n  const modalProps = useRequestModal();\n\n  return (\n    <main className=\"manage df\">\n      <Navigation selected={meta.selectedNav} />\n      <ContentPanel>\n        <WorkSpace selectedNav={meta.selectedNav} />\n      </ContentPanel>\n      <Modal {...modalProps} />\n    </main>\n  );\n};\n\nexport default ManageContainer;\n","import { useParams, useHistory } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { DashboardContractNavigation } from '../../useDashboardScreen';\nimport { isNumber } from '../../../../utils/numbers';\n\nexport const useManageContainer = () => {\n  const history = useHistory();\n\n  const { section, id } = useParams<{ section: string, id: string }>();\n  const [selectedNav, setSelectedNav] = useState<DashboardContractNavigation>();\n  const [contractData] = useState();\n\n  useEffect(() => {\n    switch (section) {\n      case DashboardContractNavigation.MAIN:\n        setSelectedNav(DashboardContractNavigation.MAIN);\n        return;\n      case DashboardContractNavigation.IMMOVABLES:\n        setSelectedNav(DashboardContractNavigation.IMMOVABLES);\n        return;\n      case DashboardContractNavigation.CLIENTS:\n        setSelectedNav(DashboardContractNavigation.CLIENTS);\n        return;\n      case DashboardContractNavigation.SELLER:\n        setSelectedNav(DashboardContractNavigation.SELLER);\n        return;\n      case DashboardContractNavigation.SIDE_NOTARIES:\n        setSelectedNav(DashboardContractNavigation.SIDE_NOTARIES);\n        return;\n      default:\n        setSelectedNav(DashboardContractNavigation.MAIN);\n    }\n  }, [section]);\n\n  useEffect(() => {\n    if (!isNumber(id)) {\n      history.push('/');\n    }\n  }, [id]);\n\n  return {\n    contractData,\n    selectedNav,\n    setSelectedNav\n  };\n};\n","import React from 'react';\nimport './index.scss';\nimport { Switch, Route } from 'react-router-dom';\nimport Header from '../../components/Header';\nimport DashboardContainer from './components/DashboardContainer';\nimport ManageContainer from './components/ManageContainer';\n\nconst DashboardScreen = () => (\n  <>\n    <Header />\n    <Switch>\n      <Route path=\"/:section/:id\">\n        <ManageContainer />\n      </Route>\n      <DashboardContainer />\n    </Switch>\n  </>\n);\n\nexport default DashboardScreen;\n"],"sourceRoot":""}