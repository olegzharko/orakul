{"version":3,"sources":["components/CustomInput/CustomInput.tsx","components/PrimaryButton/PrimaryButton.tsx","components/CustomInput/index.ts","components/Modal/useModal.ts","components/Modal/Modal.tsx","components/CustomSelect/CustomSelect.tsx","components/Header/utils/useDebounce.ts","components/Header/Header.tsx","components/Header/useHeader.ts","components/CustomSwitch/CustomSwitch.tsx","components/Filter/Filter.tsx","components/Filter/useFilter.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/utils/formatAppointmentDate.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/SchedulerDay/SchedulerDay.js","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridLayout/GridLayout.js","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTableCell/GridTableCell.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTableCell/useGridTableCell.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTable/GridTable.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTable/useGridTable.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/SchedulerTable.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/useSchedulerTable.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerFilterContainer/components/QuantityLabel.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerFilterContainer/components/SchedulerFilter/SchedulerFilter.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerFilterContainer/components/SchedulerFilter/useSchedulerFilter.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerFilterContainer/components/SchedulerLock/SchedulerLock.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerFilterContainer/components/SchedulerLock/useSchedulerLock.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerFilterContainer/SchedulerFilterContainer.tsx","components/RadioButtonsGroup/RadioButtonsGroup.tsx","components/AddFormButton/AddFormButton.tsx","components/RemoveFormButton/RemoveFormButton.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/components/Clients/Clients.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/components/Clients/useClients.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/components/ImmovableContainer/ImmovableContainer.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/components/ImmovableContainer/useImmovableContainer.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/types.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/Form.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/useForm.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/SchedulerForm.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/useSchedulerForm.ts","Screens/SchedulerScreen/components/SchedulerContainer/SchedulerContainer.tsx","Screens/SchedulerScreen/SchedulerScreen.tsx"],"names":["CustomInput","label","onChange","value","type","disabled","useState","text","setText","useEffect","variant","event","target","className","PrimaryButton","onClick","useModal","dispatch","useDispatch","modalInfo","useSelector","state","main","useMemo","handleClose","setModalInfo","open","Modal","success","message","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","CustomSelect","data","selectedValue","size","selected","setSelected","FormControl","InputLabel","Select","val","length","MenuItem","map","id","title","memo","useDebounce","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","Header","searchText","setSearchText","count","setCount","searchAppointments","prev","onSearch","useCallback","e","onLogout","localStorage","clear","setUser","token","useHeader","to","src","alt","placeholder","CustomSwitch","setValue","FormControlLabel","control","Switch","checked","name","color","labelPlacement","Filter","props","meta","onFilterDataChange","horizontal","user","filterInitialData","filter","fetchFilterData","readers","reader","notaries","notary","accompanyings","accompanying","contractTypes","contract_type","developers","developer","sortType","sort_type","representative","setRepresentative","shouldRenderFilter","Boolean","selectedNotary","setSelectedNotary","selectedReader","setSelectedReader","selectedAccompanying","setSelectedAccompanying","selectedContractType","setSelectedContractType","selectedDeveloper","setSelectedDeveloper","selectedRepresentative","setSelectedRepresentative","selectedSortType","setSelectedSortType","clearAll","getDeveloperInfo","then","notary_id","reader_id","accompanying_id","contract_type_id","developer_id","dev_representative_id","useFilter","style","whiteSpace","width","formatAppointmentDate","hours","rooms","days","raw","cell","Math","floor","day","date","year","time","room","split","reverse","join","SchedulerDay","ReactGridLayout","WidthProvider","RGL","GridLayout","appointments","cols","handleDrag","handleClick","dragAndDropWidth","setDragAndDropWidth","schedulerLock","scheduler","$","rowHeight","margin","containerPadding","verticalCompact","preventCollision","layout","onDragStop","all","current","currentApp","find","item","i","isDraggable","appointment","borderLeft","onClickCapture","Object","values","short_info","uuidv4","GridLayoutCell","options","work_time","day_and_date","payload","moment","isBefore","setSelectedNewAppointment","useGridTableCell","rowsQuantity","backgroundColor","GridTable","rows","columns","newSelectedAppointment","_","rowIndex","cellIndex","GridTableCell","SchedulerTable","isLoading","fetchSchedulerSettings","fetchAppointments","setAppointments","shouldLoad","tableColumns","Array","fill","tableRows","handleAppointmentDrag","y","x","date_time","room_id","moveCalendarCard","onAppointmentClick","a","fetchCalendarCard","setSelectedOldAppointment","useSchedulerTable","Loader","QuantityLabel","SchedulerFilter","shouldRender","setShouldRender","fetchAppointmentsByFilter","useSchedulerFilter","SchedulerLock","setSchedulerLock","useSchedulerLock","SchedulerFilterContainer","RadioButtonsGroup","buttons","unicId","setSelectedValue","handleChange","htmlFor","AddFormButton","onKeyPress","RemoveFormButton","index","Clients","clients","onPhoneChange","phone","onNameChange","full_name","useClients","marginLeft","onRemove","onAdd","ImmovableContainer","immovables","developersInfo","building","contracts","form_data","immovableTypes","immovable_type","onContractChange","onBuildingChange","building_id","onImmovableTypeChange","imm_type_id","onBankChange","bank","onProxyChange","proxy","onImmNumChange","imm_number","useImmovableContainer","immovableItem","clientItem","SchedulerForm","selectedCard","initialValues","edit","insideEdit","setEdit","card","setNotary","devCompanyId","setDevCompanyId","devRepresentativeId","setDevRepresentativeId","devManagerId","setDevManagerId","setImmovables","setClients","manager","onNotaryChange","dev_company_id","dev_manager_id","fetchDeveloperInfo","onDeveloperChange","setDevelopersInfo","onRepresentativeChange","onManagerChange","onImmovablesChange","onClientsChange","onClearAll","onAddImmovables","onRemoveImmovable","mapIndex","onAddClients","onRemoveClient","onDeleteCard","removeCalendarCard","activeAddButton","every","onFormCreate","editCalendarCard","createNewCard","selectedNotaryId","selectedDeveloperId","selectedDevRepresentativeId","selecedDevManagerId","useForm","selectedTab","setSelectedTab","oldSelectedAppointment","editAppointmentData","onCloseTab","setEditAppointmentData","useSchedulerForm","SchedulerContainer","modalProps","SchedulerScreen"],"mappings":"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","file":"static/js/6.275a8f91.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\n/* eslint-disable react/react-in-jsx-scope */\nimport React, { useState, useEffect } from 'react';\nimport './index.scss';\nimport { TextField } from '@material-ui/core';\n\ntype Props = {\n  label: string;\n  value?: string | number | null;\n  onChange?: (value: string) => void;\n  type?: string;\n  disabled?: boolean;\n};\n\nconst CustomInput = ({\n  label,\n  onChange,\n  value = '',\n  type = 'string',\n  disabled,\n}: Props) => {\n  const [text, setText] = useState(value || '');\n\n  useEffect(() => {\n    setText(value || '');\n  }, [value]);\n\n  const handleChange = (event: any) => {\n    setText(event.target.value);\n    onChange && onChange(event.target.value);\n  };\n\n  return (\n    <TextField\n      label={label}\n      variant=\"outlined\"\n      value={text}\n      onChange={handleChange}\n      type={type}\n      className=\"custom-input\"\n      disabled={disabled || false}\n    />\n  );\n};\n\nexport default CustomInput;\n","/* eslint-disable prettier/prettier */\n/* eslint-disable react/button-has-type */\nimport React from 'react';\nimport './index.scss';\n\ntype Props = {\n  label: string;\n  onClick: (e: any) => void;\n  disabled: boolean;\n  className?: string;\n};\n\nconst PrimaryButton = ({\n  label, onClick, disabled, className\n}: Props) => (\n  <button\n    className={`primary-button ${disabled ? 'disabled' : ''} ${\n      className || ''\n    }`}\n    onClick={onClick}\n    disabled={disabled}\n  >\n    {label}\n  </button>\n);\n\nexport default PrimaryButton;\n","export { default } from './CustomInput';\n","/* eslint-disable implicit-arrow-linebreak */\nimport { useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setModalInfo } from '../../store/main/actions';\nimport { State } from '../../store/types';\n\nexport const useModal = () => {\n  const dispatch = useDispatch();\n  const { modalInfo } = useSelector((state: State) => state.main);\n\n  const modalProps = useMemo(\n    () => ({\n      ...modalInfo,\n      handleClose: () =>\n        dispatch(\n          setModalInfo({\n            ...modalInfo,\n            open: false,\n          })\n        ),\n    }),\n    [modalInfo]\n  );\n\n  return modalProps;\n};\n","import React from 'react';\nimport './index.scss';\nimport MModal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\ntype Props = {\n  open: boolean;\n  handleClose: () => void;\n  success: boolean;\n  message: string;\n};\n\n// eslint-disable-next-line prettier/prettier\nconst Modal = ({\n  open, handleClose, success, message\n}: Props) => (\n  <MModal\n    className=\"modal-container\"\n    open={open}\n    onClose={handleClose}\n    closeAfterTransition\n    BackdropComponent={Backdrop}\n    BackdropProps={{\n      timeout: 500,\n    }}\n  >\n    <Fade in={open}>\n      <div className={`modal ${success ? 'modal-success' : 'modal-failed'}`}>\n        <p className=\"message\">{message}</p>\n      </div>\n    </Fade>\n  </MModal>\n);\n\nexport default Modal;\n","/* eslint-disable object-curly-newline */\n/* eslint-disable no-unused-vars */\nimport React, { useState, memo, useEffect } from 'react';\nimport './index.scss';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\ntype Data = {\n  id: number;\n  title: string;\n};\n\ntype Props = {\n  onChange: (value: string) => void;\n  data: Data[];\n  label: string;\n  selectedValue?: string | null | number;\n  disabled?: boolean;\n  size?: 'medium' | 'small';\n  className?: string;\n};\n\nconst CustomSelect = ({\n  onChange,\n  data,\n  label,\n  selectedValue,\n  disabled,\n  size = 'medium',\n  className,\n}: Props) => {\n  const [selected, setSelected] = useState(selectedValue || '');\n\n  useEffect(() => {\n    setSelected(selectedValue || '');\n  }, [selectedValue]);\n\n  const handleChange = (event: any) => {\n    const val = event.target.value;\n    setSelected(val);\n    onChange(val);\n  };\n\n  return (\n    <FormControl variant=\"outlined\" className={`customSelect ${className || ''}`} size={size}>\n      <InputLabel>{label}</InputLabel>\n      <Select\n        value={selected}\n        onChange={handleChange}\n        disabled={disabled || data.length === 0}\n      >\n        <MenuItem value=\"\">\n          <em>Выбрать</em>\n        </MenuItem>\n        {data.map(({ id, title }: Data) => (\n          <MenuItem value={id} key={id}>\n            {title}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default memo(CustomSelect);\n","import React, { useState, useEffect } from 'react';\n\nconst useDebounce = (value: string, delay: number) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value]);\n\n  return debouncedValue;\n};\n\nexport default useDebounce;\n","import * as React from 'react';\nimport './index.scss';\nimport { Link } from 'react-router-dom';\nimport { useHeader } from './useHeader';\n\nconst Header = () => {\n  const { onSearch, onLogout, searchText } = useHeader();\n\n  return (\n    <div className=\"header container\">\n      <Link to=\"/\" className=\"header__logo\">\n        <img src=\"/icons/logo.svg\" alt=\"logo\" />\n      </Link>\n      <div className=\"header__search\">\n        <input\n          type=\"text\"\n          placeholder=\"Пошук...\"\n          onChange={onSearch}\n          value={searchText}\n        />\n        <img src=\"/icons/search.svg\" alt=\"search\" />\n      </div>\n      <div className=\"header__control\">\n        <img src=\"/icons/log-out.svg\" alt=\"logout\" onClick={onLogout} />\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import { useDispatch } from 'react-redux';\nimport {\n  ChangeEvent, useState, useEffect, useCallback\n} from 'react';\nimport { setUser } from '../../store/main/actions';\nimport { searchAppointments } from '../../store/appointments/actions';\nimport useDebounce from './utils/useDebounce';\n\nexport const useHeader = () => {\n  const dispatch = useDispatch();\n  const [searchText, setSearchText] = useState<string>('');\n  const [count, setCount] = useState<number>(0);\n\n  const debouncedValue = useDebounce(searchText, 1000);\n\n  useEffect(() => {\n    if (!count) {\n      setCount((prev: number) => prev + 1);\n      return;\n    }\n\n    dispatch(searchAppointments(debouncedValue));\n  }, [debouncedValue]);\n\n  const onSearch = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value);\n  }, [searchText]);\n\n  const onLogout = useCallback(() => {\n    localStorage.clear();\n    dispatch(setUser({ type: null, token: null }));\n  }, []);\n\n  return { onSearch, onLogout, searchText };\n};\n","/* eslint-disable no-unused-vars */\n/* eslint-disable prettier/prettier */\nimport React, { useEffect, useState, memo } from 'react';\nimport { FormControlLabel, Switch } from '@material-ui/core';\nimport './index.scss';\n\ntype Props = {\n  label: string\n  onChange: (val: boolean) => void;\n  selected: boolean;\n  disabled?: boolean;\n};\n\nconst CustomSwitch = ({\n  label,\n  onChange,\n  selected,\n  disabled\n}: Props) => {\n  const [value, setValue] = useState(selected);\n\n  const handleChange = (event: any) => {\n    setValue(event.target.checked);\n    onChange(event.target.checked);\n  };\n\n  useEffect(() => {\n    setValue(selected);\n  }, [selected]);\n\n  return (\n    <FormControlLabel\n      control={(\n        <Switch\n          checked={value}\n          onChange={handleChange}\n          name=\"checkedB\"\n          color=\"primary\"\n        />\n      )}\n      label={label}\n      labelPlacement=\"start\"\n      className=\"custom-switch\"\n      disabled={disabled || false}\n    />\n  );\n};\n\nexport default memo(CustomSwitch);\n","import React from 'react';\nimport './index.scss';\nimport CustomSelect from '../CustomSelect';\nimport { useFilter, Props } from './useFilter';\n\nconst Filter = (props: Props) => {\n  const meta = useFilter(props);\n\n  if (!meta.shouldRenderFilter) {\n    return null;\n  }\n\n  return (\n    <div className={`filter ${props.horizontal ? 'horizontal' : ''}`}>\n      <div className=\"filter__header\">\n        <span style={{ whiteSpace: 'nowrap' }} className={`${props.horizontal ? '' : 'title'}`}>{props.horizontal ? 'Сортувати по:' : 'Фільтр'}</span>\n        {!props.horizontal && (\n          <img\n            src=\"/icons/clear-form.svg\"\n            alt=\"clear form\"\n            onClick={meta.clearAll}\n            className=\"filter__clear\"\n          />\n        )}\n      </div>\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '115px' : '100%' }}>\n        <CustomSelect\n          data={meta.notaries}\n          selectedValue={meta.selectedNotary}\n          onChange={meta.setSelectedNotary}\n          label=\"Нотаріус\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '90px' : '100%' }}>\n        <CustomSelect\n          data={meta.readers}\n          selectedValue={meta.selectedReader}\n          onChange={meta.setSelectedReader}\n          label=\"Читач\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '110px' : '100%' }}>\n        <CustomSelect\n          data={meta.accompanyings}\n          selectedValue={meta.selectedAccompanying}\n          onChange={meta.setSelectedAccompanying}\n          label=\"Видавач\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '150px' : '100%' }}>\n        <CustomSelect\n          data={meta.contractTypes}\n          selectedValue={meta.selectedContractType}\n          onChange={meta.setSelectedContractType}\n          label=\"Тип договору\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '140px' : '100%' }}>\n        <CustomSelect\n          data={meta.developers}\n          selectedValue={meta.selectedDeveloper}\n          onChange={meta.setSelectedDeveloper}\n          label=\"Забудовник\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '125px' : '100%' }}>\n        <CustomSelect\n          data={meta.representative}\n          selectedValue={meta.selectedRepresentative}\n          onChange={meta.setSelectedRepresentative}\n          label=\"Підписант\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      {!props.horizontal && (\n        <div\n          className=\"filter__select\"\n        >\n          <CustomSelect\n            data={meta.sortType}\n            selectedValue={meta.selectedSortType}\n            onChange={meta.setSelectedSortType}\n            label=\"Сортувати\"\n            size=\"medium\"\n          />\n        </div>\n      )}\n\n      {props.horizontal && (\n        <div className=\" df\">\n          <img\n            src=\"/icons/clear-form.svg\"\n            alt=\"clear form\"\n            onClick={meta.clearAll}\n            className=\"filter__clear\"\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Filter;\n","import {\n  useEffect, useMemo, useState, useCallback\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FilterData, State } from '../../store/types';\nimport { SelectItem } from '../../types';\nimport { fetchFilterData } from '../../store/filter/actions';\nimport getDeveloperInfo from '../../services/getDeveloperInfo';\n\nexport type Props = {\n  onFilterDataChange: (data: FilterData) => void;\n  horizontal?: boolean;\n}\n\nexport const useFilter = ({ onFilterDataChange, horizontal }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n  const { filterInitialData } = useSelector((state: State) => state.filter);\n\n  useEffect(() => {\n    dispatch(fetchFilterData());\n  }, [token]);\n\n  const readers = useMemo(() => filterInitialData?.reader, [filterInitialData]);\n  const notaries = useMemo(() => filterInitialData?.notary, [\n    filterInitialData,\n  ]);\n  const accompanyings = useMemo(() => filterInitialData?.accompanying, [\n    filterInitialData,\n  ]);\n  const contractTypes = useMemo(() => filterInitialData?.contract_type, [\n    filterInitialData,\n  ]);\n  const developers = useMemo(() => filterInitialData?.developer, [\n    filterInitialData,\n  ]);\n  const sortType = useMemo(() => filterInitialData?.sort_type, [\n    filterInitialData,\n  ]);\n  const [representative, setRepresentative] = useState<SelectItem[]>([]);\n\n  const shouldRenderFilter = useMemo(() => Boolean(filterInitialData), [\n    filterInitialData,\n  ]);\n\n  // selected values and CTA\n  const [selectedNotary, setSelectedNotary] = useState<string | null>(null);\n  const [selectedReader, setSelectedReader] = useState<string | null>(null);\n  const [selectedAccompanying, setSelectedAccompanying] = useState<\n    string | null\n  >(null);\n  const [selectedContractType, setSelectedContractType] = useState<\n    string | null\n  >(null);\n  const [selectedDeveloper, setSelectedDeveloper] = useState<string | null>(\n    null\n  );\n  const [selectedRepresentative, setSelectedRepresentative] = useState<\n    string | null\n  >(null);\n  const [selectedSortType, setSelectedSortType] = useState<string | null>(null);\n\n  const clearAll = useCallback(() => {\n    setSelectedNotary(null);\n    setSelectedReader(null);\n    setSelectedAccompanying(null);\n    setSelectedContractType(null);\n    setSelectedDeveloper(null);\n    setSelectedRepresentative(null);\n    setSelectedSortType(null);\n  }, []);\n\n  // useEffects\n  useEffect(() => {\n    setSelectedRepresentative(null);\n    if (token && selectedDeveloper) {\n      getDeveloperInfo(token, +selectedDeveloper)\n        .then((data) => setRepresentative(data.representative || []));\n    }\n  }, [selectedDeveloper]);\n\n  useEffect(() => {\n    const data: FilterData = {\n      notary_id: selectedNotary || null,\n      reader_id: selectedReader || null,\n      accompanying_id: selectedAccompanying || null,\n      contract_type_id: selectedContractType || null,\n      developer_id: selectedDeveloper || null,\n      dev_representative_id: selectedRepresentative || null,\n    };\n\n    if (!horizontal) {\n      data.sort_type = selectedSortType;\n    }\n\n    onFilterDataChange(data);\n  }, [\n    selectedNotary,\n    selectedReader,\n    selectedAccompanying,\n    selectedContractType,\n    selectedDeveloper,\n    selectedRepresentative,\n    selectedSortType,\n  ]);\n\n  return {\n    shouldRenderFilter,\n    notaries,\n    readers,\n    accompanyings,\n    contractTypes,\n    developers,\n    representative,\n    sortType,\n    selectedNotary,\n    selectedReader,\n    selectedRepresentative,\n    selectedDeveloper,\n    selectedContractType,\n    selectedAccompanying,\n    selectedSortType,\n    setSelectedNotary,\n    setSelectedReader,\n    setSelectedAccompanying,\n    setSelectedContractType,\n    setSelectedDeveloper,\n    setSelectedRepresentative,\n    setSelectedSortType,\n    clearAll,\n  };\n};\n","const formatAppointmentDate = (\n  hours: any,\n  rooms: any,\n  days: any,\n  raw: number,\n  cell: number\n) => {\n  const { day, date, year } = days[Math.floor(raw / hours.length)];\n  const { time } = hours[raw % hours.length];\n  const room = rooms[cell].id;\n  return {\n    day,\n    date: date.split('.').reverse().join('.'),\n    year,\n    time,\n    room,\n  };\n};\n\nexport default formatAppointmentDate;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport './SchedulerDay.scss';\n\nconst SchedulerDay = ({ day, hours }) => (\n  <div className=\"scheduler__weekDay\">\n    <div className=\"scheduler__day\">\n      <p>\n        {day.day}\n        <br />\n        {day.date}\n      </p>\n    </div>\n    <div className=\"scheduler__timeLine\">\n      {hours.map(({ time }) => (\n        <p key={time}>{time}</p>\n      ))}\n    </div>\n  </div>\n);\n\nexport default SchedulerDay;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport './GridLayout.scss';\nimport RGL, { WidthProvider } from 'react-grid-layout';\nimport $ from 'jquery';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useSelector } from 'react-redux';\n\nconst ReactGridLayout = WidthProvider(RGL);\n\nexport default function GridLayout({\n  appointments,\n  cols,\n  handleDrag,\n  handleClick,\n}) {\n  const [dragAndDropWidth, setDragAndDropWidth] = useState(1200);\n  const { schedulerLock } = useSelector((state) => state.scheduler);\n\n  useEffect(() => {\n    setDragAndDropWidth($('.scheduler__appointments').width());\n  }, []);\n\n  const onDrag = (all, current) => {\n    const currentApp = all.find((item) => item.i === current.i);\n    handleDrag(currentApp);\n    handleClick(currentApp);\n  };\n\n  if (!appointments) {\n    return <span>Loading...</span>;\n  }\n\n  return (\n    <ReactGridLayout\n      className=\"scheduler__dragAndDrop\"\n      cols={cols}\n      rowHeight={75}\n      width={dragAndDropWidth}\n      margin={[0, 0]}\n      containerPadding={[0, 0]}\n      verticalCompact={false}\n      preventCollision\n      layout={appointments}\n      onDragStop={onDrag}\n      isDraggable={!schedulerLock}\n    >\n      {appointments.map((appointment) => (\n        <div\n          key={appointment.i}\n          className=\"appointment\"\n          style={{ borderLeft: `4px solid ${appointment.color}` }}\n          onClickCapture={() => handleClick(appointment)}\n        >\n          <div className=\"appointment__title\">{appointment.title}</div>\n          <table className=\"appointment__table\">\n            <tbody>\n              <tr>\n                {Object.values(appointment.short_info).map((item) => (\n                  <td key={uuidv4()}>{item}</td>\n                ))}\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      ))}\n    </ReactGridLayout>\n  );\n}\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React from 'react';\nimport { Props, useGridTableCell } from './useGridTableCell';\n\nconst GridLayoutCell = (props: Props) => {\n  const { onClick } = useGridTableCell(props);\n\n  return (\n    <td\n      onClick={onClick}\n      style={{\n        width: `calc(100% / ${props.rowsQuantity})`,\n        backgroundColor: props.selected ? '#E5E5E5' : '',\n      }}\n    />\n  );\n};\n\nexport default GridLayoutCell;\n","/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable operator-linebreak */\nimport { useMemo, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { State } from '../../../../../../../../store/types';\nimport formatAppointmentDate from '../../utils/formatAppointmentDate';\nimport { setSelectedNewAppointment } from '../../../../../../../../store/scheduler/actions';\n\nexport type Props = {\n  rowsQuantity: number;\n  raw: number;\n  cell: number;\n  selected: boolean;\n};\n\nexport const useGridTableCell = ({ raw, cell }: Props) => {\n  const { options } = useSelector((state: State) => state.scheduler);\n  const dispatch = useDispatch();\n\n  const rooms = useMemo(() => options?.rooms, [options]);\n  const hours = useMemo(() => options?.work_time, [options]);\n  const days = useMemo(() => options?.day_and_date, [options]);\n\n  const onClick = useCallback(() => {\n    const payload = formatAppointmentDate(hours, rooms, days, raw, cell);\n    const isBefore = moment(\n      `${payload.year}.${payload.date}. ${payload.time}`\n    ).isBefore(moment());\n\n    if (isBefore) return;\n    dispatch(setSelectedNewAppointment({ ...payload, raw, cell }));\n  }, [hours, rooms, days, raw, cell]);\n\n  return { onClick };\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport GridTableCell from '../GridTableCell/GridTableCell';\nimport { Props, useGridTable } from './useGridTable';\n\nexport default function GridTable({ rows, columns }: Props) {\n  const { newSelectedAppointment } = useGridTable();\n\n  return (\n    <div className=\"scheduler__bodyTable\">\n      <table>\n        <tbody>\n          {rows.map((_: any, rowIndex: number) => (\n            <tr key={uuidv4()}>\n              {columns.map((day: any, cellIndex: number) => (\n                <GridTableCell\n                  selected={\n                    // eslint-disable-next-line prettier/prettier\n                    newSelectedAppointment?.raw === rowIndex\n                    // eslint-disable-next-line prettier/prettier\n                    && newSelectedAppointment?.cell === cellIndex\n                  }\n                  rowsQuantity={rows.length}\n                  raw={rowIndex}\n                  cell={cellIndex}\n                  key={uuidv4()}\n                />\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { State } from '../../../../../../../../store/types';\n\nexport type Props = {\n  rows: any;\n  columns: any;\n};\n\nexport const useGridTable = () => {\n  const newSelectedAppointment = useSelector(\n    (state: State) => state.scheduler.newSelectedAppointment\n  );\n\n  return { newSelectedAppointment };\n};\n","import React from 'react';\nimport './index.scss';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useSchedulerTable } from './useSchedulerTable';\nimport Loader from '../../../../../../components/Loader/Loader';\n\n// components\nimport SchedulerDay from './components/SchedulerDay/SchedulerDay';\nimport GridLayout from './components/GridLayout/GridLayout';\nimport GridTable from './components/GridTable/GridTable';\n\nconst SchedulerTable = () => {\n  const {\n    shouldLoad,\n    rooms,\n    hours,\n    tableRows,\n    tableColumns,\n    days,\n    appointments,\n    handleAppointmentDrag,\n    onAppointmentClick,\n  } = useSchedulerTable();\n\n  if (shouldLoad) {\n    return (\n      <div className=\"scheduler\">\n        <Loader />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"scheduler\">\n      <div className=\"scheduler__header\">\n        <div />\n        <div>\n          <table>\n            <tbody>\n              <tr>\n                {rooms.map(({ title }: any) => (\n                  <td\n                    key={title}\n                    style={{ width: `calc(100% / ${rooms.length})` }}\n                  >\n                    {title}\n                  </td>\n                ))}\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <div className=\"scheduler__body\">\n        <div className=\"scheduler__dayBar\">\n          {days.map((item: any) => (\n            <SchedulerDay day={item} hours={hours} key={uuidv4()} />\n          ))}\n        </div>\n        <div className=\"scheduler__appointments\">\n          <GridTable rows={tableRows} columns={tableColumns} />\n          <GridLayout\n            appointments={appointments}\n            cols={tableColumns.length}\n            handleDrag={handleAppointmentDrag}\n            handleClick={onAppointmentClick}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SchedulerTable;\n","import { useCallback, useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UserTypes } from '../../../../../../types';\nimport {\n  setSelectedOldAppointment,\n  fetchCalendarCard,\n  fetchSchedulerSettings,\n  moveCalendarCard,\n} from '../../../../../../store/scheduler/actions';\nimport { fetchAppointments, setAppointments } from '../../../../../../store/appointments/actions';\nimport { State } from '../../../../../../store/types';\nimport formatAppointmentDate from './utils/formatAppointmentDate';\n\nexport const useSchedulerTable = () => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n  const { options, isLoading } = useSelector((state: State) => state.scheduler);\n  const { appointments } = useSelector((state: State) => state.appointments);\n\n  useEffect(() => {\n    if (!isLoading) {\n      dispatch(fetchSchedulerSettings());\n      dispatch(fetchAppointments());\n    }\n\n    return () => { dispatch(setAppointments([])); };\n  }, [token]);\n\n  const rooms = useMemo(() => options?.rooms, [options]);\n  const hours = useMemo(() => options?.work_time, [options]);\n\n  const shouldLoad = useMemo(() => isLoading || !options, [\n    isLoading,\n    rooms,\n    hours,\n  ]);\n\n  const tableColumns = useMemo(() => new Array(rooms?.length || 0).fill(1), [\n    rooms,\n  ]);\n\n  const days = useMemo(() => options?.day_and_date, [options]);\n\n  const tableRows = useMemo(\n    () => new Array(hours?.length * days?.length || 0).fill(1),\n    [hours]\n  );\n\n  const handleAppointmentDrag = useCallback(\n    (appointment) => {\n      const payload = formatAppointmentDate(\n        hours,\n        rooms,\n        days,\n        appointment.y,\n        appointment.x\n      );\n\n      const date_time = `${payload.year}.${payload.date}. ${payload.time}`;\n\n      const data = {\n        date_time,\n        room_id: payload.room,\n      };\n\n      dispatch(moveCalendarCard(data, appointment.i));\n    },\n    [hours, days, rooms, days]\n  );\n\n  const onAppointmentClick = useCallback(\n    async ({ x, y, i }: any) => {\n      const payload = formatAppointmentDate(hours, rooms, days, y, x);\n\n      dispatch(fetchCalendarCard(i));\n\n      dispatch(\n        setSelectedOldAppointment({\n          ...payload,\n          i,\n        })\n      );\n    },\n    [hours, rooms, days]\n  );\n\n  return {\n    shouldLoad,\n    rooms,\n    hours,\n    tableRows,\n    tableColumns,\n    days,\n    appointments,\n    handleAppointmentDrag,\n    onAppointmentClick,\n  };\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { State } from '../../../../../../../store/types';\n\nexport const QuantityLabel = () => {\n  const { appointments } = useSelector((state: State) => state.appointments);\n\n  return (\n    <span style={{ whiteSpace: 'nowrap' }}>\n      {`В роботі: ${appointments?.length}`}\n    </span>\n  );\n};\n\nexport default QuantityLabel;\n","import * as React from 'react';\nimport Filter from '../../../../../../../../components/Filter';\nimport { useSchedulerFilter } from './useSchedulerFilter';\n\nconst SchedulerFilter = () => {\n  const { onFilterDataChange } = useSchedulerFilter();\n\n  return (\n    <Filter onFilterDataChange={onFilterDataChange} horizontal />\n  );\n};\n\nexport default SchedulerFilter;\n","import { useDispatch } from 'react-redux';\nimport { useCallback, useState } from 'react';\nimport { FilterData } from '../../../../../../../../store/types';\nimport { fetchAppointmentsByFilter } from '../../../../../../../../store/appointments/actions';\n\nexport const useSchedulerFilter = () => {\n  const [shouldRender, setShouldRender] = useState<boolean>(false);\n  const dispatch = useDispatch();\n\n  const onFilterDataChange = useCallback((data: FilterData) => {\n    if (!shouldRender) {\n      setShouldRender(true);\n      return;\n    }\n\n    dispatch(fetchAppointmentsByFilter(data));\n  }, [shouldRender]);\n\n  return { onFilterDataChange };\n};\n","import React from 'react';\nimport { useSchedulerLock } from './useSchedulerLock';\nimport './index.scss';\n\nconst SchedulerLock = () => {\n  const { onClick, schedulerLock } = useSchedulerLock();\n\n  return (\n    <div className={`scheduler__lock-button ${schedulerLock ? '' : 'unLock'}`}>\n      <img src=\"/icons/lock.svg\" alt=\"lock\" onClick={onClick} />\n    </div>\n  );\n};\n\nexport default SchedulerLock;\n","import { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSchedulerLock } from '../../../../../../../../store/scheduler/actions';\nimport { State } from '../../../../../../../../store/types';\n\nexport const useSchedulerLock = () => {\n  const dispatch = useDispatch();\n  const { schedulerLock } = useSelector((state: State) => state.scheduler);\n\n  const onClick = useCallback(() => {\n    dispatch(setSchedulerLock(!schedulerLock));\n  }, [schedulerLock]);\n\n  return { onClick, schedulerLock };\n};\n","import React from 'react';\nimport Filter from '../../../../../../components/Filter';\nimport QuantityLabel from './components/QuantityLabel';\nimport SchedulerFilter from './components/SchedulerFilter';\nimport SchedulerLock from './components/SchedulerLock';\nimport './index.scss';\n\nconst SchedulerFilterContainer = () => (\n  <div className=\"scheduler__filter\">\n    <QuantityLabel />\n    <SchedulerFilter />\n    <SchedulerLock />\n  </div>\n);\n\nexport default SchedulerFilterContainer;\n","/* eslint-disable react/require-default-props */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/no-unused-prop-types */\nimport React, { useState, memo, useEffect } from 'react';\nimport './index.scss';\nimport { v4 as uuidv4 } from 'uuid';\n\ntype Button = {\n  id: number;\n  title: string;\n};\n\ntype Props = {\n  buttons: Button[];\n  unicId: string;\n  onChange: (id: number) => void;\n  selected?: number | null;\n};\n\nexport const RadioButtonsGroup = ({\n  buttons,\n  onChange,\n  selected,\n  unicId,\n}: Props) => {\n  const [selectedValue, setSelectedValue] = useState(selected || buttons[0].id);\n\n  useEffect(() => {\n    setSelectedValue(selected || buttons[0].id);\n  }, [selected]);\n\n  const handleChange = (id: number) => {\n    onChange(id);\n  };\n\n  return (\n    <div className=\"radio-buttons-group\">\n      {buttons.map(({ id, title }: Button) => (\n        <div\n          key={uuidv4()}\n          className={`radio-buttons-group__element ${\n            buttons.length === 1 ? 'edit' : ''\n          }`}\n        >\n          <input\n            type=\"radio\"\n            id={unicId + title}\n            value={id}\n            checked={selectedValue === id}\n            onChange={() => handleChange(id)}\n            className=\"input\"\n          />\n          <label htmlFor={unicId + title} className=\"label\">\n            {title}\n          </label>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioButtonsGroup);\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport './index.scss';\n\ntype Props = {\n  onClick: () => void;\n  disabled?: boolean;\n};\n\nconst AddFormButton = ({ onClick, disabled }: Props) => {\n  const handleClick = () => {\n    if (disabled) return;\n    onClick();\n  };\n\n  return (\n    <div\n      className={`add-form-button ${disabled ? 'disabled' : ''}`}\n      onClick={handleClick}\n      onKeyPress={handleClick}\n    >\n      <img src=\"/icons/plus.svg\" alt=\"plus\" />\n    </div>\n  );\n};\n\nexport default AddFormButton;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport './index.scss';\n\ntype Props = {\n  onClick: (index: number) => void;\n  index: number;\n  disabled?: boolean;\n};\n\nconst RemoveFormButton = ({ onClick, index, disabled }: Props) => {\n  const handleClick = () => {\n    if (disabled) return;\n    onClick(index);\n  };\n\n  return (\n    <div\n      className={`remove-form-button ${disabled ? 'disabled' : ''}`}\n      onClick={handleClick}\n      onKeyPress={() => onClick(index)}\n    >\n      <img src=\"/icons/minus.svg\" alt=\"minus\" />\n    </div>\n  );\n};\n\nexport default RemoveFormButton;\n","/* eslint-disable react/destructuring-assignment */\nimport React, { memo } from 'react';\nimport './index.scss';\nimport { v4 as uuidv4 } from 'uuid';\nimport AddFormButton from '../../../../../../../../../../components/AddFormButton';\nimport CustomInput from '../../../../../../../../../../components/CustomInput/CustomInput';\nimport RemoveFormButton from '../../../../../../../../../../components/RemoveFormButton';\nimport { Props, useClients } from './useClients';\n\nconst Clients = (props: Props) => {\n  const meta = useClients(props);\n\n  return (\n    <div className=\"mv12\">\n      {props.clients.map((item, index) => (\n        <div className=\"clients__item mv12\">\n          <CustomInput\n            label=\"ПІБ\"\n            value={item.full_name}\n            onChange={(val) => meta.onNameChange(index, val)}\n            disabled={props.disabled || false}\n          />\n\n          <div className=\"mv12 df-jc-sb\">\n            <CustomInput\n              label=\"Номер телефону\"\n              value={item.phone}\n              onChange={(val) => meta.onPhoneChange(index, val)}\n              disabled={props.disabled || false}\n            />\n\n            {props.clients.length > 1 && (\n              <div style={{ marginLeft: '12px' }}>\n                <RemoveFormButton\n                  onClick={props.onRemove}\n                  index={index}\n                  disabled={props.disabled || false}\n                />\n              </div>\n            )}\n\n            {index === props.clients.length - 1 && (\n              <div style={{ marginLeft: '12px' }}>\n                <AddFormButton\n                  onClick={props.onAdd}\n                  disabled={props.disabled || false}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(Clients);\n","import { useCallback } from 'react';\nimport { CodeFixAction } from 'typescript';\nimport { ClientItem } from '../../../../../../../../../../types';\n\nexport type Props = {\n  clients: ClientItem[];\n  onChange: (index: number, value: ClientItem) => void;\n  onAdd: () => void;\n  onRemove: (index: number) => void;\n  disabled?: boolean;\n};\n\nexport const useClients = ({ onChange, clients }: Props) => {\n  const onPhoneChange = useCallback(\n    (index: number, value: string) => {\n      onChange(index, {\n        ...clients[index],\n        phone: value,\n      });\n    },\n    [clients]\n  );\n\n  const onNameChange = useCallback(\n    (index: number, value: string) => {\n      onChange(index, {\n        ...clients[index],\n        full_name: value,\n      });\n    },\n    [clients]\n  );\n\n  return { onPhoneChange, onNameChange };\n};\n","/* eslint-disable prettier/prettier */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable no-unused-vars */\nimport React, { memo } from 'react';\nimport './index.scss';\nimport { v4 as uuidv4 } from 'uuid';\nimport AddFormButton from '../../../../../../../../../../components/AddFormButton';\nimport CustomInput from '../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../components/CustomSelect';\nimport CustomSwitch from '../../../../../../../../../../components/CustomSwitch';\nimport RadioButtonsGroup from '../../../../../../../../../../components/RadioButtonsGroup';\nimport RemoveFormButton from '../../../../../../../../../../components/RemoveFormButton';\nimport { ImmovableItem } from '../../../../../../../../../../types';\nimport { useImmovableContainer, Props } from './useImmovableContainer';\n\nconst ImmovableContainer = (props: Props) => {\n  const meta = useImmovableContainer(props);\n  return (\n    <div className=\"mv12 immovables__group\">\n      {props.immovables.map((item: ImmovableItem, index: number) => (\n        <div className=\"immovables__item mv12\">\n          <RadioButtonsGroup\n            buttons={\n              props.disabled\n                ? meta.contracts.filter(\n                  ({ id }: any) => id === (item.contract_type_id || meta.contracts[0].id)\n                )\n                : meta.contracts\n            }\n            onChange={(val) => meta.onContractChange(index, val)}\n            selected={item.contract_type_id}\n            unicId={`contract-${index}`}\n          />\n\n          <div className=\"mv12\">\n            <CustomSelect\n              onChange={(val) => meta.onBuildingChange(index, val)}\n              data={meta.building}\n              label=\"Будинок\"\n              selectedValue={item.building_id}\n              disabled={props.disabled || false}\n            />\n          </div>\n\n          <RadioButtonsGroup\n            buttons={\n              props.disabled\n                ? meta.immovableTypes.filter(\n                  ({ id }: any) => id === (item.imm_type_id || meta.immovableTypes[0].id)\n                )\n                : meta.immovableTypes\n            }\n            onChange={(val) => meta.onImmovableTypeChange(index, val)}\n            selected={item.imm_type_id}\n            unicId={`types-${index}`}\n          />\n\n          <div className=\"mv12\">\n            <CustomSwitch\n              label=\"Банк\"\n              onChange={(val) => meta.onBankChange(index, val)}\n              selected={item.bank}\n              disabled={props.disabled}\n            />\n          </div>\n\n          <div className=\"mv12\">\n            <CustomSwitch\n              label=\"Довіреність\"\n              onChange={(val) => meta.onProxyChange(index, val)}\n              selected={item.proxy}\n              disabled={props.disabled}\n            />\n          </div>\n\n          <div className=\"mv12 df-jc-sb\">\n            <CustomInput\n              key=\"test\"\n              label=\"Номер приміщення\"\n              onChange={(val) => meta.onImmNumChange(index, val)}\n              value={item.imm_number}\n              disabled={props.disabled}\n            />\n\n            {props.immovables.length > 1 && (\n              <div style={{ marginLeft: '12px' }}>\n                <RemoveFormButton\n                  onClick={props.onRemove}\n                  index={index}\n                  disabled={props.disabled}\n                />\n              </div>\n            )}\n\n            {index === props.immovables.length - 1 && (\n              <div style={{ marginLeft: '12px' }}>\n                <AddFormButton\n                  onClick={props.onAdd}\n                  disabled={props.disabled}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(ImmovableContainer);\n","import { useMemo, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport { State } from '../../../../../../../../../../store/types';\nimport {\n  ImmovableItem,\n  ImmovableItems,\n} from '../../../../../../../../../../types';\n\nexport type Props = {\n  immovables: ImmovableItems;\n  onChange: (index: number, value: ImmovableItem) => void;\n  onAdd: () => void;\n  onRemove: (index: number) => void;\n  disabled?: boolean;\n};\n\nexport const useImmovableContainer = ({ immovables, onChange }: Props) => {\n  const { options, developersInfo } = useSelector(\n    (state: State) => state.scheduler\n  );\n\n  const building = useMemo(() => developersInfo?.building || [], [\n    developersInfo,\n  ]);\n\n  const contracts = useMemo(() => options?.form_data.contract_type, [options]);\n\n  const immovableTypes = useMemo(() => options?.form_data.immovable_type, [\n    options,\n  ]);\n\n  // onChange functions\n  const onContractChange = useCallback(\n    (index: number, id: number) => {\n      onChange(index, {\n        ...immovables[index],\n        contract_type_id: id,\n      });\n    },\n    [immovables]\n  );\n\n  const onBuildingChange = useCallback(\n    (index: number, id: string) => {\n      onChange(index, {\n        ...immovables[index],\n        building_id: +id,\n      });\n    },\n    [immovables]\n  );\n\n  const onImmovableTypeChange = useCallback(\n    (index: number, id: number) => {\n      onChange(index, {\n        ...immovables[index],\n        imm_type_id: id,\n      });\n    },\n    [immovables]\n  );\n\n  const onBankChange = useCallback(\n    (index: number, val: boolean) => {\n      onChange(index, {\n        ...immovables[index],\n        bank: val,\n      });\n    },\n    [immovables]\n  );\n\n  const onProxyChange = useCallback(\n    (index: number, val: boolean) => {\n      onChange(index, {\n        ...immovables[index],\n        proxy: val,\n      });\n    },\n    [immovables]\n  );\n\n  const onImmNumChange = useCallback(\n    (index: number, val: string) => {\n      onChange(index, {\n        ...immovables[index],\n        imm_number: +val,\n      });\n    },\n    [immovables]\n  );\n\n  return {\n    building,\n    contracts,\n    immovableTypes,\n    onContractChange,\n    onBuildingChange,\n    onImmovableTypeChange,\n    onBankChange,\n    onProxyChange,\n    onImmNumChange,\n  };\n};\n","import { ClientItem, ImmovableItem } from '../../../../../../../../types';\n\nexport type ImmovableItemKey = keyof ImmovableItem;\n\nexport const immovableItem: ImmovableItem = {\n  contract_type_id: null,\n  building_id: null,\n  imm_type_id: null,\n  imm_number: null,\n  bank: false,\n  proxy: false,\n};\n\nexport const clientItem: ClientItem = {\n  phone: null,\n  full_name: null,\n};\n","/* eslint-disable indent */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React, { memo } from 'react';\nimport RadioButtonsGroup from '../../../../../../../../components/RadioButtonsGroup';\nimport CustomSelect from '../../../../../../../../components/CustomSelect';\nimport './index.scss';\nimport Clients from './components/Clients/Clients';\nimport PrimaryButton from '../../../../../../../../components/PrimaryButton';\nimport Loader from '../../../../../../../../components/Loader/Loader';\nimport ImmovableContainer from './components/ImmovableContainer';\nimport { useForm, Props } from './useForm';\n\nconst SchedulerForm = (props: Props) => {\n  const meta = useForm(props);\n\n  if (meta.shouldLoad) {\n    return (\n      <div className=\"schedulerForm\">\n        <Loader />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"schedulerForm\">\n      <div className=\"schedulerForm__forms\">\n        <div className=\"schedulerForm__header\">\n          <p className=\"title\">\n            {meta.insideEdit || props.edit\n              ? `Запис № ${props.selectedCard.i}`\n              : 'Новий запис'}\n          </p>\n          {meta.insideEdit ? (\n            <img\n              src=\"/icons/delete.svg\"\n              alt=\"delete\"\n              className=\"clear-icon\"\n              onClick={meta.onDeleteCard}\n            />\n          ) : (\n            <img\n              src=\"/icons/clear.svg\"\n              alt=\"clear\"\n              className=\"clear-icon\"\n              onClick={meta.onClearAll}\n            />\n          )}\n        </div>\n\n        <div className=\"mv12\">\n          <RadioButtonsGroup\n            buttons={\n              meta.insideEdit\n                ? meta.notaries.filter(\n                    ({ id }: any) => id === meta.selectedNotaryId\n                  )\n                : meta.notaries\n            }\n            onChange={meta.onNotaryChange}\n            selected={meta.selectedNotaryId}\n            unicId=\"notaries\"\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomSelect\n            label=\"Забудовник\"\n            data={meta.developers}\n            onChange={meta.onDeveloperChange}\n            selectedValue={meta.selectedDeveloperId}\n            disabled={meta.insideEdit || false}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomSelect\n            onChange={meta.onRepresentativeChange}\n            data={meta.representative}\n            label=\"Підписант\"\n            selectedValue={meta.selectedDevRepresentativeId}\n            disabled={meta.insideEdit || false}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomSelect\n            onChange={meta.onManagerChange}\n            data={meta.manager}\n            label=\"Менеджер\"\n            selectedValue={meta.selecedDevManagerId}\n            disabled={meta.insideEdit || false}\n          />\n        </div>\n\n        <ImmovableContainer\n          immovables={meta.immovables}\n          onChange={meta.onImmovablesChange}\n          onAdd={meta.onAddImmovables}\n          onRemove={meta.onRemoveImmovable}\n          disabled={meta.insideEdit || false}\n        />\n\n        <Clients\n          clients={meta.clients}\n          onChange={meta.onClientsChange}\n          onAdd={meta.onAddClients}\n          onRemove={meta.onRemoveClient}\n          disabled={meta.insideEdit || false}\n        />\n\n        <div className=\"mv12\">\n          {meta.insideEdit && (\n            <PrimaryButton\n              label=\"Редагувати\"\n              onClick={() => meta.setEdit(false)}\n              disabled={props.edit ? false : !meta.activeAddButton}\n              className=\"schedulerForm__editButton\"\n            />\n          )}\n\n          {!meta.insideEdit && (\n            <PrimaryButton\n              label={`${props.edit ? 'Зберегти' : 'Створити'}`}\n              onClick={meta.onFormCreate}\n              disabled={!meta.activeAddButton}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SchedulerForm);\n","/* eslint-disable prettier/prettier */\n/* eslint-disable arrow-body-style */\nimport {\n  useMemo,\n  useState,\n  useCallback,\n  useEffect\n} from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { State } from '../../../../../../../../store/types';\n\nimport {\n  setDevelopersInfo,\n  setSelectedNewAppointment,\n  createNewCard,\n  editCalendarCard,\n  fetchDeveloperInfo,\n  removeCalendarCard\n} from '../../../../../../../../store/scheduler/actions';\n\nimport { clientItem, immovableItem } from './types';\n\nimport {\n  ClientItem,\n  ImmovableItem,\n  ImmovableItems,\n  NewCard\n} from '../../../../../../../../types';\n\nexport type Props = {\n  selectedCard: any,\n  initialValues?: any,\n  edit?: boolean,\n}\n\nexport const useForm = ({ selectedCard, initialValues, edit }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n  const { options, developersInfo, isLoading } = useSelector(\n    (state: State) => state.scheduler\n  );\n  const [insideEdit, setEdit] = useState<boolean>(edit || false);\n\n  // Form State\n  const [notary, setNotary] = useState<number | null>(initialValues?.card.notary_id || null);\n  const [devCompanyId, setDevCompanyId] = useState<number | null>(null);\n  const [devRepresentativeId, setDevRepresentativeId] = useState<number | null>(null);\n  const [devManagerId, setDevManagerId] = useState<number | null>(null);\n  const [immovables, setImmovables] = useState<ImmovableItems>([immovableItem]);\n  const [clients, setClients] = useState<ClientItem[]>([clientItem]);\n\n  // Form Memo Values\n  const shouldLoad = useMemo(() => isLoading || !options, [options, isLoading]);\n\n  const notaries = useMemo(() => options?.form_data.notary, [options]);\n\n  const developers = useMemo(() => options?.form_data.developer, [options]);\n\n  const manager = useMemo(() => developersInfo?.manager || [], [\n    developersInfo,\n  ]);\n\n  const representative = useMemo(() => developersInfo?.representative || [], [\n    developersInfo,\n  ]);\n\n  // Form onChange functions\n  const onNotaryChange = useCallback((value) => {\n    setNotary(value);\n  }, []);\n\n  useEffect(() => {\n    if (initialValues) {\n      setEdit(true);\n      setNotary(initialValues.card.notary_id);\n      setDevCompanyId(initialValues.card.dev_company_id);\n      setDevRepresentativeId(initialValues.card.dev_representative_id);\n      setDevManagerId(initialValues.card.dev_manager_id);\n      setImmovables(\n        initialValues.immovables.length === 0\n          ? [immovableItem]\n          : initialValues.immovables\n      );\n      setClients(\n        initialValues.clients.length === 0\n          ? [clientItem]\n          : initialValues.clients\n      );\n    }\n\n    if (initialValues?.card.dev_company_id) {\n      dispatch(fetchDeveloperInfo(initialValues.card.dev_company_id));\n    }\n  }, [initialValues]);\n\n  const onDeveloperChange = useCallback(\n    (value) => {\n      setDevCompanyId(value);\n      setDevManagerId(null);\n      setDevRepresentativeId(null);\n\n      if (!value) {\n        dispatch(setDevelopersInfo({}));\n      }\n\n      dispatch(fetchDeveloperInfo(value));\n    },\n    []\n  );\n\n  const onRepresentativeChange = useCallback(\n    (value) => {\n      setDevRepresentativeId(value);\n    },\n    [devRepresentativeId]\n  );\n\n  const onManagerChange = useCallback(\n    (value) => {\n      setDevManagerId(value);\n    },\n    [devManagerId]\n  );\n\n  const onImmovablesChange = useCallback(\n    (index: number, value: any) => {\n      immovables[index] = value;\n      setImmovables([...immovables]);\n    },\n    [immovables]\n  );\n\n  const onClientsChange = useCallback(\n    (index: number, value: ClientItem) => {\n      clients[index] = value;\n      setClients([...clients]);\n    },\n    [clients]\n  );\n\n  // Form CTA\n  const onClearAll = useCallback(() => {\n    setNotary(null);\n    setDevCompanyId(null);\n    setDevRepresentativeId(null);\n    setDevManagerId(null);\n    setImmovables([immovableItem]);\n    setClients([clientItem]);\n  }, []);\n\n  const onAddImmovables = useCallback(() => {\n    setImmovables([...immovables, immovableItem]);\n  }, [immovables]);\n\n  const onRemoveImmovable = useCallback((index: number) => {\n    setImmovables((prev) => prev.filter((_, mapIndex) => mapIndex !== index));\n  }, [immovables]);\n\n  const onAddClients = useCallback(() => {\n    setClients([...clients, clientItem]);\n  }, [clients]);\n\n  const onRemoveClient = useCallback((index: number) => {\n    setClients((prev) => prev.filter((_, mapIndex) => mapIndex !== index));\n  }, [clients]);\n\n  const onDeleteCard = useCallback(() => {\n    dispatch(removeCalendarCard(selectedCard.i));\n  }, [selectedCard]);\n\n  const activeAddButton = useMemo(() => {\n    return Boolean(devCompanyId)\n    && immovables.length\n    && immovables.every((item: ImmovableItem) => item.building_id && item.imm_number)\n    && selectedCard;\n  }, [devCompanyId, immovables, selectedCard]);\n\n  const onFormCreate = useCallback(() => {\n    const date_time = `${selectedCard.year}.${selectedCard.date}. ${selectedCard.time}`;\n\n    const formatImmovables = immovables.map((item: ImmovableItem) => ({\n      ...item,\n      contract_type_id: item.contract_type_id || options.form_data.immovable_type[0].id,\n      imm_type_id: item.imm_type_id || options.form_data.immovable_type[0].id,\n    }));\n\n    const data: NewCard = {\n      immovables: formatImmovables,\n      clients,\n      date_time,\n      dev_company_id: devCompanyId,\n      dev_representative_id: devRepresentativeId,\n      dev_manager_id: devManagerId,\n      room_id: selectedCard.room,\n      notary_id: notary || notaries[0].id,\n    };\n\n    if (token) {\n      if (edit) {\n        dispatch(editCalendarCard(data, selectedCard.i));\n        setEdit(true);\n      } else {\n        dispatch(createNewCard(data));\n        dispatch(setSelectedNewAppointment(null));\n        onClearAll();\n      }\n    }\n  }, [\n    devCompanyId,\n    devRepresentativeId,\n    devManagerId,\n    notary,\n    immovables,\n    clients,\n    edit,\n    selectedCard,\n  ]);\n\n  return {\n    shouldLoad,\n    notaries,\n    representative,\n    developers,\n    manager,\n    immovables,\n    clients,\n    activeAddButton,\n    insideEdit,\n    onNotaryChange,\n    onDeveloperChange,\n    onRepresentativeChange,\n    onManagerChange,\n    onImmovablesChange,\n    onAddImmovables,\n    onRemoveImmovable,\n    onRemoveClient,\n    onClientsChange,\n    onAddClients,\n    onClearAll,\n    onFormCreate,\n    setEdit,\n    onDeleteCard,\n    selectedNotaryId: notary,\n    selectedDeveloperId: devCompanyId,\n    selectedDevRepresentativeId: devRepresentativeId,\n    selecedDevManagerId: devManagerId,\n  };\n};\n","import React from 'react';\nimport './index.scss';\nimport Form from './components/Form';\nimport { useSchedulerForm } from './useSchedulerForm';\n\nconst SchedulerForm = () => {\n  const meta = useSchedulerForm();\n\n  return (\n    <div className=\"schedulerForm scheduler__form\">\n      <div className=\"schedulerForm__tabs\">\n        <div\n          className={`item ${meta.selectedTab === 0 ? 'selected' : ''}`}\n          style={{ backgroundColor: !meta.editAppointmentData ? 'white' : '' }}\n          onClick={() => meta.setSelectedTab(0)}\n        >\n          {meta.newSelectedAppointment\n            ? `${meta.newSelectedAppointment.day} ${meta.newSelectedAppointment.time} ${meta.newSelectedAppointment.date}`\n            : 'Виберіть дату'}\n        </div>\n\n        {meta.oldSelectedAppointment && meta.editAppointmentData && (\n          <div\n            className={`item ${meta.selectedTab === 1 ? 'selected' : ''}`}\n            onClick={() => meta.setSelectedTab(1)}\n          >\n            {`${meta.oldSelectedAppointment.day} ${meta.oldSelectedAppointment.time} ${meta.oldSelectedAppointment.date}`}\n            <img\n              src=\"/icons/x.svg\"\n              alt=\"close\"\n              className=\"clear-icon\"\n              onClick={meta.onCloseTab}\n            />\n          </div>\n        )}\n      </div>\n\n      {meta.selectedTab === 0 && (\n        <Form selectedCard={meta.newSelectedAppointment} />\n      )}\n\n      {meta.selectedTab === 1 && meta.editAppointmentData && meta.oldSelectedAppointment && (\n        <Form\n          selectedCard={meta.oldSelectedAppointment}\n          initialValues={meta.editAppointmentData}\n          edit\n        />\n      )}\n    </div>\n  );\n};\n\nexport default SchedulerForm;\n","import { useCallback, useState, useEffect } from 'react';\n/* eslint-disable prettier/prettier */\nimport { useSelector, useDispatch } from 'react-redux';\nimport { State } from '../../../../../../store/types';\nimport { setEditAppointmentData, setSelectedOldAppointment } from '../../../../../../store/scheduler/actions';\n\nexport const useSchedulerForm = () => {\n  const dispatch = useDispatch();\n  const [selectedTab, setSelectedTab] = useState(0);\n\n  const newSelectedAppointment = useSelector(\n    (state: State) => state.scheduler.newSelectedAppointment\n  );\n  const oldSelectedAppointment = useSelector(\n    (state: State) => state.scheduler.oldSelectedAppointment\n  );\n  const editAppointmentData = useSelector(\n    (state: State) => state.scheduler.editAppointmentData\n  );\n\n  const onCloseTab = useCallback(() => {\n    dispatch(setSelectedOldAppointment(null));\n    dispatch(setEditAppointmentData(null));\n  }, []);\n\n  useEffect(() => {\n    setSelectedTab(editAppointmentData ? 1 : 0);\n  }, [editAppointmentData]);\n\n  useEffect(() => {\n    setSelectedTab(0);\n  }, [newSelectedAppointment]);\n\n  return {\n    newSelectedAppointment,\n    oldSelectedAppointment,\n    editAppointmentData,\n    selectedTab,\n    setSelectedTab,\n    onCloseTab,\n  };\n};\n","import React from 'react';\nimport './index.scss';\n\n// Components\nimport SchedulerTable from './components/Table/SchedulerTable';\nimport SchedulerFilter from './components/SchedulerFilterContainer';\nimport SchedulerForm from './components/SchedulerForm';\nimport { useModal } from '../../../../components/Modal/useModal';\nimport Modal from '../../../../components/Modal';\n\nconst SchedulerContainer = () => {\n  const modalProps = useModal();\n\n  return (\n    <div className=\"scheduler__container\">\n      <div className=\"scheduler__dataView\">\n        <SchedulerFilter />\n        <SchedulerTable />\n      </div>\n      <SchedulerForm />\n      <Modal {...modalProps} />\n    </div>\n  );\n};\n\nexport default SchedulerContainer;\n","import React from 'react';\nimport Header from '../../components/Header';\nimport SchedulerContainer from './components/SchedulerContainer';\n\nconst SchedulerScreen = () => (\n  <>\n    <Header />\n    <SchedulerContainer />\n  </>\n);\n\nexport default SchedulerScreen;\n"],"sourceRoot":""}