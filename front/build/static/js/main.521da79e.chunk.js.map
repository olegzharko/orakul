{"version":3,"sources":["services/login/Login.ts","services/login/forgotPassword.ts","store/main/actions.ts","App/App.tsx","App/useApp.ts","store/main/store.ts","store/scheduler/store.ts","store/appointments/store.ts","store/filter/store.ts","store/registrator/store.ts","store/clients/store.ts","store/immovables/store.ts","store/index.ts","Hooks/ScrollToTop.tsx","index.tsx","types.ts","services/searchAppointments.ts","store/appointments/actions.ts","components/Loader/Loader.tsx","services/calendar/createNewCard.ts","services/calendar/editCalendarCard.ts","services/calendar/getCalendarCard.ts","services/calendar/getCalendar.ts","services/calendar/moveCalendarCard.ts","services/calendar/deleteCalendarCard.ts","services/calendar/postStartIssuing.ts","store/scheduler/actions.ts","services/registrator/getDevelopers.ts","services/registrator/getImmovables.ts","services/registrator/putDeveloper.ts","services/registrator/putImmovable.ts","store/registrator/actions.ts","services/generator/Client/getClients.ts","store/clients/actions.ts","services/getImmovables.ts","store/immovables/actions.ts","services/Constants.ts","services/getDeveloperInfo.ts","store/filter/actions.ts","services/login/resetPassword.ts","services/getAppointments.ts","services/generator/getCardsByContractType.ts","services/postAppointmentsByFilter.ts","services/utils/requestApi.ts","services/getFilterData.ts"],"names":["login","bodyData","a","requestApi","url","DEFAULT_URL","method","data","console","error","forgotPassword","ACTIONS","SET_TOKEN","SET_USER","SET_USER_TYPE","SET_LOADING","SET_MODAL_INFO","setUser","payload","type","setModalInfoAction","setUserTypeAction","dispatch","getState","localStorage","setItem","JSON","stringify","main","user","setModalInfo","setTimeout","open","sendLogin","remember","success","message","token","email","forgotPasswordService","VisionScreen","React","lazy","RegistratorScreen","FactoryScreen","Scheduler","BankUser","DeveloperUserScreen","Login","App","useDispatch","useSelector","state","useEffect","localUser","getItem","parse","useApp","UserTypes","VISION","fallback","Loader","RECEPTION","REGISTRATOR","GENERATOR","ASSISTANT","MANAGER","BANK","DEVELOPER","initialState","id","extra_type","user_name","avatar","modalInfo","reducer","action","options","developersInfo","newSelectedAppointment","oldSelectedAppointment","editAppointmentData","isLoading","schedulerLock","SET_OPTIONS","SET_DEVELOPERS_INFO","SET_IS_LOADING","SET_SELECTED_NEW_APPOINTMENT","SET_SELECTED_OLD_APPOINTMENT","SET_EDIT_APPOINTMENT_DATA","SET_SCHEDULER_LOCK","appointments","SET_APPOINTMENTS","ADD_NEW_APPOINTMENT","DELETE_APPOINTMENT","filter","item","i","EDIT_APPOINTMENTS","filterInitialData","SET_FILTER_INITIAL_DATA","developers","immovables","SET_DEVELOPERS","SET_IMMOVABLES","clients","idLoading","SET_CLIENTS","combineReducers","scheduler","registrator","createStore","applyMiddleware","thunk","ScrollToTop","pathname","useLocation","window","scrollTo","ReactDOM","render","StrictMode","store","document","getElementById","searchAppointments","headers","Authorization","setIsLoading","setAppointments","addNewAppointment","setEditAppointments","deleteAppointment","clearAppointments","fetchAppointments","getAppointments","res","Object","values","fetchAppointmentsByFilter","postAppointmentsByFilter","user_type","text","Error","searchAppointmentsServices","color","createNewCard","editCalendarCard","getCalendarCard","getCalendar","moveCalendarCard","deleteCalendarCard","postStartIssuing","setDevelopersInfo","setSelectedNewAppointment","setSelectedOldAppointment","setEditAppointmentData","setSchedulerLock","editCalendarCardService","fetchCalendarCard","removeCalendarCard","fetchDeveloperInfo","notDispatch","getDeveloperInfo","fetchSchedulerSettings","moveCalendarCardService","createNewCardService","startIssuing","getDevelopers","getImmovables","putDeveloper","putImmovable","fetchDevelopers","fetchImmovables","editDeveloperStatus","editImmovableStatus","getClients","userType","setClients","fetchClients","setImmovables","fetchFilterData","getFilterData","resetPassword","getCardsByContractType","params","body","undefined","Accept","fetch","json"],"mappings":"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","file":"static/js/main.521da79e.chunk.js","sourcesContent":["import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\ntype BodyData = {\n  email: string;\n  password: string;\n};\n\nexport default async function login(bodyData: BodyData) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/login`,\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\ntype BodyData = {\n  email: string;\n};\n\nexport default async function forgotPassword(bodyData: BodyData) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/password/forgot`,\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n    return null;\n  }\n}\n","import { Dispatch } from 'redux';\nimport login from '../../services/login/Login';\nimport forgotPasswordService from '../../services/login/forgotPassword';\nimport resetPasswordService, {\n  ResetPasswordType,\n} from '../../services/login/resetPassword';\nimport { UserTypes } from '../../types';\nimport { State } from '../types';\n\nexport const ACTIONS = {\n  SET_TOKEN: 'SET_TOKEN',\n  SET_USER: 'SET_USER',\n  SET_USER_TYPE: 'SET_USER_TYPE',\n  SET_LOADING: 'SET_LOADING',\n  SET_MODAL_INFO: 'SET_MODAL_INFO',\n};\n\nexport const setToken = (payload: string) => ({\n  type: ACTIONS.SET_TOKEN,\n  payload,\n});\n\nexport const setLogin = (payload: string) => ({\n  type: ACTIONS.SET_TOKEN,\n  payload,\n});\n\nexport const setUser = (payload: any) => ({\n  type: ACTIONS.SET_USER,\n  payload,\n});\n\nexport const setUserType = (payload: UserTypes) => ({\n  type: ACTIONS.SET_USER_TYPE,\n  payload,\n});\n\nconst setModalInfoAction = (payload: any) => ({\n  type: ACTIONS.SET_MODAL_INFO,\n  payload,\n});\n\n// Thunk actions\nexport const setUserTypeAction = (type: UserTypes) => (\n  dispatch: Dispatch<any>,\n  getState: () => State,\n) => {\n  dispatch(setUserType(type));\n  localStorage.setItem('user', JSON.stringify({ ...getState().main.user, type }));\n};\n\nexport const setModalInfo = (payload: any) => (dispatch: Dispatch<any>) => {\n  dispatch(setModalInfoAction(payload));\n  setTimeout(() => {\n    dispatch(setModalInfoAction({\n      ...payload,\n      open: false,\n    }));\n  }, 2000);\n};\n\nexport const sendLogin = (\n  bodyData: {\n    email: string;\n    password: string;\n  },\n  remember: boolean\n) => async (dispatch: Dispatch<any>) => {\n  const { success, message, data } = await login(bodyData);\n\n  if (success) {\n    dispatch(setToken(data.token));\n    dispatch(setUser(data));\n  } else {\n    dispatch(\n      setModalInfo({\n        success,\n        message,\n        open: true,\n      })\n    );\n  }\n\n  if (remember) localStorage.setItem('user', JSON.stringify(data));\n};\n\nexport const forgotPassword = ({ email }: { email: string }) => async (\n  dispatch: Dispatch<any>\n) => {\n  const { success, message } = await forgotPasswordService({ email });\n\n  if (success) {\n    dispatch(setModalInfo({ success, message, open: true }));\n  }\n};\n\nexport const resetPassword = (data: ResetPasswordType) => async (\n  dispatch: Dispatch<any>\n) => {\n  const { success, message } = await resetPasswordService(data);\n\n  if (success) dispatch(setModalInfo({ success, message, open: true }));\n};\n","import React, { Suspense } from 'react';\n\nimport { UserTypes } from '../types';\nimport Loader from '../components/Loader/Loader';\n\nimport './index.scss';\nimport { useApp } from './useApp';\n\n// Lazy\nconst VisionScreen = React.lazy(() => import('../Screens/VisionScreen'));\nconst RegistratorScreen = React.lazy(() => import('../Screens/RegistratorScreen'));\nconst FactoryScreen = React.lazy(() => import('../Screens/FactoryScreen'));\nconst Scheduler = React.lazy(() => import('../Screens/SchedulerScreen'));\nconst BankUser = React.lazy(() => import('../Screens/BankUserScreen'));\nconst DeveloperUserScreen = React.lazy(() => import('../Screens/DeveloperUserScreen'));\nconst Login = React.lazy(() => import('../Screens/LoginScreen'));\n\nconst App: React.FC = () => {\n  const { type } = useApp();\n\n  if (type === UserTypes.VISION) {\n    return (\n      <Suspense fallback={<Loader />}>\n        <VisionScreen />\n      </Suspense>\n    );\n  }\n\n  if (type === UserTypes.RECEPTION) {\n    return (\n      <Suspense fallback={<Loader />}>\n        <Scheduler />\n      </Suspense>\n    );\n  }\n\n  if (type === UserTypes.REGISTRATOR) {\n    return (\n      <Suspense fallback={<Loader />}>\n        <RegistratorScreen />\n      </Suspense>\n    );\n  }\n\n  if (type === UserTypes.GENERATOR\n    || type === UserTypes.ASSISTANT\n    || type === UserTypes.MANAGER\n  ) {\n    return (\n      <Suspense fallback={<Loader />}>\n        <FactoryScreen />\n      </Suspense>\n    );\n  }\n\n  if (type === UserTypes.BANK) {\n    return (\n      <Suspense fallback={<Loader />}>\n        <BankUser />\n      </Suspense>\n    );\n  }\n\n  if (type === UserTypes.DEVELOPER) {\n    return (\n      <Suspense fallback={<Loader />}>\n        <DeveloperUserScreen />\n      </Suspense>\n    );\n  }\n\n  return (\n    <Suspense fallback={<Loader />}>\n      <Login />\n    </Suspense>\n  );\n};\n\nexport default App;\n","import { useSelector, useDispatch } from 'react-redux';\n/* eslint-disable import/prefer-default-export */\nimport { useEffect } from 'react';\nimport { setUser } from '../store/main/actions';\nimport { State } from '../store/types';\n\nexport const useApp = () => {\n  const dispatch = useDispatch();\n  const { user } = useSelector((state: State) => state.main);\n\n  useEffect(() => {\n    const localUser = localStorage.getItem('user');\n\n    if (localUser) {\n      dispatch(setUser(JSON.parse(localUser)));\n    }\n  }, [dispatch]);\n\n  return { type: user.type };\n};\n","import { UserTypes } from '../../types';\nimport { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\ntype ExtraType = {\n  title: string;\n  type: UserTypes;\n}\n\nexport type User = {\n  type: UserTypes | null;\n  token: null | string;\n  id: number | null;\n  extra_type: ExtraType[];\n  user_name: string;\n  avatar: string;\n};\n\nexport type ModalInfo = {\n  open: boolean;\n  success: boolean;\n  message: string;\n};\n\nexport type MainState = {\n  user: User;\n  modalInfo: ModalInfo;\n};\n\nconst initialState: MainState = {\n  user: {\n    type: null,\n    token: null,\n    id: null,\n    extra_type: [],\n    user_name: '',\n    avatar: '',\n  },\n  modalInfo: {\n    open: false,\n    success: false,\n    message: '',\n  },\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_USER:\n      return { ...state, user: { ...state.user, ...action.payload } };\n    case ACTIONS.SET_MODAL_INFO:\n      return { ...state, modalInfo: action.payload };\n    case ACTIONS.SET_USER_TYPE:\n      return { ...state, user: { ...state.user, type: action.payload } };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\nexport type SchedulerState = {\n  options: any;\n  developersInfo: any;\n  newSelectedAppointment: any;\n  oldSelectedAppointment: any;\n  editAppointmentData: any;\n  isLoading: boolean;\n  schedulerLock: boolean;\n};\n\nconst initialState: SchedulerState = {\n  options: null,\n  developersInfo: {},\n  newSelectedAppointment: null,\n  oldSelectedAppointment: null,\n  editAppointmentData: null,\n  isLoading: false,\n  schedulerLock: true,\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_OPTIONS:\n      return { ...state, options: action.payload };\n    case ACTIONS.SET_DEVELOPERS_INFO:\n      return { ...state, developersInfo: action.payload };\n    case ACTIONS.SET_IS_LOADING:\n      return { ...state, isLoading: action.payload };\n    case ACTIONS.SET_SELECTED_NEW_APPOINTMENT:\n      return { ...state, newSelectedAppointment: action.payload };\n    case ACTIONS.SET_SELECTED_OLD_APPOINTMENT:\n      return { ...state, oldSelectedAppointment: action.payload };\n    case ACTIONS.SET_EDIT_APPOINTMENT_DATA:\n      return { ...state, editAppointmentData: action.payload };\n    case ACTIONS.SET_SCHEDULER_LOCK:\n      return { ...state, schedulerLock: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\nexport type AppointmentsState = {\n  appointments: [];\n  isLoading: false;\n};\n\nconst initialState: AppointmentsState = {\n  appointments: [],\n  isLoading: false,\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_LOADING:\n      return { ...state, isLoading: action.payload };\n    case ACTIONS.SET_APPOINTMENTS:\n      return { ...state, appointments: action.payload };\n    case ACTIONS.ADD_NEW_APPOINTMENT:\n      return {\n        ...state,\n        appointments: [...state.appointments, action.payload],\n      };\n    case ACTIONS.DELETE_APPOINTMENT:\n      return {\n        ...state,\n        appointments: [\n          ...state.appointments.filter((item: any) => item.i !== action.payload)\n        ],\n      };\n    case ACTIONS.EDIT_APPOINTMENTS:\n      return {\n        ...state,\n        appointments: [\n          ...state.appointments.filter(\n            (item: any) => item.i !== action.payload.i\n          ),\n          action.payload,\n        ],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\nexport type FilterState = {\n  filterInitialData: any;\n};\n\nconst initialState: FilterState = {\n  filterInitialData: null,\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_FILTER_INITIAL_DATA:\n      return { ...state, filterInitialData: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\nexport type Developer = {\n  id: number;\n  title: string;\n  full_name: string;\n  tax_code: string;\n  date: string;\n  number: number;\n  pass: boolean;\n  prev: number;\n  next: number;\n  color?: string;\n}\n\nexport type Immovable = {\n  id: number;\n  title: string;\n  immovable_code: string;\n  date: string;\n  number: number;\n  pass: boolean;\n  prev: number;\n  next: number;\n}\n\nexport type DeveloperState = {\n  date_info: string;\n  developers: Developer[]\n}\n\nexport type ImmovableState = {\n  date_info: string;\n  immovables: Immovable[];\n}\n\nexport type RegistratorState = {\n  isLoading: boolean,\n  developers: DeveloperState | null,\n  immovables: ImmovableState | null,\n};\n\nconst initialState: RegistratorState = {\n  isLoading: false,\n  developers: null,\n  immovables: null,\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_LOADING:\n      return { ...state, isLoading: action.payload };\n    case ACTIONS.SET_DEVELOPERS:\n      return { ...state, developers: action.payload };\n    case ACTIONS.SET_IMMOVABLES:\n      return { ...state, immovables: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\n// type ClientCardInfo = {\n//   full_name: string;\n//   id: number;\n//   list: string[];\n// }\n\n// export type GenerateClient = {\n//   client: null | ClientCardInfo,\n//   representative: null | ClientCardInfo,\n//   spouse: null | ClientCardInfo,\n// }\n\nexport type ClientsState = {\n  clients: any[];\n  isLoading: false;\n};\n\nconst initialState: ClientsState = {\n  clients: [],\n  isLoading: false,\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_LOADING:\n      return { ...state, idLoading: action.payload };\n    case ACTIONS.SET_CLIENTS:\n      return { ...state, clients: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\ntype ImmovableCardsType = {\n  id: number,\n  title: string,\n  list: string[],\n}\n\nexport type ImmovablesState = {\n  immovables: ImmovableCardsType[];\n  isLoading: false;\n};\n\nconst initialState: ImmovablesState = {\n  immovables: [],\n  isLoading: false,\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_LOADING:\n      return { ...state, idLoading: action.payload };\n    case ACTIONS.SET_IMMOVABLES:\n      return { ...state, immovables: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport main from './main/store';\nimport scheduler from './scheduler/store';\nimport appointments from './appointments/store';\nimport filter from './filter/store';\nimport registrator from './registrator/store';\nimport clients from './clients/store';\nimport immovables from './immovables/store';\n\nconst reducer = combineReducers({\n  main,\n  scheduler,\n  appointments,\n  filter,\n  registrator,\n  clients,\n  immovables,\n});\n\nexport default createStore(reducer, applyMiddleware(thunk));\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './App';\nimport store from './store';\nimport ScrollToTop from './Hooks/ScrollToTop';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <ScrollToTop />\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","export type ImmovableItem = {\n  contract_type_id: number | null;\n  building_id: number | null;\n  imm_type_id: number | null;\n  imm_number: string | null;\n  bank: boolean;\n  proxy: boolean;\n};\n\nexport type ImmovableItems = ImmovableItem[];\n\nexport type SelectItem = {\n  id: number;\n  title: string;\n};\n\nexport type ClientItem = {\n  phone: string | null;\n  full_name: string | null;\n};\n\nexport type NewCard = {\n  immovables: ImmovableItems;\n  clients: ClientItem[];\n  date_time: string;\n  dev_company_id: number | null;\n  dev_representative_id: number | null;\n  dev_manager_id: number | null;\n  room_id: number;\n  notary_id: number | null;\n};\n\n// eslint-disable-next-line no-shadow\nexport enum UserTypes {\n  GENERATOR = 'generator',\n  RECEPTION = 'reception',\n  MANAGER = 'manager',\n  ASSISTANT = 'assistant',\n  REGISTRATOR = 'registrator',\n  VISION = 'vision',\n  BANK = 'bank',\n  DEVELOPER = 'developer',\n}\n\nexport type ManagerAppointmentCard = {\n  id: number;\n  color: string;\n  instructions: string[];\n  short_info: {\n    dev_representative_id: string;\n    notary: string;\n    notary_assistant_giver: string;\n    notary_assistant_reader: string;\n  };\n  title: string;\n};\n\nexport type ManagerAppointment = {\n  day: string;\n  date: string;\n  cards: ManagerAppointmentCard[];\n};\n\nexport type ManagerAppointments = ManagerAppointment[];\n\nexport type DefaultContentItem = {\n  title: string;\n  value: string;\n}\n","import { UserTypes } from '../types';\nimport { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function searchAppointments(\n  token: string,\n  bodyData: {\n    text: string;\n    type: UserTypes;\n  }\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/filter/search`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n    return null;\n  }\n}\n","import { Dispatch } from 'redux';\nimport { FilterData, State } from '../types';\n\nimport getAppointments from '../../services/getAppointments';\nimport searchAppointmentsServices from '../../services/searchAppointments';\nimport getCardsByContractType from '../../services/generator/getCardsByContractType';\nimport postAppointmentsByFilter from '../../services/postAppointmentsByFilter';\n\nexport const ACTIONS = {\n  SET_LOADING: 'SET_LOADING',\n  SET_APPOINTMENTS: 'SET_APPOINTMENTS',\n  ADD_NEW_APPOINTMENT: 'ADD_NEW_APPOINTMENT',\n  EDIT_APPOINTMENTS: 'EDIT_APPOINTMENTS',\n  DELETE_APPOINTMENT: 'DELETE_APPOINTMENT',\n};\n\nexport const setIsLoading = (payload: boolean) => ({\n  type: ACTIONS.SET_LOADING,\n  payload,\n});\n\nexport const setAppointments = (payload: any) => ({\n  type: ACTIONS.SET_APPOINTMENTS,\n  payload,\n});\n\nexport const addNewAppointment = (payload: any) => ({\n  type: ACTIONS.ADD_NEW_APPOINTMENT,\n  payload,\n});\n\nexport const setEditAppointments = (payload: any) => ({\n  type: ACTIONS.EDIT_APPOINTMENTS,\n  payload,\n});\n\nexport const deleteAppointment = (id: string) => ({\n  type: ACTIONS.DELETE_APPOINTMENT,\n  payload: id,\n});\n\nexport const clearAppointments = () => async (\n  dispatch: Dispatch<any>,\n) => {\n  dispatch(setIsLoading(true));\n  dispatch(setAppointments([]));\n};\n\nexport const fetchAppointments = () => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token, type, id } = getState().main.user;\n\n  if (token && type && id) {\n    dispatch(setIsLoading(true));\n    const res = await getAppointments(token, type);\n\n    if (res?.success) {\n      const { data } = res;\n      dispatch(setAppointments(Object.values(data)));\n    }\n\n    dispatch(setIsLoading(false));\n  }\n};\n\nexport const fetchAppointmentsByFilter = (bodyData: FilterData) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token, type } = getState().main.user;\n\n  if (token && type) {\n    const res = await postAppointmentsByFilter(token, { ...bodyData, user_type: type });\n\n    if (res?.success) {\n      const { data } = res;\n      dispatch(setAppointments(Object.values(data)));\n    }\n  }\n};\n\nexport const fetchAppointmentsByContracts = (url: string) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const res = await getCardsByContractType(token, url);\n\n    if (res?.success) {\n      const { data } = res;\n      dispatch(setAppointments(Object.values(res.data)));\n    }\n  }\n};\n\nexport const searchAppointments = (text: string) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token, type } = getState().main.user;\n\n  if (!token || !type) {\n    throw new Error(`missed token or type in searchAppointments. Token: ${token}, Type: ${type}`);\n  }\n\n  if (token && type) {\n    const res = await searchAppointmentsServices(token, { text, type });\n\n    if (res?.success) {\n      const { data } = res;\n      dispatch(setAppointments(Object.values(data)));\n    }\n  }\n};\n","import React from 'react';\nimport { LoopCircleLoading } from 'react-loadingg';\n\nconst Loader = () => <LoopCircleLoading color=\"#165153\" />;\n\nexport default Loader;\n","import { NewCard } from '../../types';\nimport { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\nexport default async function createNewCard(token: string, bodyData: NewCard) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n    return null;\n  }\n}\n","import { NewCard } from '../../types';\nimport { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\nexport default async function editCalendarCard(\n  token: string,\n  bodyData: NewCard,\n  id: number\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'PUT',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\nexport default async function getCalendarCard(token: string, id: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data.data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\nexport default async function getCalendar(token: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/calendar`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data.data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n    return null;\n  }\n}\n","import { NewCard } from '../../types';\nimport { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\nexport default async function moveCalendarCard(\n  token: string,\n  bodyData: {\n    date_time: string;\n    room_id: number;\n  },\n  id: number\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards/move/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'PUT',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\nexport default async function deleteCalendarCard(token: string, id: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'DELETE',\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\nexport type PostStartIssuingProps = {\n  card_id: string;\n  number_of_people: number;\n  children: boolean;\n  room_id: number | undefined;\n}\n\nexport default async function postStartIssuing(token: string, bodyData: PostStartIssuingProps) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/deal/set/info`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n    return null;\n  }\n}\n","import { Dispatch } from 'react';\n\nimport { NewCard } from '../../types';\nimport createNewCardService from '../../services/calendar/createNewCard';\nimport editCalendarCardService from '../../services/calendar/editCalendarCard';\nimport getCalendarCard from '../../services/calendar/getCalendarCard';\nimport getDeveloperInfo from '../../services/getDeveloperInfo';\nimport getCalendar from '../../services/calendar/getCalendar';\nimport moveCalendarCardService from '../../services/calendar/moveCalendarCard';\nimport deleteCalendarCard from '../../services/calendar/deleteCalendarCard';\n\nimport { setModalInfo } from '../main/actions';\nimport { addNewAppointment, deleteAppointment, setEditAppointments } from '../appointments/actions';\nimport { State } from '../types';\nimport postStartIssuing, { PostStartIssuingProps } from '../../services/calendar/postStartIssuing';\n\nexport const ACTIONS = {\n  SET_OPTIONS: 'SET_OPTIONS',\n  SET_DEVELOPERS_INFO: 'SET_DEVELOPERS_INFO',\n  SET_SELECTED_NEW_APPOINTMENT: 'SET_SELECTED_NEW_APPOINTMENT',\n  SET_SELECTED_OLD_APPOINTMENT: 'SET_SELECTED_OLD_APPOINTMENT',\n  SET_EDIT_APPOINTMENT_DATA: 'SET_EDIT_APPOINTMENT_DATA',\n  SET_IS_LOADING: 'SET_IS_LOADING',\n  SET_SCHEDULER_LOCK: 'SET_SCHEDULER_LOCK',\n};\n\nexport const setSchedulerOptions = (payload: any) => ({\n  type: ACTIONS.SET_OPTIONS,\n  payload,\n});\n\nexport const setDevelopersInfo = (payload: any) => ({\n  type: ACTIONS.SET_DEVELOPERS_INFO,\n  payload,\n});\n\nexport const setSelectedNewAppointment = (payload: any) => ({\n  type: ACTIONS.SET_SELECTED_NEW_APPOINTMENT,\n  payload,\n});\n\nexport const setSelectedOldAppointment = (payload: any) => ({\n  type: ACTIONS.SET_SELECTED_OLD_APPOINTMENT,\n  payload,\n});\n\nexport const setEditAppointmentData = (payload: any) => ({\n  type: ACTIONS.SET_EDIT_APPOINTMENT_DATA,\n  payload,\n});\n\nexport const setSchedulerLock = (payload: boolean) => ({\n  type: ACTIONS.SET_SCHEDULER_LOCK,\n  payload,\n});\n\nexport const setIsLoading = (payload: boolean) => ({\n  type: ACTIONS.SET_IS_LOADING,\n  payload,\n});\n\n// Thunk actions\nexport const editCalendarCard = (bodyData: NewCard, id: number) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const { success, message, data } = await editCalendarCardService(\n      token,\n      bodyData,\n      id\n    );\n\n    dispatch(\n      setModalInfo({\n        open: true,\n        success,\n        message,\n      })\n    );\n\n    if (success) {\n      dispatch(setEditAppointments(data));\n    }\n  }\n};\n\nexport const fetchCalendarCard = (id: string) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const data = await getCalendarCard(token, id);\n    dispatch(setEditAppointmentData(data));\n  }\n};\n\nexport const removeCalendarCard = (id: string) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const { data, success, message } = await deleteCalendarCard(token, id);\n\n    dispatch(\n      setModalInfo({\n        open: true,\n        success,\n        message,\n      })\n    );\n\n    if (success) {\n      dispatch(setSelectedOldAppointment(null));\n      dispatch(setEditAppointmentData(null));\n      dispatch(deleteAppointment(id));\n    }\n  }\n};\n\nexport const fetchDeveloperInfo = (\n  id: number,\n  notDispatch: boolean = false\n) => async (dispatch: Dispatch<any>, getState: () => State) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const data = await getDeveloperInfo(token, id);\n\n    if (!notDispatch) {\n      dispatch(setDevelopersInfo(data));\n    }\n  }\n};\n\nexport const fetchSchedulerSettings = () => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    dispatch(setIsLoading(true));\n    const data = await getCalendar(token);\n    dispatch(setSchedulerOptions(data));\n    dispatch(setIsLoading(false));\n  }\n};\n\nexport const moveCalendarCard = (\n  bodyData: {\n    date_time: string;\n    room_id: number;\n  },\n  id: number\n) => async (dispatch: Dispatch<any>, getState: () => State) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const { success, data } = await moveCalendarCardService(\n      token,\n      bodyData,\n      id\n    );\n\n    if (success) {\n      dispatch(setEditAppointments(data));\n    }\n  }\n};\n\nexport const createNewCard = (data: NewCard) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const res = await createNewCardService(token, data);\n\n    dispatch(\n      setModalInfo({\n        open: true,\n        success: res.success,\n        message: res.message,\n      })\n    );\n\n    if (res.success) {\n      dispatch(addNewAppointment(res.data));\n    }\n  }\n};\n\nexport const startIssuing = (data: PostStartIssuingProps) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const res = await postStartIssuing(token, data);\n\n    dispatch(\n      setModalInfo({\n        open: true,\n        success: res.success,\n        message: res.message,\n      })\n    );\n\n    if (!res?.success) throw new Error();\n  }\n};\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\nexport default async function getDevelopers(token: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/registrator/developers`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\nexport default async function getImmovables(token: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/registrator/immovables`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\nexport type EditDeveloperProps = {\n  date: string | null,\n  number: string,\n  pass: boolean,\n}\n\nexport default async function putDeveloper(\n  token: string, id: string, bodyData: EditDeveloperProps\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/registrator/developer/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'PUT',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\nexport type EditImmovableProps = {\n  date: string | null,\n  number: string,\n  pass: boolean,\n}\n\nexport default async function putImmovable(\n  token: string, id: string, bodyData: EditImmovableProps\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/registrator/immovable/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'PUT',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n    return null;\n  }\n}\n","import { Dispatch } from 'redux';\nimport getDevelopers from '../../services/registrator/getDevelopers';\nimport getImmovables from '../../services/registrator/getImmovables';\nimport putDeveloper, { EditDeveloperProps } from '../../services/registrator/putDeveloper';\nimport putImmovable from '../../services/registrator/putImmovable';\nimport { setModalInfo } from '../main/actions';\nimport { State } from '../types';\nimport { Developer, Immovable } from './store';\n\nexport const ACTIONS = {\n  SET_LOADING: 'SET_LOADING',\n  SET_DEVELOPERS: 'SET_DEVELOPERS',\n  SET_IMMOVABLES: 'SET_IMMOVABLES',\n};\n\nconst setIsLoading = (payload: boolean) => ({\n  type: ACTIONS.SET_LOADING,\n  payload,\n});\n\nconst setDevelopers = (payload: Developer) => ({ type: ACTIONS.SET_DEVELOPERS, payload });\nconst setImmovables = (payload: Immovable) => ({ type: ACTIONS.SET_IMMOVABLES, payload });\n\nexport const fetchDevelopers = () => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  dispatch(setIsLoading(true));\n  const { token } = getState().main.user;\n\n  if (token) {\n    const { success, data } = await getDevelopers(token);\n\n    if (success) {\n      dispatch(setDevelopers(data));\n    }\n  }\n  dispatch(setIsLoading(false));\n};\n\nexport const fetchImmovables = () => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  dispatch(setIsLoading(true));\n  const { token } = getState().main.user;\n\n  if (token) {\n    const { success, data } = await getImmovables(token);\n\n    if (success) {\n      dispatch(setImmovables(data));\n    }\n  }\n  dispatch(setIsLoading(false));\n};\n\nexport const editDeveloperStatus = (id: string, bodyData: EditDeveloperProps) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const { success, message } = await putDeveloper(token, id, bodyData);\n\n    dispatch(\n      setModalInfo({\n        open: true,\n        success,\n        message,\n      })\n    );\n  }\n};\n\nexport const editImmovableStatus = (id: string, bodyData: EditDeveloperProps) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const { success, message } = await putImmovable(token, id, bodyData);\n\n    dispatch(\n      setModalInfo({\n        open: true,\n        success,\n        message,\n      })\n    );\n  }\n};\n","import { UserTypes } from '../../../types';\nimport { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function getClients(token: string, id: string, userType: UserTypes) {\n  try {\n    const url = userType === UserTypes.MANAGER ? `/api/manager/clients/${id}` : `/api/generator/client/main/${id}`;\n    const data = await requestApi({\n      url: `${DEFAULT_URL}${url}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n    return null;\n  }\n}\n","import { Dispatch } from 'redux';\nimport { UserTypes } from '../../types';\nimport getClients from '../../services/generator/Client/getClients';\nimport { State } from '../types';\n\nexport const ACTIONS = {\n  SET_CLIENTS: 'SET_CLIENTS',\n  SET_LOADING: 'SET_LOADING',\n};\n\nexport const setClients = (payload: any) => ({ type: ACTIONS.SET_CLIENTS, payload });\nexport const setIsLoading = (payload: boolean) => ({ type: ACTIONS.SET_LOADING, payload });\n\n// Thunk actions\nexport const fetchClients = (id: string, userType: UserTypes) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    dispatch(setIsLoading(true));\n    const { success, data } = await getClients(token, id, userType);\n\n    if (success) {\n      dispatch(setClients(data));\n    }\n    dispatch(setIsLoading(false));\n  }\n};\n","import { UserTypes } from '../types';\nimport { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getImmovables(token: string, id: string, userType: UserTypes) {\n  try {\n    const url = userType === UserTypes.MANAGER ? `/api/manager/immovables/${id}` : `/api/generator/immovable/main/${id}`;\n    const data = await requestApi({\n      url: `${DEFAULT_URL}${url}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n    return null;\n  }\n}\n","import { Dispatch } from 'redux';\nimport { UserTypes } from '../../types';\nimport getImmovables from '../../services/getImmovables';\nimport { State } from '../types';\n\nexport const ACTIONS = {\n  SET_IMMOVABLES: 'SET_IMMOVABLES',\n  SET_LOADING: 'SET_LOADING',\n};\n\nexport const setImmovables = (payload: any) => ({ type: ACTIONS.SET_IMMOVABLES, payload });\nexport const setIsLoading = (payload: boolean) => ({ type: ACTIONS.SET_LOADING, payload });\n\n// Thunk actions\nexport const fetchImmovables = (id: string, userType: UserTypes) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    dispatch(setIsLoading(true));\n    const { success, data } = await getImmovables(token, id, userType);\n\n    if (success) {\n      dispatch(setImmovables(data));\n    }\n    dispatch(setIsLoading(false));\n  }\n};\n","/* eslint-disable import/prefer-default-export */\nexport const DEFAULT_URL = '';\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getDeveloperInfo(token: string, id: number | string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/filter/developer/info/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data.data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n    return null;\n  }\n}\n","import { Dispatch } from 'redux';\nimport getFilterData from '../../services/getFilterData';\nimport { State } from '../types';\n\nexport const ACTIONS = {\n  SET_FILTER_INITIAL_DATA: 'SET_FILTER_INITIAL_DATA',\n};\n\nexport const setFilterInitialData = (payload: any) => ({\n  type: ACTIONS.SET_FILTER_INITIAL_DATA,\n  payload,\n});\n\nexport const fetchFilterData = () => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token, type } = getState().main.user;\n\n  if (token && type) {\n    const data = await getFilterData(token, type);\n    dispatch(setFilterInitialData(data));\n  }\n};\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\nexport type ResetPasswordType = {\n  token: string;\n  email: string;\n  password: string;\n  c_password: string;\n};\n\nexport default async function resetPassword(bodyData: ResetPasswordType) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/password/update`,\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n    return null;\n  }\n}\n","import { UserTypes } from '../types';\nimport { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getAppointments(token: string, type: UserTypes) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards/${type}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\nexport default async function getCardsByContractType(token: string, url: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/${url}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n    return null;\n  }\n}\n","import { FilterData } from '../store/types';\nimport { UserTypes } from '../types';\nimport { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function postAppointmentsByFilter(\n  token: string,\n  bodyData: FilterData & {user_type: UserTypes}\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/filter/sort`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n    return null;\n  }\n}\n","type RequestOptions = {\n  url: string;\n  method?: 'GET' | 'POST' | 'DELETE' | 'PATCH' | 'PUT';\n  bodyData?: any;\n  headers?: {};\n};\n\nconst requestApi = async (options: RequestOptions) => {\n  const { url, method = 'GET', headers = {}, bodyData } = options;\n\n  const params = {\n    body: undefined as string | undefined,\n    method: method || 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'applicatioin/json',\n      ...headers,\n    },\n  };\n\n  if (bodyData) {\n    params.body = JSON.stringify(bodyData);\n  }\n\n  const res: any = await fetch(url, params);\n  const json: any = await res.json();\n\n  return json || {};\n};\n\nexport default requestApi;\n","import { UserTypes } from '../types';\nimport { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getFilterData(token: string, type: UserTypes) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/filter/dropdown/${type}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data.data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n    return null;\n  }\n}\n"],"sourceRoot":""}