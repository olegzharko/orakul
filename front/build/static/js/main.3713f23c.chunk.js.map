{"version":3,"sources":["services/Constants.ts","services/utils/requestApi.ts","services/login/Login.ts","services/login/forgotPassword.ts","services/login/resetPassword.ts","store/main/actions.ts","services/getAppointments.ts","services/setSchedulerFilter.ts","services/searchAppointments.ts","services/getAppointmentsForDashboard.ts","store/appointments/actions.ts","types.ts","components/Header/utils/useDebounce.ts","components/Header/useHeader.ts","components/Header/Header.tsx","services/createNewCard.ts","services/editCalendarCard.ts","services/getCalendarCard.ts","services/getDeveloperInfo.ts","services/getCalendar.ts","services/moveCalendarCard.ts","store/scheduler/actions.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/utils/formatAppointmentDate.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/useSchedulerTable.ts","components/Loader/Loader.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/SchedulerDay/SchedulerDay.js","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridLayout/GridLayout.js","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTableCell/GridTableCell.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTableCell/useGridTableCell.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTable/GridTable.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTable/useGridTable.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/SchedulerTable.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerFilterContainer/components/QuantityLabel.tsx","components/CustomSelect/CustomSelect.tsx","services/getFilterData.ts","store/filter/actions.ts","Screens/DashboardScreen/components/DashboardContainer/components/Dashboard/useDashboard.ts","components/Filter/useFilter.ts","components/Filter/Filter.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerFilterContainer/components/SchedulerFilter/SchedulerFilter.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerFilterContainer/components/SchedulerFilter/useSchedulerFilter.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerFilterContainer/components/SchedulerLock/useSchedulerLock.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerFilterContainer/components/SchedulerLock/SchedulerLock.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerFilterContainer/SchedulerFilterContainer.tsx","components/RadioButtonsGroup/RadioButtonsGroup.tsx","components/AddFormButton/AddFormButton.tsx","components/CustomInput/CustomInput.tsx","components/RemoveFormButton/RemoveFormButton.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/components/Clients/Clients.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/components/Clients/useClients.ts","components/PrimaryButton/PrimaryButton.tsx","components/CustomSwitch/CustomSwitch.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/components/ImmovableContainer/ImmovableContainer.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/components/ImmovableContainer/useImmovableContainer.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/types.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/useForm.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/Form.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/SchedulerForm.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/useSchedulerForm.ts","components/Modal/useModal.ts","components/Modal/Modal.tsx","Screens/SchedulerScreen/components/SchedulerContainer/SchedulerContainer.tsx","Screens/SchedulerScreen/SchedulerScreen.tsx","Screens/DashboardScreen/components/DashboardContainer/components/Dashboard/components/DashboardSection/DashboardSection.tsx","Screens/DashboardScreen/components/DashboardContainer/components/Dashboard/components/DashbordControl/DashbordControl.tsx","Screens/DashboardScreen/components/DashboardContainer/components/Dashboard/Dashboard.tsx","Screens/DashboardScreen/components/DashboardContainer/components/FilterContainer/components/Contracts/Contracts.tsx","Screens/DashboardScreen/components/DashboardContainer/components/FilterContainer/FilterContainer.tsx","Screens/DashboardScreen/components/DashboardContainer/components/FilterContainer/useFilterContainer.ts","Screens/DashboardScreen/components/DashboardContainer/DashboardContainer.tsx","Screens/DashboardScreen/DashboardScreen.tsx","components/Carousel/Carousel.tsx","components/CustomCheckBox/CustomCheckBox.tsx","components/CustomPasswordInput/CustomPasswordInput.tsx","services/getLoginCarouselImages.ts","Screens/LoginScreen/components/Authorization/useAuthorization.tsx","Screens/LoginScreen/components/Authorization/Authorization.tsx","Screens/LoginScreen/components/ForgotPassword/useForgotPassword.ts","Screens/LoginScreen/components/ForgotPassword/ForgotPassword.tsx","Screens/LoginScreen/components/UpdatePassword/UpdatePassword.tsx","Screens/LoginScreen/components/UpdatePassword/useUpdatePassword.ts","Screens/LoginScreen/LoginScreen.tsx","App/App.tsx","App/useApp.ts","store/main/store.ts","store/scheduler/store.ts","store/appointments/store.ts","store/filter/store.ts","store/index.ts","index.tsx"],"names":["DEFAULT_URL","requestApi","options","a","url","method","headers","bodyData","params","body","undefined","Accept","JSON","stringify","fetch","res","json","login","data","console","log","forgotPassword","resetPassword","ACTIONS","setToken","payload","type","setUser","setModalInfo","getAppointments","token","Authorization","setSchedulerFilter","place","searchAppointments","getAppointmentsForDashboard","UserTypes","setIsLoading","setAppointments","setEditAppointmens","fetchAppointments","userType","dispatch","getState","main","user","Object","values","fetchAppointmentsByFilter","success","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useHeader","useDispatch","searchText","setSearchText","count","setCount","text","page","searchAppointmentsServices","prev","onSearch","useCallback","e","target","onLogout","localStorage","clear","Header","className","src","alt","placeholder","onChange","onClick","createNewCard","editCalendarCard","id","getCalendarCard","getDeveloperInfo","getCalendar","moveCalendarCard","setDevelopersInfo","setSelectedNewAppointment","setSelectedOldAppointment","setEditAppointmentData","fetchCalendarCard","fetchDeveloperInfo","notDispatch","formatAppointmentDate","hours","rooms","days","raw","cell","Math","floor","length","day","date","year","time","room","split","reverse","join","useSchedulerTable","useSelector","state","scheduler","isLoading","appointments","RECEPTION","useMemo","work_time","shouldLoad","tableColumns","Array","fill","day_and_date","tableRows","handleAppointmentDrag","appointment","y","x","date_time","room_id","i","moveCalendarCardService","onAppointmentClick","Loader","color","SchedulerDay","map","ReactGridLayout","WidthProvider","RGL","GridLayout","cols","handleDrag","handleClick","dragAndDropWidth","setDragAndDropWidth","schedulerLock","$","width","rowHeight","margin","containerPadding","verticalCompact","preventCollision","layout","onDragStop","all","current","currentApp","find","item","isDraggable","style","borderLeft","title","short_info","uuidv4","GridLayoutCell","props","moment","isBefore","useGridTableCell","rowsQuantity","backgroundColor","selected","GridTable","rows","columns","newSelectedAppointment","_","rowIndex","cellIndex","GridTableCell","SchedulerTable","QuantityLabel","whiteSpace","CustomSelect","label","selectedValue","disabled","size","setSelected","FormControl","variant","InputLabel","Select","event","val","MenuItem","memo","getFilterData","DashboardViewType","useFilter","onFilterDataChange","horizontal","filterInitialData","filter","readers","reader","notaries","notary","accompanyings","accompanying","contractTypes","contract_type","developers","developer","sortType","sort_type","representative","setRepresentative","shouldRenderFilter","Boolean","selectedNotary","setSelectedNotary","selectedReader","setSelectedReader","selectedAccompanying","setSelectedAccompanying","selectedContractType","setSelectedContractType","selectedDeveloper","setSelectedDeveloper","selectedRepresentative","setSelectedRepresentative","selectedSortType","setSelectedSortType","clearAll","then","notary_id","reader_id","giver_id","contract_type_id","developer_id","dev_assistant_id","Filter","meta","SchedulerFilter","useSchedulerFilter","useSchedulerLock","SchedulerLock","SchedulerFilterContainer","RadioButtonsGroup","buttons","unicId","setSelectedValue","handleChange","checked","htmlFor","AddFormButton","onKeyPress","CustomInput","setText","TextField","RemoveFormButton","index","Clients","clients","onPhoneChange","phone","onNameChange","full_name","useClients","marginLeft","onRemove","onAdd","PrimaryButton","CustomSwitch","setValue","FormControlLabel","control","Switch","name","labelPlacement","ImmovableContainer","immovables","developersInfo","building","contracts","form_data","immovableTypes","immovable_type","onContractChange","onBuildingChange","building_id","onImmovableTypeChange","imm_type_id","onBankChange","bank","onProxyChange","proxy","onImmNumChange","imm_number","useImmovableContainer","immovableItem","clientItem","useForm","selectedCard","initialValues","edit","insideEdit","setEdit","card","setNotary","devCompanyId","setDevCompanyId","devRepresentativeId","setDevRepresentativeId","devManagerId","setDevManagerId","setImmovables","setClients","manager","onNotaryChange","dev_company_id","dev_representative_id","dev_manager_id","onDeveloperChange","onRepresentativeChange","onManagerChange","onImmovablesChange","onClientsChange","onClearAll","onAddImmovables","onRemoveImmovable","mapIndex","onAddClients","onRemoveClient","activeAddButton","every","onFormCreate","imm_num","editCalendarCardService","message","open","createNewCardService","onCloseForm","selectedNotaryId","selectedDeveloperId","selectedDevRepresentativeId","selecedDevManagerId","SchedulerForm","selectedTab","setSelectedTab","oldSelectedAppointment","editAppointmentData","useSchedulerForm","useModal","modalInfo","handleClose","Modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","SchedulerContainer","modalProps","SchedulerScreen","useDashboard","CARDS","selectedType","setSelectedType","PRINTER","DashboardSection","sectionData","onCardClick","TABLE","cards","instructions","DashboardControl","height","viewBox","xmlns","fillRule","clipRule","d","Dashboard","key","quantity","Contracts","FilterContainer","filterData","setFilterData","onFilterSubmit","useFilterContainer","DashboardContainer","DashboardScreen","Carousel","images","dots","infinite","speed","arrows","slidesToShow","slidesToScroll","CustomCheckBox","Checkbox","CustomPasswordInput","password","setPassword","showPassword","setShowPassword","OutlinedInput","endAdornment","InputAdornment","position","IconButton","aria-label","onMouseDown","preventDefault","edge","Visibility","VisibilityOff","labelWidth","getLoginCarouselImages","useAuthorization","setImages","email","setEmail","remember","setRemember","handleLogin","setItem","sendLogin","disabledButton","image","fetchImages","autoComplete","onSubmit","to","useForgotPassword","handleReset","forgotPasswordService","ForgotPassword","UpdatePassword","useParams","repeatPassword","setRepeatPassword","handleUpdate","c_password","useUpdatePassword","LoginScreen","path","exact","App","localUser","getItem","parse","useApp","initialState","reducer","action","combineReducers","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.3713f23c.chunk.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\nexport const DEFAULT_URL = 'http://app.synction.space';\n","/* eslint-disable comma-dangle */\ntype RequestOptions = {\n  url: string;\n  method?: 'GET' | 'POST' | 'DELETE' | 'PATCH' | 'PUT';\n  bodyData?: any;\n  headers?: {};\n};\n\nconst requestApi = async (options: RequestOptions) => {\n  // eslint-disable-next-line object-curly-newline\n  const { url, method = 'GET', headers = {}, bodyData } = options;\n\n  const params = {\n    body: undefined as string | undefined,\n    method: method || 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'applicatioin/json',\n      ...headers,\n    },\n  };\n\n  if (bodyData) {\n    params.body = JSON.stringify(bodyData);\n  }\n\n  const res: any = await fetch(url, params);\n  const json: any = await res.json();\n\n  // if (!json.success) {\n  //   const { status, message } = res;\n  //   throw new Error(\n  //     `[${status}, ${message}] Could not fetch on URL (${url}) data:\\n${JSON.stringify(\n  //       json,\n  //       null,\n  //       2\n  //     )}`\n  //   );\n  // }\n\n  return json;\n};\n\nexport default requestApi;\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\ntype BodyData = {\n  email: string;\n  password: string;\n};\n\nexport default async function login(bodyData: BodyData) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/login`,\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\ntype BodyData = {\n  email: string;\n};\n\nexport default async function forgotPassword(bodyData: BodyData) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/password/forgot`,\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\nexport type ResetPasswordType = {\n  token: string;\n  password: string;\n  c_password: string;\n};\n\nexport default async function resetPassword(bodyData: ResetPasswordType) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/password/update`,\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { Dispatch } from 'redux';\nimport getToken from '../../services/getToken';\nimport login from '../../services/login/Login';\nimport forgotPasswordService from '../../services/login/forgotPassword';\nimport resetPasswordService, {\n  ResetPasswordType,\n} from '../../services/login/resetPassword';\n\nexport const ACTIONS = {\n  SET_TOKEN: 'SET_TOKEN',\n  SET_USER: 'SET_USER',\n  SET_LOADING: 'SET_LOADING',\n  SET_MODAL_INFO: 'SET_MODAL_INFO',\n};\n\nexport const setToken = (payload: string) => ({\n  type: ACTIONS.SET_TOKEN,\n  payload,\n});\n\nexport const setLogin = (payload: string) => ({\n  type: ACTIONS.SET_TOKEN,\n  payload,\n});\n\nexport const setUser = (payload: any) => ({\n  type: ACTIONS.SET_USER,\n  payload,\n});\n\nexport const setModalInfo = (payload: any) => ({\n  type: ACTIONS.SET_MODAL_INFO,\n  payload,\n});\n\n// Thunk actions\nexport const fetchToken = () => async (dispatch: Dispatch<any>) => {\n  const token = await getToken();\n  dispatch(setToken(token));\n};\n\nexport const sendLogin = (\n  bodyData: {\n    email: string;\n    password: string;\n  },\n  remember: boolean\n) => async (dispatch: Dispatch<any>) => {\n  const { success, message, data } = await login(bodyData);\n\n  if (success) {\n    dispatch(setToken(data.token));\n    dispatch(setUser(data));\n  } else {\n    dispatch(\n      setModalInfo({\n        success,\n        message,\n        open: true,\n      })\n    );\n  }\n\n  if (remember) localStorage.setItem('user', JSON.stringify(data));\n};\n\nexport const forgotPassword = ({ email }: { email: string }) => async (\n  dispatch: Dispatch<any>\n) => {\n  const { success, message } = await forgotPasswordService({ email });\n\n  if (success) dispatch(setModalInfo({ success, message, open: true }));\n};\n\nexport const resetPassword = (data: ResetPasswordType) => async (\n  dispatch: Dispatch<any>\n) => {\n  const { success, message } = await resetPasswordService(data);\n\n  if (success) dispatch(setModalInfo({ success, message, open: true }));\n};\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getAppointments(token: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data.data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { FilterData } from '../store/types';\nimport { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function setSchedulerFilter(\n  place: string,\n  token: string,\n  bodyData: FilterData\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/filter/sort/${place}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function searchAppointments(\n  token: string,\n  bodyData: {\n    text: string;\n    page: string;\n  }\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/filter/search`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getAppointmentsForDashboard(token: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/filter/total`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data.data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { Dispatch } from 'redux';\nimport { UserTypes } from '../../types';\nimport { FilterData, State } from '../types';\nimport getAppointments from '../../services/getAppointments';\nimport setSchedulerFilter from '../../services/setSchedulerFilter';\nimport searchAppointmentsServices from '../../services/searchAppointments';\nimport getAppointmentsForDashboard from '../../services/getAppointmentsForDashboard';\n\nexport const ACTIONS = {\n  SET_LOADING: 'SET_LOADING',\n  SET_APPOINTMENTS: 'SET_APPOINTMENTS',\n  ADD_NEW_APPOINTMENT: 'ADD_NEW_APPOINTMENT',\n  EDIT_APPOINTMENTS: 'EDIT_APPOINTMENTS',\n};\n\nexport const setIsLoading = (payload: boolean) => ({\n  type: ACTIONS.SET_LOADING,\n  payload,\n});\n\nexport const setAppointments = (payload: any) => ({\n  type: ACTIONS.SET_APPOINTMENTS,\n  payload,\n});\n\nexport const addNewAppointment = (payload: any) => ({\n  type: ACTIONS.ADD_NEW_APPOINTMENT,\n  payload,\n});\n\nexport const setEditAppointmens = (payload: any) => ({\n  type: ACTIONS.EDIT_APPOINTMENTS,\n  payload,\n});\n\nexport const fetchAppointments = (userType: UserTypes) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    dispatch(setIsLoading(true));\n    let data;\n\n    if (userType === 'reception') {\n      data = await getAppointments(token);\n    } else {\n      data = await getAppointmentsForDashboard(token);\n    }\n\n    dispatch(setAppointments(Object.values(data)));\n    dispatch(setIsLoading(false));\n  }\n};\n\nexport const fetchAppointmentsByFilter = (place: string, bodyData: FilterData) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const { data, success } = await setSchedulerFilter(place, token, bodyData);\n\n    if (success) {\n      dispatch(setAppointments(Object.values(data)));\n    }\n  }\n};\n\nexport const searchAppointments = (text: string, page: string) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const { success, data } = await searchAppointmentsServices(token, {\n      text,\n      page,\n    });\n\n    if (success) {\n      dispatch(setAppointments(data));\n    }\n  }\n};\n","export type ImmovableItem = {\n  contract_type_id: number | null;\n  building_id: number | null;\n  imm_type_id: number | null;\n  imm_number: number | null;\n  bank: boolean;\n  proxy: boolean;\n};\n\nexport type ImmovableItems = ImmovableItem[];\n\nexport type SelectItem = {\n  id: number;\n  title: string;\n};\n\nexport type ClientItem = {\n  phone: string | null;\n  full_name: string | null;\n};\n\nexport type NewCard = {\n  immovables: ImmovableItems;\n  clients: ClientItem[];\n  date_time: string;\n  dev_company_id: number | null;\n  dev_representative_id: number | null;\n  dev_manager_id: number | null;\n  room_id: number;\n  notary_id: number | null;\n};\n\n// eslint-disable-next-line no-shadow\nexport enum UserTypes {\n  PRINTER = 'printer',\n  RECEPTION = 'reception',\n  MANAGER = 'manager',\n  ASSISTANT = 'assistant',\n  REGISTRATOR = 'registrator',\n}\n\nexport type ManagerAppointmentCard = {\n  id: number;\n  color: string;\n  instructions: string[];\n  short_info: {\n    dev_representative_id: string;\n    notary: string;\n    notary_assistant_giver: string;\n    notary_assistant_reader: string;\n  };\n  title: string;\n};\n\nexport type ManagerAppointment = {\n  day: string;\n  date: string;\n  cards: ManagerAppointmentCard[];\n};\n\nexport type ManagerAppointments = ManagerAppointment[];\n","import React, { useState, useEffect } from 'react';\n\nconst useDebounce = (value: string, delay: number) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value]);\n\n  return debouncedValue;\n};\n\nexport default useDebounce;\n","import { useDispatch } from 'react-redux';\nimport {\n  ChangeEvent, useState, useEffect, useCallback\n} from 'react';\nimport { setUser } from '../../store/main/actions';\nimport { searchAppointments } from '../../store/appointments/actions';\nimport useDebounce from './utils/useDebounce';\n\nexport const useHeader = () => {\n  const dispatch = useDispatch();\n  const [searchText, setSearchText] = useState<string>('');\n  const [count, setCount] = useState<number>(0);\n\n  const debouncedValue = useDebounce(searchText, 1000);\n\n  useEffect(() => {\n    if (!count) {\n      setCount((prev: number) => prev + 1);\n      return;\n    }\n\n    dispatch(searchAppointments(debouncedValue, 'calendar'));\n  }, [debouncedValue]);\n\n  const onSearch = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value);\n  }, [searchText]);\n\n  const onLogout = useCallback(() => {\n    localStorage.clear();\n    dispatch(setUser({ type: null, token: null }));\n  }, []);\n\n  return { onSearch, onLogout, searchText };\n};\n","import * as React from 'react';\nimport './index.scss';\nimport { useHeader } from './useHeader';\n\nconst Header = () => {\n  const { onSearch, onLogout, searchText } = useHeader();\n\n  return (\n    <div className=\"header container\">\n      <div className=\"header__logo\">\n        <img src=\"/icons/logo.svg\" alt=\"logo\" />\n      </div>\n      <div className=\"header__search\">\n        <input\n          type=\"text\"\n          placeholder=\"Пошук...\"\n          onChange={onSearch}\n          value={searchText}\n        />\n        <img src=\"/icons/search.svg\" alt=\"search\" />\n      </div>\n      <div className=\"header__control\">\n        <img src=\"/icons/log-out.svg\" alt=\"logout\" onClick={onLogout} />\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import { NewCard } from '../types';\nimport { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function createNewCard(token: string, bodyData: NewCard) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { NewCard } from '../types';\nimport { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function editCalendarCard(\n  token: string,\n  bodyData: NewCard,\n  id: number\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'PUT',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getCalendarCard(token: string, id: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data.data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getDeveloperInfo(token: string, id: number) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/filter/developer/info/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data.data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getCalendar(token: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/calendar`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data.data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { NewCard } from '../types';\nimport { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function moveCalendarCard(\n  token: string,\n  bodyData: {\n    date_time: string;\n    room_id: number;\n  },\n  id: number\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards/move/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'PUT',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","/* eslint-disable consistent-return */\nimport { Dispatch } from 'react';\nimport { NewCard } from '../../types';\nimport { State } from '../types';\nimport createNewCardService from '../../services/createNewCard';\nimport editCalendarCardService from '../../services/editCalendarCard';\nimport getCalendarCard from '../../services/getCalendarCard';\nimport getDeveloperInfo from '../../services/getDeveloperInfo';\nimport getCalendar from '../../services/getCalendar';\nimport moveCalendarCardService from '../../services/moveCalendarCard';\nimport { setModalInfo } from '../main/actions';\nimport { addNewAppointment, setEditAppointmens } from '../appointments/actions';\n\nexport const ACTIONS = {\n  SET_OPTIONS: 'SET_OPTIONS',\n  SET_DEVELOPERS_INFO: 'SET_DEVELOPERS_INFO',\n  SET_SELECTED_NEW_APPOINTMENT: 'SET_SELECTED_NEW_APPOINTMENT',\n  SET_SELECTED_OLD_APPOINTMENT: 'SET_SELECTED_OLD_APPOINTMENT',\n  SET_EDIT_APPOINTMENT_DATA: 'SET_EDIT_APPOINTMENT_DATA',\n  SET_IS_LOADING: 'SET_IS_LOADING',\n  SET_SCHEDULER_LOCK: 'SET_SCHEDULER_LOCK',\n};\n\nexport const setSchedulerOptions = (payload: any) => ({\n  type: ACTIONS.SET_OPTIONS,\n  payload,\n});\n\nexport const setDevelopersInfo = (payload: any) => ({\n  type: ACTIONS.SET_DEVELOPERS_INFO,\n  payload,\n});\n\nexport const setSelectedNewAppointment = (payload: any) => ({\n  type: ACTIONS.SET_SELECTED_NEW_APPOINTMENT,\n  payload,\n});\n\nexport const setSelectedOldAppointment = (payload: any) => ({\n  type: ACTIONS.SET_SELECTED_OLD_APPOINTMENT,\n  payload,\n});\n\nexport const setEditAppointmentData = (payload: any) => ({\n  type: ACTIONS.SET_EDIT_APPOINTMENT_DATA,\n  payload,\n});\n\nexport const setSchedulerLock = (payload: boolean) => ({\n  type: ACTIONS.SET_SCHEDULER_LOCK,\n  payload,\n});\n\nexport const setIsLoading = (payload: boolean) => ({\n  type: ACTIONS.SET_IS_LOADING,\n  payload,\n});\n\n// Thunk actions\nexport const editCalendarCard = (bodyData: NewCard, id: number) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const { success, message, data } = await editCalendarCardService(\n      token,\n      bodyData,\n      id\n    );\n\n    dispatch(\n      setModalInfo({\n        open: true,\n        success,\n        message,\n      })\n    );\n\n    if (success) {\n      dispatch(setEditAppointmens(data));\n    }\n  }\n};\n\nexport const fetchCalendarCard = (id: string) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const data = await getCalendarCard(token, id);\n    dispatch(setEditAppointmentData(data));\n  }\n};\n\nexport const fetchDeveloperInfo = (\n  id: number,\n  notDispatch: boolean = false\n) => async (dispatch: Dispatch<any>, getState: () => State) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const data = await getDeveloperInfo(token, id);\n\n    if (!notDispatch) {\n      dispatch(setDevelopersInfo(data));\n    }\n  }\n};\n\nexport const fetchSchedulerSettings = () => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    dispatch(setIsLoading(true));\n    const data = await getCalendar(token);\n    dispatch(setSchedulerOptions(data));\n    dispatch(setIsLoading(false));\n  }\n};\n\nexport const moveCalendarCard = (\n  bodyData: {\n    date_time: string;\n    room_id: number;\n  },\n  id: number\n) => async (dispatch: Dispatch<any>, getState: () => State) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const { success, data } = await moveCalendarCardService(\n      token,\n      bodyData,\n      id\n    );\n\n    if (success) {\n      dispatch(setEditAppointmens(data));\n    }\n  }\n};\n\nexport const createNewCard = (data: NewCard) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const res = await createNewCardService(token, data);\n\n    dispatch(\n      setModalInfo({\n        open: true,\n        success: res.success,\n        message: res.message,\n      })\n    );\n\n    if (res.success) {\n      dispatch(addNewAppointment(res.data));\n    }\n  }\n};\n","const formatAppointmentDate = (\n  hours: any,\n  rooms: any,\n  days: any,\n  raw: number,\n  cell: number\n) => {\n  const { day, date, year } = days[Math.floor(raw / hours.length)];\n  const { time } = hours[raw % hours.length];\n  const room = rooms[cell].id;\n  return {\n    day,\n    date: date.split('.').reverse().join('.'),\n    year,\n    time,\n    room,\n  };\n};\n\nexport default formatAppointmentDate;\n","import { useCallback, useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UserTypes } from '../../../../../../types';\nimport {\n  setSelectedOldAppointment,\n  fetchCalendarCard,\n  fetchSchedulerSettings,\n  moveCalendarCard,\n} from '../../../../../../store/scheduler/actions';\nimport { fetchAppointments, setAppointments } from '../../../../../../store/appointments/actions';\nimport { State } from '../../../../../../store/types';\nimport formatAppointmentDate from './utils/formatAppointmentDate';\n\nexport const useSchedulerTable = () => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n  const { options, isLoading } = useSelector((state: State) => state.scheduler);\n  const { appointments } = useSelector((state: State) => state.appointments);\n\n  useEffect(() => {\n    if (!isLoading) {\n      dispatch(fetchSchedulerSettings());\n      dispatch(fetchAppointments(UserTypes.RECEPTION));\n    }\n\n    return () => { dispatch(setAppointments([])); };\n  }, [token]);\n\n  const rooms = useMemo(() => options?.rooms, [options]);\n  const hours = useMemo(() => options?.work_time, [options]);\n\n  const shouldLoad = useMemo(() => isLoading || !options, [\n    isLoading,\n    rooms,\n    hours,\n  ]);\n\n  const tableColumns = useMemo(() => new Array(rooms?.length || 0).fill(1), [\n    rooms,\n  ]);\n\n  const days = useMemo(() => options?.day_and_date, [options]);\n\n  const tableRows = useMemo(\n    () => new Array(hours?.length * days?.length || 0).fill(1),\n    [hours]\n  );\n\n  const handleAppointmentDrag = useCallback(\n    (appointment) => {\n      const { year, date, time, room } = formatAppointmentDate(\n        hours,\n        rooms,\n        days,\n        appointment.y,\n        appointment.x\n      );\n\n      const date_time = `${year}.${date}. ${time}`;\n\n      const data = {\n        date_time,\n        room_id: room,\n      };\n\n      dispatch(moveCalendarCard(data, appointment.i));\n    },\n    [hours, days, rooms, days]\n  );\n\n  const onAppointmentClick = useCallback(\n    async ({ x, y, i }: any) => {\n      const payload = formatAppointmentDate(hours, rooms, days, y, x);\n\n      dispatch(fetchCalendarCard(i));\n\n      dispatch(\n        setSelectedOldAppointment({\n          ...payload,\n          i,\n        })\n      );\n    },\n    [hours, rooms, days]\n  );\n\n  return {\n    shouldLoad,\n    rooms,\n    hours,\n    tableRows,\n    tableColumns,\n    days,\n    appointments,\n    handleAppointmentDrag,\n    onAppointmentClick,\n  };\n};\n","import React from 'react';\nimport { LoopCircleLoading } from 'react-loadingg';\n\nconst Loader = () => <LoopCircleLoading color=\"#165153\" />;\n\nexport default Loader;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport './SchedulerDay.scss';\n\nconst SchedulerDay = ({ day, hours }) => (\n  <div className=\"scheduler__weekDay\">\n    <div className=\"scheduler__day\">\n      <p>\n        {day.day}\n        <br />\n        {day.date}\n      </p>\n    </div>\n    <div className=\"scheduler__timeLine\">\n      {hours.map(({ time }) => (\n        <p key={time}>{time}</p>\n      ))}\n    </div>\n  </div>\n);\n\nexport default SchedulerDay;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport './GridLayout.scss';\nimport RGL, { WidthProvider } from 'react-grid-layout';\nimport $ from 'jquery';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useSelector } from 'react-redux';\n\nconst ReactGridLayout = WidthProvider(RGL);\n\nexport default function GridLayout({\n  appointments,\n  cols,\n  handleDrag,\n  handleClick,\n}) {\n  const [dragAndDropWidth, setDragAndDropWidth] = useState(1200);\n  const { schedulerLock } = useSelector((state) => state.scheduler);\n\n  useEffect(() => {\n    setDragAndDropWidth($('.scheduler__appointments').width());\n  }, []);\n\n  const onDrag = (all, current) => {\n    const currentApp = all.find((item) => item.i === current.i);\n    handleDrag(currentApp);\n  };\n\n  if (!appointments) {\n    return <span>Loading...</span>;\n  }\n\n  return (\n    <ReactGridLayout\n      className=\"scheduler__dragAndDrop\"\n      cols={cols}\n      rowHeight={75}\n      width={dragAndDropWidth}\n      margin={[0, 0]}\n      containerPadding={[0, 0]}\n      verticalCompact={false}\n      preventCollision\n      layout={appointments}\n      onDragStop={onDrag}\n      isDraggable={!schedulerLock}\n    >\n      {appointments.map((appointment) => (\n        <div\n          key={appointment.i}\n          className=\"appointment\"\n          style={{ borderLeft: `4px solid ${appointment.color}` }}\n          onClick={() => handleClick(appointment)}\n        >\n          <div className=\"appointment__title\">{appointment.title}</div>\n          <table className=\"appointment__table\">\n            <tbody>\n              <tr>\n                {Object.values(appointment.short_info).map((item) => (\n                  <td key={uuidv4()}>{item}</td>\n                ))}\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      ))}\n    </ReactGridLayout>\n  );\n}\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React from 'react';\nimport { Props, useGridTableCell } from './useGridTableCell';\n\nconst GridLayoutCell = (props: Props) => {\n  const { onClick } = useGridTableCell(props);\n\n  return (\n    <td\n      onClick={onClick}\n      style={{\n        width: `calc(100% / ${props.rowsQuantity})`,\n        backgroundColor: props.selected ? '#E5E5E5' : '',\n      }}\n    />\n  );\n};\n\nexport default GridLayoutCell;\n","/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable operator-linebreak */\nimport { useMemo, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { State } from '../../../../../../../../store/types';\nimport formatAppointmentDate from '../../utils/formatAppointmentDate';\nimport { setSelectedNewAppointment } from '../../../../../../../../store/scheduler/actions';\n\nexport type Props = {\n  rowsQuantity: number;\n  raw: number;\n  cell: number;\n  selected: boolean;\n};\n\nexport const useGridTableCell = ({ raw, cell }: Props) => {\n  const { options } = useSelector((state: State) => state.scheduler);\n  const dispatch = useDispatch();\n\n  const rooms = useMemo(() => options?.rooms, [options]);\n  const hours = useMemo(() => options?.work_time, [options]);\n  const days = useMemo(() => options?.day_and_date, [options]);\n\n  const onClick = useCallback(() => {\n    const payload = formatAppointmentDate(hours, rooms, days, raw, cell);\n    const isBefore = moment(\n      `${payload.year}.${payload.date}. ${payload.time}`\n    ).isBefore(moment());\n\n    if (isBefore) return;\n    dispatch(setSelectedNewAppointment({ ...payload, raw, cell }));\n  }, [hours, rooms, days, raw, cell]);\n\n  return { onClick };\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport GridTableCell from '../GridTableCell/GridTableCell';\nimport { Props, useGridTable } from './useGridTable';\n\nexport default function GridTable({ rows, columns }: Props) {\n  const { newSelectedAppointment } = useGridTable();\n\n  return (\n    <div className=\"scheduler__bodyTable\">\n      <table>\n        <tbody>\n          {rows.map((_: any, rowIndex: number) => (\n            <tr key={uuidv4()}>\n              {columns.map((day: any, cellIndex: number) => (\n                <GridTableCell\n                  selected={\n                    // eslint-disable-next-line prettier/prettier\n                    newSelectedAppointment?.raw === rowIndex\n                    // eslint-disable-next-line prettier/prettier\n                    && newSelectedAppointment?.cell === cellIndex\n                  }\n                  rowsQuantity={rows.length}\n                  raw={rowIndex}\n                  cell={cellIndex}\n                  key={uuidv4()}\n                />\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { State } from '../../../../../../../../store/types';\n\nexport type Props = {\n  rows: any;\n  columns: any;\n};\n\nexport const useGridTable = () => {\n  const newSelectedAppointment = useSelector(\n    (state: State) => state.scheduler.newSelectedAppointment\n  );\n\n  return { newSelectedAppointment };\n};\n","import React from 'react';\nimport './index.scss';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useSchedulerTable } from './useSchedulerTable';\nimport Loader from '../../../../../../components/Loader/Loader';\n\n// components\nimport SchedulerDay from './components/SchedulerDay/SchedulerDay';\nimport GridLayout from './components/GridLayout/GridLayout';\nimport GridTable from './components/GridTable/GridTable';\n\nconst SchedulerTable = () => {\n  const {\n    shouldLoad,\n    rooms,\n    hours,\n    tableRows,\n    tableColumns,\n    days,\n    appointments,\n    handleAppointmentDrag,\n    onAppointmentClick,\n  } = useSchedulerTable();\n\n  if (shouldLoad) {\n    return (\n      <div className=\"scheduler\">\n        <Loader />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"scheduler\">\n      <div className=\"scheduler__header\">\n        <div />\n        <div>\n          <table>\n            <tbody>\n              <tr>\n                {rooms.map(({ title }: any) => (\n                  <td\n                    key={title}\n                    style={{ width: `calc(100% / ${rooms.length})` }}\n                  >\n                    {title}\n                  </td>\n                ))}\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <div className=\"scheduler__body\">\n        <div className=\"scheduler__dayBar\">\n          {days.map((item: any) => (\n            <SchedulerDay day={item} hours={hours} key={uuidv4()} />\n          ))}\n        </div>\n        <div className=\"scheduler__appointments\">\n          <GridTable rows={tableRows} columns={tableColumns} />\n          <GridLayout\n            appointments={appointments}\n            cols={tableColumns.length}\n            handleDrag={handleAppointmentDrag}\n            handleClick={onAppointmentClick}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SchedulerTable;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { State } from '../../../../../../../store/types';\n\nexport const QuantityLabel = () => {\n  const { appointments } = useSelector((state: State) => state.appointments);\n\n  return (\n    <span style={{ whiteSpace: 'nowrap' }}>\n      {`В роботі: ${appointments?.length}`}\n    </span>\n  );\n};\n\nexport default QuantityLabel;\n","/* eslint-disable object-curly-newline */\n/* eslint-disable no-unused-vars */\nimport React, { useState, memo, useEffect } from 'react';\nimport './index.scss';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\ntype Data = {\n  id: number;\n  title: string;\n};\n\ntype Props = {\n  onChange: (value: string) => void;\n  data: Data[];\n  label: string;\n  selectedValue?: string | null | number;\n  disabled?: boolean;\n  size?: 'medium' | 'small';\n};\n\nconst CustomSelect = ({\n  onChange,\n  data,\n  label,\n  selectedValue,\n  disabled,\n  size = 'medium',\n}: Props) => {\n  const [selected, setSelected] = useState(selectedValue || '');\n\n  useEffect(() => {\n    setSelected(selectedValue || '');\n  }, [selectedValue]);\n\n  const handleChange = (event: any) => {\n    const val = event.target.value;\n    setSelected(val);\n    onChange(val);\n  };\n\n  return (\n    <FormControl variant=\"outlined\" className=\"customSelect\" size={size}>\n      <InputLabel>{label}</InputLabel>\n      <Select\n        value={selected}\n        onChange={handleChange}\n        disabled={disabled || data.length === 0}\n      >\n        <MenuItem value=\"\">\n          <em>Выбрать</em>\n        </MenuItem>\n        {data.map(({ id, title }: Data) => (\n          <MenuItem value={id} key={id}>\n            {title}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default memo(CustomSelect);\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getFilterData(token: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/filter/dropdown`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data.data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { Dispatch } from 'redux';\nimport getFilterData from '../../services/getFilterData';\nimport { State } from '../types';\n\nexport const ACTIONS = {\n  SET_FILTER_INITIAL_DATA: 'SET_FILTER_INITIAL_DATA',\n};\n\nexport const setFilterInitialData = (payload: any) => ({\n  type: ACTIONS.SET_FILTER_INITIAL_DATA,\n  payload,\n});\n\nexport const fetchFilterData = () => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const data = await getFilterData(token);\n    dispatch(setFilterInitialData(data));\n  }\n};\n","import { useDispatch, useSelector } from 'react-redux';\n/* eslint-disable no-shadow */\nimport { useEffect, useState } from 'react';\nimport { UserTypes } from '../../../../../../types';\nimport { fetchAppointments, setAppointments } from '../../../../../../store/appointments/actions';\nimport { State } from '../../../../../../store/types';\n\nexport enum DashboardViewType {\n  CARDS,\n  TABLE\n}\n\nconst useDashboard = () => {\n  const dispatch = useDispatch();\n  const [selectedType, setSelectedType] = useState<DashboardViewType>(DashboardViewType.CARDS);\n  const { appointments, isLoading } = useSelector((state: State) => state.appointments);\n\n  useEffect(() => {\n    dispatch(fetchAppointments(UserTypes.PRINTER));\n\n    return () => { dispatch(setAppointments([])); };\n  }, []);\n\n  return { selectedType, setSelectedType, appointments, isLoading };\n};\n\nexport default useDashboard;\n","import {\n  useEffect, useMemo, useState, useCallback\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FilterData, State } from '../../store/types';\nimport { SelectItem } from '../../types';\nimport { fetchFilterData } from '../../store/filter/actions';\nimport getDeveloperInfo from '../../services/getDeveloperInfo';\n\nexport type Props = {\n  onFilterDataChange: (data: FilterData) => void;\n  horizontal?: boolean;\n}\n\nexport const useFilter = ({ onFilterDataChange, horizontal }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n  const { filterInitialData } = useSelector((state: State) => state.filter);\n\n  useEffect(() => {\n    dispatch(fetchFilterData());\n  }, [token]);\n\n  const readers = useMemo(() => filterInitialData?.reader, [filterInitialData]);\n  const notaries = useMemo(() => filterInitialData?.notary, [\n    filterInitialData,\n  ]);\n  const accompanyings = useMemo(() => filterInitialData?.accompanying, [\n    filterInitialData,\n  ]);\n  const contractTypes = useMemo(() => filterInitialData?.contract_type, [\n    filterInitialData,\n  ]);\n  const developers = useMemo(() => filterInitialData?.developer, [\n    filterInitialData,\n  ]);\n  const sortType = useMemo(() => filterInitialData?.sort_type, [\n    filterInitialData,\n  ]);\n  const [representative, setRepresentative] = useState<SelectItem[]>([]);\n\n  const shouldRenderFilter = useMemo(() => Boolean(filterInitialData), [\n    filterInitialData,\n  ]);\n\n  // selected values and CTA\n  const [selectedNotary, setSelectedNotary] = useState<string | null>(null);\n  const [selectedReader, setSelectedReader] = useState<string | null>(null);\n  const [selectedAccompanying, setSelectedAccompanying] = useState<\n    string | null\n  >(null);\n  const [selectedContractType, setSelectedContractType] = useState<\n    string | null\n  >(null);\n  const [selectedDeveloper, setSelectedDeveloper] = useState<string | null>(\n    null\n  );\n  const [selectedRepresentative, setSelectedRepresentative] = useState<\n    string | null\n  >(null);\n  const [selectedSortType, setSelectedSortType] = useState<string | null>(null);\n\n  const clearAll = useCallback(() => {\n    setSelectedNotary(null);\n    setSelectedReader(null);\n    setSelectedAccompanying(null);\n    setSelectedContractType(null);\n    setSelectedDeveloper(null);\n    setSelectedRepresentative(null);\n    setSelectedSortType(null);\n  }, []);\n\n  // useEffects\n  useEffect(() => {\n    setSelectedRepresentative(null);\n    if (token && selectedDeveloper) {\n      getDeveloperInfo(token, +selectedDeveloper)\n        .then((data) => setRepresentative(data.representative || []));\n    }\n  }, [selectedDeveloper]);\n\n  useEffect(() => {\n    const data: FilterData = {\n      notary_id: selectedNotary,\n      reader_id: selectedReader,\n      giver_id: selectedAccompanying,\n      contract_type_id: selectedContractType,\n      developer_id: selectedDeveloper,\n      dev_assistant_id: selectedRepresentative,\n    };\n\n    if (!horizontal) {\n      data.sort_type = selectedSortType;\n    }\n\n    onFilterDataChange(data);\n  }, [\n    selectedNotary,\n    selectedReader,\n    selectedAccompanying,\n    selectedContractType,\n    selectedDeveloper,\n    selectedRepresentative,\n    selectedSortType,\n  ]);\n\n  return {\n    shouldRenderFilter,\n    notaries,\n    readers,\n    accompanyings,\n    contractTypes,\n    developers,\n    representative,\n    sortType,\n    selectedNotary,\n    selectedReader,\n    selectedRepresentative,\n    selectedDeveloper,\n    selectedContractType,\n    selectedAccompanying,\n    selectedSortType,\n    setSelectedNotary,\n    setSelectedReader,\n    setSelectedAccompanying,\n    setSelectedContractType,\n    setSelectedDeveloper,\n    setSelectedRepresentative,\n    setSelectedSortType,\n    clearAll,\n  };\n};\n","import React from 'react';\nimport './index.scss';\nimport CustomSelect from '../CustomSelect';\nimport { useFilter, Props } from './useFilter';\n\nconst Filter = (props: Props) => {\n  const meta = useFilter(props);\n\n  if (!meta.shouldRenderFilter) {\n    return null;\n  }\n\n  return (\n    <div className={`filter ${props.horizontal ? 'horizontal' : ''}`}>\n      <div className=\"filter__header\">\n        <span style={{ whiteSpace: 'nowrap' }} className={`${props.horizontal ? '' : 'title'}`}>{props.horizontal ? 'Сортувати по:' : 'Фільтр'}</span>\n        {!props.horizontal && (\n          <img\n            src=\"/icons/clear-form.svg\"\n            alt=\"clear form\"\n            onClick={meta.clearAll}\n            className=\"filter__clear\"\n          />\n        )}\n      </div>\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '115px' : '100%' }}>\n        <CustomSelect\n          data={meta.notaries}\n          selectedValue={meta.selectedNotary}\n          onChange={meta.setSelectedNotary}\n          label=\"Нотаріус\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '90px' : '100%' }}>\n        <CustomSelect\n          data={meta.readers}\n          selectedValue={meta.selectedReader}\n          onChange={meta.setSelectedReader}\n          label=\"Читач\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '110px' : '100%' }}>\n        <CustomSelect\n          data={meta.accompanyings}\n          selectedValue={meta.selectedAccompanying}\n          onChange={meta.setSelectedAccompanying}\n          label=\"Видавач\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '150px' : '100%' }}>\n        <CustomSelect\n          data={meta.contractTypes}\n          selectedValue={meta.selectedContractType}\n          onChange={meta.setSelectedContractType}\n          label=\"Тип договору\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '140px' : '100%' }}>\n        <CustomSelect\n          data={meta.developers}\n          selectedValue={meta.selectedDeveloper}\n          onChange={meta.setSelectedDeveloper}\n          label=\"Забудовник\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '125px' : '100%' }}>\n        <CustomSelect\n          data={meta.representative}\n          selectedValue={meta.selectedRepresentative}\n          onChange={meta.setSelectedRepresentative}\n          label=\"Підписант\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      {!props.horizontal && (\n        <div\n          className=\"filter__select\"\n        >\n          <CustomSelect\n            data={meta.sortType}\n            selectedValue={meta.selectedSortType}\n            onChange={meta.setSelectedSortType}\n            label=\"Сортувати\"\n            size=\"medium\"\n          />\n        </div>\n      )}\n\n      {props.horizontal && (\n        <div className=\" df\">\n          <img\n            src=\"/icons/clear-form.svg\"\n            alt=\"clear form\"\n            onClick={meta.clearAll}\n            className=\"filter__clear\"\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Filter;\n","import * as React from 'react';\nimport Filter from '../../../../../../../../components/Filter';\nimport { useSchedulerFilter } from './useSchedulerFilter';\n\nconst SchedulerFilter = () => {\n  const { onFilterDataChange } = useSchedulerFilter();\n\n  return (\n    <Filter onFilterDataChange={onFilterDataChange} horizontal />\n  );\n};\n\nexport default SchedulerFilter;\n","import { useDispatch } from 'react-redux';\nimport { useCallback } from 'react';\nimport { FilterData } from '../../../../../../../../store/types';\nimport { fetchAppointmentsByFilter } from '../../../../../../../../store/appointments/actions';\n\nexport const useSchedulerFilter = () => {\n  const dispatch = useDispatch();\n\n  const onFilterDataChange = useCallback((data: FilterData) => {\n    dispatch(fetchAppointmentsByFilter('calendar', data));\n  }, []);\n\n  return { onFilterDataChange };\n};\n","import { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSchedulerLock } from '../../../../../../../../store/scheduler/actions';\nimport { State } from '../../../../../../../../store/types';\n\nexport const useSchedulerLock = () => {\n  const dispatch = useDispatch();\n  const { schedulerLock } = useSelector((state: State) => state.scheduler);\n\n  const onClick = useCallback(() => {\n    dispatch(setSchedulerLock(!schedulerLock));\n  }, [schedulerLock]);\n\n  return { onClick, schedulerLock };\n};\n","import React from 'react';\nimport { useSchedulerLock } from './useSchedulerLock';\nimport './index.scss';\n\nconst SchedulerLock = () => {\n  const { onClick, schedulerLock } = useSchedulerLock();\n\n  return (\n    <div className={`scheduler__lock-button ${schedulerLock ? '' : 'unLock'}`}>\n      <img src=\"/icons/lock.svg\" alt=\"lock\" onClick={onClick} />\n    </div>\n  );\n};\n\nexport default SchedulerLock;\n","import React from 'react';\nimport Filter from '../../../../../../components/Filter';\nimport QuantityLabel from './components/QuantityLabel';\nimport SchedulerFilter from './components/SchedulerFilter';\nimport SchedulerLock from './components/SchedulerLock';\nimport './index.scss';\n\nconst SchedulerFilterContainer = () => (\n  <div className=\"scheduler__filter\">\n    <QuantityLabel />\n    <SchedulerFilter />\n    <SchedulerLock />\n  </div>\n);\n\nexport default SchedulerFilterContainer;\n","/* eslint-disable react/require-default-props */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/no-unused-prop-types */\nimport React, { useState, memo, useEffect } from 'react';\nimport './index.scss';\n\ntype Button = {\n  id: number;\n  title: string;\n};\n\ntype Props = {\n  buttons: Button[];\n  unicId: string;\n  onChange: (id: number) => void;\n  selected?: number | null;\n};\n\nexport const RadioButtonsGroup = ({\n  buttons,\n  onChange,\n  selected,\n  unicId,\n}: Props) => {\n  const [selectedValue, setSelectedValue] = useState(selected || buttons[0].id);\n\n  useEffect(() => {\n    setSelectedValue(selected || buttons[0].id);\n  }, [selected]);\n\n  const handleChange = (id: number) => {\n    onChange(id);\n  };\n\n  return (\n    <div className=\"radio-buttons-group\">\n      {buttons.map(({ id, title }: Button) => (\n        <div\n          className={`radio-buttons-group__element ${\n            buttons.length === 1 ? 'edit' : ''\n          }`}\n        >\n          <input\n            type=\"radio\"\n            id={unicId + title}\n            value={id}\n            checked={selectedValue === id}\n            onChange={() => handleChange(id)}\n            className=\"input\"\n          />\n          <label htmlFor={unicId + title} className=\"label\">\n            {title}\n          </label>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioButtonsGroup);\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport './index.scss';\n\ntype Props = {\n  onClick: () => void;\n  disabled?: boolean;\n};\n\nconst AddFormButton = ({ onClick, disabled }: Props) => {\n  const handleClick = () => {\n    if (disabled) return;\n    onClick();\n  };\n\n  return (\n    <div\n      className={`add-form-button ${disabled ? 'disabled' : ''}`}\n      onClick={handleClick}\n      onKeyPress={handleClick}\n    >\n      <img src=\"/icons/plus.svg\" alt=\"plus\" />\n    </div>\n  );\n};\n\nexport default AddFormButton;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable react/react-in-jsx-scope */\nimport React, { useState, useEffect } from 'react';\nimport './index.scss';\nimport { TextField } from '@material-ui/core';\n\ntype Props = {\n  label: string;\n  onChange: (value: string) => void;\n  value?: string | number | null;\n  type?: string;\n  disabled?: boolean;\n};\n\nconst CustomInput = ({\n  label,\n  onChange,\n  value = '',\n  type = 'string',\n  disabled,\n}: Props) => {\n  const [text, setText] = useState(value || '');\n\n  useEffect(() => {\n    setText(value || '');\n  }, [value]);\n\n  const handleChange = (event: any) => {\n    setText(event.target.value);\n    onChange(event.target.value);\n  };\n\n  return (\n    <TextField\n      label={label}\n      variant=\"outlined\"\n      value={text}\n      onChange={handleChange}\n      type={type}\n      className=\"custom-input\"\n      disabled={disabled || false}\n    />\n  );\n};\n\nexport default CustomInput;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport './index.scss';\n\ntype Props = {\n  onClick: (index: number) => void;\n  index: number;\n  disabled?: boolean;\n};\n\nconst RemoveFormButton = ({ onClick, index, disabled }: Props) => {\n  const handleClick = () => {\n    if (disabled) return;\n    onClick(index);\n  };\n\n  return (\n    <div\n      className={`remove-form-button ${disabled ? 'disabled' : ''}`}\n      onClick={handleClick}\n      onKeyPress={() => onClick(index)}\n    >\n      <img src=\"/icons/minus.svg\" alt=\"minus\" />\n    </div>\n  );\n};\n\nexport default RemoveFormButton;\n","/* eslint-disable react/destructuring-assignment */\nimport React, { memo } from 'react';\nimport './index.scss';\nimport AddFormButton from '../../../../../../../../../../components/AddFormButton';\nimport CustomInput from '../../../../../../../../../../components/CustomInput/CustomInput';\nimport RemoveFormButton from '../../../../../../../../../../components/RemoveFormButton';\nimport { Props, useClients } from './useClients';\n\nconst Clients = (props: Props) => {\n  const meta = useClients(props);\n\n  return (\n    <div className=\"mv12\">\n      {props.clients.map((item, index) => (\n        <div className=\"clients__item mv12\">\n          <CustomInput\n            label=\"ПІБ\"\n            value={item.full_name}\n            onChange={(val) => meta.onNameChange(index, val)}\n            disabled={props.disabled || false}\n          />\n\n          <div className=\"mv12 df-jc-sb\">\n            <CustomInput\n              label=\"Номер телефону\"\n              value={item.phone}\n              onChange={(val) => meta.onPhoneChange(index, val)}\n              disabled={props.disabled || false}\n            />\n\n            {props.clients.length > 1 && (\n              <div style={{ marginLeft: '12px' }}>\n                <RemoveFormButton\n                  onClick={props.onRemove}\n                  index={index}\n                  disabled={props.disabled || false}\n                />\n              </div>\n            )}\n\n            {index === props.clients.length - 1 && (\n              <div style={{ marginLeft: '12px' }}>\n                <AddFormButton\n                  onClick={props.onAdd}\n                  disabled={props.disabled || false}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(Clients);\n","import { useCallback } from 'react';\nimport { CodeFixAction } from 'typescript';\nimport { ClientItem } from '../../../../../../../../../../types';\n\nexport type Props = {\n  clients: ClientItem[];\n  onChange: (index: number, value: ClientItem) => void;\n  onAdd: () => void;\n  onRemove: (index: number) => void;\n  disabled?: boolean;\n};\n\nexport const useClients = ({ onChange, clients }: Props) => {\n  const onPhoneChange = useCallback(\n    (index: number, value: string) => {\n      onChange(index, {\n        ...clients[index],\n        phone: value,\n      });\n    },\n    [clients]\n  );\n\n  const onNameChange = useCallback(\n    (index: number, value: string) => {\n      onChange(index, {\n        ...clients[index],\n        full_name: value,\n      });\n    },\n    [clients]\n  );\n\n  return { onPhoneChange, onNameChange };\n};\n","/* eslint-disable prettier/prettier */\n/* eslint-disable react/button-has-type */\nimport React from 'react';\nimport './index.scss';\n\ntype Props = {\n  label: string;\n  onClick: (e: any) => void;\n  disabled: boolean;\n  className?: string;\n};\n\nconst PrimaryButton = ({\n  label, onClick, disabled, className\n}: Props) => (\n  <button\n    className={`primary-button ${disabled ? 'disabled' : ''} ${\n      className || ''\n    }`}\n    onClick={onClick}\n    disabled={disabled}\n  >\n    {label}\n  </button>\n);\n\nexport default PrimaryButton;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable prettier/prettier */\nimport React, { useEffect, useState, memo } from 'react';\nimport { FormControlLabel, Switch } from '@material-ui/core';\nimport './index.scss';\n\ntype Props = {\n  label: string\n  onChange: (val: boolean) => void;\n  selected: boolean;\n  disabled?: boolean;\n};\n\nconst CustomSwitch = ({\n  label,\n  onChange,\n  selected,\n  disabled\n}: Props) => {\n  const [value, setValue] = useState(selected);\n\n  const handleChange = (event: any) => {\n    setValue(event.target.checked);\n    onChange(event.target.checked);\n  };\n\n  useEffect(() => {\n    setValue(selected);\n  }, [selected]);\n\n  return (\n    <FormControlLabel\n      control={(\n        <Switch\n          checked={value}\n          onChange={handleChange}\n          name=\"checkedB\"\n          color=\"primary\"\n        />\n      )}\n      label={label}\n      labelPlacement=\"start\"\n      className=\"custom-switch\"\n      disabled={disabled || false}\n    />\n  );\n};\n\nexport default memo(CustomSwitch);\n","/* eslint-disable prettier/prettier */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable no-unused-vars */\nimport React, { memo } from 'react';\nimport './index.scss';\nimport AddFormButton from '../../../../../../../../../../components/AddFormButton';\nimport CustomInput from '../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../components/CustomSelect';\nimport CustomSwitch from '../../../../../../../../../../components/CustomSwitch';\nimport RadioButtonsGroup from '../../../../../../../../../../components/RadioButtonsGroup';\nimport RemoveFormButton from '../../../../../../../../../../components/RemoveFormButton';\nimport { ImmovableItem } from '../../../../../../../../../../types';\nimport { useImmovableContainer, Props } from './useImmovableContainer';\n\nconst ImmovableContainer = (props: Props) => {\n  const meta = useImmovableContainer(props);\n  return (\n    <div className=\"mv12 immovables__group\">\n      {props.immovables.map((item: ImmovableItem, index: number) => (\n        <div className=\"immovables__item mv12\">\n          <RadioButtonsGroup\n            buttons={\n              props.disabled\n                ? meta.contracts.filter(\n                  ({ id }: any) => id === (item.contract_type_id || meta.contracts[0].id)\n                )\n                : meta.contracts\n            }\n            onChange={(val) => meta.onContractChange(index, val)}\n            selected={item.contract_type_id}\n            unicId={`contract-${index}`}\n          />\n\n          <div className=\"mv12\">\n            <CustomSelect\n              onChange={(val) => meta.onBuildingChange(index, val)}\n              data={meta.building}\n              label=\"Будинок\"\n              selectedValue={item.building_id}\n              disabled={props.disabled || false}\n            />\n          </div>\n\n          <RadioButtonsGroup\n            buttons={\n              props.disabled\n                ? meta.immovableTypes.filter(\n                  ({ id }: any) => id === (item.imm_type_id || meta.immovableTypes[0].id)\n                )\n                : meta.immovableTypes\n            }\n            onChange={(val) => meta.onImmovableTypeChange(index, val)}\n            selected={item.imm_type_id}\n            unicId={`types-${index}`}\n          />\n\n          <div className=\"mv12\">\n            <CustomSwitch\n              label=\"Банк\"\n              onChange={(val) => meta.onBankChange(index, val)}\n              selected={item.bank}\n              disabled={props.disabled}\n            />\n          </div>\n\n          <div className=\"mv12\">\n            <CustomSwitch\n              label=\"Довіреність\"\n              onChange={(val) => meta.onProxyChange(index, val)}\n              selected={item.proxy}\n              disabled={props.disabled}\n            />\n          </div>\n\n          <div className=\"mv12 df-jc-sb\">\n            <CustomInput\n              key=\"test\"\n              label=\"Номер приміщення\"\n              onChange={(val) => meta.onImmNumChange(index, val)}\n              value={item.imm_number}\n              disabled={props.disabled}\n            />\n\n            {props.immovables.length > 1 && (\n              <div style={{ marginLeft: '12px' }}>\n                <RemoveFormButton\n                  onClick={props.onRemove}\n                  index={index}\n                  disabled={props.disabled}\n                />\n              </div>\n            )}\n\n            {index === props.immovables.length - 1 && (\n              <div style={{ marginLeft: '12px' }}>\n                <AddFormButton\n                  onClick={props.onAdd}\n                  disabled={props.disabled}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(ImmovableContainer);\n","import { useMemo, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport { State } from '../../../../../../../../../../store/types';\nimport {\n  ImmovableItem,\n  ImmovableItems,\n} from '../../../../../../../../../../types';\n\nexport type Props = {\n  immovables: ImmovableItems;\n  onChange: (index: number, value: ImmovableItem) => void;\n  onAdd: () => void;\n  onRemove: (index: number) => void;\n  disabled?: boolean;\n};\n\nexport const useImmovableContainer = ({ immovables, onChange }: Props) => {\n  const { options, developersInfo } = useSelector(\n    (state: State) => state.scheduler\n  );\n\n  const building = useMemo(() => developersInfo?.building || [], [\n    developersInfo,\n  ]);\n\n  const contracts = useMemo(() => options?.form_data.contract_type, [options]);\n\n  const immovableTypes = useMemo(() => options?.form_data.immovable_type, [\n    options,\n  ]);\n\n  // onChange functions\n  const onContractChange = useCallback(\n    (index: number, id: number) => {\n      onChange(index, {\n        ...immovables[index],\n        contract_type_id: id,\n      });\n    },\n    [immovables]\n  );\n\n  const onBuildingChange = useCallback(\n    (index: number, id: string) => {\n      onChange(index, {\n        ...immovables[index],\n        building_id: +id,\n      });\n    },\n    [immovables]\n  );\n\n  const onImmovableTypeChange = useCallback(\n    (index: number, id: number) => {\n      onChange(index, {\n        ...immovables[index],\n        imm_type_id: id,\n      });\n    },\n    [immovables]\n  );\n\n  const onBankChange = useCallback(\n    (index: number, val: boolean) => {\n      onChange(index, {\n        ...immovables[index],\n        bank: val,\n      });\n    },\n    [immovables]\n  );\n\n  const onProxyChange = useCallback(\n    (index: number, val: boolean) => {\n      onChange(index, {\n        ...immovables[index],\n        proxy: val,\n      });\n    },\n    [immovables]\n  );\n\n  const onImmNumChange = useCallback(\n    (index: number, val: string) => {\n      onChange(index, {\n        ...immovables[index],\n        imm_number: +val,\n      });\n    },\n    [immovables]\n  );\n\n  return {\n    building,\n    contracts,\n    immovableTypes,\n    onContractChange,\n    onBuildingChange,\n    onImmovableTypeChange,\n    onBankChange,\n    onProxyChange,\n    onImmNumChange,\n  };\n};\n","import { ClientItem, ImmovableItem } from '../../../../../../../../types';\n\nexport type ImmovableItemKey = keyof ImmovableItem;\n\nexport const immovableItem: ImmovableItem = {\n  contract_type_id: null,\n  building_id: null,\n  imm_type_id: null,\n  imm_number: null,\n  bank: false,\n  proxy: false,\n};\n\nexport const clientItem: ClientItem = {\n  phone: null,\n  full_name: null,\n};\n","/* eslint-disable prettier/prettier */\n/* eslint-disable arrow-body-style */\nimport {\n  useMemo,\n  useState,\n  useCallback,\n  useEffect\n} from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { State } from '../../../../../../../../store/types';\n\nimport {\n  setDevelopersInfo,\n  setEditAppointmentData,\n  setSelectedNewAppointment,\n  setSelectedOldAppointment,\n  createNewCard,\n  editCalendarCard,\n  fetchDeveloperInfo\n} from '../../../../../../../../store/scheduler/actions';\n\nimport { clientItem, immovableItem } from './types';\n\nimport {\n  ClientItem,\n  ImmovableItem,\n  ImmovableItems,\n  NewCard\n} from '../../../../../../../../types';\n\nexport type Props = {\n  selectedCard: any,\n  initialValues?: any,\n  edit?: boolean,\n}\n\nexport const useForm = ({ selectedCard, initialValues, edit }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n  const { options, developersInfo, isLoading } = useSelector(\n    (state: State) => state.scheduler\n  );\n  const [insideEdit, setEdit] = useState<boolean>(edit || false);\n\n  // Form State\n  const [notary, setNotary] = useState<number | null>(initialValues?.card.notary_id || null);\n  const [devCompanyId, setDevCompanyId] = useState<number | null>(null);\n  const [devRepresentativeId, setDevRepresentativeId] = useState<number | null>(null);\n  const [devManagerId, setDevManagerId] = useState<number | null>(null);\n  const [immovables, setImmovables] = useState<ImmovableItems>([immovableItem]);\n  const [clients, setClients] = useState<ClientItem[]>([clientItem]);\n\n  // Form Memo Values\n  const shouldLoad = useMemo(() => isLoading || !options, [options, isLoading]);\n\n  const notaries = useMemo(() => options?.form_data.notary, [options]);\n\n  const developers = useMemo(() => options?.form_data.developer, [options]);\n\n  const manager = useMemo(() => developersInfo?.manager || [], [\n    developersInfo,\n  ]);\n\n  const representative = useMemo(() => developersInfo?.representative || [], [\n    developersInfo,\n  ]);\n\n  // Form onChange functions\n  const onNotaryChange = useCallback((value) => {\n    setNotary(value);\n  }, []);\n\n  useEffect(() => {\n    if (initialValues) {\n      setEdit(true);\n      setNotary(initialValues.card.notary_id);\n      setDevCompanyId(initialValues.card.dev_company_id);\n      setDevRepresentativeId(initialValues.card.dev_representative_id);\n      setDevManagerId(initialValues.card.dev_manager_id);\n      setImmovables(\n        initialValues.immovables.length === 0\n          ? [immovableItem]\n          : initialValues.immovables\n      );\n      setClients(\n        initialValues.clients.length === 0\n          ? [clientItem]\n          : initialValues.clients\n      );\n    }\n\n    if (initialValues?.card.dev_company_id) {\n      dispatch(fetchDeveloperInfo(initialValues.card.dev_company_id));\n    }\n  }, [initialValues]);\n\n  const onDeveloperChange = useCallback(\n    (value) => {\n      setDevCompanyId(value);\n\n      if (!value) {\n        dispatch(setDevelopersInfo({}));\n      }\n\n      dispatch(fetchDeveloperInfo(value));\n    },\n    []\n  );\n\n  const onRepresentativeChange = useCallback(\n    (value) => {\n      setDevRepresentativeId(value);\n    },\n    [devRepresentativeId]\n  );\n\n  const onManagerChange = useCallback(\n    (value) => {\n      setDevManagerId(value);\n    },\n    [devManagerId]\n  );\n\n  const onImmovablesChange = useCallback(\n    (index: number, value: any) => {\n      immovables[index] = value;\n      setImmovables([...immovables]);\n    },\n    [immovables]\n  );\n\n  const onClientsChange = useCallback(\n    (index: number, value: ClientItem) => {\n      clients[index] = value;\n      setClients([...clients]);\n    },\n    [clients]\n  );\n\n  // Form CTA\n  const onClearAll = useCallback(() => {\n    setNotary(null);\n    setDevCompanyId(null);\n    setDevRepresentativeId(null);\n    setDevManagerId(null);\n    setImmovables([immovableItem]);\n    setClients([clientItem]);\n  }, []);\n\n  const onAddImmovables = useCallback(() => {\n    setImmovables([...immovables, immovableItem]);\n  }, [immovables]);\n\n  const onRemoveImmovable = useCallback((index: number) => {\n    setImmovables((prev) => prev.filter((_, mapIndex) => mapIndex !== index));\n  }, [immovables]);\n\n  const onAddClients = useCallback(() => {\n    setClients([...clients, clientItem]);\n  }, [clients]);\n\n  const onRemoveClient = useCallback((index: number) => {\n    setClients((prev) => prev.filter((_, mapIndex) => mapIndex !== index));\n  }, [clients]);\n\n  const activeAddButton = useMemo(() => {\n    return Boolean(devCompanyId)\n    && immovables.length\n    && immovables.every((item: ImmovableItem) => item.building_id && item.imm_number)\n    && selectedCard;\n  }, [devCompanyId, immovables, selectedCard]);\n\n  const onFormCreate = useCallback(() => {\n    const date_time = `${selectedCard.year}.${selectedCard.date}. ${selectedCard.time}`;\n\n    const formatImmovables = immovables.map((item: ImmovableItem) => ({\n      ...item,\n      contract_type_id: item.contract_type_id || options.form_data.immovable_type[0].id,\n      imm_type_id: item.imm_type_id || options.form_data.immovable_type[0].id,\n      imm_num: item.imm_number\n    }));\n\n    const data: NewCard = {\n      immovables: formatImmovables,\n      clients,\n      date_time,\n      dev_company_id: devCompanyId,\n      dev_representative_id: devRepresentativeId,\n      dev_manager_id: devManagerId,\n      room_id: selectedCard.room,\n      notary_id: notary || notaries[0].id,\n    };\n\n    if (token) {\n      if (edit) {\n        dispatch(editCalendarCard(data, selectedCard.i));\n        setEdit(true);\n      } else {\n        dispatch(createNewCard(data));\n        dispatch(setSelectedNewAppointment(null));\n        onClearAll();\n      }\n    }\n  }, [\n    devCompanyId,\n    devRepresentativeId,\n    devManagerId,\n    notary,\n    immovables,\n    clients,\n    edit,\n    selectedCard,\n  ]);\n\n  const onCloseForm = useCallback(() => {\n    dispatch(setSelectedOldAppointment(null));\n    dispatch(setEditAppointmentData(null));\n  }, []);\n\n  return {\n    shouldLoad,\n    notaries,\n    representative,\n    developers,\n    manager,\n    immovables,\n    clients,\n    activeAddButton,\n    insideEdit,\n    onNotaryChange,\n    onDeveloperChange,\n    onRepresentativeChange,\n    onManagerChange,\n    onImmovablesChange,\n    onAddImmovables,\n    onRemoveImmovable,\n    onRemoveClient,\n    onClientsChange,\n    onAddClients,\n    onClearAll,\n    onFormCreate,\n    onCloseForm,\n    setEdit,\n    selectedNotaryId: notary,\n    selectedDeveloperId: devCompanyId,\n    selectedDevRepresentativeId: devRepresentativeId,\n    selecedDevManagerId: devManagerId,\n  };\n};\n","/* eslint-disable indent */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React, { memo } from 'react';\nimport RadioButtonsGroup from '../../../../../../../../components/RadioButtonsGroup';\nimport CustomSelect from '../../../../../../../../components/CustomSelect';\nimport './index.scss';\nimport Clients from './components/Clients/Clients';\nimport PrimaryButton from '../../../../../../../../components/PrimaryButton';\nimport Loader from '../../../../../../../../components/Loader/Loader';\nimport ImmovableContainer from './components/ImmovableContainer';\nimport { useForm, Props } from './useForm';\n\nconst SchedulerForm = (props: Props) => {\n  const meta = useForm(props);\n\n  if (meta.shouldLoad) {\n    return (\n      <div className=\"schedulerForm\">\n        <Loader />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"schedulerForm\">\n      <div className=\"schedulerForm__forms\">\n        <div className=\"schedulerForm__header\">\n          <p className=\"title\">\n            {meta.insideEdit || props.edit\n              ? `Запис № ${props.selectedCard.i}`\n              : 'Новий запис'}\n          </p>\n          {meta.insideEdit ? (\n            <img\n              src=\"/icons/x.svg\"\n              alt=\"clear icon\"\n              className=\"clear-icon\"\n              onClick={meta.onCloseForm}\n            />\n          ) : (\n            <img\n              src=\"/icons/clear.svg\"\n              alt=\"clear icon\"\n              className=\"clear-icon\"\n              onClick={meta.onClearAll}\n            />\n          )}\n        </div>\n\n        <div className=\"mv12\">\n          <RadioButtonsGroup\n            buttons={\n              meta.insideEdit\n                ? meta.notaries.filter(\n                    ({ id }: any) => id === meta.selectedNotaryId\n                  )\n                : meta.notaries\n            }\n            onChange={meta.onNotaryChange}\n            selected={meta.selectedNotaryId}\n            unicId=\"notaries\"\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomSelect\n            label=\"Забудовник\"\n            data={meta.developers}\n            onChange={meta.onDeveloperChange}\n            selectedValue={meta.selectedDeveloperId}\n            disabled={meta.insideEdit || false}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomSelect\n            onChange={meta.onRepresentativeChange}\n            data={meta.representative}\n            label=\"Підписант\"\n            selectedValue={meta.selectedDevRepresentativeId}\n            disabled={meta.insideEdit || false}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomSelect\n            onChange={meta.onManagerChange}\n            data={meta.manager}\n            label=\"Менеджер\"\n            selectedValue={meta.selecedDevManagerId}\n            disabled={meta.insideEdit || false}\n          />\n        </div>\n\n        <ImmovableContainer\n          immovables={meta.immovables}\n          onChange={meta.onImmovablesChange}\n          onAdd={meta.onAddImmovables}\n          onRemove={meta.onRemoveImmovable}\n          disabled={meta.insideEdit || false}\n        />\n\n        <Clients\n          clients={meta.clients}\n          onChange={meta.onClientsChange}\n          onAdd={meta.onAddClients}\n          onRemove={meta.onRemoveClient}\n          disabled={meta.insideEdit || false}\n        />\n\n        <div className=\"mv12\">\n          {meta.insideEdit && (\n            <PrimaryButton\n              label=\"Редагувати\"\n              onClick={() => meta.setEdit(false)}\n              disabled={props.edit ? false : !meta.activeAddButton}\n              className=\"schedulerForm__editButton\"\n            />\n          )}\n\n          {!meta.insideEdit && (\n            <PrimaryButton\n              label={`${props.edit ? 'Зберегти' : 'Створити'}`}\n              onClick={meta.onFormCreate}\n              disabled={!meta.activeAddButton}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SchedulerForm);\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport './index.scss';\nimport Modal from '../../../../../../components/Modal';\nimport Form from './components/Form';\nimport { useSchedulerForm } from './useSchedulerForm';\nimport { useModal } from '../../../../../../components/Modal/useModal';\n\nconst SchedulerForm = () => {\n  const meta = useSchedulerForm();\n\n  return (\n    <div className=\"schedulerForm scheduler__form\">\n      <div className=\"schedulerForm__tabs\">\n        <div\n          className={`item ${meta.selectedTab === 0 ? 'selected' : ''}`}\n          style={{ backgroundColor: !meta.editAppointmentData ? 'white' : '' }}\n          onClick={() => meta.setSelectedTab(0)}\n        >\n          {meta.newSelectedAppointment\n            ? `${meta.newSelectedAppointment.day} ${meta.newSelectedAppointment.time} ${meta.newSelectedAppointment.date}`\n            : 'Виберіть дату'}\n        </div>\n\n        {meta.oldSelectedAppointment && meta.editAppointmentData && (\n          <div\n            className={`item ${meta.selectedTab === 1 ? 'selected' : ''}`}\n            onClick={() => meta.setSelectedTab(1)}\n          >\n            {`${meta.oldSelectedAppointment.day} ${meta.oldSelectedAppointment.time} ${meta.oldSelectedAppointment.date}`}\n          </div>\n        )}\n      </div>\n\n      {meta.selectedTab === 0 && (\n        <Form selectedCard={meta.newSelectedAppointment} />\n      )}\n\n      {meta.selectedTab === 1 && meta.editAppointmentData && (\n        <Form\n          selectedCard={meta.oldSelectedAppointment}\n          initialValues={meta.editAppointmentData}\n          edit\n        />\n      )}\n    </div>\n  );\n};\n\nexport default SchedulerForm;\n","/* eslint-disable prettier/prettier */\nimport { useSelector } from 'react-redux';\nimport { useState, useEffect } from 'react';\nimport { State } from '../../../../../../store/types';\n\nexport const useSchedulerForm = () => {\n  const [selectedTab, setSelectedTab] = useState(0);\n\n  const newSelectedAppointment = useSelector(\n    (state: State) => state.scheduler.newSelectedAppointment\n  );\n  const oldSelectedAppointment = useSelector(\n    (state: State) => state.scheduler.oldSelectedAppointment\n  );\n  const editAppointmentData = useSelector(\n    (state: State) => state.scheduler.editAppointmentData\n  );\n\n  useEffect(() => {\n    setSelectedTab(editAppointmentData ? 1 : 0);\n  }, [editAppointmentData]);\n\n  useEffect(() => {\n    setSelectedTab(0);\n  }, [newSelectedAppointment]);\n\n  return {\n    newSelectedAppointment,\n    oldSelectedAppointment,\n    editAppointmentData,\n    selectedTab,\n    setSelectedTab\n  };\n};\n","/* eslint-disable implicit-arrow-linebreak */\nimport { useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setModalInfo } from '../../store/main/actions';\nimport { State } from '../../store/types';\n\nexport const useModal = () => {\n  const dispatch = useDispatch();\n  const { modalInfo } = useSelector((state: State) => state.main);\n\n  const modalProps = useMemo(\n    () => ({\n      ...modalInfo,\n      handleClose: () =>\n        dispatch(\n          setModalInfo({\n            ...modalInfo,\n            open: false,\n          })\n        ),\n    }),\n    [modalInfo]\n  );\n\n  return modalProps;\n};\n","import React from 'react';\nimport './index.scss';\nimport MModal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\ntype Props = {\n  open: boolean;\n  handleClose: () => void;\n  success: boolean;\n  message: string;\n};\n\n// eslint-disable-next-line prettier/prettier\nconst Modal = ({\n  open, handleClose, success, message\n}: Props) => (\n  <MModal\n    className=\"modal-container\"\n    open={open}\n    onClose={handleClose}\n    closeAfterTransition\n    BackdropComponent={Backdrop}\n    BackdropProps={{\n      timeout: 500,\n    }}\n  >\n    <Fade in={open}>\n      <div className={`modal ${success ? 'modal-success' : 'modal-failed'}`}>\n        <p className=\"message\">{message}</p>\n      </div>\n    </Fade>\n  </MModal>\n);\n\nexport default Modal;\n","import React from 'react';\nimport './index.scss';\n\n// Components\nimport SchedulerTable from './components/Table/SchedulerTable';\nimport SchedulerFilter from './components/SchedulerFilterContainer';\nimport SchedulerForm from './components/SchedulerForm';\nimport { useModal } from '../../../../components/Modal/useModal';\nimport Modal from '../../../../components/Modal';\n\nconst SchedulerContainer = () => {\n  const modalProps = useModal();\n\n  return (\n    <div className=\"scheduler__container\">\n      <div className=\"scheduler__dataView\">\n        <SchedulerFilter />\n        <SchedulerTable />\n      </div>\n      <SchedulerForm />\n      <Modal {...modalProps} />\n    </div>\n  );\n};\n\nexport default SchedulerContainer;\n","import React from 'react';\nimport Header from '../../components/Header';\nimport SchedulerContainer from './components/SchedulerContainer';\n\nconst SchedulerScreen = () => (\n  <>\n    <Header />\n    <SchedulerContainer />\n  </>\n);\n\nexport default SchedulerScreen;\n","import * as React from 'react';\nimport './index.scss';\nimport { ManagerAppointment, ManagerAppointmentCard } from '../../../../../../../../types';\nimport { DashboardViewType } from '../../useDashboard';\n\ntype Props = {\n  sectionData: ManagerAppointment,\n  onCardClick: () => void\n  style: DashboardViewType;\n}\n\nconst DashboardSection = ({ sectionData, onCardClick, style }: Props) => (\n  <div className=\"dashboard__space-section\">\n    <h2>{`${sectionData.day} ${sectionData.date}`}</h2>\n    <div className={`cards ${style === DashboardViewType.TABLE ? 'table' : ''}`}>\n      {sectionData.cards.map((card: ManagerAppointmentCard) => (\n        <div className=\"card\" onClick={onCardClick}>\n          <div className=\"card__header\" style={{ backgroundColor: card.color }}>\n            <span>{card.title}</span>\n          </div>\n          <div className=\"card__main\">\n            {card.instructions.map((item: string) => (\n              <span>{item}</span>\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n\nexport default DashboardSection;\n","import * as React from 'react';\nimport { DashboardViewType } from '../../useDashboard';\nimport './index.scss';\n\ntype Props = {\n  selected: DashboardViewType;\n  onClick: (value: DashboardViewType) => void;\n}\n\nconst DashboardControl = ({ selected, onClick }: Props) => (\n  <div className=\"dashboard__space-control\">\n    <svg\n      className={`${DashboardViewType.CARDS === selected ? 'selected' : ''}`}\n      onClick={() => onClick(DashboardViewType.CARDS)}\n      width=\"18\"\n      height=\"18\"\n      viewBox=\"0 0 18 18\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.50008 0.666748H7.33341C7.83341 0.666748 8.16675 1.00008 8.16675 1.50008V7.33341C8.16675 7.83341 7.83341 8.16675 7.33341 8.16675H1.50008C1.00008 8.16675 0.666748 7.83341 0.666748 7.33341V1.50008C0.666748 1.00008 1.00008 0.666748 1.50008 0.666748ZM2.33341 6.50008H6.50008V2.33341H2.33341V6.50008ZM16.5001 0.666748H10.6667C10.1667 0.666748 9.83342 1.00008 9.83342 1.50008V7.33341C9.83342 7.83341 10.1667 8.16675 10.6667 8.16675H16.5001C17.0001 8.16675 17.3334 7.83341 17.3334 7.33341V1.50008C17.3334 1.00008 17.0001 0.666748 16.5001 0.666748ZM11.5001 6.50008H15.6667V2.33341H11.5001V6.50008ZM16.5001 9.83342H10.6667C10.1667 9.83342 9.83342 10.1667 9.83342 10.6667V16.5001C9.83342 17.0001 10.1667 17.3334 10.6667 17.3334H16.5001C17.0001 17.3334 17.3334 17.0001 17.3334 16.5001V10.6667C17.3334 10.1667 17.0001 9.83342 16.5001 9.83342ZM11.5001 15.6667H15.6667V11.5001H11.5001V15.6667ZM7.33341 9.83342H1.50008C1.00008 9.83342 0.666748 10.1667 0.666748 10.6667V16.5001C0.666748 17.0001 1.00008 17.3334 1.50008 17.3334H7.33341C7.83341 17.3334 8.16675 17.0001 8.16675 16.5001V10.6667C8.16675 10.1667 7.83341 9.83342 7.33341 9.83342ZM2.33341 15.6667H6.50008V11.5001H2.33341V15.6667Z\" fill=\"#165153\" />\n    </svg>\n    <svg\n      className={`${DashboardViewType.TABLE === selected ? 'selected' : ''}`}\n      onClick={() => onClick(DashboardViewType.TABLE)}\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 20 20\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M3.33325 0.833252H16.6666C18.0833 0.833252 19.1666 1.91659 19.1666 3.33325V6.66659C19.1666 8.08325 18.0833 9.16658 16.6666 9.16658H3.33325C1.91659 9.16658 0.833252 8.08325 0.833252 6.66659V3.33325C0.833252 1.91659 1.91659 0.833252 3.33325 0.833252ZM16.6666 7.49992C17.1666 7.49992 17.4999 7.16658 17.4999 6.66658V3.33325C17.4999 2.83325 17.1666 2.49992 16.6666 2.49992H3.33325C2.83325 2.49992 2.49992 2.83325 2.49992 3.33325V6.66658C2.49992 7.16658 2.83325 7.49992 3.33325 7.49992H16.6666ZM16.6666 10.8333H3.33325C1.91659 10.8333 0.833252 11.9166 0.833252 13.3333V16.6666C0.833252 18.0833 1.91659 19.1666 3.33325 19.1666H16.6666C18.0833 19.1666 19.1666 18.0833 19.1666 16.6666V13.3333C19.1666 11.9166 18.0833 10.8333 16.6666 10.8333ZM16.6666 17.4999C17.1666 17.4999 17.4999 17.1666 17.4999 16.6666V13.3333C17.4999 12.8333 17.1666 12.4999 16.6666 12.4999H3.33325C2.83325 12.4999 2.49992 12.8333 2.49992 13.3333V16.6666C2.49992 17.1666 2.83325 17.4999 3.33325 17.4999H16.6666ZM5.58325 4.41659C5.74992 4.58325 5.83325 4.74992 5.83325 4.99992C5.83325 5.24992 5.74992 5.41659 5.58325 5.58325C5.41658 5.74992 5.24992 5.83325 4.99992 5.83325C4.74992 5.83325 4.58325 5.74992 4.41659 5.58325C4.33325 5.49992 4.24992 5.41659 4.24992 5.33325C4.16659 5.24992 4.16659 5.08325 4.16659 4.99992C4.16659 4.91659 4.16659 4.74992 4.24992 4.66659C4.29159 4.62492 4.31242 4.58325 4.33325 4.54159C4.35409 4.49992 4.37492 4.45825 4.41659 4.41659C4.49992 4.33325 4.58325 4.24992 4.66659 4.24992C4.91658 4.16659 5.08325 4.16659 5.33325 4.24992C5.41658 4.24992 5.49992 4.33325 5.58325 4.41659ZM5.83325 14.9999C5.83325 14.7499 5.74992 14.5833 5.58325 14.4166C5.24992 14.0833 4.74992 14.0833 4.41659 14.4166C4.37492 14.4583 4.35409 14.4999 4.33325 14.5416C4.31242 14.5833 4.29159 14.6249 4.24992 14.6666C4.16659 14.7499 4.16659 14.9166 4.16659 14.9999C4.16659 15.2499 4.24992 15.4166 4.41659 15.5833C4.58325 15.7499 4.74992 15.8333 4.99992 15.8333C5.24992 15.8333 5.41658 15.7499 5.58325 15.5833C5.74992 15.4166 5.83325 15.2499 5.83325 14.9999Z\" fill=\"#C0C1C1\" />\n    </svg>\n  </div>\n);\n\nexport default DashboardControl;\n","import React from 'react';\nimport Loader from '../../../../../../components/Loader/Loader';\nimport { ManagerAppointment } from '../../../../../../types';\nimport DashboardSection from './components/DashboardSection';\nimport DashboardControl from './components/DashbordControl';\nimport './index.scss';\nimport useDashboard from './useDashboard';\n\nconst Dashboard = () => {\n  const { selectedType, setSelectedType, appointments, isLoading } = useDashboard();\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <div className=\"dashboard__space\">\n      <DashboardControl selected={selectedType} onClick={setSelectedType} />\n      {appointments && (\n        <div className=\"dashboard__space-main\">\n          {appointments.map((appointment: ManagerAppointment) => (\n            <DashboardSection sectionData={appointment} onCardClick={() => console.log('click')} style={selectedType} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import * as React from 'react';\nimport './index.scss';\n\nconst data = [\n  {\n    key: 0,\n    title: 'Усі',\n    quantity: 50,\n  },\n  {\n    key: 1,\n    title: 'Готові',\n    quantity: 10,\n  },\n  {\n    key: 2,\n    title: 'Основних',\n    quantity: 30,\n  },\n  {\n    key: 3,\n    title: 'Попередніх',\n    quantity: 4,\n  },\n  {\n    key: 4,\n    title: 'Скасовано',\n    quantity: 2,\n  },\n];\n\nconst Contracts = () => (\n  <div className=\"dashboard__filter-contracts\">\n    <span className=\"title\">Договори</span>\n    <div className=\"cards\">\n      {data.map((item: any) => (\n        <div className=\"item\">\n          <div className=\"item__left\">\n            <img src=\"/icons/contract.svg\" alt=\"contract\" />\n            <span className=\"name\">{item.title}</span>\n          </div>\n          <span className=\"quantity\">{item.quantity}</span>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n\nexport default Contracts;\n","import React from 'react';\nimport Filter from '../../../../../../components/Filter';\nimport PrimaryButton from '../../../../../../components/PrimaryButton';\nimport Contracts from './components/Contracts';\nimport './index.scss';\nimport { useFilterContainer } from './useFilterContainer';\n\nconst FilterContainer = () => {\n  const { onFilterDataChange, onFilterSubmit } = useFilterContainer();\n\n  return (\n    <div className=\"dashboard__filter\">\n      <Contracts />\n      <div className=\"dashboard__filter-container\">\n        <Filter onFilterDataChange={onFilterDataChange} />\n        <div className=\"mv12\">\n          <PrimaryButton\n            label=\"Застосувати\"\n            onClick={onFilterSubmit}\n            disabled={false}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FilterContainer;\n","import { useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchAppointmentsByFilter } from '../../../../../../store/appointments/actions';\nimport { FilterData } from '../../../../../../store/types';\n\nexport const useFilterContainer = () => {\n  const dispatch = useDispatch();\n  const [filterData, setFilterData] = useState<FilterData>();\n\n  const onFilterDataChange = useCallback((data: FilterData) => {\n    setFilterData(data);\n  }, []);\n\n  const onFilterSubmit = useCallback(() => {\n    if (filterData) {\n      dispatch(fetchAppointmentsByFilter('generator', filterData));\n    }\n  }, [filterData]);\n\n  return { onFilterDataChange, onFilterSubmit };\n};\n","import React from 'react';\nimport './index.scss';\nimport Dashboard from './components/Dashboard';\nimport Filter from './components/FilterContainer';\nimport { useModal } from '../../../../components/Modal/useModal';\nimport Modal from '../../../../components/Modal';\n\nconst DashboardContainer = () => {\n  const modalProps = useModal();\n\n  return (\n    <div className=\"dashboard\">\n      <Filter />\n      <Dashboard />\n      <Modal {...modalProps} />\n    </div>\n  );\n};\n\nexport default DashboardContainer;\n","import React from 'react';\nimport Header from '../../components/Header';\nimport DashboardContainer from './components/DashboardContainer';\n\nconst DashboardScreen = () => (\n  <>\n    <Header />\n    <DashboardContainer />\n  </>\n);\n\nexport default DashboardScreen;\n","import React, { memo } from 'react';\nimport Slider from 'react-slick';\nimport './index.scss';\n\ntype Props = {\n  images: string[];\n};\n\nconst Carousel = ({ images }: Props) => {\n  const settings = {\n    dots: true,\n    infinite: false,\n    speed: 800,\n    arrows: true,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n  };\n\n  return (\n    <div className=\"carousel\">\n      <div className=\"container\">\n        <Slider {...settings}>\n          {images.map((item: string) => (\n            <img\n              src={item}\n              alt={item}\n              key={item}\n              className=\"officeMapMain__image\"\n            />\n          ))}\n        </Slider>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Carousel);\n","import { Checkbox, FormControlLabel } from '@material-ui/core';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport './index.scss';\n\ntype Props = {\n  onChange: (value: boolean) => void;\n  label: string;\n  checked?: boolean;\n};\n\nconst CustomCheckBox = ({ onChange, label, checked = false }: Props) => {\n  const [value, setValue] = useState<boolean>(checked);\n\n  useEffect(() => {\n    setValue(checked);\n  }, [checked]);\n\n  const handleChange = useCallback(\n    (e: any) => {\n      setValue(e.target.checked);\n      onChange(e.target.checked);\n    },\n    [checked]\n  );\n\n  return (\n    <FormControlLabel\n      control={\n        <Checkbox checked={value} onChange={handleChange} color=\"default\" />\n      }\n      label={label}\n      className=\"custom-checkBox\"\n    />\n  );\n};\n\nexport default CustomCheckBox;\n","/* eslint-disable react/jsx-wrap-multilines */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/react-in-jsx-scope */\nimport React, { useState, useEffect } from 'react';\nimport './index.scss';\nimport {\n  FormControl,\n  InputLabel,\n  OutlinedInput,\n  InputAdornment,\n  IconButton,\n} from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\n\ntype Props = {\n  label: string;\n  onChange: (value: string) => void;\n  value?: string | number | null;\n  type?: string;\n  disabled?: boolean;\n};\n\nconst CustomPasswordInput = ({ label, onChange, value = '' }: Props) => {\n  const [password, setPassword] = useState(value || '');\n  const [showPassword, setShowPassword] = useState<boolean>(false);\n\n  useEffect(() => {\n    setPassword(value || '');\n  }, [value]);\n\n  const handleClickShowPassword = () => {\n    setShowPassword((prev) => !prev);\n  };\n\n  const handleMouseDownPassword = (event: any) => {\n    event.preventDefault();\n  };\n\n  const handleChange = (event: any) => {\n    setPassword(event.target.value);\n    onChange(event.target.value);\n  };\n\n  return (\n    <FormControl variant=\"outlined\" className=\"custom-input\">\n      <InputLabel htmlFor=\"outlined-adornment-password\">{label}</InputLabel>\n      <OutlinedInput\n        type={showPassword ? 'text' : 'password'}\n        value={password}\n        onChange={handleChange}\n        endAdornment={\n          <InputAdornment position=\"end\">\n            <IconButton\n              aria-label=\"toggle password visibility\"\n              onClick={handleClickShowPassword}\n              onMouseDown={handleMouseDownPassword}\n              edge=\"end\"\n            >\n              {showPassword ? <Visibility /> : <VisibilityOff />}\n            </IconButton>\n          </InputAdornment>\n        }\n        labelWidth={70}\n      />\n    </FormControl>\n  );\n};\n\nexport default CustomPasswordInput;\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getLoginCarouselImages() {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/slides`,\n    });\n\n    return data.data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","// eslint-disable-next-line object-curly-newline\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport getLoginCarouselImages from '../../../../services/getLoginCarouselImages';\nimport { sendLogin } from '../../../../store/main/actions';\n\nexport const useAuthorization = () => {\n  const dispatch = useDispatch();\n  const [images, setImages] = useState<string[] | null>(null);\n  const [email, setEmail] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n  const [remember, setRemember] = useState<boolean>(false);\n\n  const handleLogin = useCallback(\n    (e: any) => {\n      e.preventDefault();\n      dispatch(sendLogin({ email, password }, remember));\n    },\n    [password, email, remember]\n  );\n\n  const disabledButton = useMemo(() => !email || !password, [email, password]);\n\n  useEffect(() => {\n    const fetchImages = async () => {\n      const res = await getLoginCarouselImages();\n      setImages(res.map((item: any) => item.image));\n    };\n    fetchImages();\n  }, []);\n\n  return {\n    email,\n    password,\n    images,\n    disabledButton,\n    handleLogin,\n    setRemember,\n    setPassword,\n    setEmail,\n  };\n};\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport Carousel from '../../../../components/Carousel/Carousel';\nimport CustomCheckBox from '../../../../components/CustomCheckBox';\nimport CustomInput from '../../../../components/CustomInput';\nimport CustomPasswordInput from '../../../../components/CustomPasswordInput';\nimport Loader from '../../../../components/Loader/Loader';\nimport Modal from '../../../../components/Modal';\nimport { useModal } from '../../../../components/Modal/useModal';\nimport PrimaryButton from '../../../../components/PrimaryButton';\nimport { useAuthorization } from './useAuthorization';\n\nconst Authorization = () => {\n  const meta = useAuthorization();\n\n  return (\n    <div className=\"login__authorization\">\n      <div className=\"login__carousel\">\n        {!meta.images && <Loader />}\n        {meta.images && <Carousel images={meta.images} />}\n      </div>\n      <form\n        className=\"login__form\"\n        autoComplete=\"on\"\n        onSubmit={meta.handleLogin}\n      >\n        <img src=\"/icons/logo-full.svg\" alt=\"Rakul\" />\n\n        <div className=\"mv12\">\n          <CustomInput\n            label=\"E-mail\"\n            value={meta.email}\n            onChange={meta.setEmail}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomPasswordInput\n            label=\"Пароль\"\n            value={meta.password}\n            onChange={meta.setPassword}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <PrimaryButton\n            label=\"Авторизуватися\"\n            onClick={meta.handleLogin}\n            disabled={meta.disabledButton}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomCheckBox\n            label=\"Запам’ятати мене\"\n            onChange={meta.setRemember}\n          />\n        </div>\n\n        <Link to=\"/forgot\" className=\"link\">\n          Забули пароль?\n        </Link>\n      </form>\n    </div>\n  );\n};\n\nexport default Authorization;\n","/* eslint-disable implicit-arrow-linebreak */\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState, useCallback, useMemo } from 'react';\nimport { State } from '../../../../store/types';\nimport { setModalInfo, forgotPassword } from '../../../../store/main/actions';\n\nexport const useForgotPassword = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState<string>('');\n\n  const handleReset = useCallback(\n    (e: any) => {\n      e.preventDefault();\n      dispatch(forgotPassword({ email }));\n    },\n    [email]\n  );\n\n  const disabledButton = useMemo(() => !email, [email]);\n\n  return {\n    email,\n    disabledButton,\n    setEmail,\n    handleReset,\n  };\n};\n","import React, { memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport CustomInput from '../../../../components/CustomInput';\nimport Modal from '../../../../components/Modal';\nimport { useModal } from '../../../../components/Modal/useModal';\nimport PrimaryButton from '../../../../components/PrimaryButton';\nimport { useForgotPassword } from './useForgotPassword';\n\nconst ForgotPassword = () => {\n  const meta = useForgotPassword();\n\n  return (\n    <>\n      <form className=\"login__forgot\" onSubmit={meta.handleReset}>\n        <img src=\"/icons/logo-full.svg\" alt=\"Rakul\" />\n        <h1 className=\"login__forgot-title mv12\">Відновлення паролю</h1>\n\n        <div className=\"mv12\">\n          <CustomInput\n            label=\"E-mail\"\n            value={meta.email}\n            onChange={meta.setEmail}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <PrimaryButton\n            label=\"Відновити пароль\"\n            onClick={meta.handleReset}\n            disabled={meta.disabledButton}\n          />\n        </div>\n\n        <Link to=\"/\" className=\"link\">\n          Повернутися до авторизації\n        </Link>\n      </form>\n    </>\n  );\n};\n\nexport default memo(ForgotPassword);\n","import React, { memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport CustomPasswordInput from '../../../../components/CustomPasswordInput';\nimport Modal from '../../../../components/Modal';\nimport { useModal } from '../../../../components/Modal/useModal';\nimport PrimaryButton from '../../../../components/PrimaryButton';\nimport { useUpdatePassword } from './useUpdatePassword';\n\nconst UpdatePassword = () => {\n  const meta = useUpdatePassword();\n\n  return (\n    <>\n      <form className=\"login__update\" onSubmit={meta.handleUpdate}>\n        <img src=\"/icons/logo-full.svg\" alt=\"Rakul\" />\n        <h1 className=\"login__forgot-title mv12\">Новий пароль</h1>\n\n        <div className=\"mv12\">\n          <CustomPasswordInput\n            label=\"Пароль\"\n            value={meta.password}\n            onChange={meta.setPassword}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomPasswordInput\n            label=\"Повторіть пароль\"\n            value={meta.repeatPassword}\n            onChange={meta.setRepeatPassword}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <PrimaryButton\n            label=\"Відновити пароль\"\n            onClick={meta.handleUpdate}\n            disabled={meta.disabledButton}\n          />\n        </div>\n\n        <Link to=\"/\" className=\"link\">\n          Повернутися до авторизації\n        </Link>\n      </form>\n    </>\n  );\n};\n\nexport default UpdatePassword;\n","/* eslint-disable implicit-arrow-linebreak */\nimport { useDispatch } from 'react-redux';\nimport { useState, useCallback, useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport resetPassword, {\n  ResetPasswordType,\n} from '../../../../services/login/resetPassword';\n\nexport const useUpdatePassword = () => {\n  const { token } = useParams<{ token: string }>();\n  const dispatch = useDispatch();\n  const [password, setPassword] = useState<string>('');\n  const [repeatPassword, setRepeatPassword] = useState<string>('');\n\n  const handleUpdate = useCallback(\n    (e: any) => {\n      e.preventDefault();\n      const data: ResetPasswordType = {\n        password,\n        token,\n        c_password: repeatPassword,\n      };\n\n      dispatch(resetPassword(data));\n    },\n    [password, repeatPassword]\n  );\n\n  const disabledButton = useMemo(\n    () => !password || !repeatPassword || password !== repeatPassword,\n    [password, repeatPassword]\n  );\n\n  return {\n    password,\n    repeatPassword,\n    disabledButton,\n    setPassword,\n    setRepeatPassword,\n    handleUpdate,\n  };\n};\n","import * as React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Authorization from './components/Authorization';\nimport './index.scss';\nimport ForgotPassword from './components/ForgotPassword';\nimport UpdatePassword from './components/UpdatePassword';\nimport Modal from '../../components/Modal';\nimport { useModal } from '../../components/Modal/useModal';\n\nconst LoginScreen = () => {\n  const modalProps = useModal();\n\n  return (\n    <main className=\"login\">\n      <Switch>\n        <Route path=\"/forgot\" exact>\n          <ForgotPassword />\n        </Route>\n        <Route path=\"/update-password/:token\">\n          <UpdatePassword />\n        </Route>\n        <Authorization />\n      </Switch>\n      <Modal {...modalProps} />\n    </main>\n  );\n};\n\nexport default LoginScreen;\n","import React from 'react';\nimport './index.scss';\nimport { useApp } from './useApp';\nimport Scheduler from '../Screens/SchedulerScreen';\nimport Dashboard from '../Screens/DashboardScreen';\nimport Login from '../Screens/LoginScreen';\nimport { UserTypes } from '../types';\n\nconst App: React.FC = () => {\n  const { type } = useApp();\n\n  if (!type) {\n    return <Login />;\n  }\n\n  if (type === UserTypes.RECEPTION) {\n    return <Scheduler />;\n  }\n\n  if (type === UserTypes.PRINTER) {\n    return <Dashboard />;\n  }\n\n  return null;\n};\n\nexport default App;\n","import { useSelector, useDispatch } from 'react-redux';\n/* eslint-disable import/prefer-default-export */\nimport { useEffect } from 'react';\nimport { setUser } from '../store/main/actions';\nimport { State } from '../store/types';\n\nexport const useApp = () => {\n  const dispatch = useDispatch();\n  const { user } = useSelector((state: State) => state.main);\n\n  useEffect(() => {\n    const localUser = localStorage.getItem('user');\n\n    if (localUser) {\n      dispatch(setUser(JSON.parse(localUser)));\n    }\n  }, []);\n\n  return { type: user.type };\n};\n","import { UserTypes } from '../../types';\nimport { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\nexport type User = {\n  type: UserTypes | null;\n  token: null | string;\n};\n\nexport type ModalInfo = {\n  open: boolean;\n  success: boolean;\n  message: string;\n};\n\nexport type MainState = {\n  user: User;\n  modalInfo: ModalInfo;\n};\n\nconst initialState: MainState = {\n  user: {\n    type: null,\n    token: null,\n  },\n  modalInfo: {\n    open: false,\n    success: false,\n    message: '',\n  },\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_USER:\n      return { ...state, user: { ...state.user, ...action.payload } };\n    case ACTIONS.SET_MODAL_INFO:\n      return { ...state, modalInfo: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\nexport type SchedulerState = {\n  options: any;\n  developersInfo: any;\n  newSelectedAppointment: any;\n  oldSelectedAppointment: any;\n  editAppointmentData: any;\n  isLoading: boolean;\n  schedulerLock: boolean;\n};\n\nconst initialState: SchedulerState = {\n  options: null,\n  developersInfo: {},\n  newSelectedAppointment: null,\n  oldSelectedAppointment: null,\n  editAppointmentData: null,\n  isLoading: false,\n  schedulerLock: true,\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_OPTIONS:\n      return { ...state, options: action.payload };\n    case ACTIONS.SET_DEVELOPERS_INFO:\n      return { ...state, developersInfo: action.payload };\n    case ACTIONS.SET_IS_LOADING:\n      return { ...state, isLoading: action.payload };\n    case ACTIONS.SET_SELECTED_NEW_APPOINTMENT:\n      return { ...state, newSelectedAppointment: action.payload };\n    case ACTIONS.SET_SELECTED_OLD_APPOINTMENT:\n      return { ...state, oldSelectedAppointment: action.payload };\n    case ACTIONS.SET_EDIT_APPOINTMENT_DATA:\n      return { ...state, editAppointmentData: action.payload };\n    case ACTIONS.SET_SCHEDULER_LOCK:\n      return { ...state, schedulerLock: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\nexport type AppointmentsState = {\n  appointments: [];\n  isLoading: false;\n};\n\nconst initialState: AppointmentsState = {\n  appointments: [],\n  isLoading: false,\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_LOADING:\n      return { ...state, isLoading: action.payload };\n    case ACTIONS.SET_APPOINTMENTS:\n      return { ...state, appointments: action.payload };\n    case ACTIONS.ADD_NEW_APPOINTMENT:\n      return {\n        ...state,\n        appointments: [...state.appointments, action.payload],\n      };\n    case ACTIONS.EDIT_APPOINTMENTS:\n      return {\n        ...state,\n        appointments: [\n          ...state.appointments.filter(\n            (item: any) => item.i !== action.payload.i\n          ),\n          action.payload,\n        ],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\nexport type FilterState = {\n  filterInitialData: any;\n};\n\nconst initialState: FilterState = {\n  filterInitialData: null,\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_FILTER_INITIAL_DATA:\n      return { ...state, filterInitialData: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","/* eslint-disable import/no-extraneous-dependencies */\nimport { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport main from './main/store';\nimport scheduler from './scheduler/store';\nimport appointments from './appointments/store';\nimport filter from './filter/store';\n\nconst reducer = combineReducers({\n  main,\n  scheduler,\n  appointments,\n  filter,\n});\n\nexport default createStore(reducer, applyMiddleware(thunk));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  // eslint-disable-next-line\n  document.getElementById('root')\n);\n"],"sourceRoot":""}