{"version":3,"sources":["services/Constants.ts","services/utils/requestApi.ts","services/getToken.ts","store/token/actions.ts","actions/fetchTag.ts","services/getAppointments.ts","store/scheduler/actions.ts","actions/fetchAppointments.ts","services/getCalendar.ts","actions/fetchSchedulerSettings.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/utils/formatAppointmentDate.ts","components/Loader/Loader.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/SchedulerDay/SchedulerDay.js","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridLayout/GridLayout.js","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTableCell/useGridTableCell.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTableCell/GridTableCell.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTable/GridTable.js","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/SchedulerTable.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/useSchedulerTable.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/Filter/Filter.tsx","components/RadioButtonsGroup/RadioButtonsGroup.tsx","components/CustomSelect/CustomSelect.tsx","components/AddFormButton/AddFormButton.tsx","components/CustomInput/CustomInput.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/components/Clients/Clients.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/components/Clients/useClients.ts","components/PrimaryButton/PrimaryButton.tsx","components/CustomSwitch/CustomSwitch.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/components/ImmovableContainer/ImmovableContainer.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/components/ImmovableContainer/useImmovableContainer.ts","services/getDeveloperInfo.ts","actions/fetchDeveloperInfo.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/types.ts","services/createNewCard.ts","actions/createNewCard.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/Form.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/useForm.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/SchedulerForm.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/useSchedulerForm.ts","Screens/SchedulerScreen/components/SchedulerContainer/SchedulerContainer.tsx","Screens/SchedulerScreen/SchedulerScreen.tsx","App/App.tsx","App/useApp.ts","store/token/store.ts","store/scheduler/store.ts","store/index.ts","index.tsx"],"names":["DEFAULT_URL","requestApi","options","a","url","method","headers","bodyData","params","body","undefined","Accept","JSON","stringify","fetch","res","json","success","status","message","Error","data","getToken","token","console","log","ACTIONS","fetchTag","dispatch","type","payload","getAppointments","Authorization","setDevelopersInfo","setIsLoading","fetchAppointments","Object","values","getCalendar","fetchSchedulerSettings","formatAppointmentDate","hours","rooms","days","raw","cell","Math","floor","length","day","date","year","time","room","id","Loader","color","SchedulerDay","className","map","ReactGridLayout","WidthProvider","RGL","GridLayout","appointments","cols","handleDrag","useState","dragAndDropWidth","setDragAndDropWidth","useEffect","$","width","rowHeight","margin","containerPadding","verticalCompact","preventCollision","layout","onDragStop","all","current","currentApp","find","item","i","title","short_info","style","borderLeft","uuidv4","useGridTableCell","useSelector","state","scheduler","useDispatch","useMemo","work_time","day_and_date","onClick","useCallback","setSelectedNewAppointment","GridLayoutCell","props","rawsQuantity","GridTable","raws","columns","_","rowIndex","cellIndex","GridTableCell","SchedulerTable","isLoading","shouldLoad","tableColumns","Array","fill","tableRaws","handleAppointmentDrag","appointment","y","x","useSchedulerTable","SchedulerFilter","RadioButtonsGroup","buttons","onChange","selected","unicId","selectedValue","setSelectedValue","handleChange","value","checked","htmlFor","memo","CustomSelect","label","setSelected","FormControl","variant","InputLabel","Select","event","val","target","disabled","MenuItem","AddFormButton","onKeyPress","src","alt","CustomInput","text","setText","TextField","Clients","meta","clients","onPhoneChange","index","phone","onNameChange","full_name","useClients","marginLeft","onAdd","PrimaryButton","CustomSwitch","setValue","FormControlLabel","control","Switch","name","labelPlacement","ImmovableContainer","immovables","developersInfo","building","contracts","form_data","contract_type","immovableTypes","immovable_type","onContractChange","contract_type_id","onBuildingChange","building_id","onImmovableTypeChange","imm_type_id","onBankChange","bank","onProxyChange","proxy","onImmNumChange","imm_num","useImmovableContainer","getDeveloperInfo","fetchDeveloperInfo","immovableItem","clientItem","createNewCard","createNewCardService","SchedulerForm","newSelectedAppointment","notary","setNotary","devCompanyId","setDevCompanyId","devRepresentativeId","setDevRepresentativeId","devManagerId","setDevManagerId","setImmovables","setClients","notaries","developers","developer","manager","representative","onNotaryChange","onDeveloperChange","onRepresentativeChange","onManagerChange","onImmovablesChange","onClientsChange","onClearAll","onAddImmovables","onAddClients","onFormCreate","split","reverse","join","date_time","dev_company_id","dev_representative_id","dev_manager_id","room_id","notary_id","selectedNotaryId","selectedDeveloperId","selectedDevRepresentativeId","selecedDevManagerId","useForm","SchedulerContainer","SchedulerScreen","App","useApp","initialState","reducer","action","combineReducers","createStore","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.2b7bbc48.chunk.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\nexport const DEFAULT_URL = 'http://app.synction.space';\n","/* eslint-disable comma-dangle */\ntype RequestOptions = {\n  url: string;\n  method?: 'GET' | 'POST' | 'DELETE' | 'PATCH';\n  bodyData?: any;\n  headers?: {};\n};\n\nconst requestApi = async (options: RequestOptions) => {\n  // eslint-disable-next-line object-curly-newline\n  const { url, method = 'GET', headers = {}, bodyData } = options;\n\n  const params = {\n    body: undefined as string | undefined,\n    method: method || 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'applicatioin/json',\n      ...headers,\n    },\n  };\n\n  if (bodyData) {\n    params.body = JSON.stringify(bodyData);\n  }\n\n  const res: any = await fetch(url, params);\n  const json: any = await res.json();\n\n  if (!json.success) {\n    const { status, message } = res;\n    throw new Error(\n      `[${status}, ${message}] Could not fetch on URL (${url}) data:\\n${JSON.stringify(\n        json,\n        null,\n        2\n      )}`\n    );\n  }\n\n  return json.data;\n};\n\nexport default requestApi;\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getToken() {\n  try {\n    const { token } = await requestApi({\n      url: `${DEFAULT_URL}/api/login?email=oleg99@gmail.com&password=admin123`,\n      method: 'POST',\n    });\n\n    return token;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","export const ACTIONS = {\n  SET_TOKEN: 'SET_TOKEN',\n  SET_LOADING: 'SET_LOADING',\n};\n\nexport const setToken = (payload: string) => ({\n  type: ACTIONS.SET_TOKEN,\n  payload,\n});\n","import getToken from '../services/getToken';\nimport { setToken } from '../store/token/actions';\n\nconst fetchTag = async (dispatch: any) => {\n  const token = await getToken();\n  dispatch(setToken(token));\n};\n\nexport default fetchTag;\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getAppointments(token: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","export const ACTIONS = {\n  SET_OPTIONS: 'SET_OPTIONS',\n  SET_APPOINTMENTS: 'SET_APPOINTMENTS',\n  SET_DEVELOPERS_INFO: 'SET_DEVELOPERS_INFO',\n  SET_SELECTED_NEW_APPOINTMENT: 'SET_SELECTED_NEW_APPOINTMENT',\n  SET_IS_LOADING: 'SET_IS_LOADING',\n};\n\nexport const setSchedulerOptions = (payload: any) => ({\n  type: ACTIONS.SET_OPTIONS,\n  payload,\n});\n\nexport const setAppointments = (payload: any) => ({\n  type: ACTIONS.SET_APPOINTMENTS,\n  payload,\n});\n\nexport const setDevelopersInfo = (payload: any) => ({\n  type: ACTIONS.SET_DEVELOPERS_INFO,\n  payload,\n});\n\nexport const setSelectedNewAppointment = (payload: any) => ({\n  type: ACTIONS.SET_SELECTED_NEW_APPOINTMENT,\n  payload,\n});\n\nexport const setIsLoading = (payload: boolean) => ({\n  type: ACTIONS.SET_IS_LOADING,\n  payload,\n});\n","import getAppointments from '../services/getAppointments';\nimport { setAppointments, setIsLoading } from '../store/scheduler/actions';\n\nconst fetchAppointments = async (dispatch: any, token: string) => {\n  dispatch(setIsLoading(true));\n  const data = await getAppointments(token);\n\n  dispatch(setAppointments(Object.values(data)));\n  dispatch(setIsLoading(false));\n};\n\nexport default fetchAppointments;\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getCalendar(token: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/calendar`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import getCalendar from '../services/getCalendar';\nimport { setSchedulerOptions, setIsLoading } from '../store/scheduler/actions';\n\nconst fetchSchedulerSettings = async (dispatch: any, token: string) => {\n  dispatch(setIsLoading(true));\n  const data = await getCalendar(token);\n\n  dispatch(setSchedulerOptions(data));\n  dispatch(setIsLoading(false));\n};\n\nexport default fetchSchedulerSettings;\n","const formatAppointmentDate = (\n  hours: any,\n  rooms: any,\n  days: any,\n  raw: number,\n  cell: number\n) => {\n  const { day, date, year } = days[Math.floor(raw / hours.length)];\n  const { time } = hours[raw % hours.length];\n  const room = rooms[cell].id;\n  return {\n    day,\n    date,\n    year,\n    time,\n    room,\n  };\n};\n\nexport default formatAppointmentDate;\n","import React from 'react';\nimport { LoopCircleLoading } from 'react-loadingg';\n\nconst Loader = () => <LoopCircleLoading color=\"#165153\" />;\n\nexport default Loader;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport './SchedulerDay.scss';\n\nconst SchedulerDay = ({ day, hours }) => (\n  <div className=\"scheduler__weekDay\">\n    <div className=\"scheduler__day\">\n      <p>\n        {day.day}\n        <br />\n        {day.date}\n      </p>\n    </div>\n    <div className=\"scheduler__timeLine\">\n      {hours.map(({ time }) => (\n        <p key={time}>{time}</p>\n      ))}\n    </div>\n  </div>\n);\n\nexport default SchedulerDay;\n","/* eslint-disable object-curly-newline */\n/* eslint-disable camelcase */\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport './GridLayout.scss';\nimport RGL, { WidthProvider } from 'react-grid-layout';\nimport $ from 'jquery';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst ReactGridLayout = WidthProvider(RGL);\n\nexport default function GridLayout({ appointments, cols, handleDrag }) {\n  const [dragAndDropWidth, setDragAndDropWidth] = useState(1200);\n\n  useEffect(() => {\n    setDragAndDropWidth($('.scheduler__appointments').width());\n  }, []);\n\n  const onDrag = (all, current) => {\n    const currentApp = all.find((item) => item.i === current.i);\n    handleDrag(currentApp);\n  };\n\n  if (!appointments) {\n    return <span>Loading...</span>;\n  }\n\n  return (\n    <ReactGridLayout\n      className=\"scheduler__dragAndDrop\"\n      cols={cols}\n      rowHeight={75}\n      width={dragAndDropWidth}\n      margin={[0, 0]}\n      containerPadding={[0, 0]}\n      verticalCompact={false}\n      preventCollision\n      layout={appointments}\n      onDragStop={onDrag}\n    >\n      {appointments.map(({ i, title, color, short_info }) => (\n        <div\n          key={i}\n          className=\"appointment\"\n          style={{ borderLeft: `4px solid ${color}` }}\n        >\n          <div className=\"appointment__title\">{title}</div>\n          <table className=\"appointment__table\">\n            <tbody>\n              <tr>\n                {Object.values(short_info).map((item) => (\n                  <td key={uuidv4()}>{item}</td>\n                ))}\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      ))}\n    </ReactGridLayout>\n  );\n}\n","import { useMemo, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { State } from '../../../../../../../../store/types';\nimport formatAppointmentDate from '../../utils/formatAppointmentDate';\nimport { setSelectedNewAppointment } from '../../../../../../../../store/scheduler/actions';\n\nexport type Props = {\n  rawsQuantity: number;\n  raw: number;\n  cell: number;\n};\n\nexport const useGridTableCell = ({ raw, cell }: Props) => {\n  const { options } = useSelector((state: State) => state.scheduler);\n  const dispatch = useDispatch();\n\n  const rooms = useMemo(() => options?.rooms, [options]);\n  const hours = useMemo(() => options?.work_time, [options]);\n  const days = useMemo(() => options?.day_and_date, [options]);\n\n  const onClick = useCallback(() => {\n    const payload = formatAppointmentDate(hours, rooms, days, raw, cell);\n    dispatch(setSelectedNewAppointment(payload));\n  }, [hours, rooms, days, raw, cell]);\n\n  return { onClick };\n};\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React from 'react';\nimport { Props, useGridTableCell } from './useGridTableCell';\n\nconst GridLayoutCell = (props: Props) => {\n  const { onClick } = useGridTableCell(props);\n\n  return (\n    <td\n      onClick={onClick}\n      style={{ width: `calc(100% / ${props.rawsQuantity})` }}\n    />\n  );\n};\n\nexport default GridLayoutCell;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport GridTableCell from '../GridTableCell/GridTableCell';\n\nexport default function GridTable({ raws, columns }) {\n  return (\n    <div className=\"scheduler__bodyTable\">\n      <table>\n        <tbody>\n          {raws.map((_, rowIndex) => (\n            <tr key={uuidv4()}>\n              {columns.map((day, cellIndex) => (\n                <GridTableCell\n                  rawsQuantity={raws.length}\n                  raw={rowIndex}\n                  cell={cellIndex}\n                  key={uuidv4()}\n                />\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import React from 'react';\nimport './index.scss';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useSchedulerTable } from './useSchedulerTable';\nimport Loader from '../../../../../../components/Loader/Loader';\n\n// components\nimport SchedulerDay from './components/SchedulerDay/SchedulerDay';\nimport GridLayout from './components/GridLayout/GridLayout';\nimport GridTable from './components/GridTable/GridTable';\n\nconst SchedulerTable = () => {\n  const {\n    shouldLoad,\n    rooms,\n    hours,\n    tableRaws,\n    tableColumns,\n    days,\n    appointments,\n    handleAppointmentDrag,\n  } = useSchedulerTable();\n\n  if (shouldLoad) {\n    return (\n      <div className=\"scheduler\">\n        <Loader />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"scheduler\">\n      <div className=\"scheduler__header\">\n        <div />\n        <div>\n          <table>\n            <tbody>\n              <tr>\n                {rooms.map(({ title }: any) => (\n                  <td\n                    key={title}\n                    style={{ width: `calc(100% / ${rooms.length})` }}\n                  >\n                    {title}\n                  </td>\n                ))}\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <div className=\"scheduler__body\">\n        <div className=\"scheduler__dayBar\">\n          {days.map((item: any) => (\n            <SchedulerDay day={item} hours={hours} key={uuidv4()} />\n          ))}\n        </div>\n        <div className=\"scheduler__appointments\">\n          <GridTable raws={tableRaws} columns={tableColumns} />\n          <GridLayout\n            appointments={appointments}\n            cols={tableColumns.length}\n            handleDrag={handleAppointmentDrag}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SchedulerTable;\n","/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable import/prefer-default-export */\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport fetchAppointments from '../../../../../../actions/fetchAppointments';\nimport fetchSchedulerSettings from '../../../../../../actions/fetchSchedulerSettings';\nimport { State } from '../../../../../../store/types';\nimport formatAppointmentDate from './utils/formatAppointmentDate';\n\nexport const useSchedulerTable = () => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.token);\n  const { options, isLoading, appointments } = useSelector(\n    (state: State) => state.scheduler\n  );\n\n  useEffect(() => {\n    if (token && !isLoading) {\n      fetchSchedulerSettings(dispatch, token);\n      fetchAppointments(dispatch, token);\n    }\n  }, [token]);\n\n  const rooms = useMemo(() => options?.rooms, [options]);\n  const hours = useMemo(() => options?.work_time, [options]);\n\n  const shouldLoad = useMemo(() => isLoading || !options, [\n    isLoading,\n    rooms,\n    hours,\n  ]);\n\n  const tableColumns = useMemo(() => new Array(rooms?.length || 0).fill(1), [\n    rooms,\n  ]);\n\n  const days = useMemo(() => options?.day_and_date, [options]);\n\n  const tableRaws = useMemo(\n    () => new Array(hours?.length * days?.length || 0).fill(1),\n    [hours]\n  );\n\n  const handleAppointmentDrag = useCallback(\n    (appointment) => {\n      formatAppointmentDate(hours, rooms, days, appointment.y, appointment.x);\n    },\n    [hours, days]\n  );\n\n  return {\n    shouldLoad,\n    rooms,\n    hours,\n    tableRaws,\n    tableColumns,\n    days,\n    appointments,\n    handleAppointmentDrag,\n  };\n};\n","import React from 'react';\nimport './index.scss';\n\nconst SchedulerFilter = () => (\n  <div className=\"scheduler__filter\">Filter block</div>\n);\n\nexport default SchedulerFilter;\n","/* eslint-disable react/require-default-props */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/no-unused-prop-types */\nimport React, { useState, memo, useEffect } from 'react';\nimport './index.scss';\n\ntype Button = {\n  id: number;\n  title: string;\n};\n\ntype Props = {\n  buttons: Button[];\n  unicId: string;\n  onChange: (id: number) => void;\n  selected?: number;\n};\n\nexport const RadioButtonsGroup = ({\n  buttons,\n  onChange,\n  selected,\n  unicId,\n}: Props) => {\n  const [selectedValue, setSelectedValue] = useState(selected || buttons[0].id);\n\n  useEffect(() => {\n    setSelectedValue(selected || buttons[0].id);\n  }, [selected]);\n\n  const handleChange = (id: number) => {\n    onChange(id);\n  };\n\n  return (\n    <div className=\"radio-buttons-group\">\n      {buttons.map(({ id, title }: Button) => (\n        <div className=\"radio-buttons-group__element\">\n          <input\n            type=\"radio\"\n            id={unicId + title}\n            value={id}\n            checked={selectedValue === id}\n            onChange={() => handleChange(id)}\n            className=\"input\"\n          />\n          <label htmlFor={unicId + title} className=\"label\">\n            {title}\n          </label>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioButtonsGroup);\n","/* eslint-disable object-curly-newline */\n/* eslint-disable no-unused-vars */\nimport React, { useState, memo, useEffect } from 'react';\nimport './index.scss';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\ntype Data = {\n  id: number;\n  title: string;\n};\n\ntype Props = {\n  onChange: (value: string) => void;\n  data: Data[];\n  label: string;\n  selectedValue?: string | undefined | number;\n};\n\nconst CustomSelect = ({ onChange, data, label, selectedValue }: Props) => {\n  const [selected, setSelected] = useState(selectedValue || '');\n\n  useEffect(() => {\n    setSelected(selectedValue || '');\n  }, [selectedValue]);\n\n  const handleChange = (event: any) => {\n    const val = event.target.value;\n    setSelected(val);\n    onChange(val);\n  };\n\n  return (\n    <FormControl variant=\"outlined\" className=\"customSelect\">\n      <InputLabel>{label}</InputLabel>\n      <Select\n        value={selected}\n        onChange={handleChange}\n        disabled={data.length === 0}\n      >\n        <MenuItem value=\"\">\n          <em>Выбрать</em>\n        </MenuItem>\n        {data.map(({ id, title }: Data) => (\n          <MenuItem value={id} key={id}>\n            {title}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default memo(CustomSelect);\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport './index.scss';\n\ntype Props = {\n  onClick: () => void;\n};\n\nconst AddFormButton = ({ onClick }: Props) => (\n  <div className=\"add-form-button\" onClick={onClick} onKeyPress={onClick}>\n    <img src=\"/icons/plus.svg\" alt=\"plus\" />\n  </div>\n);\n\nexport default AddFormButton;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable react/react-in-jsx-scope */\nimport React, { useState, useEffect } from 'react';\nimport './index.scss';\nimport { TextField } from '@material-ui/core';\n\ntype Props = {\n  label: string;\n  onChange: (value: string) => void;\n  value?: string | number;\n  type?: string;\n};\n\nconst CustomInput = ({\n  label,\n  onChange,\n  value = '',\n  type = 'string',\n}: Props) => {\n  const [text, setText] = useState(value);\n\n  useEffect(() => {\n    setText(value);\n  }, [value]);\n\n  const handleChange = (event: any) => {\n    setText(event.target.value);\n    onChange(event.target.value);\n  };\n\n  return (\n    <TextField\n      label={label}\n      variant=\"outlined\"\n      value={text}\n      onChange={handleChange}\n      type={type}\n      className=\"custom-input\"\n    />\n  );\n};\n\nexport default CustomInput;\n","/* eslint-disable react/destructuring-assignment */\nimport React, { memo } from 'react';\nimport AddFormButton from '../../../../../../../../../../components/AddFormButton';\nimport CustomInput from '../../../../../../../../../../components/CustomInput/CustomInput';\nimport { Props, useClients } from './useClients';\n\nconst Clients = (props: Props) => {\n  const meta = useClients(props);\n\n  return (\n    <div className=\"mv12\">\n      {props.clients.map((item, index) => (\n        <>\n          <CustomInput\n            label=\"ПІБ\"\n            value={item.full_name}\n            onChange={(val) => meta.onNameChange(index, val)}\n          />\n\n          <div className=\"mv12 df-jc-sb\">\n            <CustomInput\n              label=\"Номер телефону\"\n              value={item.phone}\n              onChange={(val) => meta.onPhoneChange(index, val)}\n            />\n\n            <div style={{ marginLeft: '12px' }}>\n              <AddFormButton onClick={props.onAdd} />\n            </div>\n          </div>\n        </>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(Clients);\n","import { useCallback } from 'react';\nimport { ClientItem } from '../../../../../../../../../../types';\n\nexport type Props = {\n  clients: ClientItem[];\n  onChange: (index: number, value: ClientItem) => void;\n  onAdd: () => void;\n};\n\nexport const useClients = ({ onChange, clients }: Props) => {\n  const onPhoneChange = useCallback(\n    (index: number, value: string) => {\n      onChange(index, {\n        ...clients[index],\n        phone: value,\n      });\n    },\n    [clients]\n  );\n\n  const onNameChange = useCallback(\n    (index: number, value: string) => {\n      onChange(index, {\n        ...clients[index],\n        full_name: value,\n      });\n    },\n    [clients]\n  );\n\n  return { onPhoneChange, onNameChange };\n};\n","/* eslint-disable react/button-has-type */\nimport React from 'react';\nimport './index.scss';\n\ntype Props = {\n  label: string;\n  onClick: () => void;\n};\n\nconst PrimaryButton = ({ label, onClick }: Props) => (\n  <button className=\"primary-button\" onClick={onClick}>\n    {label}\n  </button>\n);\n\nexport default PrimaryButton;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable prettier/prettier */\nimport React, { useState, memo } from 'react';\nimport { FormControlLabel, Switch } from '@material-ui/core';\nimport './index.scss';\n\ntype Props = {\n  label: string\n  onChange: (val: boolean) => void;\n  selected: boolean;\n};\n\nconst CustomSwitch = ({ label, onChange, selected }: Props) => {\n  const [value, setValue] = useState(selected || false);\n\n  const handleChange = (event: any) => {\n    setValue(event.target.checked);\n    onChange(event.target.checked);\n  };\n\n  return (\n    <FormControlLabel\n      control={(\n        <Switch\n          checked={value}\n          onChange={handleChange}\n          name=\"checkedB\"\n          color=\"primary\"\n        />\n      )}\n      label={label}\n      labelPlacement=\"start\"\n      className=\"custom-switch\"\n    />\n  );\n};\n\nexport default memo(CustomSwitch);\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable no-unused-vars */\nimport React, { memo } from 'react';\nimport AddFormButton from '../../../../../../../../../../components/AddFormButton';\nimport CustomInput from '../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../components/CustomSelect';\nimport CustomSwitch from '../../../../../../../../../../components/CustomSwitch';\nimport RadioButtonsGroup from '../../../../../../../../../../components/RadioButtonsGroup';\nimport {\n  ImmovableItems,\n  ImmovableItem,\n} from '../../../../../../../../../../types';\nimport { useImmovableContainer } from './useImmovableContainer';\n\ntype Props = {\n  onAdd: () => void;\n  immovables: ImmovableItems;\n  onChange: (index: number, value: ImmovableItem) => void;\n};\n\nconst ImmovableContainer = (props: Props) => {\n  const meta = useImmovableContainer(props);\n  return (\n    <div className=\"mv12\">\n      {props.immovables.map((item: ImmovableItem, index: number) => (\n        <>\n          <RadioButtonsGroup\n            buttons={meta.contracts}\n            onChange={(val) => meta.onContractChange(index, val)}\n            selected={item.contract_type_id}\n            unicId={`contract-${index}`}\n          />\n\n          <div className=\"mv12\">\n            <CustomSelect\n              onChange={(val) => meta.onBuildingChange(index, val)}\n              data={meta.building}\n              label=\"Будинок\"\n              selectedValue={item.building_id}\n            />\n          </div>\n\n          <RadioButtonsGroup\n            buttons={meta.immovableTypes}\n            onChange={(val) => meta.onImmovableTypeChange(index, val)}\n            selected={item.imm_type_id}\n            unicId={`types-${index}`}\n          />\n\n          <div className=\"mv12\">\n            <CustomSwitch\n              label=\"Банк\"\n              onChange={(val) => meta.onBankChange(index, val)}\n              selected={item.bank}\n            />\n          </div>\n\n          <div className=\"mv12\">\n            <CustomSwitch\n              label=\"Довіреність\"\n              onChange={(val) => meta.onProxyChange(index, val)}\n              selected={item.proxy}\n            />\n          </div>\n\n          <div className=\"mv12 df-jc-sb\">\n            <CustomInput\n              key=\"test\"\n              label=\"Номер приміщення\"\n              type=\"number\"\n              onChange={(val) => meta.onImmNumChange(index, val)}\n              value={item.imm_num}\n            />\n\n            <div style={{ marginLeft: '12px' }}>\n              <AddFormButton onClick={props.onAdd} />\n            </div>\n          </div>\n        </>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(ImmovableContainer);\n","import { useMemo, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport { State } from '../../../../../../../../../../store/types';\nimport {\n  ImmovableItem,\n  ImmovableItems,\n} from '../../../../../../../../../../types';\n\nexport type Props = {\n  immovables: ImmovableItems;\n  onChange: (index: number, value: ImmovableItem) => void;\n  onAdd: () => void;\n};\n\nexport const useImmovableContainer = ({ immovables, onChange }: Props) => {\n  const { options, developersInfo } = useSelector(\n    (state: State) => state.scheduler\n  );\n\n  const building = useMemo(() => developersInfo?.building || [], [\n    developersInfo,\n  ]);\n\n  const contracts = useMemo(() => options?.form_data.contract_type, [options]);\n\n  const immovableTypes = useMemo(() => options?.form_data.immovable_type, [\n    options,\n  ]);\n\n  // onChange functions\n  const onContractChange = useCallback(\n    (index: number, id: number) => {\n      onChange(index, {\n        ...immovables[index],\n        contract_type_id: id,\n      });\n    },\n    [immovables]\n  );\n\n  const onBuildingChange = useCallback(\n    (index: number, id: string) => {\n      onChange(index, {\n        ...immovables[index],\n        building_id: +id,\n      });\n    },\n    [immovables]\n  );\n\n  const onImmovableTypeChange = useCallback(\n    (index: number, id: number) => {\n      onChange(index, {\n        ...immovables[index],\n        imm_type_id: id,\n      });\n    },\n    [immovables]\n  );\n\n  const onBankChange = useCallback(\n    (index: number, val: boolean) => {\n      onChange(index, {\n        ...immovables[index],\n        bank: val,\n      });\n    },\n    [immovables]\n  );\n\n  const onProxyChange = useCallback(\n    (index: number, val: boolean) => {\n      onChange(index, {\n        ...immovables[index],\n        proxy: val,\n      });\n    },\n    [immovables]\n  );\n\n  const onImmNumChange = useCallback(\n    (index: number, val: string) => {\n      onChange(index, {\n        ...immovables[index],\n        imm_num: +val,\n      });\n    },\n    [immovables]\n  );\n\n  return {\n    building,\n    contracts,\n    immovableTypes,\n    onContractChange,\n    onBuildingChange,\n    onImmovableTypeChange,\n    onBankChange,\n    onProxyChange,\n    onImmNumChange,\n  };\n};\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getDeveloperInfo(token: string, id: number) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/filter/developer/info/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import getDeveloperInfo from '../services/getDeveloperInfo';\nimport { setDevelopersInfo } from '../store/scheduler/actions';\n\nconst fetchDeveloperInfo = async (dispatch: any, token: string, id: number) => {\n  const data = await getDeveloperInfo(token, id);\n  dispatch(setDevelopersInfo(data));\n};\n\nexport default fetchDeveloperInfo;\n","import { ClientItem, ImmovableItem } from '../../../../../../../../types';\n\nexport type ImmovableItemKey = keyof ImmovableItem;\n\nexport const immovableItem: ImmovableItem = {\n  contract_type_id: undefined,\n  building_id: undefined,\n  imm_type_id: undefined,\n  imm_num: undefined,\n  bank: false,\n  proxy: false,\n};\n\nexport const clientItem: ClientItem = {\n  phone: '',\n  full_name: '',\n};\n","import { NewCard } from '../types';\nimport { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function createNewCard(token: string, bodyData: NewCard) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import createNewCardService from '../services/createNewCard';\nimport { NewCard } from '../types';\n\nconst createNewCard = async (dispatch: any, token: string, data: NewCard) => {\n  const res = await createNewCardService(token, data);\n};\n\nexport default createNewCard;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React, { memo } from 'react';\nimport RadioButtonsGroup from '../../../../../../../../components/RadioButtonsGroup';\nimport CustomSelect from '../../../../../../../../components/CustomSelect';\nimport './index.scss';\nimport Clients from './components/Clients/Clients';\nimport PrimaryButton from '../../../../../../../../components/PrimaryButton';\nimport Loader from '../../../../../../../../components/Loader/Loader';\nimport ImmovableContainer from './components/ImmovableContainer';\nimport { useForm } from './useForm';\n\nconst SchedulerForm = () => {\n  const meta = useForm();\n\n  if (meta.shouldLoad) {\n    return (\n      <div className=\"scheduler__form schedulerForm\">\n        <Loader />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"schedulerForm\">\n      <div className=\"schedulerForm__tabs\" />\n      <div className=\"schedulerForm__forms\">\n        <div className=\"schedulerForm__header\">\n          <p className=\"title\">Новий запис</p>\n          <img\n            src=\"/icons/clear.svg\"\n            alt=\"clear icon\"\n            className=\"clear-icon\"\n            onClick={meta.onClearAll}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <RadioButtonsGroup\n            buttons={meta.notaries}\n            onChange={meta.onNotaryChange}\n            selected={meta.selectedNotaryId}\n            unicId=\"notaries\"\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomSelect\n            label=\"Забудовник\"\n            data={meta.developers}\n            onChange={meta.onDeveloperChange}\n            selectedValue={meta.selectedDeveloperId}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomSelect\n            onChange={meta.onRepresentativeChange}\n            data={meta.representative}\n            label=\"Підписант\"\n            selectedValue={meta.selectedDevRepresentativeId}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomSelect\n            onChange={meta.onManagerChange}\n            data={meta.manager}\n            label=\"Менеджер\"\n            selectedValue={meta.selecedDevManagerId}\n          />\n        </div>\n\n        <ImmovableContainer\n          immovables={meta.immovables}\n          onChange={meta.onImmovablesChange}\n          onAdd={meta.onAddImmovables}\n        />\n\n        <Clients\n          clients={meta.clients}\n          onChange={meta.onClientsChange}\n          onAdd={meta.onAddClients}\n        />\n\n        <div className=\"mv12\">\n          <PrimaryButton label=\"Створити\" onClick={meta.onFormCreate} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SchedulerForm);\n","/* eslint-disable prettier/prettier */\n/* eslint-disable arrow-body-style */\nimport { useMemo, useState, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { State } from '../../../../../../../../store/types';\nimport fetchDeveloperInfo from '../../../../../../../../actions/fetchDeveloperInfo';\nimport { setDevelopersInfo } from '../../../../../../../../store/scheduler/actions';\nimport { clientItem, immovableItem } from './types';\nimport createNewCard from '../../../../../../../../actions/createNewCard';\nimport {\n  ClientItem,\n  ImmovableItem,\n  ImmovableItems,\n  NewCard\n} from '../../../../../../../../types';\n\nexport const useForm = () => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.token);\n  const { options, developersInfo, isLoading } = useSelector(\n    (state: State) => state.scheduler\n  );\n  const newSelectedAppointment = useSelector(\n    (state: State) => state.scheduler.newSelectedAppointment\n  );\n\n  // Form State\n  const [notary, setNotary] = useState<number>();\n  const [devCompanyId, setDevCompanyId] = useState();\n  const [devRepresentativeId, setDevRepresentativeId] = useState();\n  const [devManagerId, setDevManagerId] = useState();\n  const [immovables, setImmovables] = useState<ImmovableItems>([immovableItem]);\n  const [clients, setClients] = useState<ClientItem[]>([clientItem]);\n\n  // Form Memo Values\n  const shouldLoad = useMemo(() => isLoading || !options, [options, isLoading]);\n\n  const notaries = useMemo(() => options?.form_data.notary, [options]);\n\n  const developers = useMemo(() => options?.form_data.developer, [options]);\n\n  const manager = useMemo(() => developersInfo?.manager || [], [\n    developersInfo,\n  ]);\n\n  const representative = useMemo(() => developersInfo?.representative || [], [\n    developersInfo,\n  ]);\n\n  // Form onChange functions\n  const onNotaryChange = useCallback((value) => {\n    setNotary(value);\n  }, []);\n\n  const onDeveloperChange = useCallback(\n    (value) => {\n      setDevCompanyId(value);\n\n      if (!value) {\n        dispatch(setDevelopersInfo({}));\n      }\n\n      if (token) {\n        fetchDeveloperInfo(dispatch, token, value);\n      }\n    },\n    [token, devCompanyId]\n  );\n\n  const onRepresentativeChange = useCallback(\n    (value) => {\n      setDevRepresentativeId(value);\n    },\n    [devRepresentativeId]\n  );\n\n  const onManagerChange = useCallback(\n    (value) => {\n      setDevManagerId(value);\n    },\n    [devManagerId]\n  );\n\n  const onImmovablesChange = useCallback(\n    (index: number, value: any) => {\n      immovables[index] = value;\n      setImmovables([...immovables]);\n    },\n    [immovables]\n  );\n\n  const onClientsChange = useCallback(\n    (index: number, value: ClientItem) => {\n      clients[index] = value;\n      setClients([...clients]);\n    },\n    [clients]\n  );\n\n  // Form CTA\n\n  const onClearAll = useCallback(() => {\n    setNotary(undefined);\n    setDevCompanyId(undefined);\n    setDevRepresentativeId(undefined);\n    setDevManagerId(undefined);\n    setImmovables([immovableItem]);\n    setClients([clientItem]);\n  }, []);\n\n  const onAddImmovables = useCallback(() => {\n    setImmovables([...immovables, immovableItem]);\n  }, [immovables]);\n\n  const onAddClients = useCallback(() => {\n    setClients([...clients, clientItem]);\n  }, [clients]);\n\n  const onFormCreate = useCallback(() => {\n    const date = newSelectedAppointment.date.split('.').reverse().join('.');\n    const date_time = `${newSelectedAppointment.year}.${date} ${newSelectedAppointment.time}`;\n\n    const formatImmovables = immovables.map((item: ImmovableItem) => ({\n      ...item,\n      contract_type_id: item.contract_type_id || options.form_data.immovable_type[0].id,\n      imm_type_id: item.imm_type_id || options.form_data.immovable_type[0].id,\n    }));\n\n    const data: NewCard = {\n      immovables: formatImmovables,\n      clients,\n      date_time,\n      dev_company_id: devCompanyId,\n      dev_representative_id: devRepresentativeId,\n      dev_manager_id: devManagerId,\n      room_id: newSelectedAppointment.room,\n      notary_id: notary,\n    };\n\n    if (token) {\n      createNewCard(dispatch, token, data);\n    }\n  }, [\n    devCompanyId,\n    devRepresentativeId,\n    devManagerId,\n    newSelectedAppointment,\n    notary,\n    immovables,\n    clients\n  ]);\n\n  return {\n    shouldLoad,\n    notaries,\n    representative,\n    developers,\n    manager,\n    selectedNotaryId: notary,\n    selectedDeveloperId: devCompanyId,\n    selectedDevRepresentativeId: devRepresentativeId,\n    selecedDevManagerId: devManagerId,\n    immovables,\n    clients,\n    onNotaryChange,\n    onDeveloperChange,\n    onRepresentativeChange,\n    onManagerChange,\n    onImmovablesChange,\n    onAddImmovables,\n    onClientsChange,\n    onAddClients,\n    onClearAll,\n    onFormCreate,\n  };\n};\n","import React from 'react';\nimport Form from './components/Form';\nimport { useSchedulerForm } from './useSchedulerForm';\n\nconst SchedulerForm = () => {\n  const meta = useSchedulerForm();\n\n  if (!meta.newSelectedAppointment) {\n    return null;\n  }\n\n  return (\n    <div className=\"scheduler__form\">\n      <Form />\n    </div>\n  );\n};\n\nexport default SchedulerForm;\n","import { useSelector } from 'react-redux';\nimport { State } from '../../../../../../store/types';\n\nexport const useSchedulerForm = () => {\n  const newSelectedAppointment = useSelector(\n    (state: State) => state.scheduler.newSelectedAppointment\n  );\n\n  return { newSelectedAppointment };\n};\n","import React from 'react';\nimport './index.scss';\n\n// Components\nimport SchedulerTable from './components/Table/SchedulerTable';\nimport SchedulerFilter from './components/Filter';\nimport SchedulerForm from './components/SchedulerForm';\n\nconst SchedulerContainer = () => (\n  <div className=\"scheduler__container\">\n    <div className=\"scheduler__dataView\">\n      <SchedulerFilter />\n      <SchedulerTable />\n    </div>\n    <SchedulerForm />\n  </div>\n);\n\nexport default SchedulerContainer;\n","import React from 'react';\nimport SchedulerContainer from './components/SchedulerContainer';\n\nconst SchedulerScreen = () => <SchedulerContainer />;\n\nexport default SchedulerScreen;\n","import React from 'react';\nimport './index.scss';\nimport { useApp } from './useApp';\nimport SchedulerScreen from '../Screens/SchedulerScreen';\n\nconst App: React.FC = () => {\n  useApp();\n\n  return <SchedulerScreen />;\n};\n\nexport default App;\n","/* eslint-disable import/prefer-default-export */\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport fetchTag from '../actions/fetchTag';\n\nexport const useApp = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    fetchTag(dispatch);\n  }, []);\n};\n","import { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\nexport type TokenState = {\n  token: null | string;\n};\n\nconst initialState: TokenState = {\n  token: null,\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_TOKEN:\n      return { ...state, token: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\nexport type SchedulerState = {\n  options: any;\n  appointments: any;\n  developersInfo: any;\n  newSelectedAppointment: any;\n  isLoading: boolean;\n};\n\nconst initialState: SchedulerState = {\n  options: null,\n  appointments: [],\n  developersInfo: {},\n  newSelectedAppointment: null,\n  isLoading: false,\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_OPTIONS:\n      return { ...state, options: action.payload };\n    case ACTIONS.SET_APPOINTMENTS:\n      return { ...state, appointments: action.payload };\n    case ACTIONS.SET_DEVELOPERS_INFO:\n      return { ...state, developersInfo: action.payload };\n    case ACTIONS.SET_IS_LOADING:\n      return { ...state, isLoading: action.payload };\n    case ACTIONS.SET_SELECTED_NEW_APPOINTMENT:\n      return { ...state, newSelectedAppointment: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers, createStore } from 'redux';\nimport token from './token/store';\nimport scheduler from './scheduler/store';\n\nconst reducer = combineReducers({\n  token,\n  scheduler,\n});\n\nexport default createStore(reducer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  // eslint-disable-next-line\n  document.getElementById('root')\n);\n"],"sourceRoot":""}