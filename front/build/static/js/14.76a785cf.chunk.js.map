{"version":3,"sources":["components/PrimaryButton/PrimaryButton.tsx","components/Modal/Modal.tsx","components/Header/components/UserSelect/UserSelect.tsx","components/Header/components/UserSelect/useUserSelect.ts","components/Header/components/PageNavigationControl/PageNavigationControl.tsx","components/Header/components/PageNavigationControl/usePageNavigationControl.ts","components/Header/Header.tsx","components/Header/useHeader.ts","services/vision/bank/getBank.ts","components/BankCardsDashboard/useBankCardsDashboard.ts","components/BankCardsDashboard/BankCardsDashboard.tsx","Screens/BankUserScreen/BankUserScreen.tsx"],"names":["PrimaryButton","label","onClick","disabled","className","useState","isClicked","setIsClicked","handleClick","useCallback","e","useEffect","Modal","open","handleClose","children","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","UserSelect","dispatch","useDispatch","history","useHistory","isOpen","setIsOpen","extra_type","useSelector","state","main","user","userType","type","handleOpen","handleUserType","setUserTypeAction","setTimeout","push","userTypeButtons","useMemo","filter","map","title","useUserSelect","length","src","alt","PageNavigationControl","onLogoClick","onReloadButtonClick","window","location","reload","onBackButtonClick","pathname","goBack","onForwardButtonClick","goForward","usePageNavigationControl","Header","searchText","setSearchText","isNotCompanyUser","UserTypes","BANK","DEVELOPER","onDebouncedSearch","_","debounce","searchAppointments","onSearch","target","value","onLogout","localStorage","clear","setUser","token","useHeader","placeholder","onChange","getBank","a","requestApi","url","DEFAULT_URL","headers","Authorization","res","success","Error","message","data","BankCardsDashboard","isLoading","setIsLoading","cards","setCards","console","error","useBankCardsDashboard","Loader","info","link","href","id","BankUserScreen"],"mappings":"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","file":"static/js/14.76a785cf.chunk.js","sourcesContent":["/* eslint-disable prettier/prettier */\n/* eslint-disable react/button-has-type */\nimport React, { useCallback, useState, useEffect } from 'react';\nimport './index.scss';\n\ntype Props = {\n  label: string;\n  onClick: (e: any) => void;\n  disabled?: boolean;\n  className?: string;\n};\n\nconst PrimaryButton = ({\n  label, onClick, disabled, className\n}: Props) => {\n  const [isClicked, setIsClicked] = useState<boolean>(false);\n\n  const handleClick = useCallback((e) => {\n    setIsClicked(true);\n    onClick(e);\n  }, [onClick]);\n\n  useEffect(() => {\n    setIsClicked(false);\n  }, [onClick]);\n\n  return (\n    <button\n      className={\n        `primary-button\n        ${disabled ? 'disabled' : ''}\n        ${className || ''}\n        ${isClicked ? 'clicked' : ''}\n        `\n      }\n      onClick={handleClick}\n      disabled={disabled}\n    >\n      {label}\n    </button>\n  );\n};\n\nexport default PrimaryButton;\n","import React, { ReactElement } from 'react';\nimport MModal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\ntype Props = {\n  open: boolean;\n  handleClose: () => void;\n  children: ReactElement;\n};\n\nconst Modal = ({\n  open, handleClose, children\n}: Props) => (\n  <MModal\n    className=\"modal-container\"\n    open={open}\n    onClose={handleClose}\n    closeAfterTransition\n    BackdropComponent={Backdrop}\n    BackdropProps={{\n      timeout: 500,\n    }}\n  >\n    <Fade in={open}>{children}</Fade>\n  </MModal>\n);\n\nexport default Modal;\n","import React, { useState, useCallback } from 'react';\nimport Modal from '../../../Modal';\nimport PrimaryButton from '../../../PrimaryButton';\nimport './index.scss';\nimport { useUserSelect } from './useUserSelect';\n\nconst UserSelect = () => {\n  const {\n    isOpen,\n    userTypeButtons,\n    handleOpen,\n    handleClose,\n  } = useUserSelect();\n\n  if (!userTypeButtons.length) return null;\n\n  return (\n    <div className=\"user-select\">\n      <img src=\"/images/user.svg\" alt=\"user\" onClick={handleOpen} />\n      <Modal\n        open={isOpen}\n        handleClose={handleClose}\n      >\n        <div className=\"user-select__modal\">\n          {\n            userTypeButtons.map(({ label, onClick }) => (\n              <PrimaryButton\n                key={label}\n                label={label}\n                onClick={onClick}\n                className=\"user-select__button\"\n              />\n            ))\n          }\n\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default UserSelect;\n","import { useCallback, useState, useMemo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { setUserTypeAction } from '../../../../store/main/actions';\nimport { State } from '../../../../store/types';\nimport { UserTypes } from '../../../../types';\n\nexport const useUserSelect = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const extra_type = useSelector((state: State) => state.main.user.extra_type);\n  const userType = useSelector((state: State) => state.main.user.type);\n\n  const handleOpen = useCallback(() => {\n    setIsOpen(true);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setIsOpen(false);\n  }, []);\n\n  const handleUserType = useCallback((type: UserTypes) => {\n    setIsOpen(false);\n    dispatch(setUserTypeAction(type));\n    setTimeout(() => {\n      history.push('/');\n    }, 100);\n  }, [dispatch, history]);\n\n  const userTypeButtons = useMemo(() => (\n    extra_type\n      .filter(({ type }) => type !== userType)\n      .map(({ title, type }) => ({\n        label: title,\n        onClick: () => handleUserType(type),\n      }))\n  ), [extra_type, handleUserType, userType]);\n\n  return {\n    isOpen,\n    userTypeButtons,\n    handleOpen,\n    handleClose,\n  };\n};\n","import React from 'react';\nimport { usePageNavigationControl } from './usePageNavigationControl';\n\nconst PageNavigationControl = () => {\n  const {\n    onLogoClick,\n    onBackButtonClick,\n    onReloadButtonClick,\n    onForwardButtonClick,\n  } = usePageNavigationControl();\n\n  return (\n    <div className=\"header__navigation\">\n      <img\n        className=\"header__logo\"\n        src=\"/images/logo.svg\"\n        alt=\"logo\"\n        onClick={onLogoClick}\n      />\n\n      <img\n        className=\"header__navButton\"\n        src=\"/images/arrow-left-nav.svg\"\n        alt=\"logo\"\n        onClick={onBackButtonClick}\n      />\n\n      <img\n        className=\"header__navButton\"\n        src=\"/images/arrow-right-nav.svg\"\n        alt=\"logo\"\n        onClick={onForwardButtonClick}\n      />\n\n      <img\n        className=\"header__navButton\"\n        src=\"/images/reload.svg\"\n        alt=\"logo\"\n        onClick={onReloadButtonClick}\n      />\n    </div>\n  );\n};\n\nexport default PageNavigationControl;\n","import { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nexport const usePageNavigationControl = () => {\n  const history = useHistory();\n\n  const onLogoClick = useCallback(() => {\n    history.push('/');\n  }, [history]);\n\n  const onReloadButtonClick = useCallback(() => {\n    window.location.reload();\n  }, []);\n\n  const onBackButtonClick = useCallback(() => {\n    if (history.location.pathname === '/') return;\n    history.goBack();\n  }, [history]);\n\n  const onForwardButtonClick = useCallback(() => {\n    history.goForward();\n  }, [history]);\n\n  return {\n    onLogoClick,\n    onBackButtonClick,\n    onReloadButtonClick,\n    onForwardButtonClick,\n  };\n};\n","import * as React from 'react';\nimport './index.scss';\n\nimport { useHeader } from './useHeader';\nimport UserSelect from './components/UserSelect';\nimport PageNavigationControl from './components/PageNavigationControl';\n\nconst Header = () => {\n  const {\n    searchText,\n    isNotCompanyUser,\n    onSearch,\n    onLogout,\n  } = useHeader();\n\n  return (\n    <div className=\"header container\">\n      <PageNavigationControl />\n      {!isNotCompanyUser && (\n        <div className=\"header__search\">\n          <input\n            type=\"text\"\n            placeholder=\"Пошук...\"\n            onChange={onSearch}\n            value={searchText}\n          />\n          <img src=\"/images/search.svg\" alt=\"search\" />\n        </div>\n      )}\n\n      <div className=\"header__control\">\n        {!isNotCompanyUser && (\n          <UserSelect />\n        )}\n\n        <img src=\"/images/log-out.svg\" alt=\"logout\" onClick={onLogout} />\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  ChangeEvent, useState, useCallback, useMemo\n} from 'react';\nimport _ from 'lodash';\n\nimport { setUser } from '../../store/main/actions';\nimport { searchAppointments } from '../../store/appointments/actions';\nimport { State } from '../../store/types';\nimport { UserTypes } from '../../types';\n\nexport const useHeader = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const { type } = useSelector((state: State) => state.main.user);\n\n  const [searchText, setSearchText] = useState<string>('');\n\n  // Memo\n  const isNotCompanyUser = useMemo(\n    () => type === UserTypes.BANK || type === UserTypes.DEVELOPER, [type]\n  );\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const onDebouncedSearch = useCallback(\n    _.debounce((e) => dispatch(searchAppointments(e)), 500), []\n  );\n\n  const onSearch = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    onDebouncedSearch(e.target.value);\n    setSearchText(e.target.value);\n  }, [onDebouncedSearch]);\n\n  const onLogout = useCallback(() => {\n    localStorage.clear();\n    dispatch(setUser({ type: null, token: null }));\n    history.push('/');\n  }, [dispatch, history]);\n\n  return {\n    searchText,\n    isNotCompanyUser,\n    onSearch,\n    onLogout,\n  };\n};\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function getBank(token: string) {\n  const res = await requestApi({\n    url: `${DEFAULT_URL}/api/bank/data`,\n    headers: { Authorization: `Bearer ${token}` },\n  });\n\n  if (!res.success) throw new Error(res.message);\n\n  return res.data;\n}\n","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport getBank from '../../services/vision/bank/getBank';\nimport { State } from '../../store/types';\nimport { BankCard } from './types';\n\nexport const useBankCardsDashboard = () => {\n  const { token } = useSelector((state: State) => state.main.user);\n\n  // State\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [cards, setCards] = useState<BankCard[]>();\n\n  // Effects\n  useEffect(() => {\n    (async () => {\n      if (!token) return;\n\n      try {\n        const res = await getBank(token);\n        setCards(res);\n      } catch (e: any) {\n        console.error(e);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [token]);\n\n  return {\n    isLoading,\n    cards,\n  };\n};\n","import React from 'react';\n\nimport Loader from '../Loader/Loader';\n\nimport './index.scss';\nimport { useBankCardsDashboard } from './useBankCardsDashboard';\n\nconst BankCardsDashboard = () => {\n  const { isLoading, cards } = useBankCardsDashboard();\n\n  if (isLoading) return <Loader />;\n\n  if (!cards) return null;\n\n  return (\n    <div className=\"vision-bank\">\n      {cards.map(({ title, info }) => (\n        <div className=\"bank-card\" key={title}>\n          <div className=\"bank-card__title\">\n            <img src=\"/images/clock.svg\" alt=\"clock\" />\n            <span>{title}</span>\n          </div>\n          <div className=\"bank-card__info\">\n            {info.map((link) => (\n              <a key={link.id} href={`/${link.link}`}>{link.title}</a>\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default BankCardsDashboard;\n","import React from 'react';\nimport Header from '../../components/Header';\n\nimport BankCardsDashboard from '../../components/BankCardsDashboard';\n\nimport './index.scss';\n\nconst BankUserScreen = () => (\n  <>\n    <Header />\n    <div className=\"bank-container\">\n      <BankCardsDashboard />\n    </div>\n  </>\n);\n\nexport default BankUserScreen;\n"],"sourceRoot":""}