{"version":3,"sources":["services/Constants.ts","services/utils/requestApi.ts","services/getToken.ts","store/token/actions.ts","actions/fetchTag.ts","services/getAppointments.ts","store/scheduler/actions.ts","actions/fetchAppointments.ts","services/getCalendar.ts","actions/fetchSchedulerSettings.ts","components/Loader/Loader.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/SchedulerDay/SchedulerDay.js","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridLayout/GridLayout.js","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTableCell/GridTableCell.js","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTable/GridTable.js","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/SchedulerTable.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/useSchedulerTable.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/Filter/Filter.tsx","components/RadioButtonsGroup/RadioButtonsGroup.tsx","components/CustomSelect/CustomSelect.tsx","components/AddFormButton/AddFormButton.tsx","components/CustomInput/CustomInput.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Form/components/Clients/Clients.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Form/components/Clients/useClients.ts","components/PrimaryButton/PrimaryButton.tsx","components/CustomSwitch/CustomSwitch.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Form/components/ImmovableContainer/ImmovableContainer.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Form/components/ImmovableContainer/useImmovableContainer.ts","services/getDeveloperInfo.ts","actions/fetchDeveloperInfo.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/Form/types.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/Form/Form.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Form/useForm.ts","Screens/SchedulerScreen/components/SchedulerContainer/SchedulerContainer.tsx","Screens/SchedulerScreen/SchedulerScreen.tsx","App/App.tsx","App/useApp.ts","store/token/store.ts","store/scheduler/store.ts","store/index.ts","index.tsx"],"names":["DEFAULT_URL","requestApi","options","a","url","method","headers","bodyData","params","body","undefined","Accept","JSON","stringify","fetch","res","json","success","status","message","Error","data","getToken","token","console","log","ACTIONS","fetchTag","dispatch","type","payload","getAppointments","Authorization","setDevelopersInfo","setIsLoading","fetchAppointments","Object","values","getCalendar","fetchSchedulerSettings","Loader","color","SchedulerDay","day","hours","className","date","map","time","ReactGridLayout","WidthProvider","RGL","GridLayout","appointments","cols","handleDrag","useState","dragAndDropWidth","setDragAndDropWidth","useEffect","$","width","rowHeight","margin","containerPadding","verticalCompact","preventCollision","layout","onDragStop","all","current","currentApp","find","item","i","title","short_info","style","borderLeft","uuidv4","GridLayoutCell","rawsQuantity","GridTable","raws","columns","_","rowIndex","cellIndex","length","row","cell","SchedulerTable","useDispatch","useSelector","state","scheduler","isLoading","rooms","useMemo","work_time","shouldLoad","tableColumns","Array","fill","days","day_and_date","tableRaws","handleAppointmentDrag","useCallback","appointment","y","Math","floor","useSchedulerTable","SchedulerFilter","RadioButtonsGroup","buttons","onChange","selected","unicId","id","selectedValue","setSelectedValue","handleChange","value","checked","htmlFor","memo","CustomSelect","label","setSelected","FormControl","variant","InputLabel","Select","event","val","target","disabled","MenuItem","AddFormButton","onClick","onKeyPress","src","alt","CustomInput","text","setText","TextField","Clients","props","meta","clients","onPhoneChange","index","phone","onNameChange","full_name","useClients","marginLeft","onAdd","PrimaryButton","CustomSwitch","setValue","FormControlLabel","control","Switch","name","labelPlacement","ImmovableContainer","immovables","developersInfo","building","contracts","form_data","contract_type","immovableTypes","immovable_type","onContractChange","contract_type_id","onBuildingChange","building_id","onImmovableTypeChange","imm_type_id","onBankChange","bank","onProxyChange","proxy","onImmNumChange","imm_num","useImmovableContainer","getDeveloperInfo","fetchDeveloperInfo","immovableItem","clientItem","SchedulerForm","notary","setNotary","devCompanyId","setDevCompanyId","devRepresentativeId","setDevRepresentativeId","devManagerId","setDevManagerId","setImmovables","setClients","notaries","developers","developer","manager","representative","onNotaryChange","onDeveloperChange","onRepresentativeChange","onManagerChange","onImmovablesChange","onClientsChange","onClearAll","onAddImmovables","onAddClients","notary_id","dev_company_id","dev_representative_id","dev_manager_id","selectedNotaryId","selectedDeveloperId","selectedDevRepresentativeId","selecedDevManagerId","useForm","SchedulerContainer","SchedulerScreen","App","useApp","initialState","reducer","action","combineReducers","createStore","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.98b1b6f6.chunk.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\nexport const DEFAULT_URL = 'http://app.synction.space';\n","/* eslint-disable comma-dangle */\ntype RequestOptions = {\n  url: string;\n  method?: 'GET' | 'POST' | 'DELETE' | 'PATCH';\n  bodyData?: any;\n  headers?: {};\n};\n\nconst requestApi = async (options: RequestOptions) => {\n  // eslint-disable-next-line object-curly-newline\n  const { url, method = 'GET', headers = {}, bodyData } = options;\n\n  const params = {\n    body: undefined as string | undefined,\n    method: method || 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'applicatioin/json',\n      ...headers,\n    },\n  };\n\n  if (bodyData) {\n    params.body = JSON.stringify(bodyData);\n  }\n\n  const res: any = await fetch(url, params);\n  const json: any = await res.json();\n\n  if (!json.success) {\n    const { status, message } = res;\n    throw new Error(\n      `[${status}, ${message}] Could not fetch on URL (${url}) data:\\n${JSON.stringify(\n        json,\n        null,\n        2\n      )}`\n    );\n  }\n\n  return json.data;\n};\n\nexport default requestApi;\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getToken() {\n  try {\n    const { token } = await requestApi({\n      url: `${DEFAULT_URL}/api/login?email=oleg99@gmail.com&password=admin123`,\n      method: 'POST',\n    });\n\n    return token;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","export const ACTIONS = {\n  SET_TOKEN: 'SET_TOKEN',\n  SET_LOADING: 'SET_LOADING',\n};\n\nexport const setToken = (payload: string) => ({\n  type: ACTIONS.SET_TOKEN,\n  payload,\n});\n","import getToken from '../services/getToken';\nimport { setToken } from '../store/token/actions';\n\nconst fetchTag = async (dispatch: any) => {\n  const token = await getToken();\n  dispatch(setToken(token));\n};\n\nexport default fetchTag;\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getAppointments(token: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","export const ACTIONS = {\n  SET_OPTIONS: 'SET_OPTIONS',\n  SET_APPOINTMENTS: 'SET_APPOINTMENTS',\n  SET_DEVELOPERS_INFO: 'SET_DEVELOPERS_INFO',\n  SET_IS_LOADING: 'SET_IS_LOADING',\n};\n\nexport const setSchedulerOptions = (payload: any) => ({\n  type: ACTIONS.SET_OPTIONS,\n  payload,\n});\n\nexport const setAppointments = (payload: any) => ({\n  type: ACTIONS.SET_APPOINTMENTS,\n  payload,\n});\n\nexport const setDevelopersInfo = (payload: any) => ({\n  type: ACTIONS.SET_DEVELOPERS_INFO,\n  payload,\n});\n\nexport const setIsLoading = (payload: boolean) => ({\n  type: ACTIONS.SET_IS_LOADING,\n  payload,\n});\n","import getAppointments from '../services/getAppointments';\nimport { setAppointments, setIsLoading } from '../store/scheduler/actions';\n\nconst fetchAppointments = async (dispatch: any, token: string) => {\n  dispatch(setIsLoading(true));\n  const data = await getAppointments(token);\n\n  dispatch(setAppointments(Object.values(data)));\n  dispatch(setIsLoading(false));\n};\n\nexport default fetchAppointments;\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getCalendar(token: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/calendar`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import getCalendar from '../services/getCalendar';\nimport { setSchedulerOptions, setIsLoading } from '../store/scheduler/actions';\n\nconst fetchSchedulerSettings = async (dispatch: any, token: string) => {\n  dispatch(setIsLoading(true));\n  const data = await getCalendar(token);\n\n  dispatch(setSchedulerOptions(data));\n  dispatch(setIsLoading(false));\n};\n\nexport default fetchSchedulerSettings;\n","import React from 'react';\nimport { LoopCircleLoading } from 'react-loadingg';\n\nconst Loader = () => <LoopCircleLoading color=\"#165153\" />;\n\nexport default Loader;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport './SchedulerDay.scss';\n\nconst SchedulerDay = ({ day, hours }) => (\n  <div className=\"scheduler__weekDay\">\n    <div className=\"scheduler__day\">\n      <p>\n        {day.day}\n        <br />\n        {day.date}\n      </p>\n    </div>\n    <div className=\"scheduler__timeLine\">\n      {hours.map(({ time }) => (\n        <p key={time}>{time}</p>\n      ))}\n    </div>\n  </div>\n);\n\nexport default SchedulerDay;\n","/* eslint-disable object-curly-newline */\n/* eslint-disable camelcase */\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport './GridLayout.scss';\nimport RGL, { WidthProvider } from 'react-grid-layout';\nimport $ from 'jquery';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst ReactGridLayout = WidthProvider(RGL);\n\nexport default function GridLayout({ appointments, cols, handleDrag }) {\n  const [dragAndDropWidth, setDragAndDropWidth] = useState(1200);\n\n  useEffect(() => {\n    setDragAndDropWidth($('.scheduler__appointments').width());\n  }, []);\n\n  const onDrag = (all, current) => {\n    const currentApp = all.find((item) => item.i === current.i);\n    handleDrag(currentApp);\n  };\n\n  if (!appointments) {\n    return <span>Loading...</span>;\n  }\n\n  return (\n    <ReactGridLayout\n      className=\"scheduler__dragAndDrop\"\n      cols={cols}\n      rowHeight={75}\n      width={dragAndDropWidth}\n      margin={[0, 0]}\n      containerPadding={[0, 0]}\n      verticalCompact={false}\n      preventCollision\n      layout={appointments}\n      onDragStop={onDrag}\n    >\n      {appointments.map(({ i, title, color, short_info }) => (\n        <div\n          key={i}\n          className=\"appointment\"\n          style={{ borderLeft: `4px solid ${color}` }}\n        >\n          <div className=\"appointment__title\">{title}</div>\n          <table className=\"appointment__table\">\n            <tbody>\n              <tr>\n                {Object.values(short_info).map((item) => (\n                  <td key={uuidv4()}>{item}</td>\n                ))}\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      ))}\n    </ReactGridLayout>\n  );\n}\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable react/prop-types */\nimport React from 'react';\n// import { v4 as uuidv4 } from 'uuid';\n\n// redux\n\nexport default function GridLayoutCell({ rawsQuantity }) {\n  // const handleClick = () => {\n  //   const appointment = {\n  //     i: uuidv4(),\n  //     x: cell,\n  //     y: row,\n  //     w: 1,\n  //     h: 1,\n  //   };\n  // };\n\n  return (\n    <td\n      // onClick={handleClick}\n      style={{ width: `calc(100% / ${rawsQuantity})` }}\n    />\n  );\n}\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport GridTableCell from '../GridTableCell/GridTableCell';\n\nexport default function GridTable({ raws, columns }) {\n  return (\n    <div className=\"scheduler__bodyTable\">\n      <table>\n        <tbody>\n          {raws.map((_, rowIndex) => (\n            <tr key={uuidv4()}>\n              {columns.map((day, cellIndex) => (\n                <GridTableCell\n                  rawsQuantity={raws.length}\n                  row={rowIndex}\n                  cell={cellIndex}\n                  key={uuidv4()}\n                />\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import React from 'react';\nimport './index.scss';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useSchedulerTable } from './useSchedulerTable';\nimport Loader from '../../../../../../components/Loader/Loader';\n\n// components\nimport SchedulerDay from './components/SchedulerDay/SchedulerDay';\nimport GridLayout from './components/GridLayout/GridLayout';\nimport GridTable from './components/GridTable/GridTable';\n\nconst SchedulerTable = () => {\n  const {\n    shouldLoad,\n    rooms,\n    hours,\n    tableRaws,\n    tableColumns,\n    days,\n    appointments,\n    handleAppointmentDrag,\n  } = useSchedulerTable();\n\n  if (shouldLoad) {\n    return (\n      <div className=\"scheduler\">\n        <Loader />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"scheduler\">\n      <div className=\"scheduler__header\">\n        <div />\n        <div>\n          <table>\n            <tbody>\n              <tr>\n                {rooms.map(({ title }: any) => (\n                  <td\n                    key={title}\n                    style={{ width: `calc(100% / ${rooms.length})` }}\n                  >\n                    {title}\n                  </td>\n                ))}\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <div className=\"scheduler__body\">\n        <div className=\"scheduler__dayBar\">\n          {days.map((item: any) => (\n            <SchedulerDay day={item} hours={hours} key={uuidv4()} />\n          ))}\n        </div>\n        <div className=\"scheduler__appointments\">\n          <GridTable raws={tableRaws} columns={tableColumns} />\n          <GridLayout\n            appointments={appointments}\n            cols={tableColumns.length}\n            handleDrag={handleAppointmentDrag}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SchedulerTable;\n","/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable import/prefer-default-export */\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport fetchAppointments from '../../../../../../actions/fetchAppointments';\nimport fetchSchedulerSettings from '../../../../../../actions/fetchSchedulerSettings';\nimport { State } from '../../../../../../store/types';\n\nexport const useSchedulerTable = () => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.token);\n  const { options, isLoading, appointments } = useSelector(\n    (state: State) => state.scheduler\n  );\n\n  useEffect(() => {\n    if (token && !isLoading) {\n      fetchSchedulerSettings(dispatch, token);\n      fetchAppointments(dispatch, token);\n    }\n  }, [token]);\n\n  const rooms = useMemo(() => options?.rooms, [options]);\n  const hours = useMemo(() => options?.work_time, [options]);\n\n  const shouldLoad = useMemo(() => isLoading || !options, [\n    isLoading,\n    rooms,\n    hours,\n  ]);\n\n  const tableColumns = useMemo(() => new Array(rooms?.length || 0).fill(1), [\n    rooms,\n  ]);\n\n  const days = useMemo(() => options?.day_and_date, [options]);\n\n  const tableRaws = useMemo(\n    () => new Array(hours?.length * days?.length || 0).fill(1),\n    [hours]\n  );\n\n  const handleAppointmentDrag = useCallback(\n    (appointment) => {\n      const { y } = appointment;\n      const { day } = days[Math.floor(y / hours.length)];\n      const { time } = hours[y % hours.length];\n      // eslint-disable-next-line no-console\n      console.log(day, time);\n    },\n    [hours, days]\n  );\n\n  return {\n    shouldLoad,\n    rooms,\n    hours,\n    tableRaws,\n    tableColumns,\n    days,\n    appointments,\n    handleAppointmentDrag,\n  };\n};\n","import React from 'react';\nimport './index.scss';\n\nconst SchedulerFilter = () => (\n  <div className=\"scheduler__filter\">Filter block</div>\n);\n\nexport default SchedulerFilter;\n","/* eslint-disable react/require-default-props */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/no-unused-prop-types */\nimport React, { useState, memo, useEffect } from 'react';\nimport './index.scss';\n\ntype Button = {\n  id: number;\n  title: string;\n};\n\ntype Props = {\n  buttons: Button[];\n  unicId: string;\n  onChange: (id: number) => void;\n  selected?: number;\n};\n\nexport const RadioButtonsGroup = ({\n  buttons,\n  onChange,\n  selected,\n  unicId,\n}: Props) => {\n  const [selectedValue, setSelectedValue] = useState(selected || buttons[0].id);\n\n  useEffect(() => {\n    setSelectedValue(selected || buttons[0].id);\n  }, [selected]);\n\n  const handleChange = (id: number) => {\n    onChange(id);\n  };\n\n  return (\n    <div className=\"radio-buttons-group\">\n      {buttons.map(({ id, title }: Button) => (\n        <div className=\"radio-buttons-group__element\">\n          <input\n            type=\"radio\"\n            id={unicId + title}\n            value={id}\n            checked={selectedValue === id}\n            onChange={() => handleChange(id)}\n            className=\"input\"\n          />\n          <label htmlFor={unicId + title} className=\"label\">\n            {title}\n          </label>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioButtonsGroup);\n","/* eslint-disable object-curly-newline */\n/* eslint-disable no-unused-vars */\nimport React, { useState, memo, useEffect } from 'react';\nimport './index.scss';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\ntype Data = {\n  id: number;\n  title: string;\n};\n\ntype Props = {\n  onChange: (value: string) => void;\n  data: Data[];\n  label: string;\n  selectedValue?: string | undefined | number;\n};\n\nconst CustomSelect = ({ onChange, data, label, selectedValue }: Props) => {\n  const [selected, setSelected] = useState(selectedValue || '');\n\n  useEffect(() => {\n    setSelected(selectedValue || '');\n  }, [selectedValue]);\n\n  const handleChange = (event: any) => {\n    const val = event.target.value;\n    setSelected(val);\n    onChange(val);\n  };\n\n  return (\n    <FormControl variant=\"outlined\" className=\"customSelect\">\n      <InputLabel>{label}</InputLabel>\n      <Select\n        value={selected}\n        onChange={handleChange}\n        disabled={data.length === 0}\n      >\n        <MenuItem value=\"\">\n          <em>Выбрать</em>\n        </MenuItem>\n        {data.map(({ id, title }: Data) => (\n          <MenuItem value={id} key={id}>\n            {title}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default memo(CustomSelect);\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport './index.scss';\n\ntype Props = {\n  onClick: () => void;\n};\n\nconst AddFormButton = ({ onClick }: Props) => (\n  <div className=\"add-form-button\" onClick={onClick} onKeyPress={onClick}>\n    <img src=\"/icons/plus.svg\" alt=\"plus\" />\n  </div>\n);\n\nexport default AddFormButton;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable react/react-in-jsx-scope */\nimport React, { useState, useEffect } from 'react';\nimport './index.scss';\nimport { TextField } from '@material-ui/core';\n\ntype Props = {\n  label: string;\n  onChange: (value: string) => void;\n  value?: string | number;\n  type?: string;\n};\n\nconst CustomInput = ({\n  label,\n  onChange,\n  value = '',\n  type = 'string',\n}: Props) => {\n  const [text, setText] = useState(value);\n\n  useEffect(() => {\n    setText(value);\n  }, [value]);\n\n  const handleChange = (event: any) => {\n    setText(event.target.value);\n    onChange(event.target.value);\n  };\n\n  return (\n    <TextField\n      label={label}\n      variant=\"outlined\"\n      value={text}\n      onChange={handleChange}\n      type={type}\n      className=\"custom-input\"\n    />\n  );\n};\n\nexport default CustomInput;\n","/* eslint-disable react/destructuring-assignment */\nimport React, { memo } from 'react';\nimport AddFormButton from '../../../../../../../../components/AddFormButton';\nimport CustomInput from '../../../../../../../../components/CustomInput/CustomInput';\nimport { Props, useClients } from './useClients';\n\nconst Clients = (props: Props) => {\n  const meta = useClients(props);\n\n  return (\n    <div className=\"mv12\">\n      {props.clients.map((item, index) => (\n        <>\n          <CustomInput\n            label=\"ПІБ\"\n            value={item.full_name}\n            onChange={(val) => meta.onNameChange(index, val)}\n          />\n\n          <div className=\"mv12 df-jc-sb\">\n            <CustomInput\n              label=\"Номер телефону\"\n              value={item.phone}\n              onChange={(val) => meta.onPhoneChange(index, val)}\n            />\n\n            <div style={{ marginLeft: '12px' }}>\n              <AddFormButton onClick={props.onAdd} />\n            </div>\n          </div>\n        </>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(Clients);\n","import { useCallback } from 'react';\nimport { ClientItem } from '../../types';\n\nexport type Props = {\n  clients: ClientItem[];\n  onChange: (index: number, value: ClientItem) => void;\n  onAdd: () => void;\n};\n\nexport const useClients = ({ onChange, clients }: Props) => {\n  const onPhoneChange = useCallback(\n    (index: number, value: string) => {\n      onChange(index, {\n        ...clients[index],\n        phone: value,\n      });\n    },\n    [clients]\n  );\n\n  const onNameChange = useCallback(\n    (index: number, value: string) => {\n      onChange(index, {\n        ...clients[index],\n        full_name: value,\n      });\n    },\n    [clients]\n  );\n\n  return { onPhoneChange, onNameChange };\n};\n","/* eslint-disable react/button-has-type */\nimport React from 'react';\nimport './index.scss';\n\ntype Props = {\n  label: string;\n  onClick: () => void;\n};\n\nconst PrimaryButton = ({ label, onClick }: Props) => (\n  <button className=\"primary-button\" onClick={onClick}>\n    {label}\n  </button>\n);\n\nexport default PrimaryButton;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable prettier/prettier */\nimport React, { useState, memo } from 'react';\nimport { FormControlLabel, Switch } from '@material-ui/core';\nimport './index.scss';\n\ntype Props = {\n  label: string\n  onChange: (val: boolean) => void;\n  selected: boolean;\n};\n\nconst CustomSwitch = ({ label, onChange, selected }: Props) => {\n  const [value, setValue] = useState(selected || false);\n\n  const handleChange = (event: any) => {\n    setValue(event.target.checked);\n    onChange(event.target.checked);\n  };\n\n  return (\n    <FormControlLabel\n      control={(\n        <Switch\n          checked={value}\n          onChange={handleChange}\n          name=\"checkedB\"\n          color=\"primary\"\n        />\n      )}\n      label={label}\n      labelPlacement=\"start\"\n      className=\"custom-switch\"\n    />\n  );\n};\n\nexport default memo(CustomSwitch);\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable no-unused-vars */\nimport React, { memo } from 'react';\nimport AddFormButton from '../../../../../../../../components/AddFormButton';\nimport CustomInput from '../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../components/CustomSelect';\nimport CustomSwitch from '../../../../../../../../components/CustomSwitch';\nimport RadioButtonsGroup from '../../../../../../../../components/RadioButtonsGroup';\nimport { ImmovableItem, ImmovableItems } from '../../types';\nimport { useImmovableContainer } from './useImmovableContainer';\n\ntype Props = {\n  onAdd: () => void;\n  immovables: ImmovableItems;\n  onChange: (index: number, value: ImmovableItem) => void;\n};\n\nconst ImmovableContainer = (props: Props) => {\n  const meta = useImmovableContainer(props);\n  return (\n    <div className=\"mv12\">\n      {props.immovables.map((item: ImmovableItem, index: number) => (\n        <>\n          <RadioButtonsGroup\n            buttons={meta.contracts}\n            onChange={(val) => meta.onContractChange(index, val)}\n            selected={item.contract_type_id}\n            unicId={`contract-${index}`}\n          />\n\n          <div className=\"mv12\">\n            <CustomSelect\n              onChange={(val) => meta.onBuildingChange(index, val)}\n              data={meta.building}\n              label=\"Будинок\"\n              selectedValue={item.building_id}\n            />\n          </div>\n\n          <RadioButtonsGroup\n            buttons={meta.immovableTypes}\n            onChange={(val) => meta.onImmovableTypeChange(index, val)}\n            selected={item.imm_type_id}\n            unicId={`types-${index}`}\n          />\n\n          <div className=\"mv12\">\n            <CustomSwitch\n              label=\"Банк\"\n              onChange={(val) => meta.onBankChange(index, val)}\n              selected={item.bank}\n            />\n          </div>\n\n          <div className=\"mv12\">\n            <CustomSwitch\n              label=\"Довіреність\"\n              onChange={(val) => meta.onProxyChange(index, val)}\n              selected={item.proxy}\n            />\n          </div>\n\n          <div className=\"mv12 df-jc-sb\">\n            <CustomInput\n              key=\"test\"\n              label=\"Номер приміщення\"\n              type=\"number\"\n              onChange={(val) => meta.onImmNumChange(index, val)}\n              value={item.imm_num}\n            />\n\n            <div style={{ marginLeft: '12px' }}>\n              <AddFormButton onClick={props.onAdd} />\n            </div>\n          </div>\n        </>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(ImmovableContainer);\n","import { useMemo, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport { State } from '../../../../../../../../store/types';\nimport { ImmovableItem, ImmovableItems } from '../../types';\n\nexport type Props = {\n  immovables: ImmovableItems;\n  onChange: (index: number, value: ImmovableItem) => void;\n  onAdd: () => void;\n};\n\nexport const useImmovableContainer = ({ immovables, onChange }: Props) => {\n  const { options, developersInfo } = useSelector(\n    (state: State) => state.scheduler\n  );\n\n  const building = useMemo(() => developersInfo?.building || [], [\n    developersInfo,\n  ]);\n\n  const contracts = useMemo(() => options?.form_data.contract_type, [options]);\n\n  const immovableTypes = useMemo(() => options?.form_data.immovable_type, [\n    options,\n  ]);\n\n  // onChange functions\n  const onContractChange = useCallback(\n    (index: number, id: number) => {\n      onChange(index, {\n        ...immovables[index],\n        contract_type_id: id,\n      });\n    },\n    [immovables]\n  );\n\n  const onBuildingChange = useCallback(\n    (index: number, id: string) => {\n      onChange(index, {\n        ...immovables[index],\n        building_id: +id,\n      });\n    },\n    [immovables]\n  );\n\n  const onImmovableTypeChange = useCallback(\n    (index: number, id: number) => {\n      onChange(index, {\n        ...immovables[index],\n        imm_type_id: id,\n      });\n    },\n    [immovables]\n  );\n\n  const onBankChange = useCallback(\n    (index: number, val: boolean) => {\n      onChange(index, {\n        ...immovables[index],\n        bank: val,\n      });\n    },\n    [immovables]\n  );\n\n  const onProxyChange = useCallback(\n    (index: number, val: boolean) => {\n      onChange(index, {\n        ...immovables[index],\n        proxy: val,\n      });\n    },\n    [immovables]\n  );\n\n  const onImmNumChange = useCallback(\n    (index: number, val: string) => {\n      onChange(index, {\n        ...immovables[index],\n        imm_num: +val,\n      });\n    },\n    [immovables]\n  );\n\n  return {\n    building,\n    contracts,\n    immovableTypes,\n    onContractChange,\n    onBuildingChange,\n    onImmovableTypeChange,\n    onBankChange,\n    onProxyChange,\n    onImmNumChange,\n  };\n};\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getDeveloperInfo(token: string, id: number) {\n  try {\n    console.log(id);\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/filter/developer/info/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import getDeveloperInfo from '../services/getDeveloperInfo';\nimport { setDevelopersInfo } from '../store/scheduler/actions';\n\nconst fetchDeveloperInfo = async (dispatch: any, token: string, id: number) => {\n  const data = await getDeveloperInfo(token, id);\n  dispatch(setDevelopersInfo(data));\n};\n\nexport default fetchDeveloperInfo;\n","export type SelectItem = {\n  id: number;\n  title: string;\n};\n\nexport type ImmovableItem = {\n  contract_type_id: number | undefined;\n  building_id: number | undefined;\n  imm_type_id: number | undefined;\n  imm_num: number | undefined;\n  bank: boolean;\n  proxy: boolean;\n};\n\nexport type ImmovableItems = ImmovableItem[];\n\nexport type ImmovableItemKey = keyof ImmovableItem;\n\nexport const immovableItem: ImmovableItem = {\n  contract_type_id: undefined,\n  building_id: undefined,\n  imm_type_id: undefined,\n  imm_num: undefined,\n  bank: false,\n  proxy: false,\n};\n\nexport type ClientItem = {\n  phone: string;\n  full_name: string;\n};\n\nexport const clientItem: ClientItem = {\n  phone: '',\n  full_name: '',\n};\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React, { memo } from 'react';\nimport RadioButtonsGroup from '../../../../../../components/RadioButtonsGroup';\nimport CustomSelect from '../../../../../../components/CustomSelect';\nimport './index.scss';\nimport Clients from './components/Clients/Clients';\nimport PrimaryButton from '../../../../../../components/PrimaryButton';\nimport Loader from '../../../../../../components/Loader/Loader';\nimport ImmovableContainer from './components/ImmovableContainer';\nimport { useForm } from './useForm';\n\nconst SchedulerForm = () => {\n  const meta = useForm();\n\n  if (meta.shouldLoad) {\n    return (\n      <div className=\"scheduler__form schedulerForm\">\n        <Loader />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"scheduler__form schedulerForm\">\n      <div className=\"schedulerForm__tabs\" />\n      <div className=\"schedulerForm__forms\">\n        <div className=\"schedulerForm__header\">\n          <p className=\"title\">Новий запис</p>\n          <img\n            src=\"/icons/clear.svg\"\n            alt=\"clear icon\"\n            className=\"clear-icon\"\n            onClick={meta.onClearAll}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <RadioButtonsGroup\n            buttons={meta.notaries}\n            onChange={meta.onNotaryChange}\n            selected={meta.selectedNotaryId}\n            unicId=\"notaries\"\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomSelect\n            label=\"Забудовник\"\n            data={meta.developers}\n            onChange={meta.onDeveloperChange}\n            selectedValue={meta.selectedDeveloperId}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomSelect\n            onChange={meta.onRepresentativeChange}\n            data={meta.representative}\n            label=\"Підписант\"\n            selectedValue={meta.selectedDevRepresentativeId}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomSelect\n            onChange={meta.onManagerChange}\n            data={meta.manager}\n            label=\"Менеджер\"\n            selectedValue={meta.selecedDevManagerId}\n          />\n        </div>\n\n        <ImmovableContainer\n          immovables={meta.immovables}\n          onChange={meta.onImmovablesChange}\n          onAdd={meta.onAddImmovables}\n        />\n\n        <Clients\n          clients={meta.clients}\n          onChange={meta.onClientsChange}\n          onAdd={meta.onAddClients}\n        />\n\n        <div className=\"mv12\">\n          <PrimaryButton\n            label=\"Створити\"\n            onClick={() => console.log('click')}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SchedulerForm);\n","/* eslint-disable prettier/prettier */\n/* eslint-disable arrow-body-style */\nimport { useMemo, useState, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { State } from '../../../../../../store/types';\nimport fetchDeveloperInfo from '../../../../../../actions/fetchDeveloperInfo';\nimport { setDevelopersInfo } from '../../../../../../store/scheduler/actions';\nimport {\n  ClientItem, clientItem, immovableItem, ImmovableItems\n} from './types';\n\nexport const useForm = () => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.token);\n  const { options, developersInfo, isLoading } = useSelector(\n    (state: State) => state.scheduler\n  );\n\n  // Form State\n  const [notary, setNotary] = useState<number>();\n  const [devCompanyId, setDevCompanyId] = useState();\n  const [devRepresentativeId, setDevRepresentativeId] = useState();\n  const [devManagerId, setDevManagerId] = useState();\n  const [immovables, setImmovables] = useState<ImmovableItems>([immovableItem]);\n  const [clients, setClients] = useState<ClientItem[]>([clientItem]);\n\n  // Form Memo Values\n  const shouldLoad = useMemo(() => isLoading || !options, [options, isLoading]);\n\n  const notaries = useMemo(() => options?.form_data.notary, [options]);\n\n  const developers = useMemo(() => options?.form_data.developer, [options]);\n\n  const manager = useMemo(() => developersInfo?.manager || [], [\n    developersInfo,\n  ]);\n\n  const representative = useMemo(() => developersInfo?.representative || [], [\n    developersInfo,\n  ]);\n\n  // Form onChange functions\n  const onNotaryChange = useCallback((value) => {\n    setNotary(value);\n  }, []);\n\n  const onDeveloperChange = useCallback(\n    (value) => {\n      setDevCompanyId(value);\n\n      if (!value) {\n        dispatch(setDevelopersInfo({}));\n      }\n\n      if (token) {\n        fetchDeveloperInfo(dispatch, token, value);\n      }\n    },\n    [token, devCompanyId]\n  );\n\n  const onRepresentativeChange = useCallback(\n    (value) => {\n      setDevRepresentativeId(value);\n    },\n    [devRepresentativeId]\n  );\n\n  const onManagerChange = useCallback(\n    (value) => {\n      setDevManagerId(value);\n    },\n    [devManagerId]\n  );\n\n  const onImmovablesChange = useCallback(\n    (index: number, value: any) => {\n      immovables[index] = value;\n      setImmovables([...immovables]);\n    },\n    [immovables]\n  );\n\n  const onClientsChange = useCallback(\n    (index: number, value: ClientItem) => {\n      clients[index] = value;\n      setClients([...clients]);\n    },\n    [clients]\n  );\n\n  const onClearAll = useCallback(() => {\n    setNotary(undefined);\n    setDevCompanyId(undefined);\n    setDevRepresentativeId(undefined);\n    setDevManagerId(undefined);\n    setImmovables([immovableItem]);\n  }, []);\n\n  const onAddImmovables = useCallback(() => {\n    setImmovables([...immovables, immovableItem]);\n  }, [immovables]);\n\n  const onAddClients = useCallback(() => {\n    setClients([...clients, clientItem]);\n  }, [clients]);\n\n  console.log({\n    notary_id: notary,\n    dev_company_id: devCompanyId,\n    dev_representative_id: devRepresentativeId,\n    dev_manager_id: devManagerId,\n    immovables,\n    clients\n  });\n\n  return {\n    shouldLoad,\n    notaries,\n    representative,\n    developers,\n    manager,\n    selectedNotaryId: notary,\n    selectedDeveloperId: devCompanyId,\n    selectedDevRepresentativeId: devRepresentativeId,\n    selecedDevManagerId: devManagerId,\n    immovables,\n    clients,\n    onNotaryChange,\n    onDeveloperChange,\n    onRepresentativeChange,\n    onManagerChange,\n    onImmovablesChange,\n    onAddImmovables,\n    onClientsChange,\n    onAddClients,\n    onClearAll,\n  };\n};\n","import React from 'react';\nimport './index.scss';\n\n// Components\nimport SchedulerTable from './components/Table/SchedulerTable';\nimport SchedulerFilter from './components/Filter';\nimport SchedulerForm from './components/Form';\n\nconst SchedulerContainer = () => (\n  <div className=\"scheduler__container\">\n    <div className=\"scheduler__dataView\">\n      <SchedulerFilter />\n      <SchedulerTable />\n    </div>\n    <SchedulerForm />\n  </div>\n);\n\nexport default SchedulerContainer;\n","import React from 'react';\nimport SchedulerContainer from './components/SchedulerContainer';\n\nconst SchedulerScreen = () => <SchedulerContainer />;\n\nexport default SchedulerScreen;\n","import React from 'react';\nimport './index.scss';\nimport { useApp } from './useApp';\nimport SchedulerScreen from '../Screens/SchedulerScreen';\n\nconst App: React.FC = () => {\n  useApp();\n\n  return <SchedulerScreen />;\n};\n\nexport default App;\n","/* eslint-disable import/prefer-default-export */\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport fetchTag from '../actions/fetchTag';\n\nexport const useApp = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    fetchTag(dispatch);\n  }, []);\n};\n","import { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\nexport type TokenState = {\n  token: null | string;\n};\n\nconst initialState: TokenState = {\n  token: null,\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_TOKEN:\n      return { ...state, token: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\nexport type SchedulerState = {\n  options: any;\n  appointments: any;\n  developersInfo: any;\n  isLoading: boolean;\n};\n\nconst initialState: SchedulerState = {\n  options: null,\n  appointments: [],\n  developersInfo: {},\n  isLoading: false,\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_OPTIONS:\n      return { ...state, options: action.payload };\n    case ACTIONS.SET_APPOINTMENTS:\n      return { ...state, appointments: action.payload };\n    case ACTIONS.SET_DEVELOPERS_INFO:\n      return { ...state, developersInfo: action.payload };\n    case ACTIONS.SET_IS_LOADING:\n      return { ...state, isLoading: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers, createStore } from 'redux';\nimport token from './token/store';\nimport scheduler from './scheduler/store';\n\nconst reducer = combineReducers({\n  token,\n  scheduler,\n});\n\nexport default createStore(reducer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  // eslint-disable-next-line\n  document.getElementById('root')\n);\n"],"sourceRoot":""}