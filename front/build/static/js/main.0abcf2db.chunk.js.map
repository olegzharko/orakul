{"version":3,"sources":["App/App.tsx","App/useApp.ts","store/main/store.ts","store/scheduler/store.ts","store/appointments/store.ts","store/filter/store.ts","store/registrator/store.ts","store/clients/store.ts","store/immovables/store.ts","store/index.ts","index.tsx","services/login/Login.ts","services/login/forgotPassword.ts","store/main/actions.ts","services/getAppointments.ts","services/setSchedulerFilter.ts","services/searchAppointments.ts","services/generator/getCardsByContractType.ts","store/appointments/actions.ts","types.ts","services/createNewCard.ts","services/editCalendarCard.ts","services/getCalendarCard.ts","services/getCalendar.ts","services/moveCalendarCard.ts","services/deleteCalendarCard.ts","store/scheduler/actions.ts","components/Loader/Loader.tsx","services/registrator/getDevelopers.ts","services/registrator/getImmovables.ts","services/registrator/putDeveloper.ts","services/registrator/putImmovable.ts","store/registrator/actions.ts","services/generator/Client/getClients.ts","store/clients/actions.ts","services/getImmovables.ts","store/immovables/actions.ts","services/getDeveloperInfo.ts","services/Constants.ts","services/getFilterData.ts","store/filter/actions.ts","services/login/resetPassword.ts","services/utils/requestApi.ts"],"names":["RegistratorScreen","React","lazy","Dashboard","Scheduler","Login","App","type","dispatch","useDispatch","user","useSelector","state","main","useEffect","localUser","localStorage","getItem","setUser","JSON","parse","useApp","UserTypes","RECEPTION","fallback","Loader","REGISTRATOR","GENERATOR","ASSISTANT","MANAGER","initialState","token","id","extra_type","modalInfo","open","success","message","reducer","action","ACTIONS","SET_USER","payload","SET_MODAL_INFO","SET_USER_TYPE","options","developersInfo","newSelectedAppointment","oldSelectedAppointment","editAppointmentData","isLoading","schedulerLock","SET_OPTIONS","SET_DEVELOPERS_INFO","SET_IS_LOADING","SET_SELECTED_NEW_APPOINTMENT","SET_SELECTED_OLD_APPOINTMENT","SET_EDIT_APPOINTMENT_DATA","SET_SCHEDULER_LOCK","appointments","SET_LOADING","SET_APPOINTMENTS","ADD_NEW_APPOINTMENT","DELETE_APPOINTMENT","filter","item","i","EDIT_APPOINTMENTS","filterInitialData","SET_FILTER_INITIAL_DATA","developers","immovables","SET_DEVELOPERS","SET_IMMOVABLES","clients","idLoading","SET_CLIENTS","combineReducers","scheduler","registrator","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","store","document","getElementById","login","bodyData","a","requestApi","url","DEFAULT_URL","method","data","console","log","forgotPassword","SET_TOKEN","setModalInfoAction","setUserTypeAction","getState","setItem","stringify","setModalInfo","setTimeout","sendLogin","remember","email","forgotPasswordService","getAppointments","headers","Authorization","setSchedulerFilter","searchAppointments","getCardsByContractType","setIsLoading","setAppointments","addNewAppointment","setEditAppointments","deleteAppointment","clearAppointments","fetchAppointments","res","Object","values","fetchAppointmentsByFilter","user_type","fetchAppointmentsByContracts","text","Error","searchAppointmentsServices","createNewCard","editCalendarCard","getCalendarCard","getCalendar","moveCalendarCard","deleteCalendarCard","setDevelopersInfo","setSelectedNewAppointment","setSelectedOldAppointment","setEditAppointmentData","setSchedulerLock","editCalendarCardService","fetchCalendarCard","removeCalendarCard","fetchDeveloperInfo","notDispatch","getDeveloperInfo","fetchSchedulerSettings","moveCalendarCardService","createNewCardService","color","getDevelopers","getImmovables","putDeveloper","putImmovable","fetchDevelopers","fetchImmovables","editDeveloperStatus","editImmovableStatus","getClients","userType","setClients","fetchClients","setImmovables","getFilterData","fetchFilterData","resetPassword","params","body","undefined","Accept","fetch","json"],"mappings":"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","file":"static/js/main.0abcf2db.chunk.js","sourcesContent":["import React, { Suspense } from 'react';\nimport './index.scss';\nimport { useApp } from './useApp';\nimport { UserTypes } from '../types';\nimport Loader from '../components/Loader/Loader';\n\n// Lazy\nconst RegistratorScreen = React.lazy(() => import('../Screens/RegistratorScreen'));\nconst Dashboard = React.lazy(() => import('../Screens/DashboardScreen'));\nconst Scheduler = React.lazy(() => import('../Screens/SchedulerScreen'));\nconst Login = React.lazy(() => import('../Screens/LoginScreen'));\n\nconst App: React.FC = () => {\n  const { type } = useApp();\n\n  if (!type) {\n    return (\n      <Suspense fallback={<Loader />}>\n        <Login />\n      </Suspense>\n    );\n  }\n\n  if (type === UserTypes.RECEPTION) {\n    return (\n      <Suspense fallback={<Loader />}>\n        <Scheduler />\n      </Suspense>\n    );\n  }\n\n  if (type === UserTypes.REGISTRATOR) {\n    return (\n      <Suspense fallback={<Loader />}>\n        <RegistratorScreen />\n      </Suspense>\n    );\n  }\n\n  if (type === UserTypes.GENERATOR\n    || type === UserTypes.ASSISTANT\n    || type === UserTypes.MANAGER\n  ) {\n    return (\n      <Suspense fallback={<Loader />}>\n        <Dashboard />\n      </Suspense>\n    );\n  }\n\n  return <h1>You have not access</h1>;\n};\n\nexport default App;\n","import { useSelector, useDispatch } from 'react-redux';\n/* eslint-disable import/prefer-default-export */\nimport { useEffect } from 'react';\nimport { setUser } from '../store/main/actions';\nimport { State } from '../store/types';\n\nexport const useApp = () => {\n  const dispatch = useDispatch();\n  const { user } = useSelector((state: State) => state.main);\n\n  useEffect(() => {\n    const localUser = localStorage.getItem('user');\n\n    if (localUser) {\n      dispatch(setUser(JSON.parse(localUser)));\n    }\n  }, []);\n\n  return { type: user.type };\n};\n","import { UserTypes } from '../../types';\nimport { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\ntype ExtraType = {\n  title: string;\n  type: UserTypes;\n}\n\nexport type User = {\n  type: UserTypes | null;\n  token: null | string;\n  id: number | null;\n  extra_type: ExtraType[];\n};\n\nexport type ModalInfo = {\n  open: boolean;\n  success: boolean;\n  message: string;\n};\n\nexport type MainState = {\n  user: User;\n  modalInfo: ModalInfo;\n};\n\nconst initialState: MainState = {\n  user: {\n    type: null,\n    token: null,\n    id: null,\n    extra_type: [],\n  },\n  modalInfo: {\n    open: false,\n    success: false,\n    message: '',\n  },\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_USER:\n      return { ...state, user: { ...state.user, ...action.payload } };\n    case ACTIONS.SET_MODAL_INFO:\n      return { ...state, modalInfo: action.payload };\n    case ACTIONS.SET_USER_TYPE:\n      return { ...state, user: { ...state.user, type: action.payload } };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\nexport type SchedulerState = {\n  options: any;\n  developersInfo: any;\n  newSelectedAppointment: any;\n  oldSelectedAppointment: any;\n  editAppointmentData: any;\n  isLoading: boolean;\n  schedulerLock: boolean;\n};\n\nconst initialState: SchedulerState = {\n  options: null,\n  developersInfo: {},\n  newSelectedAppointment: null,\n  oldSelectedAppointment: null,\n  editAppointmentData: null,\n  isLoading: false,\n  schedulerLock: true,\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_OPTIONS:\n      return { ...state, options: action.payload };\n    case ACTIONS.SET_DEVELOPERS_INFO:\n      return { ...state, developersInfo: action.payload };\n    case ACTIONS.SET_IS_LOADING:\n      return { ...state, isLoading: action.payload };\n    case ACTIONS.SET_SELECTED_NEW_APPOINTMENT:\n      return { ...state, newSelectedAppointment: action.payload };\n    case ACTIONS.SET_SELECTED_OLD_APPOINTMENT:\n      return { ...state, oldSelectedAppointment: action.payload };\n    case ACTIONS.SET_EDIT_APPOINTMENT_DATA:\n      return { ...state, editAppointmentData: action.payload };\n    case ACTIONS.SET_SCHEDULER_LOCK:\n      return { ...state, schedulerLock: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\nexport type AppointmentsState = {\n  appointments: [];\n  isLoading: false;\n};\n\nconst initialState: AppointmentsState = {\n  appointments: [],\n  isLoading: false,\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_LOADING:\n      return { ...state, isLoading: action.payload };\n    case ACTIONS.SET_APPOINTMENTS:\n      return { ...state, appointments: action.payload };\n    case ACTIONS.ADD_NEW_APPOINTMENT:\n      return {\n        ...state,\n        appointments: [...state.appointments, action.payload],\n      };\n    case ACTIONS.DELETE_APPOINTMENT:\n      return {\n        ...state,\n        appointments: [\n          ...state.appointments.filter((item: any) => item.i !== action.payload)\n        ],\n      };\n    case ACTIONS.EDIT_APPOINTMENTS:\n      return {\n        ...state,\n        appointments: [\n          ...state.appointments.filter(\n            (item: any) => item.i !== action.payload.i\n          ),\n          action.payload,\n        ],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\nexport type FilterState = {\n  filterInitialData: any;\n};\n\nconst initialState: FilterState = {\n  filterInitialData: null,\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_FILTER_INITIAL_DATA:\n      return { ...state, filterInitialData: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\nexport type Developer = {\n  id: number;\n  title: string;\n  full_name: string;\n  tax_code: string;\n  date: string;\n  number: number;\n  pass: boolean;\n  prev: number;\n  next: number;\n  color?: string;\n}\n\nexport type Immovable = {\n  id: number;\n  title: string;\n  immovable_code: string;\n  date: string;\n  number: number;\n  pass: boolean;\n  prev: number;\n  next: number;\n}\n\nexport type DeveloperState = {\n  date_info: string;\n  developers: Developer[]\n}\n\nexport type ImmovableState = {\n  date_info: string;\n  immovables: Immovable[];\n}\n\nexport type RegistratorState = {\n  isLoading: boolean,\n  developers: DeveloperState | null,\n  immovables: ImmovableState | null,\n};\n\nconst initialState: RegistratorState = {\n  isLoading: false,\n  developers: null,\n  immovables: null,\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_LOADING:\n      return { ...state, isLoading: action.payload };\n    case ACTIONS.SET_DEVELOPERS:\n      return { ...state, developers: action.payload };\n    case ACTIONS.SET_IMMOVABLES:\n      return { ...state, immovables: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\n// type ClientCardInfo = {\n//   full_name: string;\n//   id: number;\n//   list: string[];\n// }\n\n// export type GenerateClient = {\n//   client: null | ClientCardInfo,\n//   representative: null | ClientCardInfo,\n//   spouse: null | ClientCardInfo,\n// }\n\nexport type ClientsState = {\n  clients: any[];\n  isLoading: false;\n};\n\nconst initialState: ClientsState = {\n  clients: [],\n  isLoading: false,\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_LOADING:\n      return { ...state, idLoading: action.payload };\n    case ACTIONS.SET_CLIENTS:\n      return { ...state, clients: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\ntype ImmovableCardsType = {\n  id: number,\n  title: string,\n  list: string[],\n}\n\nexport type ImmovablesState = {\n  immovables: ImmovableCardsType[];\n  isLoading: false;\n};\n\nconst initialState: ImmovablesState = {\n  immovables: [],\n  isLoading: false,\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_LOADING:\n      return { ...state, idLoading: action.payload };\n    case ACTIONS.SET_IMMOVABLES:\n      return { ...state, immovables: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport main from './main/store';\nimport scheduler from './scheduler/store';\nimport appointments from './appointments/store';\nimport filter from './filter/store';\nimport registrator from './registrator/store';\nimport clients from './clients/store';\nimport immovables from './immovables/store';\n\nconst reducer = combineReducers({\n  main,\n  scheduler,\n  appointments,\n  filter,\n  registrator,\n  clients,\n  immovables,\n});\n\nexport default createStore(reducer, applyMiddleware(thunk));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\ntype BodyData = {\n  email: string;\n  password: string;\n};\n\nexport default async function login(bodyData: BodyData) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/login`,\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\ntype BodyData = {\n  email: string;\n};\n\nexport default async function forgotPassword(bodyData: BodyData) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/password/forgot`,\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { Dispatch } from 'redux';\nimport login from '../../services/login/Login';\nimport forgotPasswordService from '../../services/login/forgotPassword';\nimport resetPasswordService, {\n  ResetPasswordType,\n} from '../../services/login/resetPassword';\nimport { UserTypes } from '../../types';\nimport { State } from '../types';\n\nexport const ACTIONS = {\n  SET_TOKEN: 'SET_TOKEN',\n  SET_USER: 'SET_USER',\n  SET_USER_TYPE: 'SET_USER_TYPE',\n  SET_LOADING: 'SET_LOADING',\n  SET_MODAL_INFO: 'SET_MODAL_INFO',\n};\n\nexport const setToken = (payload: string) => ({\n  type: ACTIONS.SET_TOKEN,\n  payload,\n});\n\nexport const setLogin = (payload: string) => ({\n  type: ACTIONS.SET_TOKEN,\n  payload,\n});\n\nexport const setUser = (payload: any) => ({\n  type: ACTIONS.SET_USER,\n  payload,\n});\n\nexport const setUserType = (payload: UserTypes) => ({\n  type: ACTIONS.SET_USER_TYPE,\n  payload,\n});\n\nconst setModalInfoAction = (payload: any) => ({\n  type: ACTIONS.SET_MODAL_INFO,\n  payload,\n});\n\n// Thunk actions\nexport const setUserTypeAction = (type: UserTypes) => (\n  dispatch: Dispatch<any>,\n  getState: () => State,\n) => {\n  dispatch(setUserType(type));\n  localStorage.setItem('user', JSON.stringify({ ...getState().main.user, type }));\n};\n\nexport const setModalInfo = (payload: any) => (dispatch: Dispatch<any>) => {\n  dispatch(setModalInfoAction(payload));\n  setTimeout(() => {\n    dispatch(setModalInfoAction({\n      ...payload,\n      open: false,\n    }));\n  }, 2000);\n};\n\nexport const sendLogin = (\n  bodyData: {\n    email: string;\n    password: string;\n  },\n  remember: boolean\n) => async (dispatch: Dispatch<any>) => {\n  const { success, message, data } = await login(bodyData);\n\n  if (success) {\n    dispatch(setToken(data.token));\n    dispatch(setUser(data));\n  } else {\n    dispatch(\n      setModalInfo({\n        success,\n        message,\n        open: true,\n      })\n    );\n  }\n\n  if (remember) localStorage.setItem('user', JSON.stringify(data));\n};\n\nexport const forgotPassword = ({ email }: { email: string }) => async (\n  dispatch: Dispatch<any>\n) => {\n  const { success, message } = await forgotPasswordService({ email });\n\n  if (success) {\n    dispatch(setModalInfo({ success, message, open: true }));\n  }\n};\n\nexport const resetPassword = (data: ResetPasswordType) => async (\n  dispatch: Dispatch<any>\n) => {\n  const { success, message } = await resetPasswordService(data);\n\n  if (success) dispatch(setModalInfo({ success, message, open: true }));\n};\n","import { UserTypes } from '../types';\nimport { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getAppointments(token: string, type: UserTypes) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards/${type}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { FilterData } from '../store/types';\nimport { UserTypes } from '../types';\nimport { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function setSchedulerFilter(\n  token: string,\n  bodyData: FilterData & {user_type: UserTypes}\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/filter/sort`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { UserTypes } from '../types';\nimport { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function searchAppointments(\n  token: string,\n  bodyData: {\n    text: string;\n    type: UserTypes;\n  }\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/filter/search`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\nexport default async function getCardsByContractType(token: string, url: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/${url}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { Dispatch } from 'redux';\nimport { FilterData, State } from '../types';\nimport getAppointments from '../../services/getAppointments';\nimport setSchedulerFilter from '../../services/setSchedulerFilter';\nimport searchAppointmentsServices from '../../services/searchAppointments';\nimport getCardsByContractType from '../../services/generator/getCardsByContractType';\n\nexport const ACTIONS = {\n  SET_LOADING: 'SET_LOADING',\n  SET_APPOINTMENTS: 'SET_APPOINTMENTS',\n  ADD_NEW_APPOINTMENT: 'ADD_NEW_APPOINTMENT',\n  EDIT_APPOINTMENTS: 'EDIT_APPOINTMENTS',\n  DELETE_APPOINTMENT: 'DELETE_APPOINTMENT',\n};\n\nexport const setIsLoading = (payload: boolean) => ({\n  type: ACTIONS.SET_LOADING,\n  payload,\n});\n\nexport const setAppointments = (payload: any) => ({\n  type: ACTIONS.SET_APPOINTMENTS,\n  payload,\n});\n\nexport const addNewAppointment = (payload: any) => ({\n  type: ACTIONS.ADD_NEW_APPOINTMENT,\n  payload,\n});\n\nexport const setEditAppointments = (payload: any) => ({\n  type: ACTIONS.EDIT_APPOINTMENTS,\n  payload,\n});\n\nexport const deleteAppointment = (id: string) => ({\n  type: ACTIONS.DELETE_APPOINTMENT,\n  payload: id,\n});\n\nexport const clearAppointments = () => async (\n  dispatch: Dispatch<any>,\n) => {\n  dispatch(setIsLoading(true));\n  dispatch(setAppointments([]));\n};\n\nexport const fetchAppointments = () => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token, type, id } = getState().main.user;\n\n  if (token && type && id) {\n    dispatch(setIsLoading(true));\n    const res = await getAppointments(token, type);\n\n    if (res?.success) {\n      const { data } = res;\n      dispatch(setAppointments(Object.values(data)));\n    }\n\n    dispatch(setIsLoading(false));\n  }\n};\n\nexport const fetchAppointmentsByFilter = (bodyData: FilterData) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token, type } = getState().main.user;\n\n  if (token && type) {\n    const res = await setSchedulerFilter(token, { ...bodyData, user_type: type });\n\n    if (res?.success) {\n      const { data } = res;\n      dispatch(setAppointments(Object.values(data)));\n    }\n  }\n};\n\nexport const fetchAppointmentsByContracts = (url: string) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const res = await getCardsByContractType(token, url);\n\n    if (res?.success) {\n      const { data } = res;\n      dispatch(setAppointments(Object.values(res.data)));\n    }\n  }\n};\n\nexport const searchAppointments = (text: string) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token, type } = getState().main.user;\n\n  if (!token || !type) {\n    throw new Error(`missed token or type in searchAppointments. Token: ${token}, Type: ${type}`);\n  }\n\n  if (token && type) {\n    const res = await searchAppointmentsServices(token, { text, type });\n\n    if (res?.success) {\n      const { data } = res;\n      dispatch(setAppointments(Object.values(data)));\n    }\n  }\n};\n","export type ImmovableItem = {\n  contract_type_id: number | null;\n  building_id: number | null;\n  imm_type_id: number | null;\n  imm_number: string | null;\n  bank: boolean;\n  proxy: boolean;\n};\n\nexport type ImmovableItems = ImmovableItem[];\n\nexport type SelectItem = {\n  id: number;\n  title: string;\n};\n\nexport type ClientItem = {\n  phone: string | null;\n  full_name: string | null;\n};\n\nexport type NewCard = {\n  immovables: ImmovableItems;\n  clients: ClientItem[];\n  date_time: string;\n  dev_company_id: number | null;\n  dev_representative_id: number | null;\n  dev_manager_id: number | null;\n  room_id: number;\n  notary_id: number | null;\n};\n\n// eslint-disable-next-line no-shadow\nexport enum UserTypes {\n  GENERATOR = 'generator',\n  RECEPTION = 'reception',\n  MANAGER = 'manager',\n  ASSISTANT = 'assistant',\n  REGISTRATOR = 'registrator',\n}\n\nexport type ManagerAppointmentCard = {\n  id: number;\n  color: string;\n  instructions: string[];\n  short_info: {\n    dev_representative_id: string;\n    notary: string;\n    notary_assistant_giver: string;\n    notary_assistant_reader: string;\n  };\n  title: string;\n};\n\nexport type ManagerAppointment = {\n  day: string;\n  date: string;\n  cards: ManagerAppointmentCard[];\n};\n\nexport type ManagerAppointments = ManagerAppointment[];\n","import { NewCard } from '../types';\nimport { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function createNewCard(token: string, bodyData: NewCard) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { NewCard } from '../types';\nimport { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function editCalendarCard(\n  token: string,\n  bodyData: NewCard,\n  id: number\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'PUT',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getCalendarCard(token: string, id: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data.data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getCalendar(token: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/calendar`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data.data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { NewCard } from '../types';\nimport { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function moveCalendarCard(\n  token: string,\n  bodyData: {\n    date_time: string;\n    room_id: number;\n  },\n  id: number\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards/move/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'PUT',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function deleteCalendarCard(token: string, id: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'DELETE',\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { Dispatch } from 'react';\nimport { NewCard } from '../../types';\nimport { State } from '../types';\nimport createNewCardService from '../../services/createNewCard';\nimport editCalendarCardService from '../../services/editCalendarCard';\nimport getCalendarCard from '../../services/getCalendarCard';\nimport getDeveloperInfo from '../../services/getDeveloperInfo';\nimport getCalendar from '../../services/getCalendar';\nimport moveCalendarCardService from '../../services/moveCalendarCard';\nimport { setModalInfo } from '../main/actions';\nimport { addNewAppointment, deleteAppointment, setEditAppointments } from '../appointments/actions';\nimport deleteCalendarCard from '../../services/deleteCalendarCard';\n\nexport const ACTIONS = {\n  SET_OPTIONS: 'SET_OPTIONS',\n  SET_DEVELOPERS_INFO: 'SET_DEVELOPERS_INFO',\n  SET_SELECTED_NEW_APPOINTMENT: 'SET_SELECTED_NEW_APPOINTMENT',\n  SET_SELECTED_OLD_APPOINTMENT: 'SET_SELECTED_OLD_APPOINTMENT',\n  SET_EDIT_APPOINTMENT_DATA: 'SET_EDIT_APPOINTMENT_DATA',\n  SET_IS_LOADING: 'SET_IS_LOADING',\n  SET_SCHEDULER_LOCK: 'SET_SCHEDULER_LOCK',\n};\n\nexport const setSchedulerOptions = (payload: any) => ({\n  type: ACTIONS.SET_OPTIONS,\n  payload,\n});\n\nexport const setDevelopersInfo = (payload: any) => ({\n  type: ACTIONS.SET_DEVELOPERS_INFO,\n  payload,\n});\n\nexport const setSelectedNewAppointment = (payload: any) => ({\n  type: ACTIONS.SET_SELECTED_NEW_APPOINTMENT,\n  payload,\n});\n\nexport const setSelectedOldAppointment = (payload: any) => ({\n  type: ACTIONS.SET_SELECTED_OLD_APPOINTMENT,\n  payload,\n});\n\nexport const setEditAppointmentData = (payload: any) => ({\n  type: ACTIONS.SET_EDIT_APPOINTMENT_DATA,\n  payload,\n});\n\nexport const setSchedulerLock = (payload: boolean) => ({\n  type: ACTIONS.SET_SCHEDULER_LOCK,\n  payload,\n});\n\nexport const setIsLoading = (payload: boolean) => ({\n  type: ACTIONS.SET_IS_LOADING,\n  payload,\n});\n\n// Thunk actions\nexport const editCalendarCard = (bodyData: NewCard, id: number) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const { success, message, data } = await editCalendarCardService(\n      token,\n      bodyData,\n      id\n    );\n\n    dispatch(\n      setModalInfo({\n        open: true,\n        success,\n        message,\n      })\n    );\n\n    if (success) {\n      dispatch(setEditAppointments(data));\n    }\n  }\n};\n\nexport const fetchCalendarCard = (id: string) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const data = await getCalendarCard(token, id);\n    dispatch(setEditAppointmentData(data));\n  }\n};\n\nexport const removeCalendarCard = (id: string) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const { data, success, message } = await deleteCalendarCard(token, id);\n\n    dispatch(\n      setModalInfo({\n        open: true,\n        success,\n        message,\n      })\n    );\n\n    if (success) {\n      dispatch(setSelectedOldAppointment(null));\n      dispatch(setEditAppointmentData(null));\n      dispatch(deleteAppointment(id));\n    }\n  }\n};\n\nexport const fetchDeveloperInfo = (\n  id: number,\n  notDispatch: boolean = false\n) => async (dispatch: Dispatch<any>, getState: () => State) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const data = await getDeveloperInfo(token, id);\n\n    if (!notDispatch) {\n      dispatch(setDevelopersInfo(data));\n    }\n  }\n};\n\nexport const fetchSchedulerSettings = () => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    dispatch(setIsLoading(true));\n    const data = await getCalendar(token);\n    dispatch(setSchedulerOptions(data));\n    dispatch(setIsLoading(false));\n  }\n};\n\nexport const moveCalendarCard = (\n  bodyData: {\n    date_time: string;\n    room_id: number;\n  },\n  id: number\n) => async (dispatch: Dispatch<any>, getState: () => State) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const { success, data } = await moveCalendarCardService(\n      token,\n      bodyData,\n      id\n    );\n\n    if (success) {\n      dispatch(setEditAppointments(data));\n    }\n  }\n};\n\nexport const createNewCard = (data: NewCard) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const res = await createNewCardService(token, data);\n\n    dispatch(\n      setModalInfo({\n        open: true,\n        success: res.success,\n        message: res.message,\n      })\n    );\n\n    if (res.success) {\n      dispatch(addNewAppointment(res.data));\n    }\n  }\n};\n","import React from 'react';\nimport { LoopCircleLoading } from 'react-loadingg';\n\nconst Loader = () => <LoopCircleLoading color=\"#165153\" />;\n\nexport default Loader;\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\nexport default async function getDevelopers(token: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/registrator/developers`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\nexport default async function getImmovables(token: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/registrator/immovables`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\nexport type EditDeveloperProps = {\n  date: string | null,\n  number: string,\n  pass: boolean,\n}\n\nexport default async function putDeveloper(\n  token: string, id: string, bodyData: EditDeveloperProps\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/registrator/developer/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'PUT',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\nexport type EditImmovableProps = {\n  date: string | null,\n  number: string,\n  pass: boolean,\n}\n\nexport default async function putImmovable(\n  token: string, id: string, bodyData: EditImmovableProps\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/registrator/immovable/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'PUT',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { Dispatch } from 'redux';\nimport getDevelopers from '../../services/registrator/getDevelopers';\nimport getImmovables from '../../services/registrator/getImmovables';\nimport putDeveloper, { EditDeveloperProps } from '../../services/registrator/putDeveloper';\nimport putImmovable from '../../services/registrator/putImmovable';\nimport { setModalInfo } from '../main/actions';\nimport { State } from '../types';\nimport { Developer, Immovable } from './store';\n\nexport const ACTIONS = {\n  SET_LOADING: 'SET_LOADING',\n  SET_DEVELOPERS: 'SET_DEVELOPERS',\n  SET_IMMOVABLES: 'SET_IMMOVABLES',\n};\n\nconst setIsLoading = (payload: boolean) => ({\n  type: ACTIONS.SET_LOADING,\n  payload,\n});\n\nconst setDevelopers = (payload: Developer) => ({ type: ACTIONS.SET_DEVELOPERS, payload });\nconst setImmovables = (payload: Immovable) => ({ type: ACTIONS.SET_IMMOVABLES, payload });\n\nexport const fetchDevelopers = () => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  dispatch(setIsLoading(true));\n  const { token } = getState().main.user;\n\n  if (token) {\n    const { success, data } = await getDevelopers(token);\n\n    if (success) {\n      dispatch(setDevelopers(data));\n    }\n  }\n  dispatch(setIsLoading(false));\n};\n\nexport const fetchImmovables = () => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  dispatch(setIsLoading(true));\n  const { token } = getState().main.user;\n\n  if (token) {\n    const { success, data } = await getImmovables(token);\n\n    if (success) {\n      dispatch(setImmovables(data));\n    }\n  }\n  dispatch(setIsLoading(false));\n};\n\nexport const editDeveloperStatus = (id: string, bodyData: EditDeveloperProps) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const { success, message } = await putDeveloper(token, id, bodyData);\n\n    dispatch(\n      setModalInfo({\n        open: true,\n        success,\n        message,\n      })\n    );\n  }\n};\n\nexport const editImmovableStatus = (id: string, bodyData: EditDeveloperProps) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const { success, message } = await putImmovable(token, id, bodyData);\n\n    dispatch(\n      setModalInfo({\n        open: true,\n        success,\n        message,\n      })\n    );\n  }\n};\n","import { UserTypes } from '../../../types';\nimport { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function getClients(token: string, id: string, userType: UserTypes) {\n  try {\n    const url = userType === UserTypes.MANAGER ? `/api/manager/clients/${id}` : `/api/generator/client/main/${id}`;\n    const data = await requestApi({\n      url: `${DEFAULT_URL}${url}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { Dispatch } from 'redux';\nimport { UserTypes } from '../../types';\nimport getClients from '../../services/generator/Client/getClients';\nimport { State } from '../types';\n\nexport const ACTIONS = {\n  SET_CLIENTS: 'SET_CLIENTS',\n  SET_LOADING: 'SET_LOADING',\n};\n\nexport const setClients = (payload: any) => ({ type: ACTIONS.SET_CLIENTS, payload });\nexport const setIsLoading = (payload: boolean) => ({ type: ACTIONS.SET_LOADING, payload });\n\n// Thunk actions\nexport const fetchClients = (id: string, userType: UserTypes) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    dispatch(setIsLoading(true));\n    const { success, data } = await getClients(token, id, userType);\n\n    if (success) {\n      dispatch(setClients(data));\n    }\n    dispatch(setIsLoading(false));\n  }\n};\n","import { UserTypes } from '../types';\nimport { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getImmovables(token: string, id: string, userType: UserTypes) {\n  try {\n    const url = userType === UserTypes.MANAGER ? `/api/manager/immovables/${id}` : `/api/generator/immovable/main/${id}`;\n    const data = await requestApi({\n      url: `${DEFAULT_URL}${url}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { Dispatch } from 'redux';\nimport { UserTypes } from '../../types';\nimport getImmovables from '../../services/getImmovables';\nimport { State } from '../types';\n\nexport const ACTIONS = {\n  SET_IMMOVABLES: 'SET_IMMOVABLES',\n  SET_LOADING: 'SET_LOADING',\n};\n\nexport const setImmovables = (payload: any) => ({ type: ACTIONS.SET_IMMOVABLES, payload });\nexport const setIsLoading = (payload: boolean) => ({ type: ACTIONS.SET_LOADING, payload });\n\n// Thunk actions\nexport const fetchImmovables = (id: string, userType: UserTypes) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    dispatch(setIsLoading(true));\n    const { success, data } = await getImmovables(token, id, userType);\n\n    if (success) {\n      dispatch(setImmovables(data));\n    }\n    dispatch(setIsLoading(false));\n  }\n};\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getDeveloperInfo(token: string, id: number) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/filter/developer/info/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data.data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","/* eslint-disable import/prefer-default-export */\nexport const DEFAULT_URL = '';\n","import { UserTypes } from '../types';\nimport { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getFilterData(token: string, type: UserTypes) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/filter/dropdown/${type}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data.data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { Dispatch } from 'redux';\nimport getFilterData from '../../services/getFilterData';\nimport { State } from '../types';\n\nexport const ACTIONS = {\n  SET_FILTER_INITIAL_DATA: 'SET_FILTER_INITIAL_DATA',\n};\n\nexport const setFilterInitialData = (payload: any) => ({\n  type: ACTIONS.SET_FILTER_INITIAL_DATA,\n  payload,\n});\n\nexport const fetchFilterData = () => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token, type } = getState().main.user;\n\n  if (token && type) {\n    const data = await getFilterData(token, type);\n    dispatch(setFilterInitialData(data));\n  }\n};\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\nexport type ResetPasswordType = {\n  token: string;\n  email: string;\n  password: string;\n  c_password: string;\n};\n\nexport default async function resetPassword(bodyData: ResetPasswordType) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/password/update`,\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","type RequestOptions = {\n  url: string;\n  method?: 'GET' | 'POST' | 'DELETE' | 'PATCH' | 'PUT';\n  bodyData?: any;\n  headers?: {};\n};\n\nconst requestApi = async (options: RequestOptions) => {\n  const { url, method = 'GET', headers = {}, bodyData } = options;\n\n  const params = {\n    body: undefined as string | undefined,\n    method: method || 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'applicatioin/json',\n      ...headers,\n    },\n  };\n\n  if (bodyData) {\n    params.body = JSON.stringify(bodyData);\n  }\n\n  const res: any = await fetch(url, params);\n  const json: any = await res.json();\n\n  return json || {};\n};\n\nexport default requestApi;\n"],"sourceRoot":""}