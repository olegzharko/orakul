{"version":3,"sources":["services/Constants.ts","services/utils/requestApi.ts","services/getToken.ts","store/token/actions.ts","actions/fetchTag.ts","services/getAppointments.ts","store/scheduler/actions.ts","actions/fetchAppointments.ts","services/getCalendar.ts","actions/fetchSchedulerSettings.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/utils/formatAppointmentDate.ts","components/Loader/Loader.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/SchedulerDay/SchedulerDay.js","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridLayout/GridLayout.js","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTableCell/useGridTableCell.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTableCell/GridTableCell.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTable/GridTable.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTable/useGridTable.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/SchedulerTable.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/useSchedulerTable.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/Filter/Filter.tsx","components/Modal/Modal.tsx","components/RadioButtonsGroup/RadioButtonsGroup.tsx","components/CustomSelect/CustomSelect.tsx","components/AddFormButton/AddFormButton.tsx","components/CustomInput/CustomInput.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/components/Clients/Clients.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/components/Clients/useClients.ts","components/PrimaryButton/PrimaryButton.tsx","components/CustomSwitch/CustomSwitch.tsx","components/RemoveFormButton/RemoveFormButton.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/components/ImmovableContainer/ImmovableContainer.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/components/ImmovableContainer/useImmovableContainer.ts","services/getDeveloperInfo.ts","actions/fetchDeveloperInfo.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/types.ts","services/createNewCard.ts","actions/createNewCard.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/Form.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/useForm.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/SchedulerForm.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/useSchedulerForm.ts","Screens/SchedulerScreen/components/SchedulerContainer/SchedulerContainer.tsx","Screens/SchedulerScreen/SchedulerScreen.tsx","App/App.tsx","App/useApp.ts","store/token/store.ts","store/scheduler/store.ts","store/index.ts","index.tsx"],"names":["DEFAULT_URL","requestApi","options","a","url","method","headers","bodyData","params","body","undefined","Accept","JSON","stringify","fetch","res","json","success","status","message","Error","getToken","data","token","console","log","ACTIONS","fetchTag","dispatch","type","payload","getAppointments","Authorization","setDevelopersInfo","setSelectedNewAppointment","setModalInfo","setIsLoading","fetchAppointments","Object","values","getCalendar","fetchSchedulerSettings","formatAppointmentDate","hours","rooms","days","raw","cell","Math","floor","length","day","date","year","time","room","id","Loader","color","SchedulerDay","className","map","ReactGridLayout","WidthProvider","RGL","GridLayout","appointments","cols","handleDrag","useState","dragAndDropWidth","setDragAndDropWidth","useEffect","$","width","rowHeight","margin","containerPadding","verticalCompact","preventCollision","layout","onDragStop","all","current","currentApp","find","item","i","title","short_info","style","borderLeft","uuidv4","GridLayoutCell","props","onClick","useSelector","state","scheduler","useDispatch","useMemo","work_time","day_and_date","useCallback","useGridTableCell","rawsQuantity","backgroundColor","selected","GridTable","raws","columns","newSelectedAppointment","_","rowIndex","cellIndex","GridTableCell","SchedulerTable","isLoading","shouldLoad","tableColumns","Array","fill","tableRaws","handleAppointmentDrag","appointment","y","x","useSchedulerTable","SchedulerFilter","Modal","open","handleClose","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","RadioButtonsGroup","buttons","onChange","unicId","selectedValue","setSelectedValue","handleChange","value","checked","htmlFor","memo","CustomSelect","label","setSelected","FormControl","variant","InputLabel","Select","event","val","target","disabled","MenuItem","AddFormButton","onKeyPress","src","alt","CustomInput","text","setText","TextField","Clients","meta","clients","onPhoneChange","index","phone","onNameChange","full_name","useClients","marginLeft","onAdd","PrimaryButton","CustomSwitch","setValue","FormControlLabel","control","Switch","name","labelPlacement","RemoveFormButton","ImmovableContainer","immovables","developersInfo","building","contracts","form_data","contract_type","immovableTypes","immovable_type","onContractChange","contract_type_id","onBuildingChange","building_id","onImmovableTypeChange","imm_type_id","onBankChange","bank","onProxyChange","proxy","onImmNumChange","imm_num","useImmovableContainer","onRemove","getDeveloperInfo","fetchDeveloperInfo","immovableItem","clientItem","createNewCard","createNewCardService","SchedulerForm","notary","setNotary","devCompanyId","setDevCompanyId","devRepresentativeId","setDevRepresentativeId","devManagerId","setDevManagerId","setImmovables","setClients","notaries","developers","developer","manager","representative","onNotaryChange","onDeveloperChange","onRepresentativeChange","onManagerChange","onImmovablesChange","onClientsChange","onClearAll","onAddImmovables","onRemoveImmovable","prev","filter","mapIndex","onAddClients","activeAddButton","Boolean","every","onFormCreate","split","reverse","join","date_time","dev_company_id","dev_representative_id","dev_manager_id","room_id","notary_id","then","selectedNotaryId","selectedDeveloperId","selectedDevRepresentativeId","selecedDevManagerId","useForm","modalInfo","modalProps","useSchedulerForm","SchedulerContainer","SchedulerScreen","App","useApp","initialState","reducer","action","combineReducers","createStore","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.b2976cfc.chunk.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\nexport const DEFAULT_URL = 'http://app.synction.space';\n","/* eslint-disable comma-dangle */\ntype RequestOptions = {\n  url: string;\n  method?: 'GET' | 'POST' | 'DELETE' | 'PATCH';\n  bodyData?: any;\n  headers?: {};\n};\n\nconst requestApi = async (options: RequestOptions) => {\n  // eslint-disable-next-line object-curly-newline\n  const { url, method = 'GET', headers = {}, bodyData } = options;\n\n  const params = {\n    body: undefined as string | undefined,\n    method: method || 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'applicatioin/json',\n      ...headers,\n    },\n  };\n\n  if (bodyData) {\n    params.body = JSON.stringify(bodyData);\n  }\n\n  const res: any = await fetch(url, params);\n  const json: any = await res.json();\n\n  if (!json.success) {\n    const { status, message } = res;\n    throw new Error(\n      `[${status}, ${message}] Could not fetch on URL (${url}) data:\\n${JSON.stringify(\n        json,\n        null,\n        2\n      )}`\n    );\n  }\n\n  return json;\n};\n\nexport default requestApi;\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getToken() {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/login?email=oleg99@gmail.com&password=admin123`,\n      method: 'POST',\n    });\n\n    return data.data.token;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","export const ACTIONS = {\n  SET_TOKEN: 'SET_TOKEN',\n  SET_LOADING: 'SET_LOADING',\n};\n\nexport const setToken = (payload: string) => ({\n  type: ACTIONS.SET_TOKEN,\n  payload,\n});\n","import getToken from '../services/getToken';\nimport { setToken } from '../store/token/actions';\n\nconst fetchTag = async (dispatch: any) => {\n  const token = await getToken();\n  dispatch(setToken(token));\n};\n\nexport default fetchTag;\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getAppointments(token: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data.data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","export const ACTIONS = {\n  SET_OPTIONS: 'SET_OPTIONS',\n  SET_APPOINTMENTS: 'SET_APPOINTMENTS',\n  SET_DEVELOPERS_INFO: 'SET_DEVELOPERS_INFO',\n  SET_SELECTED_NEW_APPOINTMENT: 'SET_SELECTED_NEW_APPOINTMENT',\n  SET_IS_LOADING: 'SET_IS_LOADING',\n  ADD_NEW_APPOINTMENT: 'ADD_NEW_APPOINTMENT',\n  SET_MODAL_INFO: 'SET_MODAL_INFO',\n};\n\nexport const setSchedulerOptions = (payload: any) => ({\n  type: ACTIONS.SET_OPTIONS,\n  payload,\n});\n\nexport const setAppointments = (payload: any) => ({\n  type: ACTIONS.SET_APPOINTMENTS,\n  payload,\n});\n\nexport const setDevelopersInfo = (payload: any) => ({\n  type: ACTIONS.SET_DEVELOPERS_INFO,\n  payload,\n});\n\nexport const setSelectedNewAppointment = (payload: any) => ({\n  type: ACTIONS.SET_SELECTED_NEW_APPOINTMENT,\n  payload,\n});\n\nexport const addNewAppointment = (payload: any) => ({\n  type: ACTIONS.ADD_NEW_APPOINTMENT,\n  payload,\n});\n\nexport const setModalInfo = (payload: any) => ({\n  type: ACTIONS.SET_MODAL_INFO,\n  payload,\n});\n\nexport const setIsLoading = (payload: boolean) => ({\n  type: ACTIONS.SET_IS_LOADING,\n  payload,\n});\n","import getAppointments from '../services/getAppointments';\nimport { setAppointments, setIsLoading } from '../store/scheduler/actions';\n\nconst fetchAppointments = async (dispatch: any, token: string) => {\n  dispatch(setIsLoading(true));\n  const data = await getAppointments(token);\n\n  dispatch(setAppointments(Object.values(data)));\n  dispatch(setIsLoading(false));\n};\n\nexport default fetchAppointments;\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getCalendar(token: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/calendar`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data.data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import getCalendar from '../services/getCalendar';\nimport { setSchedulerOptions, setIsLoading } from '../store/scheduler/actions';\n\nconst fetchSchedulerSettings = async (dispatch: any, token: string) => {\n  dispatch(setIsLoading(true));\n  const data = await getCalendar(token);\n\n  dispatch(setSchedulerOptions(data));\n  dispatch(setIsLoading(false));\n};\n\nexport default fetchSchedulerSettings;\n","const formatAppointmentDate = (\n  hours: any,\n  rooms: any,\n  days: any,\n  raw: number,\n  cell: number\n) => {\n  const { day, date, year } = days[Math.floor(raw / hours.length)];\n  const { time } = hours[raw % hours.length];\n  const room = rooms[cell].id;\n  return {\n    day,\n    date,\n    year,\n    time,\n    room,\n  };\n};\n\nexport default formatAppointmentDate;\n","import React from 'react';\nimport { LoopCircleLoading } from 'react-loadingg';\n\nconst Loader = () => <LoopCircleLoading color=\"#165153\" />;\n\nexport default Loader;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport './SchedulerDay.scss';\n\nconst SchedulerDay = ({ day, hours }) => (\n  <div className=\"scheduler__weekDay\">\n    <div className=\"scheduler__day\">\n      <p>\n        {day.day}\n        <br />\n        {day.date}\n      </p>\n    </div>\n    <div className=\"scheduler__timeLine\">\n      {hours.map(({ time }) => (\n        <p key={time}>{time}</p>\n      ))}\n    </div>\n  </div>\n);\n\nexport default SchedulerDay;\n","/* eslint-disable object-curly-newline */\n/* eslint-disable camelcase */\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport './GridLayout.scss';\nimport RGL, { WidthProvider } from 'react-grid-layout';\nimport $ from 'jquery';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst ReactGridLayout = WidthProvider(RGL);\n\nexport default function GridLayout({ appointments, cols, handleDrag }) {\n  const [dragAndDropWidth, setDragAndDropWidth] = useState(1200);\n\n  useEffect(() => {\n    setDragAndDropWidth($('.scheduler__appointments').width());\n  }, []);\n\n  const onDrag = (all, current) => {\n    const currentApp = all.find((item) => item.i === current.i);\n    handleDrag(currentApp);\n  };\n\n  if (!appointments) {\n    return <span>Loading...</span>;\n  }\n\n  return (\n    <ReactGridLayout\n      className=\"scheduler__dragAndDrop\"\n      cols={cols}\n      rowHeight={75}\n      width={dragAndDropWidth}\n      margin={[0, 0]}\n      containerPadding={[0, 0]}\n      verticalCompact={false}\n      preventCollision\n      layout={appointments}\n      onDragStop={onDrag}\n    >\n      {appointments.map(({ i, title, color, short_info }) => (\n        <div\n          key={i}\n          className=\"appointment\"\n          style={{ borderLeft: `4px solid ${color}` }}\n        >\n          <div className=\"appointment__title\">{title}</div>\n          <table className=\"appointment__table\">\n            <tbody>\n              <tr>\n                {Object.values(short_info).map((item) => (\n                  <td key={uuidv4()}>{item}</td>\n                ))}\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      ))}\n    </ReactGridLayout>\n  );\n}\n","/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable operator-linebreak */\nimport { useMemo, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { State } from '../../../../../../../../store/types';\nimport formatAppointmentDate from '../../utils/formatAppointmentDate';\nimport { setSelectedNewAppointment } from '../../../../../../../../store/scheduler/actions';\n\nexport type Props = {\n  rawsQuantity: number;\n  raw: number;\n  cell: number;\n  selected: boolean;\n};\n\nexport const useGridTableCell = ({ raw, cell }: Props) => {\n  const { options } = useSelector((state: State) => state.scheduler);\n  const dispatch = useDispatch();\n\n  const rooms = useMemo(() => options?.rooms, [options]);\n  const hours = useMemo(() => options?.work_time, [options]);\n  const days = useMemo(() => options?.day_and_date, [options]);\n\n  const onClick = useCallback(() => {\n    const payload = formatAppointmentDate(hours, rooms, days, raw, cell);\n    dispatch(setSelectedNewAppointment({ ...payload, raw, cell }));\n  }, [hours, rooms, days, raw, cell]);\n\n  return { onClick };\n};\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React from 'react';\nimport { Props, useGridTableCell } from './useGridTableCell';\n\nconst GridLayoutCell = (props: Props) => {\n  const { onClick } = useGridTableCell(props);\n\n  return (\n    <td\n      onClick={onClick}\n      style={{\n        width: `calc(100% / ${props.rawsQuantity})`,\n        backgroundColor: props.selected ? '#E5E5E5' : '',\n      }}\n    />\n  );\n};\n\nexport default GridLayoutCell;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport GridTableCell from '../GridTableCell/GridTableCell';\nimport { Props, useGridTable } from './useGridTable';\n\nexport default function GridTable({ raws, columns }: Props) {\n  const { newSelectedAppointment } = useGridTable();\n\n  return (\n    <div className=\"scheduler__bodyTable\">\n      <table>\n        <tbody>\n          {raws.map((_: any, rowIndex: number) => (\n            <tr key={uuidv4()}>\n              {columns.map((day: any, cellIndex: number) => (\n                <GridTableCell\n                  selected={\n                    // eslint-disable-next-line prettier/prettier\n                    newSelectedAppointment?.raw === rowIndex\n                    // eslint-disable-next-line prettier/prettier\n                    && newSelectedAppointment?.cell === cellIndex\n                  }\n                  rawsQuantity={raws.length}\n                  raw={rowIndex}\n                  cell={cellIndex}\n                  key={uuidv4()}\n                />\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { State } from '../../../../../../../../store/types';\n\nexport type Props = {\n  raws: any;\n  columns: any;\n};\n\nexport const useGridTable = () => {\n  const newSelectedAppointment = useSelector(\n    (state: State) => state.scheduler.newSelectedAppointment\n  );\n\n  return { newSelectedAppointment };\n};\n","import React from 'react';\nimport './index.scss';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useSchedulerTable } from './useSchedulerTable';\nimport Loader from '../../../../../../components/Loader/Loader';\n\n// components\nimport SchedulerDay from './components/SchedulerDay/SchedulerDay';\nimport GridLayout from './components/GridLayout/GridLayout';\nimport GridTable from './components/GridTable/GridTable';\n\nconst SchedulerTable = () => {\n  const {\n    shouldLoad,\n    rooms,\n    hours,\n    tableRaws,\n    tableColumns,\n    days,\n    appointments,\n    handleAppointmentDrag,\n  } = useSchedulerTable();\n\n  if (shouldLoad) {\n    return (\n      <div className=\"scheduler\">\n        <Loader />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"scheduler\">\n      <div className=\"scheduler__header\">\n        <div />\n        <div>\n          <table>\n            <tbody>\n              <tr>\n                {rooms.map(({ title }: any) => (\n                  <td\n                    key={title}\n                    style={{ width: `calc(100% / ${rooms.length})` }}\n                  >\n                    {title}\n                  </td>\n                ))}\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <div className=\"scheduler__body\">\n        <div className=\"scheduler__dayBar\">\n          {days.map((item: any) => (\n            <SchedulerDay day={item} hours={hours} key={uuidv4()} />\n          ))}\n        </div>\n        <div className=\"scheduler__appointments\">\n          <GridTable raws={tableRaws} columns={tableColumns} />\n          <GridLayout\n            appointments={appointments}\n            cols={tableColumns.length}\n            handleDrag={handleAppointmentDrag}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SchedulerTable;\n","/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable import/prefer-default-export */\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport fetchAppointments from '../../../../../../actions/fetchAppointments';\nimport fetchSchedulerSettings from '../../../../../../actions/fetchSchedulerSettings';\nimport { State } from '../../../../../../store/types';\nimport formatAppointmentDate from './utils/formatAppointmentDate';\n\nexport const useSchedulerTable = () => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.token);\n  const { options, isLoading, appointments } = useSelector(\n    (state: State) => state.scheduler\n  );\n\n  useEffect(() => {\n    if (token && !isLoading) {\n      fetchSchedulerSettings(dispatch, token);\n      fetchAppointments(dispatch, token);\n    }\n  }, [token]);\n\n  const rooms = useMemo(() => options?.rooms, [options]);\n  const hours = useMemo(() => options?.work_time, [options]);\n\n  const shouldLoad = useMemo(() => isLoading || !options, [\n    isLoading,\n    rooms,\n    hours,\n  ]);\n\n  const tableColumns = useMemo(() => new Array(rooms?.length || 0).fill(1), [\n    rooms,\n  ]);\n\n  const days = useMemo(() => options?.day_and_date, [options]);\n\n  const tableRaws = useMemo(\n    () => new Array(hours?.length * days?.length || 0).fill(1),\n    [hours]\n  );\n\n  const handleAppointmentDrag = useCallback(\n    (appointment) => {\n      formatAppointmentDate(hours, rooms, days, appointment.y, appointment.x);\n    },\n    [hours, days]\n  );\n\n  return {\n    shouldLoad,\n    rooms,\n    hours,\n    tableRaws,\n    tableColumns,\n    days,\n    appointments,\n    handleAppointmentDrag,\n  };\n};\n","import React from 'react';\nimport './index.scss';\n\nconst SchedulerFilter = () => (\n  <div className=\"scheduler__filter\">Filter block</div>\n);\n\nexport default SchedulerFilter;\n","import React from 'react';\nimport './index.scss';\nimport MModal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\ntype Props = {\n  open: boolean;\n  handleClose: () => void;\n  success: boolean;\n  message: string;\n};\n\n// eslint-disable-next-line prettier/prettier\nconst Modal = ({\n  open, handleClose, success, message\n}: Props) => (\n  <MModal\n    className=\"modal-container\"\n    open={open}\n    onClose={handleClose}\n    closeAfterTransition\n    BackdropComponent={Backdrop}\n    BackdropProps={{\n      timeout: 500,\n    }}\n  >\n    <Fade in={open}>\n      <div className={`modal ${success ? 'modal-success' : 'modal-failed'}`}>\n        <p className=\"message\">{message}</p>\n      </div>\n    </Fade>\n  </MModal>\n);\n\nexport default Modal;\n","/* eslint-disable react/require-default-props */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/no-unused-prop-types */\nimport React, { useState, memo, useEffect } from 'react';\nimport './index.scss';\n\ntype Button = {\n  id: number;\n  title: string;\n};\n\ntype Props = {\n  buttons: Button[];\n  unicId: string;\n  onChange: (id: number) => void;\n  selected?: number | null;\n};\n\nexport const RadioButtonsGroup = ({\n  buttons,\n  onChange,\n  selected,\n  unicId,\n}: Props) => {\n  const [selectedValue, setSelectedValue] = useState(selected || buttons[0].id);\n\n  useEffect(() => {\n    setSelectedValue(selected || buttons[0].id);\n  }, [selected]);\n\n  const handleChange = (id: number) => {\n    onChange(id);\n  };\n\n  return (\n    <div className=\"radio-buttons-group\">\n      {buttons.map(({ id, title }: Button) => (\n        <div className=\"radio-buttons-group__element\">\n          <input\n            type=\"radio\"\n            id={unicId + title}\n            value={id}\n            checked={selectedValue === id}\n            onChange={() => handleChange(id)}\n            className=\"input\"\n          />\n          <label htmlFor={unicId + title} className=\"label\">\n            {title}\n          </label>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioButtonsGroup);\n","/* eslint-disable object-curly-newline */\n/* eslint-disable no-unused-vars */\nimport React, { useState, memo, useEffect } from 'react';\nimport './index.scss';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\ntype Data = {\n  id: number;\n  title: string;\n};\n\ntype Props = {\n  onChange: (value: string) => void;\n  data: Data[];\n  label: string;\n  selectedValue?: string | null | number;\n};\n\nconst CustomSelect = ({ onChange, data, label, selectedValue }: Props) => {\n  const [selected, setSelected] = useState(selectedValue || '');\n\n  useEffect(() => {\n    setSelected(selectedValue || '');\n  }, [selectedValue]);\n\n  const handleChange = (event: any) => {\n    const val = event.target.value;\n    setSelected(val);\n    onChange(val);\n  };\n\n  return (\n    <FormControl variant=\"outlined\" className=\"customSelect\">\n      <InputLabel>{label}</InputLabel>\n      <Select\n        value={selected}\n        onChange={handleChange}\n        disabled={data.length === 0}\n      >\n        <MenuItem value=\"\">\n          <em>Выбрать</em>\n        </MenuItem>\n        {data.map(({ id, title }: Data) => (\n          <MenuItem value={id} key={id}>\n            {title}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default memo(CustomSelect);\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport './index.scss';\n\ntype Props = {\n  onClick: () => void;\n};\n\nconst AddFormButton = ({ onClick }: Props) => (\n  <div className=\"add-form-button\" onClick={onClick} onKeyPress={onClick}>\n    <img src=\"/icons/plus.svg\" alt=\"plus\" />\n  </div>\n);\n\nexport default AddFormButton;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable react/react-in-jsx-scope */\nimport React, { useState, useEffect } from 'react';\nimport './index.scss';\nimport { TextField } from '@material-ui/core';\n\ntype Props = {\n  label: string;\n  onChange: (value: string) => void;\n  value?: string | number | null;\n  type?: string;\n};\n\nconst CustomInput = ({\n  label,\n  onChange,\n  value = '',\n  type = 'string',\n}: Props) => {\n  const [text, setText] = useState(value || '');\n\n  useEffect(() => {\n    setText(value || '');\n  }, [value]);\n\n  const handleChange = (event: any) => {\n    setText(event.target.value);\n    onChange(event.target.value);\n  };\n\n  return (\n    <TextField\n      label={label}\n      variant=\"outlined\"\n      value={text}\n      onChange={handleChange}\n      type={type}\n      className=\"custom-input\"\n    />\n  );\n};\n\nexport default CustomInput;\n","/* eslint-disable react/destructuring-assignment */\nimport React, { memo } from 'react';\nimport AddFormButton from '../../../../../../../../../../components/AddFormButton';\nimport CustomInput from '../../../../../../../../../../components/CustomInput/CustomInput';\nimport { Props, useClients } from './useClients';\n\nconst Clients = (props: Props) => {\n  const meta = useClients(props);\n\n  return (\n    <div className=\"mv12\">\n      {props.clients.map((item, index) => (\n        <>\n          <CustomInput\n            label=\"ПІБ\"\n            value={item.full_name}\n            onChange={(val) => meta.onNameChange(index, val)}\n          />\n\n          <div className=\"mv12 df-jc-sb\">\n            <CustomInput\n              label=\"Номер телефону\"\n              value={item.phone}\n              onChange={(val) => meta.onPhoneChange(index, val)}\n            />\n\n            <div style={{ marginLeft: '12px' }}>\n              <AddFormButton onClick={props.onAdd} />\n            </div>\n          </div>\n        </>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(Clients);\n","import { useCallback } from 'react';\nimport { ClientItem } from '../../../../../../../../../../types';\n\nexport type Props = {\n  clients: ClientItem[];\n  onChange: (index: number, value: ClientItem) => void;\n  onAdd: () => void;\n};\n\nexport const useClients = ({ onChange, clients }: Props) => {\n  const onPhoneChange = useCallback(\n    (index: number, value: string) => {\n      onChange(index, {\n        ...clients[index],\n        phone: value,\n      });\n    },\n    [clients]\n  );\n\n  const onNameChange = useCallback(\n    (index: number, value: string) => {\n      onChange(index, {\n        ...clients[index],\n        full_name: value,\n      });\n    },\n    [clients]\n  );\n\n  return { onPhoneChange, onNameChange };\n};\n","/* eslint-disable react/button-has-type */\nimport React from 'react';\nimport './index.scss';\n\ntype Props = {\n  label: string;\n  onClick: () => void;\n  disabled: boolean;\n};\n\nconst PrimaryButton = ({ label, onClick, disabled }: Props) => (\n  <button\n    className={`primary-button ${disabled ? 'disabled' : ''}`}\n    onClick={onClick}\n    disabled={disabled}\n  >\n    {label}\n  </button>\n);\n\nexport default PrimaryButton;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable prettier/prettier */\nimport React, { useState, memo } from 'react';\nimport { FormControlLabel, Switch } from '@material-ui/core';\nimport './index.scss';\n\ntype Props = {\n  label: string\n  onChange: (val: boolean) => void;\n  selected: boolean;\n};\n\nconst CustomSwitch = ({ label, onChange, selected }: Props) => {\n  const [value, setValue] = useState(selected || false);\n\n  const handleChange = (event: any) => {\n    setValue(event.target.checked || false);\n    onChange(event.target.checked);\n  };\n\n  return (\n    <FormControlLabel\n      control={(\n        <Switch\n          checked={value}\n          onChange={handleChange}\n          name=\"checkedB\"\n          color=\"primary\"\n        />\n      )}\n      label={label}\n      labelPlacement=\"start\"\n      className=\"custom-switch\"\n    />\n  );\n};\n\nexport default memo(CustomSwitch);\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport './index.scss';\n\ntype Props = {\n  onClick: (index: number) => void;\n  index: number;\n};\n\nconst RemoveFormButton = ({ onClick, index }: Props) => (\n  <div\n    className=\"remove-form-button\"\n    onClick={() => onClick(index)}\n    onKeyPress={() => onClick(index)}\n  >\n    <img src=\"/icons/minus.svg\" alt=\"minus\" />\n  </div>\n);\n\nexport default RemoveFormButton;\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable no-unused-vars */\nimport React, { memo } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport AddFormButton from '../../../../../../../../../../components/AddFormButton';\nimport CustomInput from '../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../components/CustomSelect';\nimport CustomSwitch from '../../../../../../../../../../components/CustomSwitch';\nimport RadioButtonsGroup from '../../../../../../../../../../components/RadioButtonsGroup';\nimport RemoveFormButton from '../../../../../../../../../../components/RemoveFormButton';\nimport { ImmovableItem } from '../../../../../../../../../../types';\nimport { useImmovableContainer, Props } from './useImmovableContainer';\n\nconst ImmovableContainer = (props: Props) => {\n  const meta = useImmovableContainer(props);\n  return (\n    <div className=\"mv12\">\n      {props.immovables.map((item: ImmovableItem, index: number) => (\n        <>\n          <RadioButtonsGroup\n            buttons={meta.contracts}\n            onChange={(val) => meta.onContractChange(index, val)}\n            selected={item.contract_type_id}\n            unicId={`contract-${index}`}\n          />\n\n          <div className=\"mv12\">\n            <CustomSelect\n              onChange={(val) => meta.onBuildingChange(index, val)}\n              data={meta.building}\n              label=\"Будинок\"\n              selectedValue={item.building_id}\n            />\n          </div>\n\n          <RadioButtonsGroup\n            buttons={meta.immovableTypes}\n            onChange={(val) => meta.onImmovableTypeChange(index, val)}\n            selected={item.imm_type_id}\n            unicId={`types-${index}`}\n          />\n\n          <div className=\"mv12\">\n            <CustomSwitch\n              label=\"Банк\"\n              onChange={(val) => meta.onBankChange(index, val)}\n              selected={item.bank}\n            />\n          </div>\n\n          <div className=\"mv12\">\n            <CustomSwitch\n              label=\"Довіреність\"\n              onChange={(val) => meta.onProxyChange(index, val)}\n              selected={item.proxy}\n            />\n          </div>\n\n          <div className=\"mv12 df-jc-sb\">\n            <CustomInput\n              key=\"test\"\n              label=\"Номер приміщення\"\n              onChange={(val) => meta.onImmNumChange(index, val)}\n              value={item.imm_num}\n            />\n\n            {props.immovables.length > 1 && (\n              <div style={{ marginLeft: '12px' }}>\n                <RemoveFormButton onClick={props.onRemove} index={index} />\n              </div>\n            )}\n\n            {index === props.immovables.length - 1 && (\n              <div style={{ marginLeft: '12px' }}>\n                <AddFormButton onClick={props.onAdd} />\n              </div>\n            )}\n          </div>\n        </>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(ImmovableContainer);\n","import { useMemo, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport { State } from '../../../../../../../../../../store/types';\nimport {\n  ImmovableItem,\n  ImmovableItems,\n} from '../../../../../../../../../../types';\n\nexport type Props = {\n  immovables: ImmovableItems;\n  onChange: (index: number, value: ImmovableItem) => void;\n  onAdd: () => void;\n  onRemove: (index: number) => void;\n};\n\nexport const useImmovableContainer = ({ immovables, onChange }: Props) => {\n  const { options, developersInfo } = useSelector(\n    (state: State) => state.scheduler\n  );\n\n  const building = useMemo(() => developersInfo?.building || [], [\n    developersInfo,\n  ]);\n\n  const contracts = useMemo(() => options?.form_data.contract_type, [options]);\n\n  const immovableTypes = useMemo(() => options?.form_data.immovable_type, [\n    options,\n  ]);\n\n  // onChange functions\n  const onContractChange = useCallback(\n    (index: number, id: number) => {\n      onChange(index, {\n        ...immovables[index],\n        contract_type_id: id,\n      });\n    },\n    [immovables]\n  );\n\n  const onBuildingChange = useCallback(\n    (index: number, id: string) => {\n      onChange(index, {\n        ...immovables[index],\n        building_id: +id,\n      });\n    },\n    [immovables]\n  );\n\n  const onImmovableTypeChange = useCallback(\n    (index: number, id: number) => {\n      onChange(index, {\n        ...immovables[index],\n        imm_type_id: id,\n      });\n    },\n    [immovables]\n  );\n\n  const onBankChange = useCallback(\n    (index: number, val: boolean) => {\n      onChange(index, {\n        ...immovables[index],\n        bank: val,\n      });\n    },\n    [immovables]\n  );\n\n  const onProxyChange = useCallback(\n    (index: number, val: boolean) => {\n      onChange(index, {\n        ...immovables[index],\n        proxy: val,\n      });\n    },\n    [immovables]\n  );\n\n  const onImmNumChange = useCallback(\n    (index: number, val: string) => {\n      onChange(index, {\n        ...immovables[index],\n        imm_num: +val,\n      });\n    },\n    [immovables]\n  );\n\n  return {\n    building,\n    contracts,\n    immovableTypes,\n    onContractChange,\n    onBuildingChange,\n    onImmovableTypeChange,\n    onBankChange,\n    onProxyChange,\n    onImmNumChange,\n  };\n};\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getDeveloperInfo(token: string, id: number) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/filter/developer/info/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data.data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import getDeveloperInfo from '../services/getDeveloperInfo';\nimport { setDevelopersInfo } from '../store/scheduler/actions';\n\nconst fetchDeveloperInfo = async (dispatch: any, token: string, id: number) => {\n  const data = await getDeveloperInfo(token, id);\n  dispatch(setDevelopersInfo(data));\n};\n\nexport default fetchDeveloperInfo;\n","import { ClientItem, ImmovableItem } from '../../../../../../../../types';\n\nexport type ImmovableItemKey = keyof ImmovableItem;\n\nexport const immovableItem: ImmovableItem = {\n  contract_type_id: null,\n  building_id: null,\n  imm_type_id: null,\n  imm_num: null,\n  bank: false,\n  proxy: false,\n};\n\nexport const clientItem: ClientItem = {\n  phone: null,\n  full_name: null,\n};\n","import { NewCard } from '../types';\nimport { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function createNewCard(token: string, bodyData: NewCard) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import createNewCardService from '../services/createNewCard';\nimport { addNewAppointment, setModalInfo } from '../store/scheduler/actions';\nimport { NewCard } from '../types';\n\nconst createNewCard = async (dispatch: any, token: string, data: NewCard) => {\n  const res = await createNewCardService(token, data);\n  dispatch(\n    setModalInfo({\n      open: true,\n      success: res.success,\n      message: res.message,\n    })\n  );\n  dispatch(addNewAppointment(res.data));\n  return { success: res.success };\n};\n\nexport default createNewCard;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React, { memo } from 'react';\nimport RadioButtonsGroup from '../../../../../../../../components/RadioButtonsGroup';\nimport CustomSelect from '../../../../../../../../components/CustomSelect';\nimport './index.scss';\nimport Clients from './components/Clients/Clients';\nimport PrimaryButton from '../../../../../../../../components/PrimaryButton';\nimport Loader from '../../../../../../../../components/Loader/Loader';\nimport ImmovableContainer from './components/ImmovableContainer';\nimport { useForm } from './useForm';\n\nconst SchedulerForm = () => {\n  const meta = useForm();\n\n  if (meta.shouldLoad) {\n    return (\n      <div className=\"scheduler__form schedulerForm\">\n        <Loader />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"schedulerForm\">\n      <div className=\"schedulerForm__tabs\" />\n      <div className=\"schedulerForm__forms\">\n        <div className=\"schedulerForm__header\">\n          <p className=\"title\">Новий запис</p>\n          <img\n            src=\"/icons/clear.svg\"\n            alt=\"clear icon\"\n            className=\"clear-icon\"\n            onClick={meta.onClearAll}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <RadioButtonsGroup\n            buttons={meta.notaries}\n            onChange={meta.onNotaryChange}\n            selected={meta.selectedNotaryId}\n            unicId=\"notaries\"\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomSelect\n            label=\"Забудовник\"\n            data={meta.developers}\n            onChange={meta.onDeveloperChange}\n            selectedValue={meta.selectedDeveloperId}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomSelect\n            onChange={meta.onRepresentativeChange}\n            data={meta.representative}\n            label=\"Підписант\"\n            selectedValue={meta.selectedDevRepresentativeId}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomSelect\n            onChange={meta.onManagerChange}\n            data={meta.manager}\n            label=\"Менеджер\"\n            selectedValue={meta.selecedDevManagerId}\n          />\n        </div>\n\n        <ImmovableContainer\n          immovables={meta.immovables}\n          onChange={meta.onImmovablesChange}\n          onAdd={meta.onAddImmovables}\n          onRemove={meta.onRemoveImmovable}\n        />\n\n        <Clients\n          clients={meta.clients}\n          onChange={meta.onClientsChange}\n          onAdd={meta.onAddClients}\n        />\n\n        <div className=\"mv12\">\n          <PrimaryButton\n            label=\"Створити\"\n            onClick={meta.onFormCreate}\n            disabled={!meta.activeAddButton}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SchedulerForm);\n","/* eslint-disable prettier/prettier */\n/* eslint-disable arrow-body-style */\nimport { useMemo, useState, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { State } from '../../../../../../../../store/types';\nimport fetchDeveloperInfo from '../../../../../../../../actions/fetchDeveloperInfo';\nimport { setDevelopersInfo, setSelectedNewAppointment } from '../../../../../../../../store/scheduler/actions';\nimport { clientItem, immovableItem } from './types';\nimport createNewCard from '../../../../../../../../actions/createNewCard';\nimport {\n  ClientItem,\n  ImmovableItem,\n  ImmovableItems,\n  NewCard\n} from '../../../../../../../../types';\n\nexport const useForm = () => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.token);\n  const { options, developersInfo, isLoading } = useSelector(\n    (state: State) => state.scheduler\n  );\n  const newSelectedAppointment = useSelector(\n    (state: State) => state.scheduler.newSelectedAppointment\n  );\n\n  // Form State\n  const [notary, setNotary] = useState<number | null>(null);\n  const [devCompanyId, setDevCompanyId] = useState<number | null>(null);\n  const [devRepresentativeId, setDevRepresentativeId] = useState<number | null>(null);\n  const [devManagerId, setDevManagerId] = useState<number | null>(null);\n  const [immovables, setImmovables] = useState<ImmovableItems>([immovableItem]);\n  const [clients, setClients] = useState<ClientItem[]>([clientItem]);\n\n  // Form Memo Values\n  const shouldLoad = useMemo(() => isLoading || !options, [options, isLoading]);\n\n  const notaries = useMemo(() => options?.form_data.notary, [options]);\n\n  const developers = useMemo(() => options?.form_data.developer, [options]);\n\n  const manager = useMemo(() => developersInfo?.manager || [], [\n    developersInfo,\n  ]);\n\n  const representative = useMemo(() => developersInfo?.representative || [], [\n    developersInfo,\n  ]);\n\n  // Form onChange functions\n  const onNotaryChange = useCallback((value) => {\n    setNotary(value);\n  }, []);\n\n  const onDeveloperChange = useCallback(\n    (value) => {\n      setDevCompanyId(value);\n\n      if (!value) {\n        dispatch(setDevelopersInfo({}));\n      }\n\n      if (token) {\n        fetchDeveloperInfo(dispatch, token, value);\n      }\n    },\n    [token, devCompanyId]\n  );\n\n  const onRepresentativeChange = useCallback(\n    (value) => {\n      setDevRepresentativeId(value);\n    },\n    [devRepresentativeId]\n  );\n\n  const onManagerChange = useCallback(\n    (value) => {\n      setDevManagerId(value);\n    },\n    [devManagerId]\n  );\n\n  const onImmovablesChange = useCallback(\n    (index: number, value: any) => {\n      immovables[index] = value;\n      setImmovables([...immovables]);\n    },\n    [immovables]\n  );\n\n  const onClientsChange = useCallback(\n    (index: number, value: ClientItem) => {\n      clients[index] = value;\n      setClients([...clients]);\n    },\n    [clients]\n  );\n\n  // Form CTA\n\n  const onClearAll = useCallback(() => {\n    setNotary(null);\n    setDevCompanyId(null);\n    setDevRepresentativeId(null);\n    setDevManagerId(null);\n    setImmovables([immovableItem]);\n    setClients([clientItem]);\n  }, []);\n\n  const onAddImmovables = useCallback(() => {\n    setImmovables([...immovables, immovableItem]);\n  }, [immovables]);\n\n  const onRemoveImmovable = useCallback((index: number) => {\n    setImmovables((prev) => prev.filter((item, mapIndex) => mapIndex !== index));\n  }, [immovables]);\n\n  const onAddClients = useCallback(() => {\n    setClients([...clients, clientItem]);\n  }, [clients]);\n\n  const activeAddButton = useMemo(() => {\n    return Boolean(devCompanyId)\n    && immovables.length\n    && immovables.every((item: ImmovableItem) => item.building_id && item.imm_num);\n  }, [devCompanyId, immovables]);\n\n  const onFormCreate = useCallback(() => {\n    const date = newSelectedAppointment.date.split('.').reverse().join('.');\n    const date_time = `${newSelectedAppointment.year}.${date} ${newSelectedAppointment.time}`;\n\n    const formatImmovables = immovables.map((item: ImmovableItem) => ({\n      ...item,\n      contract_type_id: item.contract_type_id || options.form_data.immovable_type[0].id,\n      imm_type_id: item.imm_type_id || options.form_data.immovable_type[0].id,\n    }));\n\n    const data: NewCard = {\n      immovables: formatImmovables,\n      clients,\n      date_time,\n      dev_company_id: devCompanyId,\n      dev_representative_id: devRepresentativeId,\n      dev_manager_id: devManagerId,\n      room_id: newSelectedAppointment.room,\n      notary_id: notary || notaries[0].id,\n    };\n\n    if (token) {\n      createNewCard(dispatch, token, data)\n        .then(({ success }: any) => {\n          if (success) {\n            onClearAll();\n          }\n        });\n      dispatch(setSelectedNewAppointment(null));\n    }\n  }, [\n    devCompanyId,\n    devRepresentativeId,\n    devManagerId,\n    newSelectedAppointment,\n    notary,\n    immovables,\n    clients\n  ]);\n\n  return {\n    shouldLoad,\n    notaries,\n    representative,\n    developers,\n    manager,\n    selectedNotaryId: notary,\n    selectedDeveloperId: devCompanyId,\n    selectedDevRepresentativeId: devRepresentativeId,\n    selecedDevManagerId: devManagerId,\n    immovables,\n    clients,\n    activeAddButton,\n    onNotaryChange,\n    onDeveloperChange,\n    onRepresentativeChange,\n    onManagerChange,\n    onImmovablesChange,\n    onAddImmovables,\n    onRemoveImmovable,\n    onClientsChange,\n    onAddClients,\n    onClearAll,\n    onFormCreate,\n  };\n};\n","import React from 'react';\nimport Modal from '../../../../../../components/Modal';\nimport Form from './components/Form';\nimport { useSchedulerForm } from './useSchedulerForm';\n\nconst SchedulerForm = () => {\n  const meta = useSchedulerForm();\n\n  return (\n    <div className=\"scheduler__form\">\n      <Form />\n      <Modal {...meta.modalProps} />\n    </div>\n  );\n};\n\nexport default SchedulerForm;\n","/* eslint-disable prettier/prettier */\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useMemo } from 'react';\nimport { State } from '../../../../../../store/types';\nimport { setModalInfo } from '../../../../../../store/scheduler/actions';\n\nexport const useSchedulerForm = () => {\n  const dispatch = useDispatch();\n  const newSelectedAppointment = useSelector(\n    (state: State) => state.scheduler.newSelectedAppointment\n  );\n\n  const modalInfo = useSelector((state: State) => state.scheduler.modalInfo);\n\n  const modalProps = useMemo(\n    () => ({\n      ...modalInfo,\n      handleClose: () => dispatch(\n        setModalInfo({\n          ...modalInfo,\n          open: false\n        })\n      ),\n    }),\n    [modalInfo]\n  );\n\n  return { newSelectedAppointment, modalProps };\n};\n","import React from 'react';\nimport './index.scss';\n\n// Components\nimport SchedulerTable from './components/Table/SchedulerTable';\nimport SchedulerFilter from './components/Filter';\nimport SchedulerForm from './components/SchedulerForm';\n\nconst SchedulerContainer = () => (\n  <div className=\"scheduler__container\">\n    <div className=\"scheduler__dataView\">\n      <SchedulerFilter />\n      <SchedulerTable />\n    </div>\n    <SchedulerForm />\n  </div>\n);\n\nexport default SchedulerContainer;\n","import React from 'react';\nimport SchedulerContainer from './components/SchedulerContainer';\n\nconst SchedulerScreen = () => <SchedulerContainer />;\n\nexport default SchedulerScreen;\n","import React from 'react';\nimport './index.scss';\nimport { useApp } from './useApp';\nimport SchedulerScreen from '../Screens/SchedulerScreen';\n\nconst App: React.FC = () => {\n  useApp();\n\n  return <SchedulerScreen />;\n};\n\nexport default App;\n","/* eslint-disable import/prefer-default-export */\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport fetchTag from '../actions/fetchTag';\n\nexport const useApp = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    fetchTag(dispatch);\n  }, []);\n};\n","import { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\nexport type TokenState = {\n  token: null | string;\n};\n\nconst initialState: TokenState = {\n  token: null,\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_TOKEN:\n      return { ...state, token: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\nexport type SchedulerState = {\n  options: any;\n  appointments: any;\n  developersInfo: any;\n  newSelectedAppointment: any;\n  isLoading: boolean;\n  modalInfo: {\n    open: boolean;\n    success: boolean;\n    message: string;\n  };\n};\n\nconst initialState: SchedulerState = {\n  options: null,\n  appointments: [],\n  developersInfo: {},\n  newSelectedAppointment: null,\n  modalInfo: {\n    open: false,\n    success: false,\n    message: '',\n  },\n  isLoading: false,\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_OPTIONS:\n      return { ...state, options: action.payload };\n    case ACTIONS.SET_APPOINTMENTS:\n      return { ...state, appointments: action.payload };\n    case ACTIONS.ADD_NEW_APPOINTMENT:\n      return {\n        ...state,\n        appointments: [...state.appointments, action.payload],\n      };\n    case ACTIONS.SET_DEVELOPERS_INFO:\n      return { ...state, developersInfo: action.payload };\n    case ACTIONS.SET_IS_LOADING:\n      return { ...state, isLoading: action.payload };\n    case ACTIONS.SET_SELECTED_NEW_APPOINTMENT:\n      return { ...state, newSelectedAppointment: action.payload };\n    case ACTIONS.SET_MODAL_INFO:\n      return { ...state, modalInfo: { ...action.payload } };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers, createStore } from 'redux';\nimport token from './token/store';\nimport scheduler from './scheduler/store';\n\nconst reducer = combineReducers({\n  token,\n  scheduler,\n});\n\nexport default createStore(reducer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  // eslint-disable-next-line\n  document.getElementById('root')\n);\n"],"sourceRoot":""}