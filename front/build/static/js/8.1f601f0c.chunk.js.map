{"version":3,"sources":["components/PrimaryButton/PrimaryButton.tsx","components/CustomInput/index.ts","components/CustomSelect/CustomSelect.tsx","components/CustomInput/CustomInput.tsx","components/CustomSwitch/CustomSwitch.tsx","components/Modal/useModal.ts","components/Modal/Modal.tsx","components/RadioButtonsGroup/RadioButtonsGroup.tsx","components/Header/utils/useDebounce.ts","components/Header/Header.tsx","components/Header/useHeader.ts","components/PhoneMaskInput/PhoneMaskInput.tsx","components/AddFormButton/AddFormButton.tsx","components/RadioButtonsGroup/index.ts","components/RemoveFormButton/RemoveFormButton.tsx","components/Filter/Filter.tsx","components/Filter/useFilter.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/utils/formatAppointmentDate.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/SchedulerDay/SchedulerDay.js","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridLayout/GridLayout.js","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTableCell/GridTableCell.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTableCell/useGridTableCell.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTable/GridTable.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTable/useGridTable.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/SchedulerTable.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/useSchedulerTable.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerFilterContainer/components/QuantityLabel.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerFilterContainer/components/SchedulerFilter/SchedulerFilter.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerFilterContainer/components/SchedulerFilter/useSchedulerFilter.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerFilterContainer/components/SchedulerLock/SchedulerLock.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerFilterContainer/components/SchedulerLock/useSchedulerLock.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerFilterContainer/SchedulerFilterContainer.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/components/Clients/Clients.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/components/Clients/useClients.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/components/ImmovableContainer/ImmovableContainer.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/components/ImmovableContainer/useImmovableContainer.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/types.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/Form.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/useForm.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/SchedulerForm.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/useSchedulerForm.ts","Screens/SchedulerScreen/components/SchedulerContainer/SchedulerContainer.tsx","Screens/SchedulerScreen/SchedulerScreen.tsx"],"names":["PrimaryButton","label","onClick","disabled","className","CustomSelect","onChange","data","selectedValue","size","required","disableDefaultValue","useState","selected","setSelected","useEffect","FormControl","variant","InputLabel","Select","error","value","event","val","target","length","defaultValue","MenuItem","map","id","title","memo","CustomInput","type","text","setText","CustomSwitch","setValue","FormControlLabel","control","Switch","checked","name","color","labelPlacement","useModal","dispatch","useDispatch","modalInfo","useSelector","state","main","useMemo","handleClose","setModalInfo","open","Modal","success","message","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","RadioButtonsGroup","buttons","unicId","setSelectedValue","handleChange","htmlFor","uuidv4","useDebounce","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","Header","history","useHistory","searchText","setSearchText","count","setCount","searchAppointments","prev","onSearch","useCallback","e","onLogout","localStorage","clear","setUser","token","push","useHeader","to","src","alt","placeholder","PhoneMaskInput","mask","TextField","AddFormButton","handleClick","onKeyPress","RemoveFormButton","index","Filter","props","meta","onFilterDataChange","horizontal","user","filterInitialData","filter","fetchFilterData","readers","reader","notaries","notary","accompanyings","accompanying","contractTypes","contract_type","developers","developer","sortType","sort_type","representative","setRepresentative","shouldRenderFilter","Boolean","selectedNotary","setSelectedNotary","selectedReader","setSelectedReader","selectedAccompanying","setSelectedAccompanying","selectedContractType","setSelectedContractType","selectedDeveloper","setSelectedDeveloper","selectedRepresentative","setSelectedRepresentative","selectedSortType","setSelectedSortType","clearAll","getDeveloperInfo","then","notary_id","reader_id","accompanying_id","contract_type_id","developer_id","dev_representative_id","useFilter","style","width","formatAppointmentDate","hours","rooms","days","raw","cell","Math","floor","day","date","year","time","room","split","reverse","join","SchedulerDay","ReactGridLayout","WidthProvider","RGL","GridLayout","appointments","cols","handleDrag","dragAndDropWidth","setDragAndDropWidth","schedulerLock","scheduler","oldSelectedAppointment","$","isSelected","rowHeight","margin","containerPadding","verticalCompact","preventCollision","layout","onDragStop","all","current","currentApp","find","item","i","isDraggable","appointment","borderLeft","backgroundColor","y","x","onClickCapture","ReactHtmlParser","Object","values","short_info","GridLayoutCell","options","work_time","day_and_date","payload","moment","isBefore","setSelectedNewAppointment","useGridTableCell","rowsQuantity","GridTable","rows","columns","newSelectedAppointment","_","rowIndex","cellIndex","GridTableCell","SchedulerTable","isLoading","fetchSchedulerSettings","fetchAppointments","setAppointments","shouldLoad","tableColumns","Array","fill","tableRows","handleAppointmentDrag","date_time","room_id","moveCalendarCard","onAppointmentClick","a","fetchCalendarCard","setSelectedOldAppointment","useSchedulerTable","Loader","QuantityLabel","whiteSpace","SchedulerFilter","shouldRender","setShouldRender","fetchAppointmentsByFilter","useSchedulerFilter","SchedulerLock","setSchedulerLock","useSchedulerLock","SchedulerFilterContainer","Clients","clients","onPhoneChange","phone","onNameChange","full_name","useClients","marginLeft","onRemove","onAdd","ImmovableContainer","immovables","developersInfo","building","contracts","form_data","immovableTypes","immovable_type","onContractChange","onBuildingChange","building_id","onImmovableTypeChange","imm_type_id","onBankChange","bank","onProxyChange","proxy","onImmNumChange","imm_number","useImmovableContainer","immovableItem","clientItem","SchedulerForm","selectedCard","initialValues","edit","insideEdit","setEdit","card","setNotary","devCompanyId","setDevCompanyId","devRepresentativeId","setDevRepresentativeId","devManagerId","setDevManagerId","setImmovables","setClients","manager","onNotaryChange","dev_company_id","dev_manager_id","fetchDeveloperInfo","onDeveloperChange","setDevelopersInfo","onRepresentativeChange","onManagerChange","onImmovablesChange","onClientsChange","onClearAll","onAddImmovables","onRemoveImmovable","mapIndex","onAddClients","onRemoveClient","onDeleteCard","removeCalendarCard","activeAddButton","every","onFormCreate","editCalendarCard","createNewCard","selectedNotaryId","selectedDeveloperId","selectedDevRepresentativeId","selecedDevManagerId","useForm","selectedTab","setSelectedTab","editAppointmentData","onCloseTab","setEditAppointmentData","useSchedulerForm","SchedulerContainer","modalProps","SchedulerScreen"],"mappings":"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","file":"static/js/8.1f601f0c.chunk.js","sourcesContent":["/* eslint-disable prettier/prettier */\n/* eslint-disable react/button-has-type */\nimport React from 'react';\nimport './index.scss';\n\ntype Props = {\n  label: string;\n  onClick: (e: any) => void;\n  disabled?: boolean;\n  className?: string;\n};\n\nconst PrimaryButton = ({\n  label, onClick, disabled, className\n}: Props) => (\n  <button\n    className={`primary-button ${disabled ? 'disabled' : ''} ${\n      className || ''\n    }`}\n    onClick={onClick}\n    disabled={disabled}\n  >\n    {label}\n  </button>\n);\n\nexport default PrimaryButton;\n","export { default } from './CustomInput';\n","/* eslint-disable object-curly-newline */\n/* eslint-disable no-unused-vars */\nimport React, { useState, memo, useEffect } from 'react';\nimport './index.scss';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\ntype Data = {\n  id: number;\n  title: string;\n};\n\ntype Props = {\n  onChange: (value: string) => void;\n  data: Data[];\n  label: string;\n  selectedValue?: string | null | number;\n  disabled?: boolean;\n  size?: 'medium' | 'small';\n  className?: string;\n  required?: boolean;\n  disableDefaultValue?: boolean;\n};\n\nconst CustomSelect = ({\n  onChange,\n  data,\n  label,\n  selectedValue,\n  disabled,\n  size = 'medium',\n  className,\n  required,\n  disableDefaultValue,\n}: Props) => {\n  const [selected, setSelected] = useState(selectedValue || '');\n\n  useEffect(() => {\n    setSelected(selectedValue || '');\n  }, [selectedValue]);\n\n  const handleChange = (event: any) => {\n    const val = event.target.value;\n    setSelected(val);\n    onChange(val);\n  };\n\n  return (\n    <FormControl variant=\"outlined\" className={`customSelect ${className || ''}`} size={size}>\n      <InputLabel>{label}</InputLabel>\n      <Select\n        error={required && !selected}\n        value={selected}\n        onChange={handleChange}\n        disabled={disabled || data.length === 0}\n        defaultValue=\"\"\n      >\n        {!disableDefaultValue && (\n          <MenuItem value=\"\">\n            <em>Выбрать</em>\n          </MenuItem>\n        )}\n        {data.map(({ id, title }: Data) => (\n          <MenuItem value={id} key={id}>\n            {title}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default memo(CustomSelect);\n","/* eslint-disable no-unused-vars */\n/* eslint-disable react/react-in-jsx-scope */\nimport React, { useState, useEffect } from 'react';\nimport './index.scss';\nimport { TextField } from '@material-ui/core';\n\ntype Props = {\n  label: string;\n  value?: string | number | null;\n  onChange?: (value: string) => void;\n  type?: string;\n  disabled?: boolean;\n  required?: boolean;\n};\n\nconst CustomInput = ({\n  label,\n  onChange,\n  value = '',\n  type = 'string',\n  disabled,\n  required,\n}: Props) => {\n  const [text, setText] = useState(value || '');\n\n  useEffect(() => {\n    setText(value || '');\n  }, [value]);\n\n  const handleChange = (event: any) => {\n    setText(event.target.value);\n    onChange && onChange(event.target.value);\n  };\n\n  return (\n    <TextField\n      error={required && !text}\n      label={label}\n      variant=\"outlined\"\n      value={text}\n      onChange={handleChange}\n      type={type}\n      className=\"custom-input\"\n      disabled={disabled || false}\n    />\n  );\n};\n\nexport default CustomInput;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable prettier/prettier */\nimport React, { useEffect, useState, memo } from 'react';\nimport { FormControlLabel, Switch } from '@material-ui/core';\nimport './index.scss';\n\ntype Props = {\n  label: string\n  onChange: (val: boolean) => void;\n  selected: boolean;\n  disabled?: boolean;\n};\n\nconst CustomSwitch = ({\n  label,\n  onChange,\n  selected,\n  disabled\n}: Props) => {\n  const [value, setValue] = useState(selected);\n\n  const handleChange = (event: any) => {\n    setValue(event.target.checked);\n    onChange(event.target.checked);\n  };\n\n  useEffect(() => {\n    setValue(selected);\n  }, [selected]);\n\n  return (\n    <FormControlLabel\n      control={(\n        <Switch\n          checked={value}\n          onChange={handleChange}\n          name=\"checkedB\"\n          color=\"primary\"\n        />\n      )}\n      label={label}\n      labelPlacement=\"start\"\n      className=\"custom-switch\"\n      disabled={disabled || false}\n    />\n  );\n};\n\nexport default memo(CustomSwitch);\n","/* eslint-disable implicit-arrow-linebreak */\nimport { useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setModalInfo } from '../../store/main/actions';\nimport { State } from '../../store/types';\n\nexport const useModal = () => {\n  const dispatch = useDispatch();\n  const { modalInfo } = useSelector((state: State) => state.main);\n\n  const modalProps = useMemo(\n    () => ({\n      ...modalInfo,\n      handleClose: () =>\n        dispatch(\n          setModalInfo({\n            ...modalInfo,\n            open: false,\n          })\n        ),\n    }),\n    [modalInfo]\n  );\n\n  return modalProps;\n};\n","import React from 'react';\nimport './index.scss';\nimport MModal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\ntype Props = {\n  open: boolean;\n  handleClose: () => void;\n  success: boolean;\n  message: string;\n};\n\n// eslint-disable-next-line prettier/prettier\nconst Modal = ({\n  open, handleClose, success, message\n}: Props) => (\n  <MModal\n    className=\"modal-container\"\n    open={open}\n    onClose={handleClose}\n    closeAfterTransition\n    BackdropComponent={Backdrop}\n    BackdropProps={{\n      timeout: 500,\n    }}\n  >\n    <Fade in={open}>\n      <div className={`modal ${success ? 'modal-success' : 'modal-failed'}`}>\n        <p className=\"message\">{message}</p>\n      </div>\n    </Fade>\n  </MModal>\n);\n\nexport default Modal;\n","/* eslint-disable react/require-default-props */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/no-unused-prop-types */\nimport React, { useState, memo, useEffect } from 'react';\nimport './index.scss';\nimport { v4 as uuidv4 } from 'uuid';\n\ntype Button = {\n  id: number | string;\n  title: string;\n};\n\ntype Props = {\n  buttons: Button[];\n  unicId: string;\n  onChange: (id: number | string) => void;\n  selected?: number | string | null;\n};\n\nexport const RadioButtonsGroup = ({\n  buttons,\n  onChange,\n  selected,\n  unicId,\n}: Props) => {\n  const [selectedValue, setSelectedValue] = useState(selected || buttons[0].id);\n\n  useEffect(() => {\n    setSelectedValue(selected || buttons[0].id);\n    onChange(selected || buttons[0].id);\n  }, [selected]);\n\n  const handleChange = (id: number | string) => {\n    setSelectedValue(id);\n    onChange(id);\n  };\n\n  return (\n    <div className=\"radio-buttons-group\">\n      {buttons.map(({ id, title }: Button) => (\n        <div\n          key={uuidv4()}\n          className={`radio-buttons-group__element ${\n            buttons.length === 1 ? 'edit' : ''\n          }`}\n        >\n          <input\n            type=\"radio\"\n            id={unicId + title}\n            value={id}\n            // eslint-disable-next-line eqeqeq\n            checked={selectedValue == id}\n            onChange={() => handleChange(id)}\n            className=\"input\"\n          />\n          <label htmlFor={unicId + title} className=\"label\">\n            {title}\n          </label>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioButtonsGroup);\n","import React, { useState, useEffect } from 'react';\n\nconst useDebounce = (value: string, delay: number) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value]);\n\n  return debouncedValue;\n};\n\nexport default useDebounce;\n","import * as React from 'react';\nimport './index.scss';\nimport { Link } from 'react-router-dom';\n\nimport { useHeader } from './useHeader';\n\nconst Header = () => {\n  const { onSearch, onLogout, searchText } = useHeader();\n\n  return (\n    <div className=\"header container\">\n      <Link to=\"/\" className=\"header__logo\">\n        <img src=\"/icons/logo.svg\" alt=\"logo\" />\n      </Link>\n      <div className=\"header__search\">\n        <input\n          type=\"text\"\n          placeholder=\"Пошук...\"\n          onChange={onSearch}\n          value={searchText}\n        />\n        <img src=\"/icons/search.svg\" alt=\"search\" />\n      </div>\n      <div className=\"header__control\">\n        <img src=\"/icons/log-out.svg\" alt=\"logout\" onClick={onLogout} />\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport {\n  ChangeEvent, useState, useEffect, useCallback\n} from 'react';\nimport { setUser } from '../../store/main/actions';\nimport { searchAppointments } from '../../store/appointments/actions';\nimport useDebounce from './utils/useDebounce';\n\nexport const useHeader = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [searchText, setSearchText] = useState<string>('');\n  const [count, setCount] = useState<number>(0);\n\n  const debouncedValue = useDebounce(searchText, 1000);\n\n  useEffect(() => {\n    if (!count) {\n      setCount((prev: number) => prev + 1);\n      return;\n    }\n\n    dispatch(searchAppointments(debouncedValue));\n  }, [debouncedValue]);\n\n  const onSearch = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value);\n  }, [searchText]);\n\n  const onLogout = useCallback(() => {\n    localStorage.clear();\n    dispatch(setUser({ type: null, token: null }));\n    history.push('/');\n  }, []);\n\n  return { onSearch, onLogout, searchText };\n};\n","/* eslint-disable no-unused-vars */\n/* eslint-disable react/react-in-jsx-scope */\nimport React, { useState, useEffect } from 'react';\nimport './index.scss';\nimport InputMask from 'react-input-mask';\nimport { TextField } from '@material-ui/core';\n\ntype Props = {\n  label: string;\n  value?: string | number | null;\n  onChange?: (value: string) => void;\n  disabled?: boolean;\n  required?: boolean;\n};\n\nconst PhoneMaskInput = ({\n  label,\n  onChange,\n  value = '',\n  disabled,\n}: Props) => {\n  const [text, setText] = useState(value || '');\n\n  useEffect(() => {\n    setText(value || '');\n  }, [value]);\n\n  const handleChange = (event: any) => {\n    setText(event.target.value);\n    onChange && onChange(event.target.value);\n  };\n\n  return (\n    <InputMask\n      className=\"custom-input\"\n      mask=\"+38(999)999-99-99\"\n      value={text}\n      disabled={disabled || false}\n      onChange={handleChange}\n    >\n      {() => <TextField variant=\"outlined\" label={label} disabled={disabled || false} />}\n    </InputMask>\n  );\n};\n\nexport default PhoneMaskInput;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport './index.scss';\n\ntype Props = {\n  onClick: () => void;\n  disabled?: boolean;\n};\n\nconst AddFormButton = ({ onClick, disabled }: Props) => {\n  const handleClick = () => {\n    if (disabled) return;\n    onClick();\n  };\n\n  return (\n    <div\n      className={`add-form-button ${disabled ? 'disabled' : ''}`}\n      onClick={handleClick}\n      onKeyPress={handleClick}\n    >\n      <img src=\"/icons/plus.svg\" alt=\"plus\" />\n    </div>\n  );\n};\n\nexport default AddFormButton;\n","export { default } from './RadioButtonsGroup';\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport './index.scss';\n\ntype Props = {\n  onClick: (index: number) => void;\n  index: number;\n  disabled?: boolean;\n};\n\nconst RemoveFormButton = ({ onClick, index, disabled }: Props) => {\n  const handleClick = () => {\n    if (disabled) return;\n    onClick(index);\n  };\n\n  return (\n    <div\n      className={`remove-form-button ${disabled ? 'disabled' : ''}`}\n      onClick={handleClick}\n      onKeyPress={() => onClick(index)}\n    >\n      <img src=\"/icons/minus.svg\" alt=\"minus\" />\n    </div>\n  );\n};\n\nexport default RemoveFormButton;\n","import React from 'react';\nimport './index.scss';\nimport CustomSelect from '../CustomSelect';\nimport { useFilter, Props } from './useFilter';\n\nconst Filter = (props: Props) => {\n  const meta = useFilter(props);\n\n  if (!meta.shouldRenderFilter) {\n    return null;\n  }\n\n  return (\n    <div className={`filter ${props.horizontal ? 'horizontal' : ''}`}>\n      {!props.horizontal && (\n        <div className=\"filter__header\">\n          <span className=\"title\">Фільтр</span>\n          <img\n            src=\"/icons/clear-form.svg\"\n            alt=\"clear form\"\n            onClick={meta.clearAll}\n            className=\"filter__clear\"\n          />\n        </div>\n      )}\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '115px' : '100%' }}>\n        <CustomSelect\n          data={meta.notaries}\n          selectedValue={meta.selectedNotary}\n          onChange={meta.setSelectedNotary}\n          label=\"Нотаріус\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '90px' : '100%' }}>\n        <CustomSelect\n          data={meta.readers}\n          selectedValue={meta.selectedReader}\n          onChange={meta.setSelectedReader}\n          label=\"Читач\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '110px' : '100%' }}>\n        <CustomSelect\n          data={meta.accompanyings}\n          selectedValue={meta.selectedAccompanying}\n          onChange={meta.setSelectedAccompanying}\n          label=\"Видавач\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '150px' : '100%' }}>\n        <CustomSelect\n          data={meta.contractTypes}\n          selectedValue={meta.selectedContractType}\n          onChange={meta.setSelectedContractType}\n          label=\"Тип договору\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '140px' : '100%' }}>\n        <CustomSelect\n          data={meta.developers}\n          selectedValue={meta.selectedDeveloper}\n          onChange={meta.setSelectedDeveloper}\n          label=\"Забудовник\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '125px' : '100%' }}>\n        <CustomSelect\n          data={meta.representative}\n          selectedValue={meta.selectedRepresentative}\n          onChange={meta.setSelectedRepresentative}\n          label=\"Підписант\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      {!props.horizontal && (\n        <div\n          className=\"filter__select\"\n        >\n          <CustomSelect\n            data={meta.sortType}\n            selectedValue={meta.selectedSortType}\n            onChange={meta.setSelectedSortType}\n            label=\"Сортувати\"\n            size=\"medium\"\n          />\n        </div>\n      )}\n\n      {props.horizontal && (\n        <div className=\" df\">\n          <img\n            src=\"/icons/clear-form.svg\"\n            alt=\"clear form\"\n            onClick={meta.clearAll}\n            className=\"filter__clear\"\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Filter;\n","import {\n  useEffect, useMemo, useState, useCallback\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FilterData, State } from '../../store/types';\nimport { SelectItem } from '../../types';\nimport { fetchFilterData } from '../../store/filter/actions';\nimport getDeveloperInfo from '../../services/getDeveloperInfo';\n\nexport type Props = {\n  onFilterDataChange: (data: FilterData) => void;\n  horizontal?: boolean;\n}\n\nexport const useFilter = ({ onFilterDataChange, horizontal }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n  const { filterInitialData } = useSelector((state: State) => state.filter);\n\n  useEffect(() => {\n    dispatch(fetchFilterData());\n  }, [token]);\n\n  const readers = useMemo(() => filterInitialData?.reader, [filterInitialData]);\n  const notaries = useMemo(() => filterInitialData?.notary, [\n    filterInitialData,\n  ]);\n  const accompanyings = useMemo(() => filterInitialData?.accompanying, [\n    filterInitialData,\n  ]);\n  const contractTypes = useMemo(() => filterInitialData?.contract_type, [\n    filterInitialData,\n  ]);\n  const developers = useMemo(() => filterInitialData?.developer, [\n    filterInitialData,\n  ]);\n  const sortType = useMemo(() => filterInitialData?.sort_type, [\n    filterInitialData,\n  ]);\n  const [representative, setRepresentative] = useState<SelectItem[]>([]);\n\n  const shouldRenderFilter = useMemo(() => Boolean(filterInitialData), [\n    filterInitialData,\n  ]);\n\n  // selected values and CTA\n  const [selectedNotary, setSelectedNotary] = useState<string | null>(null);\n  const [selectedReader, setSelectedReader] = useState<string | null>(null);\n  const [selectedAccompanying, setSelectedAccompanying] = useState<\n    string | null\n  >(null);\n  const [selectedContractType, setSelectedContractType] = useState<\n    string | null\n  >(null);\n  const [selectedDeveloper, setSelectedDeveloper] = useState<string | null>(\n    null\n  );\n  const [selectedRepresentative, setSelectedRepresentative] = useState<\n    string | null\n  >(null);\n  const [selectedSortType, setSelectedSortType] = useState<string | null>(null);\n\n  const clearAll = useCallback(() => {\n    setSelectedNotary(null);\n    setSelectedReader(null);\n    setSelectedAccompanying(null);\n    setSelectedContractType(null);\n    setSelectedDeveloper(null);\n    setSelectedRepresentative(null);\n    setSelectedSortType(null);\n  }, []);\n\n  // useEffects\n  useEffect(() => {\n    setSelectedRepresentative(null);\n    if (token && selectedDeveloper) {\n      getDeveloperInfo(token, +selectedDeveloper)\n        .then((data) => setRepresentative(data.representative || []));\n    }\n  }, [selectedDeveloper]);\n\n  useEffect(() => {\n    const data: FilterData = {\n      notary_id: selectedNotary || null,\n      reader_id: selectedReader || null,\n      accompanying_id: selectedAccompanying || null,\n      contract_type_id: selectedContractType || null,\n      developer_id: selectedDeveloper || null,\n      dev_representative_id: selectedRepresentative || null,\n    };\n\n    if (!horizontal) {\n      data.sort_type = selectedSortType;\n    }\n\n    onFilterDataChange(data);\n  }, [\n    selectedNotary,\n    selectedReader,\n    selectedAccompanying,\n    selectedContractType,\n    selectedDeveloper,\n    selectedRepresentative,\n    selectedSortType,\n  ]);\n\n  return {\n    shouldRenderFilter,\n    notaries,\n    readers,\n    accompanyings,\n    contractTypes,\n    developers,\n    representative,\n    sortType,\n    selectedNotary,\n    selectedReader,\n    selectedRepresentative,\n    selectedDeveloper,\n    selectedContractType,\n    selectedAccompanying,\n    selectedSortType,\n    setSelectedNotary,\n    setSelectedReader,\n    setSelectedAccompanying,\n    setSelectedContractType,\n    setSelectedDeveloper,\n    setSelectedRepresentative,\n    setSelectedSortType,\n    clearAll,\n  };\n};\n","const formatAppointmentDate = (\n  hours: any,\n  rooms: any,\n  days: any,\n  raw: number,\n  cell: number\n) => {\n  const { day, date, year } = days[Math.floor(raw / hours.length)];\n  const { time } = hours[raw % hours.length];\n  const room = rooms[cell].id;\n  return {\n    day,\n    date: date.split('.').reverse().join('.'),\n    year,\n    time,\n    room,\n  };\n};\n\nexport default formatAppointmentDate;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport './SchedulerDay.scss';\n\nconst SchedulerDay = ({ day, hours }) => (\n  <div className=\"scheduler__weekDay\">\n    <div className=\"scheduler__day\">\n      <p>\n        {day.day}\n        <br />\n        {day.date}\n      </p>\n    </div>\n    <div className=\"scheduler__timeLine\">\n      {hours.map(({ time }) => (\n        <p key={time}>{time}</p>\n      ))}\n    </div>\n  </div>\n);\n\nexport default SchedulerDay;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './GridLayout.scss';\nimport RGL, { WidthProvider } from 'react-grid-layout';\nimport $ from 'jquery';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useSelector } from 'react-redux';\nimport ReactHtmlParser from 'react-html-parser';\nimport { State } from '../../../../../../../../store/types';\n\nconst ReactGridLayout = WidthProvider(RGL);\n\nexport default function GridLayout({\n  appointments,\n  cols,\n  handleDrag,\n  handleClick,\n}) {\n  const [dragAndDropWidth, setDragAndDropWidth] = useState(1200);\n  const { schedulerLock } = useSelector((state) => state.scheduler);\n  const oldSelectedAppointment = useSelector(\n    (state) => state.scheduler.oldSelectedAppointment\n  );\n\n  useEffect(() => {\n    setDragAndDropWidth($('.scheduler__appointments').width());\n  }, []);\n\n  const onDrag = (all, current) => {\n    const currentApp = all.find((item) => item.i === current.i);\n    handleDrag(currentApp);\n    handleClick(currentApp);\n  };\n\n  const isSelected = useCallback((raw, cell) => oldSelectedAppointment?.raw === raw\n    && oldSelectedAppointment?.cell === cell, [oldSelectedAppointment]);\n\n  if (!appointments) {\n    return <span>Loading...</span>;\n  }\n\n  return (\n    <ReactGridLayout\n      className=\"scheduler__dragAndDrop\"\n      cols={cols}\n      rowHeight={80}\n      width={dragAndDropWidth}\n      margin={[0, 0]}\n      containerPadding={[0, 0]}\n      verticalCompact={false}\n      preventCollision\n      layout={appointments}\n      onDragStop={onDrag}\n      isDraggable={!schedulerLock}\n    >\n      {appointments.map((appointment) => (\n        <div\n          key={appointment.i}\n          className=\"appointment\"\n          style={{\n            borderLeft: `4px solid ${appointment.color}`,\n            backgroundColor: isSelected(appointment.y, appointment.x) ? appointment.color : ''\n          }}\n          onClickCapture={() => handleClick(appointment)}\n        >\n          <div className=\"appointment__title\">{ReactHtmlParser(appointment.title)}</div>\n          <table className=\"appointment__table\">\n            <tbody>\n              <tr>\n                {Object.values(appointment.short_info).map((item) => (\n                  <td key={uuidv4()}>{item}</td>\n                ))}\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      ))}\n    </ReactGridLayout>\n  );\n}\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React from 'react';\nimport { Props, useGridTableCell } from './useGridTableCell';\n\nconst GridLayoutCell = (props: Props) => {\n  const { onClick } = useGridTableCell(props);\n\n  return (\n    <td\n      onClick={onClick}\n      style={{\n        width: `calc(100% / ${props.rowsQuantity})`,\n        backgroundColor: props.selected ? '#E5E5E5' : '',\n      }}\n    />\n  );\n};\n\nexport default GridLayoutCell;\n","/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable operator-linebreak */\nimport { useMemo, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { State } from '../../../../../../../../store/types';\nimport formatAppointmentDate from '../../utils/formatAppointmentDate';\nimport { setSelectedNewAppointment } from '../../../../../../../../store/scheduler/actions';\n\nexport type Props = {\n  rowsQuantity: number;\n  raw: number;\n  cell: number;\n  selected: boolean;\n};\n\nexport const useGridTableCell = ({ raw, cell }: Props) => {\n  const { options } = useSelector((state: State) => state.scheduler);\n  const dispatch = useDispatch();\n\n  const rooms = useMemo(() => options?.rooms, [options]);\n  const hours = useMemo(() => options?.work_time, [options]);\n  const days = useMemo(() => options?.day_and_date, [options]);\n\n  const onClick = useCallback(() => {\n    const payload = formatAppointmentDate(hours, rooms, days, raw, cell);\n    const isBefore = moment(\n      `${payload.year}.${payload.date}. ${payload.time}`\n    ).isBefore(moment());\n\n    if (isBefore) return;\n    dispatch(setSelectedNewAppointment({\n      ...payload,\n      raw,\n      cell,\n      date: payload.date\n    }));\n  }, [hours, rooms, days, raw, cell]);\n\n  return { onClick };\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport GridTableCell from '../GridTableCell/GridTableCell';\nimport { Props, useGridTable } from './useGridTable';\n\nexport default function GridTable({ rows, columns }: Props) {\n  const { newSelectedAppointment } = useGridTable();\n\n  return (\n    <div className=\"scheduler__bodyTable\">\n      <table>\n        <tbody>\n          {rows.map((_: any, rowIndex: number) => (\n            <tr key={uuidv4()}>\n              {columns.map((day: any, cellIndex: number) => (\n                <GridTableCell\n                  selected={\n                    // eslint-disable-next-line prettier/prettier\n                    newSelectedAppointment?.raw === rowIndex\n                    // eslint-disable-next-line prettier/prettier\n                    && newSelectedAppointment?.cell === cellIndex\n                  }\n                  rowsQuantity={rows.length}\n                  raw={rowIndex}\n                  cell={cellIndex}\n                  key={uuidv4()}\n                />\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { State } from '../../../../../../../../store/types';\n\nexport type Props = {\n  rows: any;\n  columns: any;\n};\n\nexport const useGridTable = () => {\n  const newSelectedAppointment = useSelector(\n    (state: State) => state.scheduler.newSelectedAppointment\n  );\n\n  return { newSelectedAppointment };\n};\n","import React from 'react';\nimport './index.scss';\nimport { v4 as uuidv4 } from 'uuid';\n\n// components\nimport { useSchedulerTable } from './useSchedulerTable';\nimport Loader from '../../../../../../components/Loader/Loader';\nimport SchedulerDay from './components/SchedulerDay/SchedulerDay';\nimport GridLayout from './components/GridLayout/GridLayout';\nimport GridTable from './components/GridTable/GridTable';\n\nconst SchedulerTable = () => {\n  const {\n    shouldLoad,\n    rooms,\n    hours,\n    tableRows,\n    tableColumns,\n    days,\n    appointments,\n    handleAppointmentDrag,\n    onAppointmentClick,\n  } = useSchedulerTable();\n\n  if (shouldLoad) {\n    return (\n      <div className=\"scheduler\">\n        <Loader />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"scheduler\">\n      <div className=\"scheduler__header\">\n        <div />\n        <div>\n          <table>\n            <tbody>\n              <tr>\n                {rooms.map(({ title }: any) => (\n                  <td\n                    key={title}\n                    style={{ width: `calc(100% / ${rooms.length})` }}\n                  >\n                    {title}\n                  </td>\n                ))}\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <div className=\"scheduler__body\">\n        <div className=\"scheduler__dayBar\">\n          {days.map((item: any) => (\n            <SchedulerDay day={item} hours={hours} key={uuidv4()} />\n          ))}\n        </div>\n        <div className=\"scheduler__appointments\">\n          <GridTable rows={tableRows} columns={tableColumns} />\n          <GridLayout\n            appointments={appointments}\n            cols={tableColumns.length}\n            handleDrag={handleAppointmentDrag}\n            handleClick={onAppointmentClick}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SchedulerTable;\n","import { useCallback, useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UserTypes } from '../../../../../../types';\nimport {\n  setSelectedOldAppointment,\n  fetchCalendarCard,\n  fetchSchedulerSettings,\n  moveCalendarCard,\n} from '../../../../../../store/scheduler/actions';\nimport { fetchAppointments, setAppointments } from '../../../../../../store/appointments/actions';\nimport { State } from '../../../../../../store/types';\nimport formatAppointmentDate from './utils/formatAppointmentDate';\n\nexport const useSchedulerTable = () => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n  const { options, isLoading } = useSelector((state: State) => state.scheduler);\n  const { appointments } = useSelector((state: State) => state.appointments);\n\n  useEffect(() => {\n    if (!isLoading) {\n      dispatch(fetchSchedulerSettings());\n      dispatch(fetchAppointments());\n    }\n\n    return () => { dispatch(setAppointments([])); };\n  }, [token]);\n\n  const rooms = useMemo(() => options?.rooms, [options]);\n  const hours = useMemo(() => options?.work_time, [options]);\n\n  const shouldLoad = useMemo(() => isLoading || !options, [\n    isLoading,\n    rooms,\n    hours,\n  ]);\n\n  const tableColumns = useMemo(() => new Array(rooms?.length || 0).fill(1), [\n    rooms,\n  ]);\n\n  const days = useMemo(() => options?.day_and_date, [options]);\n\n  const tableRows = useMemo(\n    () => new Array(hours?.length * days?.length || 0).fill(1),\n    [hours]\n  );\n\n  const handleAppointmentDrag = useCallback(\n    (appointment) => {\n      const payload = formatAppointmentDate(\n        hours,\n        rooms,\n        days,\n        appointment.y,\n        appointment.x\n      );\n\n      const date_time = `${payload.year}.${payload.date}. ${payload.time}`;\n\n      const data = {\n        date_time,\n        room_id: payload.room,\n      };\n\n      dispatch(moveCalendarCard(data, appointment.i));\n    },\n    [hours, days, rooms, days]\n  );\n\n  const onAppointmentClick = useCallback(\n    async ({ x, y, i }: any) => {\n      const payload = formatAppointmentDate(hours, rooms, days, y, x);\n\n      dispatch(fetchCalendarCard(i));\n\n      dispatch(\n        setSelectedOldAppointment({\n          ...payload,\n          raw: y,\n          cell: x,\n          i,\n          date: payload.date,\n        })\n      );\n    },\n    [hours, rooms, days]\n  );\n\n  return {\n    shouldLoad,\n    rooms,\n    hours,\n    tableRows,\n    tableColumns,\n    days,\n    appointments,\n    handleAppointmentDrag,\n    onAppointmentClick,\n  };\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { State } from '../../../../../../../store/types';\n\nexport const QuantityLabel = () => {\n  const { appointments } = useSelector((state: State) => state.appointments);\n\n  return (\n    <span style={{ whiteSpace: 'nowrap' }}>\n      {`В роботі: ${appointments?.length}`}\n    </span>\n  );\n};\n\nexport default QuantityLabel;\n","import * as React from 'react';\nimport Filter from '../../../../../../../../components/Filter';\nimport { useSchedulerFilter } from './useSchedulerFilter';\n\nconst SchedulerFilter = () => {\n  const { onFilterDataChange } = useSchedulerFilter();\n\n  return (\n    <Filter onFilterDataChange={onFilterDataChange} horizontal />\n  );\n};\n\nexport default SchedulerFilter;\n","import { useDispatch } from 'react-redux';\nimport { useCallback, useState } from 'react';\nimport { FilterData } from '../../../../../../../../store/types';\nimport { fetchAppointmentsByFilter } from '../../../../../../../../store/appointments/actions';\n\nexport const useSchedulerFilter = () => {\n  const [shouldRender, setShouldRender] = useState<boolean>(false);\n  const dispatch = useDispatch();\n\n  const onFilterDataChange = useCallback((data: FilterData) => {\n    if (!shouldRender) {\n      setShouldRender(true);\n      return;\n    }\n\n    dispatch(fetchAppointmentsByFilter(data));\n  }, [shouldRender]);\n\n  return { onFilterDataChange };\n};\n","import React from 'react';\nimport { useSchedulerLock } from './useSchedulerLock';\nimport './index.scss';\n\nconst SchedulerLock = () => {\n  const { onClick, schedulerLock } = useSchedulerLock();\n\n  return (\n    <div className={`scheduler__lock-button ${schedulerLock ? '' : 'unLock'}`}>\n      <img src=\"/icons/lock.svg\" alt=\"lock\" onClick={onClick} />\n    </div>\n  );\n};\n\nexport default SchedulerLock;\n","import { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSchedulerLock } from '../../../../../../../../store/scheduler/actions';\nimport { State } from '../../../../../../../../store/types';\n\nexport const useSchedulerLock = () => {\n  const dispatch = useDispatch();\n  const { schedulerLock } = useSelector((state: State) => state.scheduler);\n\n  const onClick = useCallback(() => {\n    dispatch(setSchedulerLock(!schedulerLock));\n  }, [schedulerLock]);\n\n  return { onClick, schedulerLock };\n};\n","import React from 'react';\nimport Filter from '../../../../../../components/Filter';\nimport QuantityLabel from './components/QuantityLabel';\nimport SchedulerFilter from './components/SchedulerFilter';\nimport SchedulerLock from './components/SchedulerLock';\nimport './index.scss';\n\nconst SchedulerFilterContainer = () => (\n  <div className=\"scheduler__filter\">\n    <QuantityLabel />\n    <SchedulerFilter />\n    <SchedulerLock />\n  </div>\n);\n\nexport default SchedulerFilterContainer;\n","/* eslint-disable react/destructuring-assignment */\nimport React, { memo } from 'react';\nimport './index.scss';\nimport { v4 as uuidv4 } from 'uuid';\nimport AddFormButton from '../../../../../../../../../../components/AddFormButton';\nimport CustomInput from '../../../../../../../../../../components/CustomInput/CustomInput';\nimport RemoveFormButton from '../../../../../../../../../../components/RemoveFormButton';\nimport { Props, useClients } from './useClients';\nimport PhoneMaskInput from '../../../../../../../../../../components/PhoneMaskInput';\n\nconst Clients = (props: Props) => {\n  const meta = useClients(props);\n\n  return (\n    <div className=\"mv12\">\n      {props.clients.map((item, index) => (\n        <div className=\"clients__item mv12\">\n          <CustomInput\n            label=\"ПІБ\"\n            value={item.full_name}\n            onChange={(val) => meta.onNameChange(index, val)}\n            disabled={props.disabled || false}\n          />\n\n          <div className=\"mv12 df-jc-sb\">\n            <PhoneMaskInput\n              label=\"Номер телефону\"\n              value={item.phone}\n              onChange={(val) => meta.onPhoneChange(index, val)}\n              disabled={props.disabled || false}\n            />\n\n            {props.clients.length > 1 && (\n              <div style={{ marginLeft: '12px' }}>\n                <RemoveFormButton\n                  onClick={props.onRemove}\n                  index={index}\n                  disabled={props.disabled || false}\n                />\n              </div>\n            )}\n\n            {index === props.clients.length - 1 && (\n              <div style={{ marginLeft: '12px' }}>\n                <AddFormButton\n                  onClick={props.onAdd}\n                  disabled={props.disabled || false}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(Clients);\n","import { useCallback } from 'react';\nimport { CodeFixAction } from 'typescript';\nimport { ClientItem } from '../../../../../../../../../../types';\n\nexport type Props = {\n  clients: ClientItem[];\n  onChange: (index: number, value: ClientItem) => void;\n  onAdd: () => void;\n  onRemove: (index: number) => void;\n  disabled?: boolean;\n};\n\nexport const useClients = ({ onChange, clients }: Props) => {\n  const onPhoneChange = useCallback(\n    (index: number, value: string) => {\n      onChange(index, {\n        ...clients[index],\n        phone: value,\n      });\n    },\n    [clients]\n  );\n\n  const onNameChange = useCallback(\n    (index: number, value: string) => {\n      onChange(index, {\n        ...clients[index],\n        full_name: value,\n      });\n    },\n    [clients]\n  );\n\n  return { onPhoneChange, onNameChange };\n};\n","/* eslint-disable prettier/prettier */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable no-unused-vars */\nimport React, { memo } from 'react';\nimport './index.scss';\nimport { v4 as uuidv4 } from 'uuid';\nimport AddFormButton from '../../../../../../../../../../components/AddFormButton';\nimport CustomInput from '../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../components/CustomSelect';\nimport CustomSwitch from '../../../../../../../../../../components/CustomSwitch';\nimport RadioButtonsGroup from '../../../../../../../../../../components/RadioButtonsGroup';\nimport RemoveFormButton from '../../../../../../../../../../components/RemoveFormButton';\nimport { ImmovableItem } from '../../../../../../../../../../types';\nimport { useImmovableContainer, Props } from './useImmovableContainer';\n\nconst ImmovableContainer = (props: Props) => {\n  const meta = useImmovableContainer(props);\n  return (\n    <div className=\"mv12 immovables__group\">\n      {props.immovables.map((item: ImmovableItem, index: number) => (\n        <div className=\"immovables__item mv12\">\n          <RadioButtonsGroup\n            buttons={\n              props.disabled\n                ? meta.contracts.filter(\n                  ({ id }: any) => id === (item.contract_type_id || meta.contracts[0].id)\n                )\n                : meta.contracts\n            }\n            onChange={(val) => meta.onContractChange(index, +val)}\n            selected={item.contract_type_id}\n            unicId={`contract-${index}`}\n          />\n\n          <div className=\"mv12\">\n            <CustomSelect\n              required\n              onChange={(val) => meta.onBuildingChange(index, val)}\n              data={meta.building}\n              label=\"Будинок\"\n              selectedValue={item.building_id}\n              disabled={props.disabled || false}\n            />\n          </div>\n\n          <RadioButtonsGroup\n            buttons={\n              props.disabled\n                ? meta.immovableTypes.filter(\n                  ({ id }: any) => id === (item.imm_type_id || meta.immovableTypes[0].id)\n                )\n                : meta.immovableTypes\n            }\n            onChange={(val) => meta.onImmovableTypeChange(index, +val)}\n            selected={item.imm_type_id}\n            unicId={`types-${index}`}\n          />\n\n          <div className=\"mv12\">\n            <CustomSwitch\n              label=\"Банк\"\n              onChange={(val) => meta.onBankChange(index, val)}\n              selected={item.bank}\n              disabled={props.disabled}\n            />\n          </div>\n\n          <div className=\"mv12\">\n            <CustomSwitch\n              label=\"Довіреність\"\n              onChange={(val) => meta.onProxyChange(index, val)}\n              selected={item.proxy}\n              disabled={props.disabled}\n            />\n          </div>\n\n          <div className=\"mv12 df-jc-sb\">\n            <CustomInput\n              required\n              label=\"Номер нерухомості\"\n              onChange={(val) => meta.onImmNumChange(index, val)}\n              value={item.imm_number}\n              disabled={props.disabled}\n            />\n\n            {props.immovables.length > 1 && (\n              <div style={{ marginLeft: '12px' }}>\n                <RemoveFormButton\n                  onClick={props.onRemove}\n                  index={index}\n                  disabled={props.disabled}\n                />\n              </div>\n            )}\n\n            {index === props.immovables.length - 1 && (\n              <div style={{ marginLeft: '12px' }}>\n                <AddFormButton\n                  onClick={props.onAdd}\n                  disabled={props.disabled}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(ImmovableContainer);\n","import { useMemo, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport { State } from '../../../../../../../../../../store/types';\nimport {\n  ImmovableItem,\n  ImmovableItems,\n} from '../../../../../../../../../../types';\n\nexport type Props = {\n  immovables: ImmovableItems;\n  onChange: (index: number, value: ImmovableItem) => void;\n  onAdd: () => void;\n  onRemove: (index: number) => void;\n  disabled?: boolean;\n};\n\nexport const useImmovableContainer = ({ immovables, onChange }: Props) => {\n  const { options, developersInfo } = useSelector(\n    (state: State) => state.scheduler\n  );\n\n  const building = useMemo(() => developersInfo?.building || [], [\n    developersInfo,\n  ]);\n\n  const contracts = useMemo(() => options?.form_data.contract_type, [options]);\n\n  const immovableTypes = useMemo(() => options?.form_data.immovable_type, [\n    options,\n  ]);\n\n  // onChange functions\n  const onContractChange = useCallback(\n    (index: number, id: number) => {\n      onChange(index, {\n        ...immovables[index],\n        contract_type_id: id,\n      });\n    },\n    [immovables]\n  );\n\n  const onBuildingChange = useCallback(\n    (index: number, id: string) => {\n      onChange(index, {\n        ...immovables[index],\n        building_id: +id,\n      });\n    },\n    [immovables]\n  );\n\n  const onImmovableTypeChange = useCallback(\n    (index: number, id: number) => {\n      onChange(index, {\n        ...immovables[index],\n        imm_type_id: id,\n      });\n    },\n    [immovables]\n  );\n\n  const onBankChange = useCallback(\n    (index: number, val: boolean) => {\n      onChange(index, {\n        ...immovables[index],\n        bank: val,\n      });\n    },\n    [immovables]\n  );\n\n  const onProxyChange = useCallback(\n    (index: number, val: boolean) => {\n      onChange(index, {\n        ...immovables[index],\n        proxy: val,\n      });\n    },\n    [immovables]\n  );\n\n  const onImmNumChange = useCallback(\n    (index: number, val: string) => {\n      onChange(index, {\n        ...immovables[index],\n        imm_number: val,\n      });\n    },\n    [immovables]\n  );\n\n  return {\n    building,\n    contracts,\n    immovableTypes,\n    onContractChange,\n    onBuildingChange,\n    onImmovableTypeChange,\n    onBankChange,\n    onProxyChange,\n    onImmNumChange,\n  };\n};\n","import { ClientItem, ImmovableItem } from '../../../../../../../../types';\n\nexport type ImmovableItemKey = keyof ImmovableItem;\n\nexport const immovableItem: ImmovableItem = {\n  contract_type_id: null,\n  building_id: null,\n  imm_type_id: null,\n  imm_number: null,\n  bank: false,\n  proxy: false,\n};\n\nexport const clientItem: ClientItem = {\n  phone: null,\n  full_name: null,\n};\n","/* eslint-disable indent */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React, { memo } from 'react';\nimport RadioButtonsGroup from '../../../../../../../../components/RadioButtonsGroup';\nimport CustomSelect from '../../../../../../../../components/CustomSelect';\nimport './index.scss';\nimport Clients from './components/Clients/Clients';\nimport PrimaryButton from '../../../../../../../../components/PrimaryButton';\nimport Loader from '../../../../../../../../components/Loader/Loader';\nimport ImmovableContainer from './components/ImmovableContainer';\nimport { useForm, Props } from './useForm';\n\nconst SchedulerForm = (props: Props) => {\n  const meta = useForm(props);\n\n  if (meta.shouldLoad) {\n    return (\n      <div className=\"schedulerForm\">\n        <Loader />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"schedulerForm\">\n      <div className=\"schedulerForm__forms\">\n        <div className=\"schedulerForm__header\">\n          <p className=\"title\">\n            {meta.insideEdit || props.edit\n              ? `Запис № ${props.selectedCard.i}`\n              : 'Новий запис'}\n          </p>\n          {meta.insideEdit ? (\n            <img\n              src=\"/icons/delete.svg\"\n              alt=\"delete\"\n              className=\"clear-icon\"\n              onClick={meta.onDeleteCard}\n            />\n          ) : (\n            <img\n              src=\"/icons/clear.svg\"\n              alt=\"clear\"\n              className=\"clear-icon\"\n              onClick={meta.onClearAll}\n            />\n          )}\n        </div>\n\n        <div className=\"mv12\">\n          <RadioButtonsGroup\n            buttons={\n              meta.insideEdit\n                ? meta.notaries.filter(\n                    ({ id }: any) => id === meta.selectedNotaryId\n                  )\n                : meta.notaries\n            }\n            onChange={meta.onNotaryChange}\n            selected={meta.selectedNotaryId}\n            unicId=\"notaries\"\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomSelect\n            required\n            label=\"Забудовник\"\n            data={meta.developers}\n            onChange={meta.onDeveloperChange}\n            selectedValue={meta.selectedDeveloperId}\n            disabled={meta.insideEdit || false}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomSelect\n            onChange={meta.onRepresentativeChange}\n            data={meta.representative}\n            label=\"Підписант\"\n            selectedValue={meta.selectedDevRepresentativeId}\n            disabled={meta.insideEdit || false}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomSelect\n            onChange={meta.onManagerChange}\n            data={meta.manager}\n            label=\"Менеджер\"\n            selectedValue={meta.selecedDevManagerId}\n            disabled={meta.insideEdit || false}\n          />\n        </div>\n\n        <ImmovableContainer\n          immovables={meta.immovables}\n          onChange={meta.onImmovablesChange}\n          onAdd={meta.onAddImmovables}\n          onRemove={meta.onRemoveImmovable}\n          disabled={meta.insideEdit || false}\n        />\n\n        <Clients\n          clients={meta.clients}\n          onChange={meta.onClientsChange}\n          onAdd={meta.onAddClients}\n          onRemove={meta.onRemoveClient}\n          disabled={meta.insideEdit || false}\n        />\n\n        <div className=\"mv12\">\n          {meta.insideEdit && (\n            <PrimaryButton\n              label=\"Редагувати\"\n              onClick={() => meta.setEdit(false)}\n              disabled={props.edit ? false : !meta.activeAddButton}\n              className=\"schedulerForm__editButton\"\n            />\n          )}\n\n          {!meta.insideEdit && (\n            <PrimaryButton\n              label={`${props.edit ? 'Зберегти' : 'Створити'}`}\n              onClick={meta.onFormCreate}\n              disabled={!meta.activeAddButton}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SchedulerForm);\n","/* eslint-disable prettier/prettier */\n/* eslint-disable arrow-body-style */\nimport {\n  useMemo,\n  useState,\n  useCallback,\n  useEffect\n} from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { State } from '../../../../../../../../store/types';\n\nimport {\n  setDevelopersInfo,\n  setSelectedNewAppointment,\n  createNewCard,\n  editCalendarCard,\n  fetchDeveloperInfo,\n  removeCalendarCard\n} from '../../../../../../../../store/scheduler/actions';\n\nimport { clientItem, immovableItem } from './types';\n\nimport {\n  ClientItem,\n  ImmovableItem,\n  ImmovableItems,\n  NewCard\n} from '../../../../../../../../types';\n\nexport type Props = {\n  selectedCard: any,\n  initialValues?: any,\n  edit?: boolean,\n}\n\nexport const useForm = ({ selectedCard, initialValues, edit }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n  const { options, developersInfo, isLoading } = useSelector(\n    (state: State) => state.scheduler\n  );\n  const [insideEdit, setEdit] = useState<boolean>(edit || false);\n\n  // Form State\n  const [notary, setNotary] = useState<number | null>(initialValues?.card.notary_id || null);\n  const [devCompanyId, setDevCompanyId] = useState<number | null>(null);\n  const [devRepresentativeId, setDevRepresentativeId] = useState<number | null>(null);\n  const [devManagerId, setDevManagerId] = useState<number | null>(null);\n  const [immovables, setImmovables] = useState<ImmovableItems>([immovableItem]);\n  const [clients, setClients] = useState<ClientItem[]>([clientItem]);\n\n  // Form Memo Values\n  const shouldLoad = useMemo(() => isLoading || !options, [options, isLoading]);\n\n  const notaries = useMemo(() => options?.form_data.notary, [options]);\n\n  const developers = useMemo(() => options?.form_data.developer, [options]);\n\n  const manager = useMemo(() => developersInfo?.manager || [], [\n    developersInfo,\n  ]);\n\n  const representative = useMemo(() => developersInfo?.representative || [], [\n    developersInfo,\n  ]);\n\n  // Form onChange functions\n  const onNotaryChange = useCallback((value) => {\n    setNotary(value);\n  }, []);\n\n  useEffect(() => {\n    if (initialValues) {\n      setEdit(true);\n      setNotary(initialValues.card.notary_id);\n      setDevCompanyId(initialValues.card.dev_company_id);\n      setDevRepresentativeId(initialValues.card.dev_representative_id);\n      setDevManagerId(initialValues.card.dev_manager_id);\n      setImmovables(\n        initialValues.immovables.length === 0\n          ? [immovableItem]\n          : initialValues.immovables\n      );\n      setClients(\n        initialValues.clients.length === 0\n          ? [clientItem]\n          : initialValues.clients\n      );\n    }\n\n    if (initialValues?.card.dev_company_id) {\n      dispatch(fetchDeveloperInfo(initialValues.card.dev_company_id));\n    }\n  }, [initialValues]);\n\n  const onDeveloperChange = useCallback(\n    (value) => {\n      setDevCompanyId(value);\n      setDevManagerId(null);\n      setDevRepresentativeId(null);\n      setImmovables((prev) => prev.map((item) => ({ ...item, building_id: null })));\n\n      if (!value) {\n        dispatch(setDevelopersInfo({}));\n      }\n\n      dispatch(fetchDeveloperInfo(value));\n    },\n    []\n  );\n\n  const onRepresentativeChange = useCallback(\n    (value) => {\n      setDevRepresentativeId(value);\n    },\n    [devRepresentativeId]\n  );\n\n  const onManagerChange = useCallback(\n    (value) => {\n      setDevManagerId(value);\n    },\n    [devManagerId]\n  );\n\n  const onImmovablesChange = useCallback(\n    (index: number, value: any) => {\n      immovables[index] = value;\n      setImmovables([...immovables]);\n    },\n    [immovables]\n  );\n\n  const onClientsChange = useCallback(\n    (index: number, value: ClientItem) => {\n      clients[index] = value;\n      setClients([...clients]);\n    },\n    [clients]\n  );\n\n  // Form CTA\n  const onClearAll = useCallback(() => {\n    setNotary(null);\n    setDevCompanyId(null);\n    setDevRepresentativeId(null);\n    setDevManagerId(null);\n    setImmovables([immovableItem]);\n    setClients([clientItem]);\n  }, []);\n\n  const onAddImmovables = useCallback(() => {\n    setImmovables([...immovables, immovableItem]);\n  }, [immovables]);\n\n  const onRemoveImmovable = useCallback((index: number) => {\n    setImmovables((prev) => prev.filter((_, mapIndex) => mapIndex !== index));\n  }, [immovables]);\n\n  const onAddClients = useCallback(() => {\n    setClients([...clients, clientItem]);\n  }, [clients]);\n\n  const onRemoveClient = useCallback((index: number) => {\n    setClients((prev) => prev.filter((_, mapIndex) => mapIndex !== index));\n  }, [clients]);\n\n  const onDeleteCard = useCallback(() => {\n    dispatch(removeCalendarCard(selectedCard.i));\n  }, [selectedCard]);\n\n  const activeAddButton = useMemo(() => {\n    return Boolean(devCompanyId)\n    && immovables.length\n    && immovables.every((item: ImmovableItem) => item.building_id && item.imm_number)\n    && selectedCard;\n  }, [devCompanyId, immovables, selectedCard]);\n\n  const onFormCreate = useCallback(() => {\n    const date_time = `${selectedCard.year}.${selectedCard.date}. ${selectedCard.time}`;\n\n    const formatImmovables = immovables.map((item: ImmovableItem) => ({\n      ...item,\n      contract_type_id: item.contract_type_id || options.form_data.immovable_type[0].id,\n      imm_type_id: item.imm_type_id || options.form_data.immovable_type[0].id,\n    }));\n\n    const data: NewCard = {\n      immovables: formatImmovables,\n      clients,\n      date_time,\n      dev_company_id: devCompanyId,\n      dev_representative_id: devRepresentativeId,\n      dev_manager_id: devManagerId,\n      room_id: selectedCard.room,\n      notary_id: notary || notaries[0].id,\n    };\n\n    if (token) {\n      if (edit) {\n        dispatch(editCalendarCard(data, selectedCard.i));\n        setEdit(true);\n      } else {\n        dispatch(createNewCard(data));\n        dispatch(setSelectedNewAppointment(null));\n        onClearAll();\n      }\n    }\n  }, [\n    devCompanyId,\n    devRepresentativeId,\n    devManagerId,\n    notary,\n    immovables,\n    clients,\n    edit,\n    selectedCard,\n  ]);\n\n  return {\n    shouldLoad,\n    notaries,\n    representative,\n    developers,\n    manager,\n    immovables,\n    clients,\n    activeAddButton,\n    insideEdit,\n    onNotaryChange,\n    onDeveloperChange,\n    onRepresentativeChange,\n    onManagerChange,\n    onImmovablesChange,\n    onAddImmovables,\n    onRemoveImmovable,\n    onRemoveClient,\n    onClientsChange,\n    onAddClients,\n    onClearAll,\n    onFormCreate,\n    setEdit,\n    onDeleteCard,\n    selectedNotaryId: notary,\n    selectedDeveloperId: devCompanyId,\n    selectedDevRepresentativeId: devRepresentativeId,\n    selecedDevManagerId: devManagerId,\n  };\n};\n","import React from 'react';\nimport './index.scss';\nimport Form from './components/Form';\nimport { useSchedulerForm } from './useSchedulerForm';\n\nconst SchedulerForm = () => {\n  const meta = useSchedulerForm();\n\n  return (\n    <div className=\"schedulerForm scheduler__form\">\n      <div className=\"schedulerForm__tabs\">\n        <div\n          className={`item ${meta.selectedTab === 0 ? 'selected' : ''}`}\n          style={{ backgroundColor: !meta.editAppointmentData ? 'white' : '' }}\n          onClick={() => meta.setSelectedTab(0)}\n        >\n          {meta.newSelectedAppointment\n            ? `${meta.newSelectedAppointment.day} ${meta.newSelectedAppointment.time} ${meta.newSelectedAppointment.date.split('.').reverse().join('.')}`\n            : 'Виберіть дату'}\n        </div>\n\n        {meta.oldSelectedAppointment && meta.editAppointmentData && (\n          <div\n            className={`item ${meta.selectedTab === 1 ? 'selected' : ''}`}\n            onClick={() => meta.setSelectedTab(1)}\n          >\n            {`${meta.oldSelectedAppointment.day} ${meta.oldSelectedAppointment.time} ${meta.oldSelectedAppointment.date.split('.').reverse().join('.')}`}\n            <img\n              src=\"/icons/x.svg\"\n              alt=\"close\"\n              className=\"clear-icon\"\n              onClick={meta.onCloseTab}\n            />\n          </div>\n        )}\n      </div>\n\n      {meta.selectedTab === 0 && (\n        <Form selectedCard={meta.newSelectedAppointment} />\n      )}\n\n      {meta.selectedTab === 1 && meta.editAppointmentData && meta.oldSelectedAppointment && (\n        <Form\n          selectedCard={meta.oldSelectedAppointment}\n          initialValues={meta.editAppointmentData}\n          edit\n        />\n      )}\n    </div>\n  );\n};\n\nexport default SchedulerForm;\n","import { useCallback, useState, useEffect } from 'react';\n/* eslint-disable prettier/prettier */\nimport { useSelector, useDispatch } from 'react-redux';\nimport { State } from '../../../../../../store/types';\nimport { setEditAppointmentData, setSelectedOldAppointment } from '../../../../../../store/scheduler/actions';\n\nexport const useSchedulerForm = () => {\n  const dispatch = useDispatch();\n  const [selectedTab, setSelectedTab] = useState(0);\n\n  const newSelectedAppointment = useSelector(\n    (state: State) => state.scheduler.newSelectedAppointment\n  );\n  const oldSelectedAppointment = useSelector(\n    (state: State) => state.scheduler.oldSelectedAppointment\n  );\n  const editAppointmentData = useSelector(\n    (state: State) => state.scheduler.editAppointmentData\n  );\n\n  const onCloseTab = useCallback(() => {\n    dispatch(setSelectedOldAppointment(null));\n    dispatch(setEditAppointmentData(null));\n  }, []);\n\n  useEffect(() => {\n    setSelectedTab(editAppointmentData ? 1 : 0);\n  }, [editAppointmentData]);\n\n  useEffect(() => {\n    setSelectedTab(0);\n  }, [newSelectedAppointment]);\n\n  return {\n    newSelectedAppointment,\n    oldSelectedAppointment,\n    editAppointmentData,\n    selectedTab,\n    setSelectedTab,\n    onCloseTab,\n  };\n};\n","import React from 'react';\nimport './index.scss';\n\n// Components\nimport SchedulerTable from './components/Table/SchedulerTable';\nimport SchedulerFilter from './components/SchedulerFilterContainer';\nimport SchedulerForm from './components/SchedulerForm';\nimport { useModal } from '../../../../components/Modal/useModal';\nimport Modal from '../../../../components/Modal';\n\nconst SchedulerContainer = () => {\n  const modalProps = useModal();\n\n  return (\n    <div className=\"scheduler__container\">\n      <div className=\"scheduler__dataView\">\n        <SchedulerFilter />\n        <SchedulerTable />\n      </div>\n      <SchedulerForm />\n      <Modal {...modalProps} />\n    </div>\n  );\n};\n\nexport default SchedulerContainer;\n","import React from 'react';\nimport Header from '../../components/Header';\nimport SchedulerContainer from './components/SchedulerContainer';\n\nconst SchedulerScreen = () => (\n  <>\n    <Header />\n    <SchedulerContainer />\n  </>\n);\n\nexport default SchedulerScreen;\n"],"sourceRoot":""}