{"version":3,"sources":["components/CustomInput/CustomInput.tsx","components/PrimaryButton/PrimaryButton.tsx","components/CustomInput/index.ts","components/Header/utils/useDebounce.ts","components/Header/Header.tsx","components/Header/useHeader.ts","components/Dashboard/useDashboard.ts","components/Card/Card.tsx","components/Dashboard/components/DashboardSection/DashboardSection.tsx","components/Dashboard/components/DashbordControl/DashbordControl.tsx","components/Dashboard/Dashboard.tsx","components/ContentPanel/ContentPanel.tsx","components/ControlPanel/ControlPanel.tsx","components/CustomSwitch/CustomSwitch.tsx","Screens/RegistratorScreen/useRegistratorScreen.ts","Screens/RegistratorScreen/components/Navigation/Navigation.tsx","components/InputWithCopy/InputWithCopy.tsx","components/SectionWithTitle/SectionWithTitle.tsx","Screens/RegistratorScreen/components/Immovable/Immovable.tsx","components/CustomDatePicker/CustomDatePicker.tsx","Screens/RegistratorScreen/components/Developer/Developer.tsx","Screens/RegistratorScreen/components/Developer/useDeveloper.ts","Screens/RegistratorScreen/RegistratorScreen.tsx"],"names":["CustomInput","label","onChange","value","type","disabled","useState","text","setText","useEffect","variant","event","target","className","PrimaryButton","onClick","useDebounce","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","Header","dispatch","useDispatch","searchText","setSearchText","count","setCount","searchAppointments","prev","onSearch","useCallback","e","onLogout","localStorage","clear","setUser","token","useHeader","src","alt","placeholder","DashboardViewType","Card","title","headerColor","children","link","to","style","backgroundColor","color","DashboardSection","cards","TABLE","map","card","id","content","item","DashboardControl","selected","CARDS","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","Dashboard","props","selectedType","setSelectedType","useDashboard","isChangeTypeButton","sections","section","ContentPanel","ControlPanel","CustomSwitch","setValue","FormControlLabel","control","Switch","checked","name","labelPlacement","memo","RegistratorNavigationTypes","Navigation","onSelect","history","useHistory","handleClick","push","DEVELOPER","IMMOVABLE","InputWithCopy","done","setDone","handleSave","React","navigator","clipboard","writeText","SectionWithTitle","Immovable","onImmovableChange","data","useParams","immovable_code","CustomDatePicker","selectedDate","utils","DateFnsUtils","margin","format","KeyboardButtonProps","Developer","meta","date","setDate","number","setNumber","validation","setValidation","undefined","onPrevButtonClick","prew","onNextButtonClick","next","useDeveloper","full_name","tax_code","console","log","RegistratorScreen","useSelector","state","registrator","isLoading","developers","immovables","selectedNav","setSelectedNav","selectedId","setSelectedId","onChangeNav","fetchDevelopers","fetchImmovables","selectedCardData","useMemo","find","Number","date_info","useRegistratorScreen","path","exact","Loader"],"mappings":"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","file":"static/js/8.da648131.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\n/* eslint-disable react/react-in-jsx-scope */\nimport React, { useState, useEffect } from 'react';\nimport './index.scss';\nimport { TextField } from '@material-ui/core';\n\ntype Props = {\n  label: string;\n  value?: string | number | null;\n  onChange?: (value: string) => void;\n  type?: string;\n  disabled?: boolean;\n};\n\nconst CustomInput = ({\n  label,\n  onChange,\n  value = '',\n  type = 'string',\n  disabled,\n}: Props) => {\n  const [text, setText] = useState(value || '');\n\n  useEffect(() => {\n    setText(value || '');\n  }, [value]);\n\n  const handleChange = (event: any) => {\n    setText(event.target.value);\n    onChange && onChange(event.target.value);\n  };\n\n  return (\n    <TextField\n      label={label}\n      variant=\"outlined\"\n      value={text}\n      onChange={handleChange}\n      type={type}\n      className=\"custom-input\"\n      disabled={disabled || false}\n    />\n  );\n};\n\nexport default CustomInput;\n","/* eslint-disable prettier/prettier */\n/* eslint-disable react/button-has-type */\nimport React from 'react';\nimport './index.scss';\n\ntype Props = {\n  label: string;\n  onClick: (e: any) => void;\n  disabled: boolean;\n  className?: string;\n};\n\nconst PrimaryButton = ({\n  label, onClick, disabled, className\n}: Props) => (\n  <button\n    className={`primary-button ${disabled ? 'disabled' : ''} ${\n      className || ''\n    }`}\n    onClick={onClick}\n    disabled={disabled}\n  >\n    {label}\n  </button>\n);\n\nexport default PrimaryButton;\n","export { default } from './CustomInput';\n","import React, { useState, useEffect } from 'react';\n\nconst useDebounce = (value: string, delay: number) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value]);\n\n  return debouncedValue;\n};\n\nexport default useDebounce;\n","import * as React from 'react';\nimport './index.scss';\nimport { useHeader } from './useHeader';\n\nconst Header = () => {\n  const { onSearch, onLogout, searchText } = useHeader();\n\n  return (\n    <div className=\"header container\">\n      <div className=\"header__logo\">\n        <img src=\"/icons/logo.svg\" alt=\"logo\" />\n      </div>\n      <div className=\"header__search\">\n        <input\n          type=\"text\"\n          placeholder=\"Пошук...\"\n          onChange={onSearch}\n          value={searchText}\n        />\n        <img src=\"/icons/search.svg\" alt=\"search\" />\n      </div>\n      <div className=\"header__control\">\n        <img src=\"/icons/log-out.svg\" alt=\"logout\" onClick={onLogout} />\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import { useDispatch } from 'react-redux';\nimport {\n  ChangeEvent, useState, useEffect, useCallback\n} from 'react';\nimport { setUser } from '../../store/main/actions';\nimport { searchAppointments } from '../../store/appointments/actions';\nimport useDebounce from './utils/useDebounce';\n\nexport const useHeader = () => {\n  const dispatch = useDispatch();\n  const [searchText, setSearchText] = useState<string>('');\n  const [count, setCount] = useState<number>(0);\n\n  const debouncedValue = useDebounce(searchText, 1000);\n\n  useEffect(() => {\n    if (!count) {\n      setCount((prev: number) => prev + 1);\n      return;\n    }\n\n    dispatch(searchAppointments(debouncedValue));\n  }, [debouncedValue]);\n\n  const onSearch = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value);\n  }, [searchText]);\n\n  const onLogout = useCallback(() => {\n    localStorage.clear();\n    dispatch(setUser({ type: null, token: null }));\n  }, []);\n\n  return { onSearch, onLogout, searchText };\n};\n","import { useState } from 'react';\nimport { SectionCard } from './components/DashboardSection/DashboardSection';\n\n// eslint-disable-next-line no-shadow\nexport enum DashboardViewType {\n  CARDS,\n  TABLE\n}\n\nexport type Section = {\n  title: string;\n  cards: SectionCard[];\n}\n\nexport type Props = {\n  link: string,\n  sections: Section[],\n  isChangeTypeButton?: boolean;\n  style?: DashboardViewType,\n}\n\nexport const useDashboard = ({ style }: Props) => {\n  const [selectedType, setSelectedType] = useState(style || DashboardViewType.CARDS);\n\n  return { selectedType, setSelectedType };\n};\n","import * as React from 'react';\nimport './index.scss';\nimport { Link } from 'react-router-dom';\n\ntype Props = {\n  title: string;\n  children: React.ReactNode;\n  link: string\n  headerColor?: string;\n}\n\nconst Card = ({ title, headerColor, children, link }: Props) => (\n  <Link to={link} className=\"card\">\n    <div className=\"card__header\" style={{ backgroundColor: headerColor || '' }}>\n      <span style={{ color: headerColor ? 'white' : '' }}>{title}</span>\n    </div>\n    <div className=\"card__main\">\n      {children}\n    </div>\n  </Link>\n);\n\nexport default Card;\n","import * as React from 'react';\nimport Card from '../../../Card';\nimport { DashboardViewType } from '../../useDashboard';\n\nexport type SectionCard = {\n  id: number;\n  title: string;\n  content: string[];\n  color?: string;\n}\n\ntype Props = {\n  link: string;\n  title: string,\n  cards: SectionCard[],\n  style: DashboardViewType;\n}\n\nconst DashboardSection = ({ link, title, cards, style }: Props) => (\n  <div className=\"dashboard__main-section\">\n    <h2>{title}</h2>\n    <div className={`cards ${style === DashboardViewType.TABLE ? 'table' : ''}`}>\n      {cards.map((card: SectionCard) => (\n        <Card\n          key={card.id}\n          title={card.title}\n          headerColor={card.color}\n          link={`/${link}/${card.id}`}\n        >\n          {card.content.map((item: string) => (\n            <span key={item} className=\"card__content-item\">{item}</span>\n          ))}\n        </Card>\n      ))}\n    </div>\n  </div>\n);\n\nexport default DashboardSection;\n","import * as React from 'react';\nimport { DashboardViewType } from '../../useDashboard';\nimport './index.scss';\n\ntype Props = {\n  selected: DashboardViewType;\n  onClick: (value: DashboardViewType) => void;\n}\n\nconst DashboardControl = ({ selected, onClick }: Props) => (\n  <div className=\"dashboard__space-control\">\n    <svg\n      className={`${DashboardViewType.CARDS === selected ? 'selected' : ''}`}\n      onClick={() => onClick(DashboardViewType.CARDS)}\n      width=\"18\"\n      height=\"18\"\n      viewBox=\"0 0 18 18\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.50008 0.666748H7.33341C7.83341 0.666748 8.16675 1.00008 8.16675 1.50008V7.33341C8.16675 7.83341 7.83341 8.16675 7.33341 8.16675H1.50008C1.00008 8.16675 0.666748 7.83341 0.666748 7.33341V1.50008C0.666748 1.00008 1.00008 0.666748 1.50008 0.666748ZM2.33341 6.50008H6.50008V2.33341H2.33341V6.50008ZM16.5001 0.666748H10.6667C10.1667 0.666748 9.83342 1.00008 9.83342 1.50008V7.33341C9.83342 7.83341 10.1667 8.16675 10.6667 8.16675H16.5001C17.0001 8.16675 17.3334 7.83341 17.3334 7.33341V1.50008C17.3334 1.00008 17.0001 0.666748 16.5001 0.666748ZM11.5001 6.50008H15.6667V2.33341H11.5001V6.50008ZM16.5001 9.83342H10.6667C10.1667 9.83342 9.83342 10.1667 9.83342 10.6667V16.5001C9.83342 17.0001 10.1667 17.3334 10.6667 17.3334H16.5001C17.0001 17.3334 17.3334 17.0001 17.3334 16.5001V10.6667C17.3334 10.1667 17.0001 9.83342 16.5001 9.83342ZM11.5001 15.6667H15.6667V11.5001H11.5001V15.6667ZM7.33341 9.83342H1.50008C1.00008 9.83342 0.666748 10.1667 0.666748 10.6667V16.5001C0.666748 17.0001 1.00008 17.3334 1.50008 17.3334H7.33341C7.83341 17.3334 8.16675 17.0001 8.16675 16.5001V10.6667C8.16675 10.1667 7.83341 9.83342 7.33341 9.83342ZM2.33341 15.6667H6.50008V11.5001H2.33341V15.6667Z\" fill=\"#165153\" />\n    </svg>\n    <svg\n      className={`${DashboardViewType.TABLE === selected ? 'selected' : ''}`}\n      onClick={() => onClick(DashboardViewType.TABLE)}\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 20 20\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M3.33325 0.833252H16.6666C18.0833 0.833252 19.1666 1.91659 19.1666 3.33325V6.66659C19.1666 8.08325 18.0833 9.16658 16.6666 9.16658H3.33325C1.91659 9.16658 0.833252 8.08325 0.833252 6.66659V3.33325C0.833252 1.91659 1.91659 0.833252 3.33325 0.833252ZM16.6666 7.49992C17.1666 7.49992 17.4999 7.16658 17.4999 6.66658V3.33325C17.4999 2.83325 17.1666 2.49992 16.6666 2.49992H3.33325C2.83325 2.49992 2.49992 2.83325 2.49992 3.33325V6.66658C2.49992 7.16658 2.83325 7.49992 3.33325 7.49992H16.6666ZM16.6666 10.8333H3.33325C1.91659 10.8333 0.833252 11.9166 0.833252 13.3333V16.6666C0.833252 18.0833 1.91659 19.1666 3.33325 19.1666H16.6666C18.0833 19.1666 19.1666 18.0833 19.1666 16.6666V13.3333C19.1666 11.9166 18.0833 10.8333 16.6666 10.8333ZM16.6666 17.4999C17.1666 17.4999 17.4999 17.1666 17.4999 16.6666V13.3333C17.4999 12.8333 17.1666 12.4999 16.6666 12.4999H3.33325C2.83325 12.4999 2.49992 12.8333 2.49992 13.3333V16.6666C2.49992 17.1666 2.83325 17.4999 3.33325 17.4999H16.6666ZM5.58325 4.41659C5.74992 4.58325 5.83325 4.74992 5.83325 4.99992C5.83325 5.24992 5.74992 5.41659 5.58325 5.58325C5.41658 5.74992 5.24992 5.83325 4.99992 5.83325C4.74992 5.83325 4.58325 5.74992 4.41659 5.58325C4.33325 5.49992 4.24992 5.41659 4.24992 5.33325C4.16659 5.24992 4.16659 5.08325 4.16659 4.99992C4.16659 4.91659 4.16659 4.74992 4.24992 4.66659C4.29159 4.62492 4.31242 4.58325 4.33325 4.54159C4.35409 4.49992 4.37492 4.45825 4.41659 4.41659C4.49992 4.33325 4.58325 4.24992 4.66659 4.24992C4.91658 4.16659 5.08325 4.16659 5.33325 4.24992C5.41658 4.24992 5.49992 4.33325 5.58325 4.41659ZM5.83325 14.9999C5.83325 14.7499 5.74992 14.5833 5.58325 14.4166C5.24992 14.0833 4.74992 14.0833 4.41659 14.4166C4.37492 14.4583 4.35409 14.4999 4.33325 14.5416C4.31242 14.5833 4.29159 14.6249 4.24992 14.6666C4.16659 14.7499 4.16659 14.9166 4.16659 14.9999C4.16659 15.2499 4.24992 15.4166 4.41659 15.5833C4.58325 15.7499 4.74992 15.8333 4.99992 15.8333C5.24992 15.8333 5.41658 15.7499 5.58325 15.5833C5.74992 15.4166 5.83325 15.2499 5.83325 14.9999Z\" fill=\"#C0C1C1\" />\n    </svg>\n  </div>\n);\n\nexport default DashboardControl;\n","import React from 'react';\nimport './index.scss';\nimport DashboardSection from './components/DashboardSection';\nimport DashboardControl from './components/DashbordControl';\nimport { Section, Props, useDashboard } from './useDashboard';\nimport ContentPanel from '../ContentPanel';\n\nconst Dashboard = (props: Props) => {\n  const { selectedType, setSelectedType } = useDashboard(props);\n\n  return (\n    <div className=\"dashboard\">\n      {props.isChangeTypeButton\n        && <DashboardControl selected={selectedType} onClick={setSelectedType} />}\n      {props.sections && (\n        <div className=\"dashboard__main\">\n          {props.sections.map((section: Section) => (\n            <DashboardSection\n              link={props.link}\n              title={section.title}\n              style={selectedType}\n              cards={section.cards}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import * as React from 'react';\nimport './index.scss';\n\ntype Props = {\n  children: React.ReactNode\n}\n\nconst ContentPanel = ({ children }: Props) => (\n  <div className=\"contentPanel\">\n    {children}\n  </div>\n);\n\nexport default ContentPanel;\n","import * as React from 'react';\nimport './index.scss';\n\ntype Props = {\n  children: React.ReactNode\n}\n\nconst ControlPanel = ({ children }: Props) => (\n  <div className=\"controlPanel\">\n    {children}\n  </div>\n);\n\nexport default ControlPanel;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable prettier/prettier */\nimport React, { useEffect, useState, memo } from 'react';\nimport { FormControlLabel, Switch } from '@material-ui/core';\nimport './index.scss';\n\ntype Props = {\n  label: string\n  onChange: (val: boolean) => void;\n  selected: boolean;\n  disabled?: boolean;\n};\n\nconst CustomSwitch = ({\n  label,\n  onChange,\n  selected,\n  disabled\n}: Props) => {\n  const [value, setValue] = useState(selected);\n\n  const handleChange = (event: any) => {\n    setValue(event.target.checked);\n    onChange(event.target.checked);\n  };\n\n  useEffect(() => {\n    setValue(selected);\n  }, [selected]);\n\n  return (\n    <FormControlLabel\n      control={(\n        <Switch\n          checked={value}\n          onChange={handleChange}\n          name=\"checkedB\"\n          color=\"primary\"\n        />\n      )}\n      label={label}\n      labelPlacement=\"start\"\n      className=\"custom-switch\"\n      disabled={disabled || false}\n    />\n  );\n};\n\nexport default memo(CustomSwitch);\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useMemo, useState, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SectionCard } from '../../components/Dashboard/components/DashboardSection/DashboardSection';\nimport { fetchImmovables, fetchDevelopers } from '../../store/registrator/actions';\nimport { State } from '../../store/types';\n\n/* eslint-disable no-shadow */\nexport enum RegistratorNavigationTypes {\n  DEVELOPER = 'developer',\n  IMMOVABLE = 'immovable',\n}\n\nexport const useRegistratorScreen = () => {\n  const dispatch = useDispatch();\n  const { isLoading, developers, immovables } = useSelector((state: State) => state.registrator);\n  const [selectedNav, setSelectedNav] = useState(RegistratorNavigationTypes.DEVELOPER);\n  const [selectedId, setSelectedId] = useState<any>();\n\n  const onChangeNav = useCallback((id, type) => {\n    setSelectedId(id);\n    setSelectedNav(type);\n  }, []);\n\n  useEffect(() => {\n    if (selectedNav === RegistratorNavigationTypes.DEVELOPER) {\n      dispatch(fetchDevelopers());\n    } else {\n      dispatch(fetchImmovables());\n    }\n  }, [selectedNav]);\n\n  const selectedCardData = useMemo(() => {\n    if (selectedNav === RegistratorNavigationTypes.IMMOVABLE) {\n      return immovables ? immovables.immovables\n        .find((item: any) => item.id === Number(selectedId)) : null;\n    }\n\n    return developers ? developers.developers\n      .find((item: any) => item.id === Number(selectedId)) : null;\n  }, [selectedId, developers, immovables]);\n\n  const sections = useMemo(() => {\n    let title = '';\n    let cards: SectionCard[] = [];\n\n    if (selectedNav === RegistratorNavigationTypes.DEVELOPER) {\n      title = developers?.date_info || '';\n      cards = (developers?.developers || []).map((item: any) => ({\n        id: item.id,\n        title: item.title,\n        content: [`Дата: ${item.date}`, `Номер: ${item.number}`],\n        color: item.color,\n      }));\n    } else if (selectedNav === RegistratorNavigationTypes.IMMOVABLE) {\n      title = immovables?.date_info || '';\n      cards = (immovables?.immovables || []).map((item: any) => ({\n        id: item.id,\n        title: item.title,\n        content: [`Дата: ${item.date}`, `Номер: ${item.number}`],\n        color: item.color,\n      }));\n    }\n\n    return [{\n      title,\n      cards,\n    }];\n  }, [selectedNav, immovables, developers]);\n\n  return { selectedNav, setSelectedNav, isLoading, sections, onChangeNav, selectedCardData };\n};\n","import * as React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport ControlPanel from '../../../../components/ControlPanel';\nimport { RegistratorNavigationTypes } from '../../useRegistratorScreen';\n\ntype Props = {\n  selected: RegistratorNavigationTypes;\n  onSelect: (value: RegistratorNavigationTypes) => void;\n}\n\nconst Navigation = ({ onSelect, selected }: Props) => {\n  const history = useHistory();\n\n  const handleClick = (type: RegistratorNavigationTypes) => {\n    onSelect(type);\n    history.push(`/${type}`);\n  };\n\n  return (\n    <ControlPanel>\n      <button\n        className={`registrator__navigation-item ${\n          selected === RegistratorNavigationTypes.DEVELOPER ? 'selected' : ''\n        }`}\n        type=\"button\"\n        onClick={() => handleClick(RegistratorNavigationTypes.DEVELOPER)}\n      >\n        <img src=\"/icons/registrator/developer.svg\" alt=\"developer\" />\n        Заборони на продавця\n      </button>\n      <button\n        className={`registrator__navigation-item ${\n          selected === RegistratorNavigationTypes.IMMOVABLE ? 'selected' : ''\n        }`}\n        type=\"button\"\n        onClick={() => handleClick(RegistratorNavigationTypes.IMMOVABLE)}\n      >\n        <img src=\"/icons/registrator/immovable.svg\" alt=\"immovable\" />\n        Заборони по нерухомості\n      </button>\n    </ControlPanel>\n  );\n};\n\nexport default Navigation;\n","import * as React from 'react';\nimport './index.scss';\nimport { useState, useEffect } from 'react';\nimport CustomInput from '../CustomInput';\n\ntype Props = {\n  label: string;\n  value: string;\n  onChange?: (val: string) => void;\n  disabled?: boolean;\n}\n\nconst InputWithCopy = ({ label, value, disabled, onChange }: Props) => {\n  const [done, setDone] = useState<boolean>(false);\n\n  const handleSave = React.useCallback(() => {\n    if (!value) return;\n\n    navigator.clipboard.writeText(value);\n\n    setDone(true);\n    setTimeout(() => setDone(false), 3000);\n  }, [value]);\n\n  return (\n    <div className=\"clipboard-input\">\n      <CustomInput label={label} onChange={onChange} value={value} disabled={disabled} />\n      <button\n        type=\"button\"\n        onClick={handleSave}\n      >\n        {done ? <img src=\"/icons/check.svg\" alt=\"copy\" /> : <img src=\"/icons/copy.svg\" alt=\"copy\" />}\n      </button>\n    </div>\n  );\n};\n\nexport default InputWithCopy;\n","import React from 'react';\nimport './index.scss';\n\ntype Props = {\n  title: string;\n  children: React.ReactNode;\n}\n\nconst SectionWithTitle = ({ title, children }: Props) => (\n  <div className=\"section-with-title\">\n    <div className=\"section-with-title__header\">\n      <h2>{title}</h2>\n    </div>\n    <div className=\"section-with-title__body\">\n      {children}\n    </div>\n  </div>\n);\n\nexport default SectionWithTitle;\n","import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport InputWithCopy from '../../../../components/InputWithCopy';\nimport SectionWithTitle from '../../../../components/SectionWithTitle';\nimport { RegistratorNavigationTypes } from '../../useRegistratorScreen';\n\ntype Props = {\n  onImmovableChange: (id: string, type: RegistratorNavigationTypes) => void;\n  data: any;\n}\n\nconst Immovable = ({ onImmovableChange, data }: Props) => {\n  const { id } = useParams<{ id: string }>();\n\n  useEffect(() => onImmovableChange(id, RegistratorNavigationTypes.IMMOVABLE), [id]);\n\n  if (!data) {\n    return null;\n  }\n\n  return (\n    <div className=\"registrator__immovable\">\n      <SectionWithTitle title=\"Заборони по нерухомості\">\n        <div className=\"registrator__immovable-content\">\n          <InputWithCopy label=\"Реєстраційни номер\" value={data.immovable_code} disabled />\n        </div>\n      </SectionWithTitle>\n    </div>\n  );\n};\n\nexport default Immovable;\n","/* eslint-disable quotes */\n/* eslint-disable react/jsx-curly-brace-presence */\nimport React, { useEffect, useState } from 'react';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport { MaterialUiPickersDate } from '@material-ui/pickers/typings/date';\n\ntype Props = {\n  label: string;\n  onSelect: (value: any) => void;\n  selectedDate?: Date;\n}\n\nconst CustomDatePicker = ({ selectedDate, onSelect, label }: Props) => {\n  const [value, setValue] = useState<MaterialUiPickersDate | undefined>(selectedDate);\n\n  useEffect(() => {\n    setValue(selectedDate);\n  }, [selectedDate]);\n\n  const handleChange = (data: any) => {\n    setValue(data);\n    onSelect(data);\n  };\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <KeyboardDatePicker\n        margin=\"normal\"\n        label={label}\n        format=\"dd/MM/yyyy\"\n        value={value}\n        onChange={handleChange}\n        KeyboardButtonProps={{\n          'aria-label': 'change date',\n        }}\n      />\n    </MuiPickersUtilsProvider>\n  );\n};\n\nexport default CustomDatePicker;\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport CustomDatePicker from '../../../../components/CustomDatePicker';\nimport CustomInput from '../../../../components/CustomInput';\nimport CustomSwitch from '../../../../components/CustomSwitch';\nimport InputWithCopy from '../../../../components/InputWithCopy';\nimport PrimaryButton from '../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../components/SectionWithTitle';\nimport { Props, useDeveloper } from './useDeveloper';\n\nconst Developer = (props: Props) => {\n  const meta = useDeveloper(props);\n\n  if (!props.data) {\n    return null;\n  }\n\n  return (\n    <div className=\"registrator__developer\">\n      <SectionWithTitle title={props.data.title}>\n        <div className=\"grid\">\n          <InputWithCopy label=\"ПІБ\" value={props.data.full_name} disabled />\n          <InputWithCopy label=\"Код\" value={props.data.tax_code} disabled />\n        </div>\n      </SectionWithTitle>\n\n      <SectionWithTitle title=\"Перевірка\">\n        <div className=\"grid\">\n          <CustomDatePicker label=\"Дата перевірки\" onSelect={meta.setDate} selectedDate={meta.date} />\n          <CustomInput label=\"Номер перевірки\" onChange={meta.setNumber} value={meta.number} />\n          <CustomSwitch label=\"Пройшов перевірку\" onChange={meta.setValidation} selected={meta.validation} />\n        </div>\n      </SectionWithTitle>\n\n      <div className=\"buttons-group\">\n        <button\n          type=\"button\"\n          onClick={meta.onPrevButtonClick}\n          disabled={!props.data.prew}\n          className=\"custom-button\"\n        >\n          <img src=\"/icons/arrow-left.svg\" alt=\"previous\" className=\"left\" />\n          Попередній\n        </button>\n\n        <div className=\"button-container\">\n          <PrimaryButton label=\"Зберегти\" onClick={() => console.log('click')} disabled={false} />\n        </div>\n\n        <button\n          type=\"button\"\n          onClick={meta.onNextButtonClick}\n          disabled={!props.data.next}\n          className=\"custom-button\"\n        >\n          Наступний\n          <img src=\"/icons/arrow-right.svg\" alt=\"next\" className=\"right\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Developer;\n","import { useEffect, useState, useCallback } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { RegistratorNavigationTypes } from '../../useRegistratorScreen';\n\nexport type Props = {\n  onImmovableChange: (id: string, type: RegistratorNavigationTypes) => void;\n  data: any;\n}\n\nexport const useDeveloper = ({ onImmovableChange, data }: Props) => {\n  const history = useHistory();\n  const { id } = useParams<{ id: string }>();\n\n  const [date, setDate] = useState();\n  const [number, setNumber] = useState('');\n  const [validation, setValidation] = useState<boolean>(false);\n\n  useEffect(() => {\n    setDate(undefined);\n    setNumber('');\n    setValidation(false);\n  }, [id]);\n\n  useEffect(() => onImmovableChange(id, RegistratorNavigationTypes.DEVELOPER), [id]);\n\n  const onPrevButtonClick = useCallback(() => {\n    if (!data.prew) return;\n    history.push(`/developer/${data.prew}`);\n  }, [data]);\n\n  const onNextButtonClick = useCallback(() => {\n    if (!data.next) return;\n    history.push(`/developer/${data.next}`);\n  }, [data]);\n\n  return {\n    date,\n    number,\n    validation,\n    setDate,\n    setNumber,\n    setValidation,\n    onPrevButtonClick,\n    onNextButtonClick,\n  };\n};\n","import * as React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport './index.scss';\nimport Header from '../../components/Header';\nimport Navigation from './components/Navigation';\nimport { useRegistratorScreen } from './useRegistratorScreen';\nimport Loader from '../../components/Loader/Loader';\nimport ContentPanel from '../../components/ContentPanel';\nimport Dashboard from '../../components/Dashboard';\nimport Immovable from './components/Immovable';\nimport Developer from './components/Developer';\n\nconst RegistratorScreen = () => {\n  const meta = useRegistratorScreen();\n\n  return (\n    <>\n      <Header />\n      <main className=\"registrator\">\n        <Navigation onSelect={meta.setSelectedNav} selected={meta.selectedNav} />\n        <ContentPanel>\n          <Switch>\n            <Route path=\"/developer/:id\" exact>\n              <Developer onImmovableChange={meta.onChangeNav} data={meta.selectedCardData} />\n            </Route>\n\n            <Route path=\"/immovable/:id\" exact>\n              <Immovable onImmovableChange={meta.onChangeNav} data={meta.selectedCardData} />\n            </Route>\n\n            {meta.isLoading && <Loader />}\n            {!meta.isLoading\n              && <Dashboard link={meta.selectedNav} sections={meta.sections} />}\n          </Switch>\n        </ContentPanel>\n      </main>\n    </>\n  );\n};\n\nexport default RegistratorScreen;\n"],"sourceRoot":""}