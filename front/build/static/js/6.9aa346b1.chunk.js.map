{"version":3,"sources":["components/PrimaryButton/PrimaryButton.tsx","components/CustomInput/index.ts","components/CustomSelect/CustomSelect.tsx","components/CustomInput/CustomInput.tsx","components/Modal/useModal.ts","components/Modal/Modal.tsx","components/CustomSwitch/CustomSwitch.tsx","components/RadioButtonsGroup/RadioButtonsGroup.tsx","components/Header/utils/useDebounce.ts","components/Header/Header.tsx","components/Header/useHeader.ts","components/AddFormButton/AddFormButton.tsx","components/Filter/Filter.tsx","components/Filter/useFilter.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/utils/formatAppointmentDate.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/SchedulerDay/SchedulerDay.js","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridLayout/GridLayout.js","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTableCell/GridTableCell.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTableCell/useGridTableCell.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTable/GridTable.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTable/useGridTable.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/SchedulerTable.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/useSchedulerTable.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerFilterContainer/components/QuantityLabel.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerFilterContainer/components/SchedulerFilter/SchedulerFilter.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerFilterContainer/components/SchedulerFilter/useSchedulerFilter.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerFilterContainer/components/SchedulerLock/SchedulerLock.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerFilterContainer/components/SchedulerLock/useSchedulerLock.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerFilterContainer/SchedulerFilterContainer.tsx","components/RemoveFormButton/RemoveFormButton.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/components/Clients/Clients.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/components/Clients/useClients.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/components/ImmovableContainer/ImmovableContainer.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/components/ImmovableContainer/useImmovableContainer.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/types.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/Form.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/useForm.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/SchedulerForm.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/useSchedulerForm.ts","Screens/SchedulerScreen/components/SchedulerContainer/SchedulerContainer.tsx","Screens/SchedulerScreen/SchedulerScreen.tsx"],"names":["PrimaryButton","label","onClick","disabled","className","CustomSelect","onChange","data","selectedValue","size","useState","selected","setSelected","useEffect","FormControl","variant","InputLabel","Select","value","event","val","target","length","MenuItem","map","id","title","memo","CustomInput","type","text","setText","useModal","dispatch","useDispatch","modalInfo","useSelector","state","main","useMemo","handleClose","setModalInfo","open","Modal","success","message","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","CustomSwitch","setValue","FormControlLabel","control","Switch","checked","name","color","labelPlacement","RadioButtonsGroup","buttons","unicId","setSelectedValue","handleChange","htmlFor","uuidv4","useDebounce","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","Header","searchText","setSearchText","count","setCount","searchAppointments","prev","onSearch","useCallback","e","onLogout","localStorage","clear","setUser","token","useHeader","to","src","alt","placeholder","AddFormButton","handleClick","onKeyPress","Filter","props","meta","onFilterDataChange","horizontal","user","filterInitialData","filter","fetchFilterData","readers","reader","notaries","notary","accompanyings","accompanying","contractTypes","contract_type","developers","developer","sortType","sort_type","representative","setRepresentative","shouldRenderFilter","Boolean","selectedNotary","setSelectedNotary","selectedReader","setSelectedReader","selectedAccompanying","setSelectedAccompanying","selectedContractType","setSelectedContractType","selectedDeveloper","setSelectedDeveloper","selectedRepresentative","setSelectedRepresentative","selectedSortType","setSelectedSortType","clearAll","getDeveloperInfo","then","notary_id","reader_id","accompanying_id","contract_type_id","developer_id","dev_representative_id","useFilter","style","whiteSpace","width","formatAppointmentDate","hours","rooms","days","raw","cell","Math","floor","day","date","year","time","room","split","reverse","join","SchedulerDay","ReactGridLayout","WidthProvider","RGL","GridLayout","appointments","cols","handleDrag","dragAndDropWidth","setDragAndDropWidth","schedulerLock","scheduler","$","rowHeight","margin","containerPadding","verticalCompact","preventCollision","layout","onDragStop","all","current","currentApp","find","item","i","isDraggable","appointment","borderLeft","onClickCapture","Object","values","short_info","GridLayoutCell","options","work_time","day_and_date","payload","moment","isBefore","setSelectedNewAppointment","useGridTableCell","rowsQuantity","backgroundColor","GridTable","rows","columns","newSelectedAppointment","_","rowIndex","cellIndex","GridTableCell","SchedulerTable","isLoading","fetchSchedulerSettings","fetchAppointments","setAppointments","shouldLoad","tableColumns","Array","fill","tableRows","handleAppointmentDrag","y","x","date_time","room_id","moveCalendarCard","onAppointmentClick","a","fetchCalendarCard","setSelectedOldAppointment","useSchedulerTable","Loader","QuantityLabel","SchedulerFilter","shouldRender","setShouldRender","fetchAppointmentsByFilter","useSchedulerFilter","SchedulerLock","setSchedulerLock","useSchedulerLock","SchedulerFilterContainer","RemoveFormButton","index","Clients","clients","onPhoneChange","phone","onNameChange","full_name","useClients","marginLeft","onRemove","onAdd","ImmovableContainer","immovables","developersInfo","building","contracts","form_data","immovableTypes","immovable_type","onContractChange","onBuildingChange","building_id","onImmovableTypeChange","imm_type_id","onBankChange","bank","onProxyChange","proxy","onImmNumChange","imm_number","useImmovableContainer","immovableItem","clientItem","SchedulerForm","selectedCard","initialValues","edit","insideEdit","setEdit","card","setNotary","devCompanyId","setDevCompanyId","devRepresentativeId","setDevRepresentativeId","devManagerId","setDevManagerId","setImmovables","setClients","manager","onNotaryChange","dev_company_id","dev_manager_id","fetchDeveloperInfo","onDeveloperChange","setDevelopersInfo","onRepresentativeChange","onManagerChange","onImmovablesChange","onClientsChange","onClearAll","onAddImmovables","onRemoveImmovable","mapIndex","onAddClients","onRemoveClient","onDeleteCard","removeCalendarCard","activeAddButton","every","onFormCreate","editCalendarCard","createNewCard","selectedNotaryId","selectedDeveloperId","selectedDevRepresentativeId","selecedDevManagerId","useForm","selectedTab","setSelectedTab","oldSelectedAppointment","editAppointmentData","onCloseTab","setEditAppointmentData","useSchedulerForm","SchedulerContainer","modalProps","SchedulerScreen"],"mappings":"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","file":"static/js/6.9aa346b1.chunk.js","sourcesContent":["/* eslint-disable prettier/prettier */\n/* eslint-disable react/button-has-type */\nimport React from 'react';\nimport './index.scss';\n\ntype Props = {\n  label: string;\n  onClick: (e: any) => void;\n  disabled: boolean;\n  className?: string;\n};\n\nconst PrimaryButton = ({\n  label, onClick, disabled, className\n}: Props) => (\n  <button\n    className={`primary-button ${disabled ? 'disabled' : ''} ${\n      className || ''\n    }`}\n    onClick={onClick}\n    disabled={disabled}\n  >\n    {label}\n  </button>\n);\n\nexport default PrimaryButton;\n","export { default } from './CustomInput';\n","/* eslint-disable object-curly-newline */\n/* eslint-disable no-unused-vars */\nimport React, { useState, memo, useEffect } from 'react';\nimport './index.scss';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\ntype Data = {\n  id: number;\n  title: string;\n};\n\ntype Props = {\n  onChange: (value: string) => void;\n  data: Data[];\n  label: string;\n  selectedValue?: string | null | number;\n  disabled?: boolean;\n  size?: 'medium' | 'small';\n  className?: string;\n};\n\nconst CustomSelect = ({\n  onChange,\n  data,\n  label,\n  selectedValue,\n  disabled,\n  size = 'medium',\n  className,\n}: Props) => {\n  const [selected, setSelected] = useState(selectedValue || '');\n\n  useEffect(() => {\n    setSelected(selectedValue || '');\n  }, [selectedValue]);\n\n  const handleChange = (event: any) => {\n    const val = event.target.value;\n    setSelected(val);\n    onChange(val);\n  };\n\n  return (\n    <FormControl variant=\"outlined\" className={`customSelect ${className || ''}`} size={size}>\n      <InputLabel>{label}</InputLabel>\n      <Select\n        value={selected}\n        onChange={handleChange}\n        disabled={disabled || data.length === 0}\n      >\n        <MenuItem value=\"\">\n          <em>Выбрать</em>\n        </MenuItem>\n        {data.map(({ id, title }: Data) => (\n          <MenuItem value={id} key={id}>\n            {title}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default memo(CustomSelect);\n","/* eslint-disable no-unused-vars */\n/* eslint-disable react/react-in-jsx-scope */\nimport React, { useState, useEffect } from 'react';\nimport './index.scss';\nimport { TextField } from '@material-ui/core';\n\ntype Props = {\n  label: string;\n  value?: string | number | null;\n  onChange?: (value: string) => void;\n  type?: string;\n  disabled?: boolean;\n};\n\nconst CustomInput = ({\n  label,\n  onChange,\n  value = '',\n  type = 'string',\n  disabled,\n}: Props) => {\n  const [text, setText] = useState(value || '');\n\n  useEffect(() => {\n    setText(value || '');\n  }, [value]);\n\n  const handleChange = (event: any) => {\n    setText(event.target.value);\n    onChange && onChange(event.target.value);\n  };\n\n  return (\n    <TextField\n      label={label}\n      variant=\"outlined\"\n      value={text}\n      onChange={handleChange}\n      type={type}\n      className=\"custom-input\"\n      disabled={disabled || false}\n    />\n  );\n};\n\nexport default CustomInput;\n","/* eslint-disable implicit-arrow-linebreak */\nimport { useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setModalInfo } from '../../store/main/actions';\nimport { State } from '../../store/types';\n\nexport const useModal = () => {\n  const dispatch = useDispatch();\n  const { modalInfo } = useSelector((state: State) => state.main);\n\n  const modalProps = useMemo(\n    () => ({\n      ...modalInfo,\n      handleClose: () =>\n        dispatch(\n          setModalInfo({\n            ...modalInfo,\n            open: false,\n          })\n        ),\n    }),\n    [modalInfo]\n  );\n\n  return modalProps;\n};\n","import React from 'react';\nimport './index.scss';\nimport MModal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\ntype Props = {\n  open: boolean;\n  handleClose: () => void;\n  success: boolean;\n  message: string;\n};\n\n// eslint-disable-next-line prettier/prettier\nconst Modal = ({\n  open, handleClose, success, message\n}: Props) => (\n  <MModal\n    className=\"modal-container\"\n    open={open}\n    onClose={handleClose}\n    closeAfterTransition\n    BackdropComponent={Backdrop}\n    BackdropProps={{\n      timeout: 500,\n    }}\n  >\n    <Fade in={open}>\n      <div className={`modal ${success ? 'modal-success' : 'modal-failed'}`}>\n        <p className=\"message\">{message}</p>\n      </div>\n    </Fade>\n  </MModal>\n);\n\nexport default Modal;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable prettier/prettier */\nimport React, { useEffect, useState, memo } from 'react';\nimport { FormControlLabel, Switch } from '@material-ui/core';\nimport './index.scss';\n\ntype Props = {\n  label: string\n  onChange: (val: boolean) => void;\n  selected: boolean;\n  disabled?: boolean;\n};\n\nconst CustomSwitch = ({\n  label,\n  onChange,\n  selected,\n  disabled\n}: Props) => {\n  const [value, setValue] = useState(selected);\n\n  const handleChange = (event: any) => {\n    setValue(event.target.checked);\n    onChange(event.target.checked);\n  };\n\n  useEffect(() => {\n    setValue(selected);\n  }, [selected]);\n\n  return (\n    <FormControlLabel\n      control={(\n        <Switch\n          checked={value}\n          onChange={handleChange}\n          name=\"checkedB\"\n          color=\"primary\"\n        />\n      )}\n      label={label}\n      labelPlacement=\"start\"\n      className=\"custom-switch\"\n      disabled={disabled || false}\n    />\n  );\n};\n\nexport default memo(CustomSwitch);\n","/* eslint-disable react/require-default-props */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/no-unused-prop-types */\nimport React, { useState, memo, useEffect } from 'react';\nimport './index.scss';\nimport { v4 as uuidv4 } from 'uuid';\n\ntype Button = {\n  id: number | string;\n  title: string;\n};\n\ntype Props = {\n  buttons: Button[];\n  unicId: string;\n  onChange: (id: number | string) => void;\n  selected?: number | string | null;\n};\n\nexport const RadioButtonsGroup = ({\n  buttons,\n  onChange,\n  selected,\n  unicId,\n}: Props) => {\n  const [selectedValue, setSelectedValue] = useState(selected || buttons[0].id);\n\n  useEffect(() => {\n    setSelectedValue(selected || buttons[0].id);\n  }, [selected]);\n\n  const handleChange = (id: number | string) => {\n    setSelectedValue(id);\n    onChange(id);\n  };\n\n  return (\n    <div className=\"radio-buttons-group\">\n      {buttons.map(({ id, title }: Button) => (\n        <div\n          key={uuidv4()}\n          className={`radio-buttons-group__element ${\n            buttons.length === 1 ? 'edit' : ''\n          }`}\n        >\n          <input\n            type=\"radio\"\n            id={unicId + title}\n            value={id}\n            checked={selectedValue === id}\n            onChange={() => handleChange(id)}\n            className=\"input\"\n          />\n          <label htmlFor={unicId + title} className=\"label\">\n            {title}\n          </label>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioButtonsGroup);\n","import React, { useState, useEffect } from 'react';\n\nconst useDebounce = (value: string, delay: number) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value]);\n\n  return debouncedValue;\n};\n\nexport default useDebounce;\n","import * as React from 'react';\nimport './index.scss';\nimport { Link } from 'react-router-dom';\nimport { useHeader } from './useHeader';\n\nconst Header = () => {\n  const { onSearch, onLogout, searchText } = useHeader();\n\n  return (\n    <div className=\"header container\">\n      <Link to=\"/\" className=\"header__logo\">\n        <img src=\"/icons/logo.svg\" alt=\"logo\" />\n      </Link>\n      <div className=\"header__search\">\n        <input\n          type=\"text\"\n          placeholder=\"Пошук...\"\n          onChange={onSearch}\n          value={searchText}\n        />\n        <img src=\"/icons/search.svg\" alt=\"search\" />\n      </div>\n      <div className=\"header__control\">\n        <img src=\"/icons/log-out.svg\" alt=\"logout\" onClick={onLogout} />\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import { useDispatch } from 'react-redux';\nimport {\n  ChangeEvent, useState, useEffect, useCallback\n} from 'react';\nimport { setUser } from '../../store/main/actions';\nimport { searchAppointments } from '../../store/appointments/actions';\nimport useDebounce from './utils/useDebounce';\n\nexport const useHeader = () => {\n  const dispatch = useDispatch();\n  const [searchText, setSearchText] = useState<string>('');\n  const [count, setCount] = useState<number>(0);\n\n  const debouncedValue = useDebounce(searchText, 1000);\n\n  useEffect(() => {\n    if (!count) {\n      setCount((prev: number) => prev + 1);\n      return;\n    }\n\n    dispatch(searchAppointments(debouncedValue));\n  }, [debouncedValue]);\n\n  const onSearch = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value);\n  }, [searchText]);\n\n  const onLogout = useCallback(() => {\n    localStorage.clear();\n    dispatch(setUser({ type: null, token: null }));\n  }, []);\n\n  return { onSearch, onLogout, searchText };\n};\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport './index.scss';\n\ntype Props = {\n  onClick: () => void;\n  disabled?: boolean;\n};\n\nconst AddFormButton = ({ onClick, disabled }: Props) => {\n  const handleClick = () => {\n    if (disabled) return;\n    onClick();\n  };\n\n  return (\n    <div\n      className={`add-form-button ${disabled ? 'disabled' : ''}`}\n      onClick={handleClick}\n      onKeyPress={handleClick}\n    >\n      <img src=\"/icons/plus.svg\" alt=\"plus\" />\n    </div>\n  );\n};\n\nexport default AddFormButton;\n","import React from 'react';\nimport './index.scss';\nimport CustomSelect from '../CustomSelect';\nimport { useFilter, Props } from './useFilter';\n\nconst Filter = (props: Props) => {\n  const meta = useFilter(props);\n\n  if (!meta.shouldRenderFilter) {\n    return null;\n  }\n\n  return (\n    <div className={`filter ${props.horizontal ? 'horizontal' : ''}`}>\n      <div className=\"filter__header\">\n        <span style={{ whiteSpace: 'nowrap' }} className={`${props.horizontal ? '' : 'title'}`}>{props.horizontal ? 'Сортувати по:' : 'Фільтр'}</span>\n        {!props.horizontal && (\n          <img\n            src=\"/icons/clear-form.svg\"\n            alt=\"clear form\"\n            onClick={meta.clearAll}\n            className=\"filter__clear\"\n          />\n        )}\n      </div>\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '115px' : '100%' }}>\n        <CustomSelect\n          data={meta.notaries}\n          selectedValue={meta.selectedNotary}\n          onChange={meta.setSelectedNotary}\n          label=\"Нотаріус\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '90px' : '100%' }}>\n        <CustomSelect\n          data={meta.readers}\n          selectedValue={meta.selectedReader}\n          onChange={meta.setSelectedReader}\n          label=\"Читач\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '110px' : '100%' }}>\n        <CustomSelect\n          data={meta.accompanyings}\n          selectedValue={meta.selectedAccompanying}\n          onChange={meta.setSelectedAccompanying}\n          label=\"Видавач\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '150px' : '100%' }}>\n        <CustomSelect\n          data={meta.contractTypes}\n          selectedValue={meta.selectedContractType}\n          onChange={meta.setSelectedContractType}\n          label=\"Тип договору\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '140px' : '100%' }}>\n        <CustomSelect\n          data={meta.developers}\n          selectedValue={meta.selectedDeveloper}\n          onChange={meta.setSelectedDeveloper}\n          label=\"Забудовник\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '125px' : '100%' }}>\n        <CustomSelect\n          data={meta.representative}\n          selectedValue={meta.selectedRepresentative}\n          onChange={meta.setSelectedRepresentative}\n          label=\"Підписант\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      {!props.horizontal && (\n        <div\n          className=\"filter__select\"\n        >\n          <CustomSelect\n            data={meta.sortType}\n            selectedValue={meta.selectedSortType}\n            onChange={meta.setSelectedSortType}\n            label=\"Сортувати\"\n            size=\"medium\"\n          />\n        </div>\n      )}\n\n      {props.horizontal && (\n        <div className=\" df\">\n          <img\n            src=\"/icons/clear-form.svg\"\n            alt=\"clear form\"\n            onClick={meta.clearAll}\n            className=\"filter__clear\"\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Filter;\n","import {\n  useEffect, useMemo, useState, useCallback\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FilterData, State } from '../../store/types';\nimport { SelectItem } from '../../types';\nimport { fetchFilterData } from '../../store/filter/actions';\nimport getDeveloperInfo from '../../services/getDeveloperInfo';\n\nexport type Props = {\n  onFilterDataChange: (data: FilterData) => void;\n  horizontal?: boolean;\n}\n\nexport const useFilter = ({ onFilterDataChange, horizontal }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n  const { filterInitialData } = useSelector((state: State) => state.filter);\n\n  useEffect(() => {\n    dispatch(fetchFilterData());\n  }, [token]);\n\n  const readers = useMemo(() => filterInitialData?.reader, [filterInitialData]);\n  const notaries = useMemo(() => filterInitialData?.notary, [\n    filterInitialData,\n  ]);\n  const accompanyings = useMemo(() => filterInitialData?.accompanying, [\n    filterInitialData,\n  ]);\n  const contractTypes = useMemo(() => filterInitialData?.contract_type, [\n    filterInitialData,\n  ]);\n  const developers = useMemo(() => filterInitialData?.developer, [\n    filterInitialData,\n  ]);\n  const sortType = useMemo(() => filterInitialData?.sort_type, [\n    filterInitialData,\n  ]);\n  const [representative, setRepresentative] = useState<SelectItem[]>([]);\n\n  const shouldRenderFilter = useMemo(() => Boolean(filterInitialData), [\n    filterInitialData,\n  ]);\n\n  // selected values and CTA\n  const [selectedNotary, setSelectedNotary] = useState<string | null>(null);\n  const [selectedReader, setSelectedReader] = useState<string | null>(null);\n  const [selectedAccompanying, setSelectedAccompanying] = useState<\n    string | null\n  >(null);\n  const [selectedContractType, setSelectedContractType] = useState<\n    string | null\n  >(null);\n  const [selectedDeveloper, setSelectedDeveloper] = useState<string | null>(\n    null\n  );\n  const [selectedRepresentative, setSelectedRepresentative] = useState<\n    string | null\n  >(null);\n  const [selectedSortType, setSelectedSortType] = useState<string | null>(null);\n\n  const clearAll = useCallback(() => {\n    setSelectedNotary(null);\n    setSelectedReader(null);\n    setSelectedAccompanying(null);\n    setSelectedContractType(null);\n    setSelectedDeveloper(null);\n    setSelectedRepresentative(null);\n    setSelectedSortType(null);\n  }, []);\n\n  // useEffects\n  useEffect(() => {\n    setSelectedRepresentative(null);\n    if (token && selectedDeveloper) {\n      getDeveloperInfo(token, +selectedDeveloper)\n        .then((data) => setRepresentative(data.representative || []));\n    }\n  }, [selectedDeveloper]);\n\n  useEffect(() => {\n    const data: FilterData = {\n      notary_id: selectedNotary || null,\n      reader_id: selectedReader || null,\n      accompanying_id: selectedAccompanying || null,\n      contract_type_id: selectedContractType || null,\n      developer_id: selectedDeveloper || null,\n      dev_representative_id: selectedRepresentative || null,\n    };\n\n    if (!horizontal) {\n      data.sort_type = selectedSortType;\n    }\n\n    onFilterDataChange(data);\n  }, [\n    selectedNotary,\n    selectedReader,\n    selectedAccompanying,\n    selectedContractType,\n    selectedDeveloper,\n    selectedRepresentative,\n    selectedSortType,\n  ]);\n\n  return {\n    shouldRenderFilter,\n    notaries,\n    readers,\n    accompanyings,\n    contractTypes,\n    developers,\n    representative,\n    sortType,\n    selectedNotary,\n    selectedReader,\n    selectedRepresentative,\n    selectedDeveloper,\n    selectedContractType,\n    selectedAccompanying,\n    selectedSortType,\n    setSelectedNotary,\n    setSelectedReader,\n    setSelectedAccompanying,\n    setSelectedContractType,\n    setSelectedDeveloper,\n    setSelectedRepresentative,\n    setSelectedSortType,\n    clearAll,\n  };\n};\n","const formatAppointmentDate = (\n  hours: any,\n  rooms: any,\n  days: any,\n  raw: number,\n  cell: number\n) => {\n  const { day, date, year } = days[Math.floor(raw / hours.length)];\n  const { time } = hours[raw % hours.length];\n  const room = rooms[cell].id;\n  return {\n    day,\n    date: date.split('.').reverse().join('.'),\n    year,\n    time,\n    room,\n  };\n};\n\nexport default formatAppointmentDate;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport './SchedulerDay.scss';\n\nconst SchedulerDay = ({ day, hours }) => (\n  <div className=\"scheduler__weekDay\">\n    <div className=\"scheduler__day\">\n      <p>\n        {day.day}\n        <br />\n        {day.date}\n      </p>\n    </div>\n    <div className=\"scheduler__timeLine\">\n      {hours.map(({ time }) => (\n        <p key={time}>{time}</p>\n      ))}\n    </div>\n  </div>\n);\n\nexport default SchedulerDay;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport './GridLayout.scss';\nimport RGL, { WidthProvider } from 'react-grid-layout';\nimport $ from 'jquery';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useSelector } from 'react-redux';\n\nconst ReactGridLayout = WidthProvider(RGL);\n\nexport default function GridLayout({\n  appointments,\n  cols,\n  handleDrag,\n  handleClick,\n}) {\n  const [dragAndDropWidth, setDragAndDropWidth] = useState(1200);\n  const { schedulerLock } = useSelector((state) => state.scheduler);\n\n  useEffect(() => {\n    setDragAndDropWidth($('.scheduler__appointments').width());\n  }, []);\n\n  const onDrag = (all, current) => {\n    const currentApp = all.find((item) => item.i === current.i);\n    handleDrag(currentApp);\n    handleClick(currentApp);\n  };\n\n  if (!appointments) {\n    return <span>Loading...</span>;\n  }\n\n  return (\n    <ReactGridLayout\n      className=\"scheduler__dragAndDrop\"\n      cols={cols}\n      rowHeight={75}\n      width={dragAndDropWidth}\n      margin={[0, 0]}\n      containerPadding={[0, 0]}\n      verticalCompact={false}\n      preventCollision\n      layout={appointments}\n      onDragStop={onDrag}\n      isDraggable={!schedulerLock}\n    >\n      {appointments.map((appointment) => (\n        <div\n          key={appointment.i}\n          className=\"appointment\"\n          style={{ borderLeft: `4px solid ${appointment.color}` }}\n          onClickCapture={() => handleClick(appointment)}\n        >\n          <div className=\"appointment__title\">{appointment.title}</div>\n          <table className=\"appointment__table\">\n            <tbody>\n              <tr>\n                {Object.values(appointment.short_info).map((item) => (\n                  <td key={uuidv4()}>{item}</td>\n                ))}\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      ))}\n    </ReactGridLayout>\n  );\n}\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React from 'react';\nimport { Props, useGridTableCell } from './useGridTableCell';\n\nconst GridLayoutCell = (props: Props) => {\n  const { onClick } = useGridTableCell(props);\n\n  return (\n    <td\n      onClick={onClick}\n      style={{\n        width: `calc(100% / ${props.rowsQuantity})`,\n        backgroundColor: props.selected ? '#E5E5E5' : '',\n      }}\n    />\n  );\n};\n\nexport default GridLayoutCell;\n","/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable operator-linebreak */\nimport { useMemo, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { State } from '../../../../../../../../store/types';\nimport formatAppointmentDate from '../../utils/formatAppointmentDate';\nimport { setSelectedNewAppointment } from '../../../../../../../../store/scheduler/actions';\n\nexport type Props = {\n  rowsQuantity: number;\n  raw: number;\n  cell: number;\n  selected: boolean;\n};\n\nexport const useGridTableCell = ({ raw, cell }: Props) => {\n  const { options } = useSelector((state: State) => state.scheduler);\n  const dispatch = useDispatch();\n\n  const rooms = useMemo(() => options?.rooms, [options]);\n  const hours = useMemo(() => options?.work_time, [options]);\n  const days = useMemo(() => options?.day_and_date, [options]);\n\n  const onClick = useCallback(() => {\n    const payload = formatAppointmentDate(hours, rooms, days, raw, cell);\n    const isBefore = moment(\n      `${payload.year}.${payload.date}. ${payload.time}`\n    ).isBefore(moment());\n\n    if (isBefore) return;\n    dispatch(setSelectedNewAppointment({ ...payload, raw, cell }));\n  }, [hours, rooms, days, raw, cell]);\n\n  return { onClick };\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport GridTableCell from '../GridTableCell/GridTableCell';\nimport { Props, useGridTable } from './useGridTable';\n\nexport default function GridTable({ rows, columns }: Props) {\n  const { newSelectedAppointment } = useGridTable();\n\n  return (\n    <div className=\"scheduler__bodyTable\">\n      <table>\n        <tbody>\n          {rows.map((_: any, rowIndex: number) => (\n            <tr key={uuidv4()}>\n              {columns.map((day: any, cellIndex: number) => (\n                <GridTableCell\n                  selected={\n                    // eslint-disable-next-line prettier/prettier\n                    newSelectedAppointment?.raw === rowIndex\n                    // eslint-disable-next-line prettier/prettier\n                    && newSelectedAppointment?.cell === cellIndex\n                  }\n                  rowsQuantity={rows.length}\n                  raw={rowIndex}\n                  cell={cellIndex}\n                  key={uuidv4()}\n                />\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { State } from '../../../../../../../../store/types';\n\nexport type Props = {\n  rows: any;\n  columns: any;\n};\n\nexport const useGridTable = () => {\n  const newSelectedAppointment = useSelector(\n    (state: State) => state.scheduler.newSelectedAppointment\n  );\n\n  return { newSelectedAppointment };\n};\n","import React from 'react';\nimport './index.scss';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useSchedulerTable } from './useSchedulerTable';\nimport Loader from '../../../../../../components/Loader/Loader';\n\n// components\nimport SchedulerDay from './components/SchedulerDay/SchedulerDay';\nimport GridLayout from './components/GridLayout/GridLayout';\nimport GridTable from './components/GridTable/GridTable';\n\nconst SchedulerTable = () => {\n  const {\n    shouldLoad,\n    rooms,\n    hours,\n    tableRows,\n    tableColumns,\n    days,\n    appointments,\n    handleAppointmentDrag,\n    onAppointmentClick,\n  } = useSchedulerTable();\n\n  if (shouldLoad) {\n    return (\n      <div className=\"scheduler\">\n        <Loader />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"scheduler\">\n      <div className=\"scheduler__header\">\n        <div />\n        <div>\n          <table>\n            <tbody>\n              <tr>\n                {rooms.map(({ title }: any) => (\n                  <td\n                    key={title}\n                    style={{ width: `calc(100% / ${rooms.length})` }}\n                  >\n                    {title}\n                  </td>\n                ))}\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <div className=\"scheduler__body\">\n        <div className=\"scheduler__dayBar\">\n          {days.map((item: any) => (\n            <SchedulerDay day={item} hours={hours} key={uuidv4()} />\n          ))}\n        </div>\n        <div className=\"scheduler__appointments\">\n          <GridTable rows={tableRows} columns={tableColumns} />\n          <GridLayout\n            appointments={appointments}\n            cols={tableColumns.length}\n            handleDrag={handleAppointmentDrag}\n            handleClick={onAppointmentClick}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SchedulerTable;\n","import { useCallback, useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UserTypes } from '../../../../../../types';\nimport {\n  setSelectedOldAppointment,\n  fetchCalendarCard,\n  fetchSchedulerSettings,\n  moveCalendarCard,\n} from '../../../../../../store/scheduler/actions';\nimport { fetchAppointments, setAppointments } from '../../../../../../store/appointments/actions';\nimport { State } from '../../../../../../store/types';\nimport formatAppointmentDate from './utils/formatAppointmentDate';\n\nexport const useSchedulerTable = () => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n  const { options, isLoading } = useSelector((state: State) => state.scheduler);\n  const { appointments } = useSelector((state: State) => state.appointments);\n\n  useEffect(() => {\n    if (!isLoading) {\n      dispatch(fetchSchedulerSettings());\n      dispatch(fetchAppointments());\n    }\n\n    return () => { dispatch(setAppointments([])); };\n  }, [token]);\n\n  const rooms = useMemo(() => options?.rooms, [options]);\n  const hours = useMemo(() => options?.work_time, [options]);\n\n  const shouldLoad = useMemo(() => isLoading || !options, [\n    isLoading,\n    rooms,\n    hours,\n  ]);\n\n  const tableColumns = useMemo(() => new Array(rooms?.length || 0).fill(1), [\n    rooms,\n  ]);\n\n  const days = useMemo(() => options?.day_and_date, [options]);\n\n  const tableRows = useMemo(\n    () => new Array(hours?.length * days?.length || 0).fill(1),\n    [hours]\n  );\n\n  const handleAppointmentDrag = useCallback(\n    (appointment) => {\n      const payload = formatAppointmentDate(\n        hours,\n        rooms,\n        days,\n        appointment.y,\n        appointment.x\n      );\n\n      const date_time = `${payload.year}.${payload.date}. ${payload.time}`;\n\n      const data = {\n        date_time,\n        room_id: payload.room,\n      };\n\n      dispatch(moveCalendarCard(data, appointment.i));\n    },\n    [hours, days, rooms, days]\n  );\n\n  const onAppointmentClick = useCallback(\n    async ({ x, y, i }: any) => {\n      const payload = formatAppointmentDate(hours, rooms, days, y, x);\n\n      dispatch(fetchCalendarCard(i));\n\n      dispatch(\n        setSelectedOldAppointment({\n          ...payload,\n          i,\n        })\n      );\n    },\n    [hours, rooms, days]\n  );\n\n  return {\n    shouldLoad,\n    rooms,\n    hours,\n    tableRows,\n    tableColumns,\n    days,\n    appointments,\n    handleAppointmentDrag,\n    onAppointmentClick,\n  };\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { State } from '../../../../../../../store/types';\n\nexport const QuantityLabel = () => {\n  const { appointments } = useSelector((state: State) => state.appointments);\n\n  return (\n    <span style={{ whiteSpace: 'nowrap' }}>\n      {`В роботі: ${appointments?.length}`}\n    </span>\n  );\n};\n\nexport default QuantityLabel;\n","import * as React from 'react';\nimport Filter from '../../../../../../../../components/Filter';\nimport { useSchedulerFilter } from './useSchedulerFilter';\n\nconst SchedulerFilter = () => {\n  const { onFilterDataChange } = useSchedulerFilter();\n\n  return (\n    <Filter onFilterDataChange={onFilterDataChange} horizontal />\n  );\n};\n\nexport default SchedulerFilter;\n","import { useDispatch } from 'react-redux';\nimport { useCallback, useState } from 'react';\nimport { FilterData } from '../../../../../../../../store/types';\nimport { fetchAppointmentsByFilter } from '../../../../../../../../store/appointments/actions';\n\nexport const useSchedulerFilter = () => {\n  const [shouldRender, setShouldRender] = useState<boolean>(false);\n  const dispatch = useDispatch();\n\n  const onFilterDataChange = useCallback((data: FilterData) => {\n    if (!shouldRender) {\n      setShouldRender(true);\n      return;\n    }\n\n    dispatch(fetchAppointmentsByFilter(data));\n  }, [shouldRender]);\n\n  return { onFilterDataChange };\n};\n","import React from 'react';\nimport { useSchedulerLock } from './useSchedulerLock';\nimport './index.scss';\n\nconst SchedulerLock = () => {\n  const { onClick, schedulerLock } = useSchedulerLock();\n\n  return (\n    <div className={`scheduler__lock-button ${schedulerLock ? '' : 'unLock'}`}>\n      <img src=\"/icons/lock.svg\" alt=\"lock\" onClick={onClick} />\n    </div>\n  );\n};\n\nexport default SchedulerLock;\n","import { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSchedulerLock } from '../../../../../../../../store/scheduler/actions';\nimport { State } from '../../../../../../../../store/types';\n\nexport const useSchedulerLock = () => {\n  const dispatch = useDispatch();\n  const { schedulerLock } = useSelector((state: State) => state.scheduler);\n\n  const onClick = useCallback(() => {\n    dispatch(setSchedulerLock(!schedulerLock));\n  }, [schedulerLock]);\n\n  return { onClick, schedulerLock };\n};\n","import React from 'react';\nimport Filter from '../../../../../../components/Filter';\nimport QuantityLabel from './components/QuantityLabel';\nimport SchedulerFilter from './components/SchedulerFilter';\nimport SchedulerLock from './components/SchedulerLock';\nimport './index.scss';\n\nconst SchedulerFilterContainer = () => (\n  <div className=\"scheduler__filter\">\n    <QuantityLabel />\n    <SchedulerFilter />\n    <SchedulerLock />\n  </div>\n);\n\nexport default SchedulerFilterContainer;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport './index.scss';\n\ntype Props = {\n  onClick: (index: number) => void;\n  index: number;\n  disabled?: boolean;\n};\n\nconst RemoveFormButton = ({ onClick, index, disabled }: Props) => {\n  const handleClick = () => {\n    if (disabled) return;\n    onClick(index);\n  };\n\n  return (\n    <div\n      className={`remove-form-button ${disabled ? 'disabled' : ''}`}\n      onClick={handleClick}\n      onKeyPress={() => onClick(index)}\n    >\n      <img src=\"/icons/minus.svg\" alt=\"minus\" />\n    </div>\n  );\n};\n\nexport default RemoveFormButton;\n","/* eslint-disable react/destructuring-assignment */\nimport React, { memo } from 'react';\nimport './index.scss';\nimport { v4 as uuidv4 } from 'uuid';\nimport AddFormButton from '../../../../../../../../../../components/AddFormButton';\nimport CustomInput from '../../../../../../../../../../components/CustomInput/CustomInput';\nimport RemoveFormButton from '../../../../../../../../../../components/RemoveFormButton';\nimport { Props, useClients } from './useClients';\n\nconst Clients = (props: Props) => {\n  const meta = useClients(props);\n\n  return (\n    <div className=\"mv12\">\n      {props.clients.map((item, index) => (\n        <div className=\"clients__item mv12\">\n          <CustomInput\n            label=\"ПІБ\"\n            value={item.full_name}\n            onChange={(val) => meta.onNameChange(index, val)}\n            disabled={props.disabled || false}\n          />\n\n          <div className=\"mv12 df-jc-sb\">\n            <CustomInput\n              label=\"Номер телефону\"\n              value={item.phone}\n              onChange={(val) => meta.onPhoneChange(index, val)}\n              disabled={props.disabled || false}\n            />\n\n            {props.clients.length > 1 && (\n              <div style={{ marginLeft: '12px' }}>\n                <RemoveFormButton\n                  onClick={props.onRemove}\n                  index={index}\n                  disabled={props.disabled || false}\n                />\n              </div>\n            )}\n\n            {index === props.clients.length - 1 && (\n              <div style={{ marginLeft: '12px' }}>\n                <AddFormButton\n                  onClick={props.onAdd}\n                  disabled={props.disabled || false}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(Clients);\n","import { useCallback } from 'react';\nimport { CodeFixAction } from 'typescript';\nimport { ClientItem } from '../../../../../../../../../../types';\n\nexport type Props = {\n  clients: ClientItem[];\n  onChange: (index: number, value: ClientItem) => void;\n  onAdd: () => void;\n  onRemove: (index: number) => void;\n  disabled?: boolean;\n};\n\nexport const useClients = ({ onChange, clients }: Props) => {\n  const onPhoneChange = useCallback(\n    (index: number, value: string) => {\n      onChange(index, {\n        ...clients[index],\n        phone: value,\n      });\n    },\n    [clients]\n  );\n\n  const onNameChange = useCallback(\n    (index: number, value: string) => {\n      onChange(index, {\n        ...clients[index],\n        full_name: value,\n      });\n    },\n    [clients]\n  );\n\n  return { onPhoneChange, onNameChange };\n};\n","/* eslint-disable prettier/prettier */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable no-unused-vars */\nimport React, { memo } from 'react';\nimport './index.scss';\nimport { v4 as uuidv4 } from 'uuid';\nimport AddFormButton from '../../../../../../../../../../components/AddFormButton';\nimport CustomInput from '../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../components/CustomSelect';\nimport CustomSwitch from '../../../../../../../../../../components/CustomSwitch';\nimport RadioButtonsGroup from '../../../../../../../../../../components/RadioButtonsGroup';\nimport RemoveFormButton from '../../../../../../../../../../components/RemoveFormButton';\nimport { ImmovableItem } from '../../../../../../../../../../types';\nimport { useImmovableContainer, Props } from './useImmovableContainer';\n\nconst ImmovableContainer = (props: Props) => {\n  const meta = useImmovableContainer(props);\n  return (\n    <div className=\"mv12 immovables__group\">\n      {props.immovables.map((item: ImmovableItem, index: number) => (\n        <div className=\"immovables__item mv12\">\n          <RadioButtonsGroup\n            buttons={\n              props.disabled\n                ? meta.contracts.filter(\n                  ({ id }: any) => id === (item.contract_type_id || meta.contracts[0].id)\n                )\n                : meta.contracts\n            }\n            onChange={(val) => meta.onContractChange(index, +val)}\n            selected={item.contract_type_id}\n            unicId={`contract-${index}`}\n          />\n\n          <div className=\"mv12\">\n            <CustomSelect\n              onChange={(val) => meta.onBuildingChange(index, val)}\n              data={meta.building}\n              label=\"Будинок\"\n              selectedValue={item.building_id}\n              disabled={props.disabled || false}\n            />\n          </div>\n\n          <RadioButtonsGroup\n            buttons={\n              props.disabled\n                ? meta.immovableTypes.filter(\n                  ({ id }: any) => id === (item.imm_type_id || meta.immovableTypes[0].id)\n                )\n                : meta.immovableTypes\n            }\n            onChange={(val) => meta.onImmovableTypeChange(index, +val)}\n            selected={item.imm_type_id}\n            unicId={`types-${index}`}\n          />\n\n          <div className=\"mv12\">\n            <CustomSwitch\n              label=\"Банк\"\n              onChange={(val) => meta.onBankChange(index, val)}\n              selected={item.bank}\n              disabled={props.disabled}\n            />\n          </div>\n\n          <div className=\"mv12\">\n            <CustomSwitch\n              label=\"Довіреність\"\n              onChange={(val) => meta.onProxyChange(index, val)}\n              selected={item.proxy}\n              disabled={props.disabled}\n            />\n          </div>\n\n          <div className=\"mv12 df-jc-sb\">\n            <CustomInput\n              key=\"test\"\n              label=\"Номер приміщення\"\n              onChange={(val) => meta.onImmNumChange(index, val)}\n              value={item.imm_number}\n              disabled={props.disabled}\n            />\n\n            {props.immovables.length > 1 && (\n              <div style={{ marginLeft: '12px' }}>\n                <RemoveFormButton\n                  onClick={props.onRemove}\n                  index={index}\n                  disabled={props.disabled}\n                />\n              </div>\n            )}\n\n            {index === props.immovables.length - 1 && (\n              <div style={{ marginLeft: '12px' }}>\n                <AddFormButton\n                  onClick={props.onAdd}\n                  disabled={props.disabled}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(ImmovableContainer);\n","import { useMemo, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport { State } from '../../../../../../../../../../store/types';\nimport {\n  ImmovableItem,\n  ImmovableItems,\n} from '../../../../../../../../../../types';\n\nexport type Props = {\n  immovables: ImmovableItems;\n  onChange: (index: number, value: ImmovableItem) => void;\n  onAdd: () => void;\n  onRemove: (index: number) => void;\n  disabled?: boolean;\n};\n\nexport const useImmovableContainer = ({ immovables, onChange }: Props) => {\n  const { options, developersInfo } = useSelector(\n    (state: State) => state.scheduler\n  );\n\n  const building = useMemo(() => developersInfo?.building || [], [\n    developersInfo,\n  ]);\n\n  const contracts = useMemo(() => options?.form_data.contract_type, [options]);\n\n  const immovableTypes = useMemo(() => options?.form_data.immovable_type, [\n    options,\n  ]);\n\n  // onChange functions\n  const onContractChange = useCallback(\n    (index: number, id: number) => {\n      onChange(index, {\n        ...immovables[index],\n        contract_type_id: id,\n      });\n    },\n    [immovables]\n  );\n\n  const onBuildingChange = useCallback(\n    (index: number, id: string) => {\n      onChange(index, {\n        ...immovables[index],\n        building_id: +id,\n      });\n    },\n    [immovables]\n  );\n\n  const onImmovableTypeChange = useCallback(\n    (index: number, id: number) => {\n      onChange(index, {\n        ...immovables[index],\n        imm_type_id: id,\n      });\n    },\n    [immovables]\n  );\n\n  const onBankChange = useCallback(\n    (index: number, val: boolean) => {\n      onChange(index, {\n        ...immovables[index],\n        bank: val,\n      });\n    },\n    [immovables]\n  );\n\n  const onProxyChange = useCallback(\n    (index: number, val: boolean) => {\n      onChange(index, {\n        ...immovables[index],\n        proxy: val,\n      });\n    },\n    [immovables]\n  );\n\n  const onImmNumChange = useCallback(\n    (index: number, val: string) => {\n      onChange(index, {\n        ...immovables[index],\n        imm_number: +val,\n      });\n    },\n    [immovables]\n  );\n\n  return {\n    building,\n    contracts,\n    immovableTypes,\n    onContractChange,\n    onBuildingChange,\n    onImmovableTypeChange,\n    onBankChange,\n    onProxyChange,\n    onImmNumChange,\n  };\n};\n","import { ClientItem, ImmovableItem } from '../../../../../../../../types';\n\nexport type ImmovableItemKey = keyof ImmovableItem;\n\nexport const immovableItem: ImmovableItem = {\n  contract_type_id: null,\n  building_id: null,\n  imm_type_id: null,\n  imm_number: null,\n  bank: false,\n  proxy: false,\n};\n\nexport const clientItem: ClientItem = {\n  phone: null,\n  full_name: null,\n};\n","/* eslint-disable indent */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React, { memo } from 'react';\nimport RadioButtonsGroup from '../../../../../../../../components/RadioButtonsGroup';\nimport CustomSelect from '../../../../../../../../components/CustomSelect';\nimport './index.scss';\nimport Clients from './components/Clients/Clients';\nimport PrimaryButton from '../../../../../../../../components/PrimaryButton';\nimport Loader from '../../../../../../../../components/Loader/Loader';\nimport ImmovableContainer from './components/ImmovableContainer';\nimport { useForm, Props } from './useForm';\n\nconst SchedulerForm = (props: Props) => {\n  const meta = useForm(props);\n\n  if (meta.shouldLoad) {\n    return (\n      <div className=\"schedulerForm\">\n        <Loader />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"schedulerForm\">\n      <div className=\"schedulerForm__forms\">\n        <div className=\"schedulerForm__header\">\n          <p className=\"title\">\n            {meta.insideEdit || props.edit\n              ? `Запис № ${props.selectedCard.i}`\n              : 'Новий запис'}\n          </p>\n          {meta.insideEdit ? (\n            <img\n              src=\"/icons/delete.svg\"\n              alt=\"delete\"\n              className=\"clear-icon\"\n              onClick={meta.onDeleteCard}\n            />\n          ) : (\n            <img\n              src=\"/icons/clear.svg\"\n              alt=\"clear\"\n              className=\"clear-icon\"\n              onClick={meta.onClearAll}\n            />\n          )}\n        </div>\n\n        <div className=\"mv12\">\n          <RadioButtonsGroup\n            buttons={\n              meta.insideEdit\n                ? meta.notaries.filter(\n                    ({ id }: any) => id === meta.selectedNotaryId\n                  )\n                : meta.notaries\n            }\n            onChange={meta.onNotaryChange}\n            selected={meta.selectedNotaryId}\n            unicId=\"notaries\"\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomSelect\n            label=\"Забудовник\"\n            data={meta.developers}\n            onChange={meta.onDeveloperChange}\n            selectedValue={meta.selectedDeveloperId}\n            disabled={meta.insideEdit || false}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomSelect\n            onChange={meta.onRepresentativeChange}\n            data={meta.representative}\n            label=\"Підписант\"\n            selectedValue={meta.selectedDevRepresentativeId}\n            disabled={meta.insideEdit || false}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomSelect\n            onChange={meta.onManagerChange}\n            data={meta.manager}\n            label=\"Менеджер\"\n            selectedValue={meta.selecedDevManagerId}\n            disabled={meta.insideEdit || false}\n          />\n        </div>\n\n        <ImmovableContainer\n          immovables={meta.immovables}\n          onChange={meta.onImmovablesChange}\n          onAdd={meta.onAddImmovables}\n          onRemove={meta.onRemoveImmovable}\n          disabled={meta.insideEdit || false}\n        />\n\n        <Clients\n          clients={meta.clients}\n          onChange={meta.onClientsChange}\n          onAdd={meta.onAddClients}\n          onRemove={meta.onRemoveClient}\n          disabled={meta.insideEdit || false}\n        />\n\n        <div className=\"mv12\">\n          {meta.insideEdit && (\n            <PrimaryButton\n              label=\"Редагувати\"\n              onClick={() => meta.setEdit(false)}\n              disabled={props.edit ? false : !meta.activeAddButton}\n              className=\"schedulerForm__editButton\"\n            />\n          )}\n\n          {!meta.insideEdit && (\n            <PrimaryButton\n              label={`${props.edit ? 'Зберегти' : 'Створити'}`}\n              onClick={meta.onFormCreate}\n              disabled={!meta.activeAddButton}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SchedulerForm);\n","/* eslint-disable prettier/prettier */\n/* eslint-disable arrow-body-style */\nimport {\n  useMemo,\n  useState,\n  useCallback,\n  useEffect\n} from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { State } from '../../../../../../../../store/types';\n\nimport {\n  setDevelopersInfo,\n  setSelectedNewAppointment,\n  createNewCard,\n  editCalendarCard,\n  fetchDeveloperInfo,\n  removeCalendarCard\n} from '../../../../../../../../store/scheduler/actions';\n\nimport { clientItem, immovableItem } from './types';\n\nimport {\n  ClientItem,\n  ImmovableItem,\n  ImmovableItems,\n  NewCard\n} from '../../../../../../../../types';\n\nexport type Props = {\n  selectedCard: any,\n  initialValues?: any,\n  edit?: boolean,\n}\n\nexport const useForm = ({ selectedCard, initialValues, edit }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n  const { options, developersInfo, isLoading } = useSelector(\n    (state: State) => state.scheduler\n  );\n  const [insideEdit, setEdit] = useState<boolean>(edit || false);\n\n  // Form State\n  const [notary, setNotary] = useState<number | null>(initialValues?.card.notary_id || null);\n  const [devCompanyId, setDevCompanyId] = useState<number | null>(null);\n  const [devRepresentativeId, setDevRepresentativeId] = useState<number | null>(null);\n  const [devManagerId, setDevManagerId] = useState<number | null>(null);\n  const [immovables, setImmovables] = useState<ImmovableItems>([immovableItem]);\n  const [clients, setClients] = useState<ClientItem[]>([clientItem]);\n\n  // Form Memo Values\n  const shouldLoad = useMemo(() => isLoading || !options, [options, isLoading]);\n\n  const notaries = useMemo(() => options?.form_data.notary, [options]);\n\n  const developers = useMemo(() => options?.form_data.developer, [options]);\n\n  const manager = useMemo(() => developersInfo?.manager || [], [\n    developersInfo,\n  ]);\n\n  const representative = useMemo(() => developersInfo?.representative || [], [\n    developersInfo,\n  ]);\n\n  // Form onChange functions\n  const onNotaryChange = useCallback((value) => {\n    setNotary(value);\n  }, []);\n\n  useEffect(() => {\n    if (initialValues) {\n      setEdit(true);\n      setNotary(initialValues.card.notary_id);\n      setDevCompanyId(initialValues.card.dev_company_id);\n      setDevRepresentativeId(initialValues.card.dev_representative_id);\n      setDevManagerId(initialValues.card.dev_manager_id);\n      setImmovables(\n        initialValues.immovables.length === 0\n          ? [immovableItem]\n          : initialValues.immovables\n      );\n      setClients(\n        initialValues.clients.length === 0\n          ? [clientItem]\n          : initialValues.clients\n      );\n    }\n\n    if (initialValues?.card.dev_company_id) {\n      dispatch(fetchDeveloperInfo(initialValues.card.dev_company_id));\n    }\n  }, [initialValues]);\n\n  const onDeveloperChange = useCallback(\n    (value) => {\n      setDevCompanyId(value);\n      setDevManagerId(null);\n      setDevRepresentativeId(null);\n\n      if (!value) {\n        dispatch(setDevelopersInfo({}));\n      }\n\n      dispatch(fetchDeveloperInfo(value));\n    },\n    []\n  );\n\n  const onRepresentativeChange = useCallback(\n    (value) => {\n      setDevRepresentativeId(value);\n    },\n    [devRepresentativeId]\n  );\n\n  const onManagerChange = useCallback(\n    (value) => {\n      setDevManagerId(value);\n    },\n    [devManagerId]\n  );\n\n  const onImmovablesChange = useCallback(\n    (index: number, value: any) => {\n      immovables[index] = value;\n      setImmovables([...immovables]);\n    },\n    [immovables]\n  );\n\n  const onClientsChange = useCallback(\n    (index: number, value: ClientItem) => {\n      clients[index] = value;\n      setClients([...clients]);\n    },\n    [clients]\n  );\n\n  // Form CTA\n  const onClearAll = useCallback(() => {\n    setNotary(null);\n    setDevCompanyId(null);\n    setDevRepresentativeId(null);\n    setDevManagerId(null);\n    setImmovables([immovableItem]);\n    setClients([clientItem]);\n  }, []);\n\n  const onAddImmovables = useCallback(() => {\n    setImmovables([...immovables, immovableItem]);\n  }, [immovables]);\n\n  const onRemoveImmovable = useCallback((index: number) => {\n    setImmovables((prev) => prev.filter((_, mapIndex) => mapIndex !== index));\n  }, [immovables]);\n\n  const onAddClients = useCallback(() => {\n    setClients([...clients, clientItem]);\n  }, [clients]);\n\n  const onRemoveClient = useCallback((index: number) => {\n    setClients((prev) => prev.filter((_, mapIndex) => mapIndex !== index));\n  }, [clients]);\n\n  const onDeleteCard = useCallback(() => {\n    dispatch(removeCalendarCard(selectedCard.i));\n  }, [selectedCard]);\n\n  const activeAddButton = useMemo(() => {\n    return Boolean(devCompanyId)\n    && immovables.length\n    && immovables.every((item: ImmovableItem) => item.building_id && item.imm_number)\n    && selectedCard;\n  }, [devCompanyId, immovables, selectedCard]);\n\n  const onFormCreate = useCallback(() => {\n    const date_time = `${selectedCard.year}.${selectedCard.date}. ${selectedCard.time}`;\n\n    const formatImmovables = immovables.map((item: ImmovableItem) => ({\n      ...item,\n      contract_type_id: item.contract_type_id || options.form_data.immovable_type[0].id,\n      imm_type_id: item.imm_type_id || options.form_data.immovable_type[0].id,\n    }));\n\n    const data: NewCard = {\n      immovables: formatImmovables,\n      clients,\n      date_time,\n      dev_company_id: devCompanyId,\n      dev_representative_id: devRepresentativeId,\n      dev_manager_id: devManagerId,\n      room_id: selectedCard.room,\n      notary_id: notary || notaries[0].id,\n    };\n\n    if (token) {\n      if (edit) {\n        dispatch(editCalendarCard(data, selectedCard.i));\n        setEdit(true);\n      } else {\n        dispatch(createNewCard(data));\n        dispatch(setSelectedNewAppointment(null));\n        onClearAll();\n      }\n    }\n  }, [\n    devCompanyId,\n    devRepresentativeId,\n    devManagerId,\n    notary,\n    immovables,\n    clients,\n    edit,\n    selectedCard,\n  ]);\n\n  return {\n    shouldLoad,\n    notaries,\n    representative,\n    developers,\n    manager,\n    immovables,\n    clients,\n    activeAddButton,\n    insideEdit,\n    onNotaryChange,\n    onDeveloperChange,\n    onRepresentativeChange,\n    onManagerChange,\n    onImmovablesChange,\n    onAddImmovables,\n    onRemoveImmovable,\n    onRemoveClient,\n    onClientsChange,\n    onAddClients,\n    onClearAll,\n    onFormCreate,\n    setEdit,\n    onDeleteCard,\n    selectedNotaryId: notary,\n    selectedDeveloperId: devCompanyId,\n    selectedDevRepresentativeId: devRepresentativeId,\n    selecedDevManagerId: devManagerId,\n  };\n};\n","import React from 'react';\nimport './index.scss';\nimport Form from './components/Form';\nimport { useSchedulerForm } from './useSchedulerForm';\n\nconst SchedulerForm = () => {\n  const meta = useSchedulerForm();\n\n  return (\n    <div className=\"schedulerForm scheduler__form\">\n      <div className=\"schedulerForm__tabs\">\n        <div\n          className={`item ${meta.selectedTab === 0 ? 'selected' : ''}`}\n          style={{ backgroundColor: !meta.editAppointmentData ? 'white' : '' }}\n          onClick={() => meta.setSelectedTab(0)}\n        >\n          {meta.newSelectedAppointment\n            ? `${meta.newSelectedAppointment.day} ${meta.newSelectedAppointment.time} ${meta.newSelectedAppointment.date}`\n            : 'Виберіть дату'}\n        </div>\n\n        {meta.oldSelectedAppointment && meta.editAppointmentData && (\n          <div\n            className={`item ${meta.selectedTab === 1 ? 'selected' : ''}`}\n            onClick={() => meta.setSelectedTab(1)}\n          >\n            {`${meta.oldSelectedAppointment.day} ${meta.oldSelectedAppointment.time} ${meta.oldSelectedAppointment.date}`}\n            <img\n              src=\"/icons/x.svg\"\n              alt=\"close\"\n              className=\"clear-icon\"\n              onClick={meta.onCloseTab}\n            />\n          </div>\n        )}\n      </div>\n\n      {meta.selectedTab === 0 && (\n        <Form selectedCard={meta.newSelectedAppointment} />\n      )}\n\n      {meta.selectedTab === 1 && meta.editAppointmentData && meta.oldSelectedAppointment && (\n        <Form\n          selectedCard={meta.oldSelectedAppointment}\n          initialValues={meta.editAppointmentData}\n          edit\n        />\n      )}\n    </div>\n  );\n};\n\nexport default SchedulerForm;\n","import { useCallback, useState, useEffect } from 'react';\n/* eslint-disable prettier/prettier */\nimport { useSelector, useDispatch } from 'react-redux';\nimport { State } from '../../../../../../store/types';\nimport { setEditAppointmentData, setSelectedOldAppointment } from '../../../../../../store/scheduler/actions';\n\nexport const useSchedulerForm = () => {\n  const dispatch = useDispatch();\n  const [selectedTab, setSelectedTab] = useState(0);\n\n  const newSelectedAppointment = useSelector(\n    (state: State) => state.scheduler.newSelectedAppointment\n  );\n  const oldSelectedAppointment = useSelector(\n    (state: State) => state.scheduler.oldSelectedAppointment\n  );\n  const editAppointmentData = useSelector(\n    (state: State) => state.scheduler.editAppointmentData\n  );\n\n  const onCloseTab = useCallback(() => {\n    dispatch(setSelectedOldAppointment(null));\n    dispatch(setEditAppointmentData(null));\n  }, []);\n\n  useEffect(() => {\n    setSelectedTab(editAppointmentData ? 1 : 0);\n  }, [editAppointmentData]);\n\n  useEffect(() => {\n    setSelectedTab(0);\n  }, [newSelectedAppointment]);\n\n  return {\n    newSelectedAppointment,\n    oldSelectedAppointment,\n    editAppointmentData,\n    selectedTab,\n    setSelectedTab,\n    onCloseTab,\n  };\n};\n","import React from 'react';\nimport './index.scss';\n\n// Components\nimport SchedulerTable from './components/Table/SchedulerTable';\nimport SchedulerFilter from './components/SchedulerFilterContainer';\nimport SchedulerForm from './components/SchedulerForm';\nimport { useModal } from '../../../../components/Modal/useModal';\nimport Modal from '../../../../components/Modal';\n\nconst SchedulerContainer = () => {\n  const modalProps = useModal();\n\n  return (\n    <div className=\"scheduler__container\">\n      <div className=\"scheduler__dataView\">\n        <SchedulerFilter />\n        <SchedulerTable />\n      </div>\n      <SchedulerForm />\n      <Modal {...modalProps} />\n    </div>\n  );\n};\n\nexport default SchedulerContainer;\n","import React from 'react';\nimport Header from '../../components/Header';\nimport SchedulerContainer from './components/SchedulerContainer';\n\nconst SchedulerScreen = () => (\n  <>\n    <Header />\n    <SchedulerContainer />\n  </>\n);\n\nexport default SchedulerScreen;\n"],"sourceRoot":""}