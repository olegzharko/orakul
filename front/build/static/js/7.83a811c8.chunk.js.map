{"version":3,"sources":["components/SectionWithTitle/SectionWithTitle.tsx","components/PrimaryButton/PrimaryButton.tsx","components/CustomInput/index.ts","components/CustomSelect/CustomSelect.tsx","components/CustomInput/CustomInput.tsx","utils/formatDates.ts","components/CustomDatePicker/CustomDatePicker.tsx","components/CustomSwitch/CustomSwitch.tsx","components/Modal/useModal.ts","components/Modal/Modal.tsx","components/Card/Card.tsx","components/RadioButtonsGroup/RadioButtonsGroup.tsx","components/Header/utils/useDebounce.ts","components/Header/Header.tsx","components/Header/useHeader.ts","components/PhoneMaskInput/PhoneMaskInput.tsx","components/AddFormButton/AddFormButton.tsx","components/RadioButtonsGroup/index.ts","components/ContentPanel/ContentPanel.tsx","components/ControlPanel/ControlPanel.tsx","components/RemoveFormButton/RemoveFormButton.tsx","components/Dashboard/useDashboard.ts","components/Dashboard/components/DashboardSection/DashboardSection.tsx","components/Dashboard/components/DashbordControl/DashbordControl.tsx","components/Dashboard/Dashboard.tsx","components/Filter/Filter.tsx","components/Filter/useFilter.ts","Screens/DashboardScreen/useDashboardScreen.ts","Screens/DashboardScreen/components/DashboardContainer/components/FilterContainer/components/Contracts/Contracts.tsx","Screens/DashboardScreen/components/DashboardContainer/components/FilterContainer/FilterContainer.tsx","Screens/DashboardScreen/components/DashboardContainer/components/FilterContainer/useFilterContainer.ts","Screens/DashboardScreen/components/DashboardContainer/DashboardContainer.tsx","Screens/DashboardScreen/components/DashboardContainer/useDashboardContainer.ts","Screens/DashboardScreen/components/ManageContainer/components/Navigation/Navigation.tsx","Screens/DashboardScreen/components/ManageContainer/components/Navigation/useNavigation.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/GeneratorContainer/components/ImmovableDashboard/Dashboard.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/GeneratorContainer/components/ImmovableDashboard/useDashboard.ts","services/generator/Immovable/reqImmovableTemplate.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/GeneratorContainer/components/ImmovableFields/components/Templates/useTemplates.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/GeneratorContainer/components/ImmovableFields/components/Templates/Templates.tsx","services/generator/Immovable/reqImmovableGeneral.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/GeneratorContainer/components/ImmovableFields/components/General/useGeneral.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/GeneratorContainer/components/ImmovableFields/components/General/General.tsx","services/generator/Immovable/reqImmovableOwnership.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/GeneratorContainer/components/ImmovableFields/components/Ownership/useOwnership.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/GeneratorContainer/components/ImmovableFields/components/Ownership/Ownership.tsx","services/generator/Immovable/reqImmovableRating.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/GeneratorContainer/components/ImmovableFields/components/Rating/useRating.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/GeneratorContainer/components/ImmovableFields/components/Rating/Rating.tsx","services/generator/Immovable/reqImmovablePayment.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/GeneratorContainer/components/ImmovableFields/components/SecurityPayment/useSecurityPayment.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/GeneratorContainer/components/ImmovableFields/components/SecurityPayment/SecurityPayment.tsx","services/generator/Immovable/reqImmovableTermination.ts","utils/numbers.ts","services/generator/Immovable/reqImmovableInstallment.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/GeneratorContainer/components/ImmovableFields/useFields.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/GeneratorContainer/components/ImmovableFields/components/Installment/useInstallment.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/GeneratorContainer/components/ImmovableFields/components/Termination/Termination.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/GeneratorContainer/components/ImmovableFields/components/Termination/useTermination.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/GeneratorContainer/components/ImmovableFields/components/Installment/Installment.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/GeneratorContainer/components/ImmovableFields/Fields.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/GeneratorContainer/GeneratorContainer.tsx","components/CardWithClose/CardWithClose.tsx","../node_modules/@material-ui/core/esm/DialogTitle/DialogTitle.js","../node_modules/@material-ui/core/esm/DialogContentText/DialogContentText.js","components/ConfirmDialog/ConfirmDialog.tsx","services/generator/Immovable/deleteImmovable.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/ManagerContainer/components/Dashboard/useDashboard.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/ManagerContainer/components/Dashboard/Dashboard.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/ManagerContainer/components/Fields/components/Checks/Checks.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/ManagerContainer/components/Fields/components/Contract/Contract.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/ManagerContainer/components/Fields/components/General/General.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/ManagerContainer/components/Fields/components/Responsible/Responsible.tsx","services/manager/Immovables/reqManagerImmovables.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/ManagerContainer/components/Fields/useImmovableFields.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/ManagerContainer/components/Fields/ImmovableFields.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/components/ManagerContainer/ManagerContainer.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Immovable/Immovable.tsx","services/manager/Clients/deleteManagerClient.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/ManagerContainer/components/Dashboard/useDashboard.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/ManagerContainer/components/Dashboard/Dashboard.tsx","services/manager/Clients/reqManagerClient.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/ManagerContainer/components/Fields/useFields.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/ManagerContainer/components/Fields/Fields.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/ManagerContainer/ManagerContainer.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsDashboard/ClientsDashboard.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsDashboard/useClientsDashboard.ts","services/generator/Client/AddNewCityModal/reqGeneratorCityCreate.ts","services/generator/Client/AddNewCityModal/getGeneratorDistricts.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/components/Address/components/AddCityModal/useAddCityModal.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/components/Address/components/AddCityModal/AddCityModal.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/components/Address/components/Fields/Fields.tsx","services/generator/Client/reqClientAddress.ts","services/generator/Client/reqClientCities.ts","services/generator/Client/reqClientDistricts.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/components/Address/useAddress.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/components/Address/Address.tsx","services/generator/Client/reqClientCitizenship.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/components/Citizenship/useCitizenship.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/components/Citizenship/Citizenship.tsx","services/generator/Client/reqClientContacts.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/components/Contacts/useContracts.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/components/Contacts/Contacts.tsx","services/generator/Client/reqClientName.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/components/Fio/useFio.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/components/Fio/Fio.tsx","services/generator/Client/reqClientPassport.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/components/Passport/usePassport.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/components/Passport/Passport.tsx","services/generator/Client/reqClientConsents.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/components/Statement/useStatement.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/components/Statement/Statement.tsx","services/generator/Client/reqClientRepresentative.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/components/PowerOfAttorney/usePowerOfAttorney.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/components/PowerOfAttorney/PowerOfAttorney.tsx","services/generator/Client/reqTermination.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/useClientsFields.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/components/Termination/Termination.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/components/Termination/useTermination.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/components/ClientsFields/ClientsFields.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/components/GeneratorContainer/GeneratorContainer.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Clients/Clients.tsx","components/TitleInfoDuet/TitleInfoDuet.tsx","services/generator/Developer/getDevelopers.ts","services/generator/Developer/reqRepresentative.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Seller/components/Dashboard/useDashboard.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Seller/components/Dashboard/Dashboard.tsx","services/generator/Developer/reqDeveloper.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Seller/components/Fields/useFields.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Seller/components/Fields/Fields.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Seller/Seller.tsx","services/generator/SideNotary/getSideNotaries.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/SideNotary/components/Dashboard/useDashboard.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/SideNotary/components/Dashboard/Dashboard.tsx","services/generator/SideNotary/reqNotaryData.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/SideNotary/components/Fields/useFields.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/SideNotary/components/Fields/Fields.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/SideNotary/SideNotary.tsx","components/SecondaryButton/SecondaryButton.tsx","services/generator/Immovable/reqImmovableExchange.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Main/components/GeneratorMain/components/ExchangeRate/useExchangeRate.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Main/components/GeneratorMain/components/ExchangeRate/ExchangeRate.tsx","services/generator/Main/getMainData.ts","services/generator/Main/createContract.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Main/components/GeneratorMain/useGeneratorMain.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Main/components/GeneratorMain/GeneratorMain.tsx","services/manager/Main/putMainDeveloper.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Main/components/ManagerMain/components/Participants/Participants.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Main/components/ManagerMain/components/Participants/useParticipants.ts","services/manager/Main/putMainPersons.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Main/components/ManagerMain/components/Persons/usePersons.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Main/components/ManagerMain/components/Persons/Persons.tsx","services/manager/Main/getMain.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Main/components/ManagerMain/useManagerMain.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Main/components/ManagerMain/ManagerMain.tsx","services/assistant/reqAssistantMain.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Main/components/Assistant/useAssistantMain.ts","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Main/components/Assistant/AssistantMain.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/components/Main/Main.tsx","Screens/DashboardScreen/components/ManageContainer/components/WorkSpace/WorkSpace.tsx","Screens/DashboardScreen/components/ManageContainer/ManageContainer.tsx","Screens/DashboardScreen/components/ManageContainer/useManageContainer.ts","Screens/DashboardScreen/DashboardScreen.tsx"],"names":["SectionWithTitle","title","children","onClear","headerColor","className","style","backgroundColor","color","type","src","alt","onClick","PrimaryButton","label","disabled","CustomSelect","onChange","data","selectedValue","size","required","disableDefaultValue","useState","selected","setSelected","useEffect","FormControl","variant","InputLabel","Select","error","value","event","val","target","length","defaultValue","MenuItem","map","id","memo","CustomInput","text","setText","changeMonthWitDate","date","replace","formatDate","day","getDate","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","customTheme","createMuiTheme","palette","primary","main","CustomDatePicker","selectedDate","onSelect","setValue","theme","utils","DateFnsUtils","margin","format","parseDate","Date","parse","Number","isNaN","KeyboardButtonProps","CustomSwitch","FormControlLabel","control","Switch","checked","name","labelPlacement","useModal","dispatch","useDispatch","modalInfo","useSelector","state","useMemo","handleClose","setModalInfo","open","Modal","success","message","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Card","link","haveStatus","to","ReactHtmlParser","RadioButtonsGroup","buttons","unicId","setSelectedValue","handleChange","htmlFor","uuidv4","useDebounce","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","Header","history","useHistory","searchText","setSearchText","count","setCount","searchAppointments","prev","onSearch","useCallback","e","onLogout","localStorage","clear","setUser","token","push","useHeader","placeholder","PhoneMaskInput","mask","TextField","AddFormButton","handleClick","onKeyPress","ContentPanel","ControlPanel","RemoveFormButton","index","DashboardViewType","DashboardSection","cards","TABLE","card","content","item","DashboardControl","CARDS","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","Dashboard","props","selectedType","setSelectedType","useDashboard","isChangeTypeButton","sections","section","Filter","meta","onFilterDataChange","horizontal","user","filterInitialData","filter","fetchFilterData","readers","reader","notaries","notary","accompanyings","accompanying","contractTypes","contract_type","developers","developer","sortType","sort_type","representative","setRepresentative","shouldRenderFilter","Boolean","selectedNotary","setSelectedNotary","selectedReader","setSelectedReader","selectedAccompanying","setSelectedAccompanying","selectedContractType","setSelectedContractType","selectedDeveloper","setSelectedDeveloper","selectedRepresentative","setSelectedRepresentative","selectedSortType","setSelectedSortType","clearAll","getDeveloperInfo","then","notary_id","reader_id","accompanying_id","contract_type_id","developer_id","dev_representative_id","useFilter","DashboardContractNavigation","Contracts","FilterContainer","fetchAppointmentsByFilter","onContractsFilterChange","url","fetchAppointmentsByContracts","useFilterContainer","filter_type","DashboardContainer","modalProps","appointments","isLoading","fetchAppointments","setAppointments","formatAppointments","instructions","useDashboardContainer","Loader","Navigation","useParams","shouldShowSeller","UserTypes","GENERATOR","shouldShowImmovable","ASSISTANT","shouldShowClient","shouldShowSideNotaries","useNavigation","MAIN","SELLER","IMMOVABLES","CLIENTS","SIDE_NOTARIES","immovables","fetchImmovables","setImmovables","immovable","list","reqImmovableTemplate","a","method","bodyData","requestApi","DEFAULT_URL","headers","Authorization","console","log","Templates","initialData","contractType","setContractType","statementTemplates","setStatementTemplates","questionnaireTemplates","setQuestionnaireTemplates","bankTemplates","setBankTemplates","taxesTemplates","setTaxesTemplates","contractTemplates","setContractTemplates","communalTemplates","setCommunalTemplates","terminationContracts","setTerminationContracts","terminationRefunds","setTerminationRefunds","setNotaries","type_id","contract_template_id","taxes_template_id","bank_template_id","questionnaire_template_id","statement_template_id","ready","translate","sign_date","final_sign_date","communal_template_id","termination_contract_id","termination_refund_id","termination_refund_reg_date","termination_refund_reg_number","termination_refund_notary_id","setData","onSave","reqData","statement_templates","questionnaire_templates","bank_templates","taxes_templates","contract_templates","communal_templates","termination_contracts","termination_refunds","useTemplates","reqImmovableGeneral","General","roominess","setRoominess","building","setBuilding","immType","setImmType","imm_type_id","building_id","roominess_id","imm_number","registration_number","price_grn","reserve_grn","m2_grn","total_space","living_space","floor","isSaveButtonDisable","imm_type","useGeneral","reqImmovableOwnership","Ownership","setNotary","reg_date","reg_number","discharge_date","discharge_number","useOwnership","reqImmovableRating","Rating","valuation","setValuation","property_valuation_id","price","property_valuation","useRating","reqImmovablePayment","SecurityPayment","clients","setClients","final_date","reg_num","first_part_grn","client_id","useSecurityPayment","reqImmovableTermination","isNumber","parseFloat","reqImmovableInstallment","InstallmentRadioButtons","Termination","price_dollar","useTermination","installmentRadioButtons","MONTH","QUARTER","Installment","total_month","total_price","useInstallment","Fields","immovableId","general","setGeneral","ownerShip","setOwnerShip","securityPayment","setSecurityPayment","retting","setRetting","termination","setTermination","templates","setTemplates","installment","setInstallment","isCorrectId","res","useFields","GeneratorContainer","path","CardWithClose","preventDefault","DialogTitle","React","ref","classes","_props$disableTypogra","disableTypography","other","_objectWithoutProperties","_extends","clsx","root","Typography","component","withStyles","padding","flex","DialogContentText","marginBottom","ConfirmDialog","handleConfirm","Dialog","aria-labelledby","aria-describedby","DialogContent","DialogActions","Button","autoFocus","deleteImmovable","clientId","showModal","setShowModal","immovableNeedToRemove","setImmovableNeedToRemove","clientRemove","personId","onModalShow","onModalConfirm","onModalCancel","undefined","MANAGER","toString","Checks","checksList","newData","Object","keys","forEach","key","Contract","types","immovableTypes","buildings","immovable_type_id","immovable_number","immovable_reg_num","Responsible","reqManagerImmovables","ImmovableFields","setTitle","setImmovableTypes","setBuildings","setReader","setAccompanying","contracts","setContracts","checkList","setCheckList","responsible","setResponsible","checks","setChecks","isOnSaveDisabled","immovable_id","immovable_type","check_list","reduce","acc","useImmovableFields","ManagerContainer","Immovable","deleteManagerClient","cardId","personNeedToRemove","setPersonNeedToRemove","fetchClients","person","full_name","reqManagerClient","marriedTypes","setMarriedTypes","passportTypes","setPassportTypes","client","setClient","clientChecks","setClientChecks","spouse","setSpouse","spouseChecks","setSpouseChecks","confidant","setConfidant","confidantChecks","setConfidantChecks","onClientChecksChange","onSpouseChecksChange","onConfidantChecksChange","onClientClear","clearClient","onSpouseClear","clearSpouse","onConfidantClear","clearConfidant","clientChecksValues","spouseChecksValues","confidantChecksValues","info","isSaveButtonDisabled","surname","passport_type_id","patronymic","phone","email","married_type_id","married_types","passport_type","ClientsDashboard","useClientsDashboard","values","reqGeneratorCityCreate","getGeneratorDistricts","AddCityModal","region","setRegion","cityTypes","setCityTypes","districts","setDistricts","region_id","district_id","city_type_id","allData","setAllData","district","regions","city_type","useAddCityModal","cities","addressType","buildingType","buildingPartType","apartmentType","actual","onRegionChange","onDistrictChange","actual_region_id","actual_district_id","actual_city_id","city_id","actual_address_type_id","address_type_id","actual_address","address","actual_building_type_id","building_type_id","actual_building_num","building_num","actual_building_part_id","building_part_id","actual_building_part_num","building_part_num","actual_apartment_type_id","apartment_type_id","actual_apartment_num","apartment_num","reqClientAddress","reqClientCities","regionId","districtId","reqClientDistricts","Address","setRegions","actualRegions","setActualRegions","setCities","actualCities","setActualCities","actualDistricts","setActualDistricts","setAddressType","setBuildingType","setBuildingPartType","setApartmentType","registration","setRegistration","setActual","actualData","setActualData","onActualRegionChange","onActualDistrictChange","address_type","building_type","building_part","apartment_type","useAddress","reqClientCitizenship","Citizenship","citizenships","citizenship_id","useCitizenship","reqClientContacts","Contacts","useContracts","reqClientName","Fio","surname_n","name_n","patronymic_n","surname_r","name_r","patronymic_r","surname_o","name_o","patronymic_o","surname_d","name_d","patronymic_d","useFio","reqClientPassport","Passport","gender","tax_code","passport_code","passport_department","passport_demographic_code","passport_date","passport_finale_date","date_of_birth","sexButtons","passport_types","usePassport","reqClientConsents","Statement","rakulNotary","setRakulNotary","consentTemplates","setConsentTemplates","marriageTypes","setMarriageTypes","consentSpouseWords","setConsentSpouseWords","consent_template_id","mar_series","mar_series_num","mar_date","mar_depart","mar_reg_num","consent_spouse_word_id","original","widow","widow_date","consent_templates","consent_spouse_words","useStatement","reqClientRepresentative","PowerOfAttorney","otherNotary","setOtherNotary","other_notary","usePowerOfAttorney","reqTermination","userId","spouseWords","setSpouseWords","spouse_word_id","spouse_words","ClientsFields","userType","setUserType","fioData","setFioData","contacts","setContacts","citizenship","setCitizenship","passport","setPassport","setAddress","consents","setConsents","useClientsFields","Clients","TitleInfoDuet","getDevelopers","reqRepresentative","setDevelopers","setLoading","devRepresentative","setDevRepresentative","representativeDoc","setRepresentativeDoc","dev_companies","dev_representative","representative_id","representative_info","representative_doc","reqDeveloper","developerId","setDeveloper","developerIsId","dev_company","ceo_spouse_info","Seller","getSideNotaries","setIsLoading","reqNotaryData","notaryId","short_name","short_patronymic","activity_n","denominative","setDenominate","activity_o","ablative","setAblative","shouldLoadData","onDenominativeClear","onAblativeClear","isButtonDisabled","some","SideNotary","SecondaryButton","reqImmovableExchange","ExchangeRate","contractBuy","setContractBuy","contractSell","setContractSell","exchangeRate","setExchangeRate","onRefreshRate","contract_buy","contract_sell","exchange_rate","useExchangeRate","getMainData","createContract","GeneratorMain","setInstructions","exchange","setExchange","document","location","href","date_info","room","time","useGeneratorMain","putMainDeveloper","Participants","firstRender","setFirstRender","representatives","setRepresentatives","manager","setManager","manager_id","generator_id","generation_ready","useParticipants","generator","putMainPersons","initialPersonData","person_type","Persons","onDataChange","onClearAll","onAdd","onRemove","_","mapIndex","usePersons","contact_person_type","marginLeft","getMain","ManagerMain","participantsData","setParticipantsData","personsData","setPersonsData","mainTitle","contact_person_info","useManagerMain","reqAssistantMain","AssistantMain","setGenerator","cancelled","onImmovableChange","onGeneralClear","onImmovableClear","i","useAssistantMain","Main","WorkSpace","selectedNav","ManageContainer","setSelectedNav","contractData","useManageContainer","DashboardScreen"],"mappings":"yJA2CeA,EAjCU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,QAASC,EAA7B,EAA6BA,YAA7B,OACvB,sBAAKC,UAAU,qBAAf,UACE,sBACEA,UAAU,6BACVC,MAAO,CACLC,gBAAiBH,GAAe,IAHpC,UAME,oBACEC,UAAU,gBACVC,MAAO,CACLE,MAAOJ,EAAc,QAAU,IAHnC,SAMGH,IAEFE,GACC,wBAAQM,KAAK,SAASJ,UAAU,eAAhC,SACE,qBACEK,IAAI,wBACJC,IAAI,QACJN,UAAU,aACVO,QAAST,SAKjB,qBAAKE,UAAU,2BAAf,SACGH,S,0FCZQW,EAdO,SAAC,GAAD,IACpBC,EADoB,EACpBA,MAAOF,EADa,EACbA,QAASG,EADI,EACJA,SAAUV,EADN,EACMA,UADN,OAGpB,wBACEA,UAAS,yBAAoBU,EAAW,WAAa,GAA5C,YACPV,GAAa,IAEfO,QAASA,EACTG,SAAUA,EALZ,SAOGD,M,iCCtBL,kD,2IC0BME,EAAe,SAAC,GAUR,IATZC,EASW,EATXA,SACAC,EAQW,EARXA,KACAJ,EAOW,EAPXA,MACAK,EAMW,EANXA,cACAJ,EAKW,EALXA,SAKW,IAJXK,YAIW,MAJJ,SAII,EAHXf,EAGW,EAHXA,UACAgB,EAEW,EAFXA,SACAC,EACW,EADXA,oBACW,EACqBC,mBAASJ,GAAiB,IAD/C,mBACJK,EADI,KACMC,EADN,KAGXC,qBAAU,WACRD,EAAYN,GAAiB,MAC5B,CAACA,IAQJ,OACE,eAACQ,EAAA,EAAD,CAAaC,QAAQ,WAAWvB,UAAS,uBAAkBA,GAAa,IAAMe,KAAMA,EAApF,UACE,cAACS,EAAA,EAAD,UAAaf,IACb,eAACgB,EAAA,EAAD,CACEC,MAAOV,IAAaG,EACpBQ,MAAOR,EACPP,SAZe,SAACgB,GACpB,IAAMC,EAAMD,EAAME,OAAOH,MACzBP,EAAYS,GACZjB,EAASiB,IAULnB,SAAUA,GAA4B,IAAhBG,EAAKkB,OAC3BC,aAAa,GALf,WAOIf,GACA,cAACgB,EAAA,EAAD,CAAUN,MAAM,GAAhB,SACE,8EAGHd,EAAKqB,KAAI,gBAAGC,EAAH,EAAGA,GAAIvC,EAAP,EAAOA,MAAP,OACR,cAACqC,EAAA,EAAD,CAAUN,MAAOQ,EAAjB,SACGvC,GADuBuC,aASrBC,iBAAKzB,I,8EC1BL0B,IAjCK,SAAC,GAOP,IANZ5B,EAMW,EANXA,MACAG,EAKW,EALXA,SAKW,IAJXe,aAIW,MAJH,GAIG,MAHXvB,YAGW,MAHJ,SAGI,EAFXM,EAEW,EAFXA,SACAM,EACW,EADXA,SACW,EACaE,mBAASS,GAAS,IAD/B,mBACJW,EADI,KACEC,EADF,KAGXlB,qBAAU,WACRkB,EAAQZ,GAAS,MAChB,CAACA,IAOJ,OACE,cAAC,IAAD,CACED,MAAOV,IAAasB,EACpB7B,MAAOA,EACPc,QAAQ,WACRI,MAAOW,EACP1B,SAXiB,SAACgB,GACpBW,EAAQX,EAAME,OAAOH,OACrBf,GAAYA,EAASgB,EAAME,OAAOH,QAUhCvB,KAAMA,EACNJ,UAAU,eACVU,SAAUA,IAAY,M,iCC3C5B,oEAAO,IAAM8B,EAAqB,SAACC,GAAD,OAA0BA,GAAQA,EAAKC,QAAQ,0BAA2B,aAE/FC,EAAa,SAACF,GACzB,IAAKA,EAAM,OAAO,KAElB,IAAMG,EAAMH,EAAKI,WAAa,EAAlB,WAA0BJ,EAAKI,WAAcJ,EAAKI,UACxDC,EAAQL,EAAKM,WAAa,EAAlB,WAA0BN,EAAKM,WAAa,GAAMN,EAAKM,WAAa,EAC5EC,EAAOP,EAAKQ,cACZC,EAAQT,EAAKU,YAAc,EAAnB,WAA2BV,EAAKU,YAAeV,EAAKU,WAC5DC,EAAUX,EAAKY,cAAgB,EAArB,WAA6BZ,EAAKY,cAAiBZ,EAAKY,aAExE,MAAM,GAAN,OAAUT,EAAV,YAAiBE,EAAjB,YAA0BE,EAA1B,YAAkCE,EAAlC,YAA2CE,K,2ICQvCE,EAAcC,YAAe,CACjCC,QAAS,CACPC,QAAS,CACPC,KAAM,cA4CGC,EAvCU,SAAC,GAAkE,IAAhEC,EAA+D,EAA/DA,aAAcC,EAAiD,EAAjDA,SAAUpD,EAAuC,EAAvCA,MAAOO,EAAgC,EAAhCA,SAAUN,EAAsB,EAAtBA,SAAsB,EAC/DQ,mBAA4C0C,GADmB,mBAClFjC,EADkF,KAC3EmC,EAD2E,KAGzFzC,qBAAU,WACRyC,EAASF,KACR,CAACA,IAaJ,OACE,cAAC,IAAD,CAAkBG,MAAOT,EAAzB,SACE,cAAC,IAAD,CAAyBU,MAAOC,IAAhC,SACE,cAAC,IAAD,CACEvC,MAAOV,IAAaW,EACpBuC,OAAO,SACPzD,MAAOA,EACP0D,OAAO,aACPxC,MAAOA,EACPf,SApBa,SAACC,GACpB,IAAMuD,EAAYC,KAAKC,MAAMzD,IACG,IAA5B0D,OAAOC,MAAMJ,GACfP,EAAS,MAETA,EAAShD,GAGXiD,EAASjD,IAaH4D,oBAAqB,CACnB,aAAc,eAEhB/D,SAAUA,IAAY,U,yHC7C1BgE,EAAe,SAAC,GAKR,IAJZjE,EAIW,EAJXA,MACAG,EAGW,EAHXA,SACAO,EAEW,EAFXA,SACAT,EACW,EADXA,SACW,EACeQ,mBAASC,GADxB,mBACJQ,EADI,KACGmC,EADH,KAYX,OAJAzC,qBAAU,WACRyC,EAAS3C,KACR,CAACA,IAGF,cAACwD,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEC,QAASnD,EACTf,SAda,SAACgB,GACpBkC,EAASlC,EAAME,OAAOgD,SACtBlE,EAASgB,EAAME,OAAOgD,UAahBC,KAAK,WACL5E,MAAM,YAGVM,MAAOA,EACPuE,eAAe,QACfhF,UAAU,gBACVU,SAAUA,IAAY,KAKb0B,iBAAKsC,I,qGC1CPO,EAAW,WACtB,IAAMC,EAAWC,cACTC,EAAcC,aAAY,SAACC,GAAD,OAAkBA,EAAM5B,QAAlD0B,UAgBR,OAdmBG,mBACjB,8BAAC,eACIH,GADL,IAEEI,YAAa,kBACXN,EACEO,YAAa,2BACRL,GADO,IAEVM,MAAM,WAId,CAACN,M,qHCcUO,EArBD,SAAC,GAAD,IACZD,EADY,EACZA,KAAMF,EADM,EACNA,YAAaI,EADP,EACOA,QAASC,EADhB,EACgBA,QADhB,OAGZ,cAAC,IAAD,CACE7F,UAAU,kBACV0F,KAAMA,EACNI,QAASN,EACTO,sBAAoB,EACpBC,kBAAmBC,IACnBC,cAAe,CACbC,QAAS,KAPb,SAUE,cAACC,EAAA,EAAD,CAAMC,GAAIX,EAAV,SACE,qBAAK1F,UAAS,gBAAW4F,EAAU,gBAAkB,gBAArD,SACE,mBAAG5F,UAAU,UAAb,SAAwB6F,Y,sLCcjBS,EA9BF,SAAC,GAA+D,IAA7D1G,EAA4D,EAA5DA,MAAOG,EAAqD,EAArDA,YAAaF,EAAwC,EAAxCA,SAAU0G,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,WAelD,OACE,eAAC,IAAD,CAAMC,GAAIF,EAAMvG,UAAU,OAA1B,UACE,sBAAKA,UAAU,eAAeC,MAAO,CAAEC,gBARrCsG,EAAmB,GACnBzG,GAEG,IAKL,UACE,sBAAME,MAAO,CAAEE,MAhBfqG,EAAmB,QACnBzG,EAAoB,QAEjB,IAaH,SAAyC2G,IAAgB9G,KACxD4G,GACC,qBAAKxG,UAAU,SAASC,MAAO,CAAEC,gBAAiBH,GAAe,SAGrE,qBAAKC,UAAU,aAAf,SACGH,S,gHClBI8G,EAAoB,SAAC,GAKpB,IAJZC,EAIW,EAJXA,QACAhG,EAGW,EAHXA,SACAO,EAEW,EAFXA,SACA0F,EACW,EADXA,OACW,EAC+B3F,mBAASC,GAAYyF,EAAQ,GAAGzE,IAD/D,mBACJrB,EADI,KACWgG,EADX,KAGXzF,qBAAU,WACRyF,EAAiB3F,GAAYyF,EAAQ,GAAGzE,IACxCvB,EAASO,GAAYyF,EAAQ,GAAGzE,MAC/B,CAAChB,IAEJ,IAAM4F,EAAe,SAAC5E,GACpB2E,EAAiB3E,GACjBvB,EAASuB,IAGX,OACE,qBAAKnC,UAAU,sBAAf,SACG4G,EAAQ1E,KAAI,gBAAGC,EAAH,EAAGA,GAAIvC,EAAP,EAAOA,MAAP,OACX,sBAEEI,UAAS,uCACY,IAAnB4G,EAAQ7E,OAAe,OAAS,IAHpC,UAME,uBACE3B,KAAK,QACL+B,GAAI0E,EAASjH,EACb+B,MAAOQ,EAEP2C,QAAShE,GAAiBqB,EAC1BvB,SAAU,kBAAMmG,EAAa5E,IAC7BnC,UAAU,UAEZ,uBAAOgH,QAASH,EAASjH,EAAOI,UAAU,QAA1C,SACGJ,MAfEqH,qBAuBA7E,mBAAKuE,I,mLC9CLO,EAhBK,SAACvF,EAAewF,GAAmB,IAAD,EACRjG,mBAASS,GADD,mBAC7CyF,EAD6C,KAC7BC,EAD6B,KAapD,OAVAhG,qBAAU,WACR,IAAMiG,EAAUC,YAAW,WACzBF,EAAkB1F,KACjBwF,GAEH,OAAO,WACLK,aAAaF,MAEd,CAAC3F,IAEGyF,G,OCeMK,EAxBA,WAAO,IAAD,ECGI,WACvB,IAAMvC,EAAWC,cACXuC,EAAUC,cAFa,EAGOzG,mBAAiB,IAHxB,mBAGtB0G,EAHsB,KAGVC,EAHU,OAIH3G,mBAAiB,GAJd,mBAItB4G,EAJsB,KAIfC,EAJe,KAMvBX,EAAiBF,EAAYU,EAAY,KAqB/C,OAnBAvG,qBAAU,WACHyG,EAKL5C,EAAS8C,YAAmBZ,IAJ1BW,GAAS,SAACE,GAAD,OAAkBA,EAAO,OAKnC,CAACb,IAYG,CAAEc,SAVQC,uBAAY,SAACC,GAC5BP,EAAcO,EAAEtG,OAAOH,SACtB,CAACiG,IAQeS,SANFF,uBAAY,WAC3BG,aAAaC,QACbrD,EAASsD,YAAQ,CAAEpI,KAAM,KAAMqI,MAAO,QACtCf,EAAQgB,KAAK,OACZ,IAE0Bd,cD7Bce,GAAnCT,EADW,EACXA,SAAUG,EADC,EACDA,SAAUT,EADT,EACSA,WAE5B,OACE,sBAAK5H,UAAU,mBAAf,UACE,cAAC,IAAD,CAAMyG,GAAG,IAAIzG,UAAU,eAAvB,SACE,qBAAKK,IAAI,kBAAkBC,IAAI,WAEjC,sBAAKN,UAAU,iBAAf,UACE,uBACEI,KAAK,OACLwI,YAAY,oCACZhI,SAAUsH,EACVvG,MAAOiG,IAET,qBAAKvH,IAAI,oBAAoBC,IAAI,cAEnC,qBAAKN,UAAU,kBAAf,SACE,qBAAKK,IAAI,qBAAqBC,IAAI,SAASC,QAAS8H,W,kIEqB7CQ,EA9BQ,SAAC,GAKV,IAJZpI,EAIW,EAJXA,MACAG,EAGW,EAHXA,SAGW,IAFXe,aAEW,MAFH,GAEG,EADXjB,EACW,EADXA,SACW,EACaQ,mBAASS,GAAS,IAD/B,mBACJW,EADI,KACEC,EADF,KAGXlB,qBAAU,WACRkB,EAAQZ,GAAS,MAChB,CAACA,IAOJ,OACE,cAAC,IAAD,CACE3B,UAAU,eACV8I,KAAK,oBACLnH,MAAOW,EACP5B,SAAUA,IAAY,EACtBE,SAXiB,SAACgB,GACpBW,EAAQX,EAAME,OAAOH,OACrBf,GAAYA,EAASgB,EAAME,OAAOH,QAIlC,SAOG,kBAAM,cAACoH,EAAA,EAAD,CAAWxH,QAAQ,WAAWd,MAAOA,EAAOC,SAAUA,IAAY,S,0FCdhEsI,EAjBO,SAAC,GAAkC,IAAhCzI,EAA+B,EAA/BA,QAASG,EAAsB,EAAtBA,SAC1BuI,EAAc,WACdvI,GACJH,KAGF,OACE,qBACEP,UAAS,0BAAqBU,EAAW,WAAa,IACtDH,QAAS0I,EACTC,WAAYD,EAHd,SAKE,qBAAK5I,IAAI,kBAAkBC,IAAI,a,iCCrBrC,kD,0FCae6I,EANM,SAAC,GAAD,IAAGtJ,EAAH,EAAGA,SAAH,OACnB,qBAAKG,UAAU,eAAf,SACGH,M,0FCIUuJ,EANM,SAAC,GAAD,IAAGvJ,EAAH,EAAGA,SAAH,OACnB,qBAAKG,UAAU,eAAf,SACGH,M,0FCkBUwJ,EAjBU,SAAC,GAAyC,IAAvC9I,EAAsC,EAAtCA,QAAS+I,EAA6B,EAA7BA,MAAO5I,EAAsB,EAAtBA,SAM1C,OACE,qBACEV,UAAS,6BAAwBU,EAAW,WAAa,IACzDH,QARgB,WACdG,GACJH,EAAQ+I,IAONJ,WAAY,kBAAM3I,EAAQ+I,IAH5B,SAKE,qBAAKjJ,IAAI,mBAAmBC,IAAI,c,mWClB1BiJ,E,qDAAAA,O,iBAAAA,I,kBAAAA,M,KAkBL,I,OCkBQC,EArBU,SAAC,GAAD,IAAGjD,EAAH,EAAGA,KAAM3G,EAAT,EAASA,MAAO6J,EAAhB,EAAgBA,MAAOxJ,EAAvB,EAAuBA,MAAOuG,EAA9B,EAA8BA,WAA9B,OACvB,sBAAKxG,UAAU,0BAAf,UACE,6BAAKJ,IACL,qBAAKI,UAAS,gBAAWC,IAAUsJ,EAAkBG,MAAQ,QAAU,IAAvE,SACGD,EAAMvH,KAAI,SAACyH,GAAD,OACT,cAACrD,EAAA,EAAD,CACEE,WAAYA,EAEZ5G,MAAO+J,EAAK/J,MACZG,YAAa4J,EAAKxJ,MAClBoG,KAAI,WAAMA,EAAN,YAAcoD,EAAKxH,IALzB,SAOGwH,EAAKC,QAAQ1H,KAAI,SAAC2H,GAAD,OAChB,sBAAiB7J,UAAU,qBAA3B,SAAiD6J,GAAtCA,OANRF,EAAKxH,aCUL2H,G,OA3BU,SAAC,GAAD,IAAG3I,EAAH,EAAGA,SAAUZ,EAAb,EAAaA,QAAb,OACvB,sBAAKP,UAAU,2BAAf,UACE,qBACEA,UAAS,UAAKuJ,EAAkBQ,QAAU5I,EAAW,WAAa,IAClEZ,QAAS,kBAAMA,EAAQgJ,EAAkBQ,QACzCC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BAPR,SASE,sBAAMC,SAAS,UAAUC,SAAS,UAAUC,EAAE,ypCAAypCJ,KAAK,cAE9sC,qBACEnK,UAAS,UAAKuJ,EAAkBG,QAAUvI,EAAW,WAAa,IAClEZ,QAAS,kBAAMA,EAAQgJ,EAAkBG,QACzCM,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BAPR,SASE,sBAAMC,SAAS,UAAUC,SAAS,UAAUC,EAAE,m+DAAm+DJ,KAAK,mBCC7gEK,EAzBG,SAACC,GAAkB,IAAD,EHeR,SAAC,GAAsB,IAApBxK,EAAmB,EAAnBA,MAAmB,EACRiB,mBAASjB,GAASsJ,EAAkBQ,OAD5B,mBAGhD,MAAO,CAAEW,aAHuC,KAGzBC,gBAHyB,MGdNC,CAAaH,GAA/CC,EAD0B,EAC1BA,aAAcC,EADY,EACZA,gBAEtB,OACE,sBAAK3K,UAAU,YAAf,UACGyK,EAAMI,oBACF,cAAC,EAAD,CAAkB1J,SAAUuJ,EAAcnK,QAASoK,IACvDF,EAAMK,UACL,qBAAK9K,UAAU,kBAAf,SACGyK,EAAMK,SAAS5I,KAAI,SAAC6I,GAAD,OAClB,cAAC,EAAD,CAEExE,KAAMkE,EAAMlE,KACZ3G,MAAOmL,EAAQnL,MACfK,MAAOyK,EACPjB,MAAOsB,EAAQtB,MACfjD,WAAYiE,EAAMjE,YALbS,yB,wIC+FJ+D,EA5GA,SAACP,GACd,IAAMQ,ECQiB,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,mBAAoBC,EAAwB,EAAxBA,WACxCjG,EAAWC,cACTsD,EAAUpD,aAAY,SAACC,GAAD,OAAkBA,EAAM5B,KAAK0H,QAAnD3C,MACA4C,EAAsBhG,aAAY,SAACC,GAAD,OAAkBA,EAAMgG,UAA1DD,kBAERhK,qBAAU,WACR6D,EAASqG,iBACR,CAAC9C,IAEJ,IAAM+C,EAAUjG,mBAAQ,yBAAM8F,QAAN,IAAMA,OAAN,EAAMA,EAAmBI,SAAQ,CAACJ,IACpDK,EAAWnG,mBAAQ,yBAAM8F,QAAN,IAAMA,OAAN,EAAMA,EAAmBM,SAAQ,CACxDN,IAEIO,EAAgBrG,mBAAQ,yBAAM8F,QAAN,IAAMA,OAAN,EAAMA,EAAmBQ,eAAc,CACnER,IAEIS,EAAgBvG,mBAAQ,yBAAM8F,QAAN,IAAMA,OAAN,EAAMA,EAAmBU,gBAAe,CACpEV,IAEIW,EAAazG,mBAAQ,yBAAM8F,QAAN,IAAMA,OAAN,EAAMA,EAAmBY,YAAW,CAC7DZ,IAEIa,EAAW3G,mBAAQ,yBAAM8F,QAAN,IAAMA,OAAN,EAAMA,EAAmBc,YAAW,CAC3Dd,IAvBoE,EAyB1BnK,mBAAuB,IAzBG,mBAyB/DkL,EAzB+D,KAyB/CC,EAzB+C,KA2BhEC,EAAqB/G,mBAAQ,kBAAMgH,QAAQlB,KAAoB,CACnEA,IA5BoE,EAgC1BnK,mBAAwB,MAhCE,mBAgC/DsL,EAhC+D,KAgC/CC,EAhC+C,OAiC1BvL,mBAAwB,MAjCE,mBAiC/DwL,EAjC+D,KAiC/CC,EAjC+C,OAkCdzL,mBAEtD,MApCoE,mBAkC/D0L,EAlC+D,KAkCzCC,EAlCyC,OAqCd3L,mBAEtD,MAvCoE,mBAqC/D4L,EArC+D,KAqCzCC,EArCyC,OAwCpB7L,mBAChD,MAzCoE,mBAwC/D8L,EAxC+D,KAwC5CC,EAxC4C,OA2CV/L,mBAE1D,MA7CoE,mBA2C/DgM,EA3C+D,KA2CvCC,EA3CuC,OA8CtBjM,mBAAwB,MA9CF,mBA8C/DkM,EA9C+D,KA8C7CC,EA9C6C,KAgDhEC,EAAWnF,uBAAY,WAC3BsE,EAAkB,MAClBE,EAAkB,MAClBE,EAAwB,MACxBE,EAAwB,MACxBE,EAAqB,MACrBE,EAA0B,MAC1BE,EAAoB,QACnB,IAoCH,OAjCAhM,qBAAU,WACR8L,EAA0B,MACtB1E,GAASuE,GACXO,YAAiB9E,GAAQuE,GACtBQ,MAAK,SAAC3M,GAAD,OAAUwL,EAAkBxL,EAAKuL,gBAAkB,SAE5D,CAACY,IAEJ3L,qBAAU,WACR,IAAMR,EAAmB,CACvB4M,UAAWjB,GAAkB,KAC7BkB,UAAWhB,GAAkB,KAC7BiB,gBAAiBf,GAAwB,KACzCgB,iBAAkBd,GAAwB,KAC1Ce,aAAcb,GAAqB,KACnCc,sBAAuBZ,GAA0B,MAG9C/B,IACHtK,EAAKsL,UAAYiB,GAGnBlC,EAAmBrK,KAClB,CACD2L,EACAE,EACAE,EACAE,EACAE,EACAE,EACAE,IAGK,CACLd,qBACAZ,WACAF,UACAI,gBACAE,gBACAE,aACAI,iBACAF,WACAM,iBACAE,iBACAQ,yBACAF,oBACAF,uBACAF,uBACAQ,mBACAX,oBACAE,oBACAE,0BACAE,0BACAE,uBACAE,4BACAE,sBACAC,YD3HWS,CAAUtD,GAEvB,OAAKQ,EAAKqB,mBAKR,sBAAKtM,UAAS,iBAAYyK,EAAMU,WAAa,aAAe,IAA5D,WACIV,EAAMU,YACN,sBAAKnL,UAAU,iBAAf,UACE,sBAAMA,UAAU,QAAhB,kDACA,qBACEK,IAAI,wBACJC,IAAI,aACJC,QAAS0K,EAAKqC,SACdtN,UAAU,qBAIhB,qBAAKA,UAAU,iBAAiBC,MAAO,CAAE+J,MAAOS,EAAMU,WAAa,QAAU,QAA7E,SACE,cAACxK,EAAA,EAAD,CACEE,KAAMoK,EAAKS,SACX5K,cAAemK,EAAKuB,eACpB5L,SAAUqK,EAAKwB,kBACfhM,MAAM,mDACNM,KAAM0J,EAAMU,WAAa,QAAU,aAIvC,qBAAKnL,UAAU,iBAAiBC,MAAO,CAAE+J,MAAOS,EAAMU,WAAa,OAAS,QAA5E,SACE,cAACxK,EAAA,EAAD,CACEE,KAAMoK,EAAKO,QACX1K,cAAemK,EAAKyB,eACpB9L,SAAUqK,EAAK0B,kBACflM,MAAM,iCACNM,KAAM0J,EAAMU,WAAa,QAAU,aAIvC,qBAAKnL,UAAU,iBAAiBC,MAAO,CAAE+J,MAAOS,EAAMU,WAAa,QAAU,QAA7E,SACE,cAACxK,EAAA,EAAD,CACEE,KAAMoK,EAAKW,cACX9K,cAAemK,EAAK2B,qBACpBhM,SAAUqK,EAAK4B,wBACfpM,MAAM,6CACNM,KAAM0J,EAAMU,WAAa,QAAU,aAIvC,qBAAKnL,UAAU,iBAAiBC,MAAO,CAAE+J,MAAOS,EAAMU,WAAa,QAAU,QAA7E,SACE,cAACxK,EAAA,EAAD,CACEE,KAAMoK,EAAKa,cACXhL,cAAemK,EAAK6B,qBACpBlM,SAAUqK,EAAK8B,wBACftM,MAAM,sEACNM,KAAM0J,EAAMU,WAAa,QAAU,aAIvC,qBAAKnL,UAAU,iBAAiBC,MAAO,CAAE+J,MAAOS,EAAMU,WAAa,QAAU,QAA7E,SACE,cAACxK,EAAA,EAAD,CACEE,KAAMoK,EAAKe,WACXlL,cAAemK,EAAK+B,kBACpBpM,SAAUqK,EAAKgC,qBACfxM,MAAM,+DACNM,KAAM0J,EAAMU,WAAa,QAAU,aAIvC,qBAAKnL,UAAU,iBAAiBC,MAAO,CAAE+J,MAAOS,EAAMU,WAAa,QAAU,QAA7E,SACE,cAACxK,EAAA,EAAD,CACEE,KAAMoK,EAAKmB,eACXtL,cAAemK,EAAKiC,uBACpBtM,SAAUqK,EAAKkC,0BACf1M,MAAM,yDACNM,KAAM0J,EAAMU,WAAa,QAAU,cAIrCV,EAAMU,YACN,qBACEnL,UAAU,iBADZ,SAGE,cAACW,EAAA,EAAD,CACEE,KAAMoK,EAAKiB,SACXpL,cAAemK,EAAKmC,iBACpBxM,SAAUqK,EAAKoC,oBACf5M,MAAM,yDACNM,KAAK,aAKV0J,EAAMU,YACL,qBAAKnL,UAAU,MAAf,SACE,qBACEK,IAAI,wBACJC,IAAI,aACJC,QAAS0K,EAAKqC,SACdtN,UAAU,uBAhGX,O,yYERCgO,E,2FC+CGC,EAvCG,SAAC,GAA+B,IAA7BpN,EAA4B,EAA5BA,KAAMD,EAAsB,EAAtBA,SAAsB,EACfM,mBAAwB,MADT,mBACxCC,EADwC,KAC9BC,EAD8B,KAGzC2F,EAAeoB,uBAAY,SAAC/H,GAC5Be,IAAaf,IACjBgB,EAAYhB,GACZQ,EAASR,MACR,CAACe,IAMJ,OAJAE,qBAAU,WACRD,EAAYP,EAAOA,EAAK,GAAGT,KAAO,QACjC,CAACS,IAECA,EAKH,sBAAKb,UAAU,8BAAf,UACE,sBAAMA,UAAU,QAAhB,8DACA,qBAAKA,UAAU,QAAf,SACGa,EAAKqB,KAAI,SAAC2H,GAAD,OACR,sBAEE7J,UAAS,eAAUmB,IAAa0I,EAAKzJ,KAAO,WAAa,IACzDG,QAAS,kBAAMwG,EAAa8C,EAAKzJ,OAHnC,UAKE,sBAAKJ,UAAU,aAAf,UACE,qBAAKK,IAAI,sBAAsBC,IAAI,aACnC,sBAAMN,UAAU,OAAhB,SAAwB6J,EAAKjK,WAE/B,sBAAMI,UAAU,WAAhB,SAA4B6J,EAAK/B,UAR5Bb,uBATN,M,gBCAIiH,EAjBS,WAAO,IAAD,ECDI,WAChC,IAAMhJ,EAAWC,cAWjB,MAAO,CACLkG,kBAX4BhG,aAAY,SAACC,GAAD,OAAkBA,EAAMgG,UAA1DD,kBAYNH,mBAVyB/C,uBAAY,SAACtH,GACtCqE,EAASiJ,YAA0BtN,MAClC,IASDuN,wBAP8BjG,uBAAY,SAACkG,GAC3CnJ,EAASoJ,YAA6BD,MACrC,KDJCE,GAHFlD,EAF0B,EAE1BA,kBACAH,EAH0B,EAG1BA,mBACAkD,EAJ0B,EAI1BA,wBAGF,OACE,cAAChF,EAAA,EAAD,UACE,sBAAKpJ,UAAU,oBAAf,UACE,cAAC,EAAD,CAAWa,KAAI,OAAEwK,QAAF,IAAEA,OAAF,EAAEA,EAAmBmD,YAAa5N,SAAUwN,IAC3D,cAACpD,EAAA,EAAD,CAAQE,mBAAoBA,U,4CEerBuD,EAvBY,WACzB,IAAMC,EAAazJ,cADY,ECHI,WACnC,IAAMC,EAAWC,cADwB,EAELE,aAAY,SAACC,GAAD,OAAkBA,EAAMqJ,gBAAhEA,EAFiC,EAEjCA,aAAcC,EAFmB,EAEnBA,UAkBtB,OAhBAvN,qBAAU,WAGR,OAFA6D,EAAS2J,eAEF,WAAQ3J,EAAS4J,YAAgB,QACvC,IAYI,CAAEC,mBAVkBxJ,mBAAQ,kBAAMoJ,EAAazM,KAAI,SAAC2H,GAAD,MAAgB,CACxEjK,MAAM,GAAD,OAAKiK,EAAKjH,IAAV,YAAiBiH,EAAKpH,MAC3BgH,MAAOI,EAAKJ,MAAMvH,KAAI,SAACyH,GAAD,MAAgB,CACpCxH,GAAIwH,EAAKxH,GACTvC,MAAO+J,EAAK/J,MACZgK,QAASD,EAAKqF,aACd7O,MAAOwJ,EAAKxJ,gBAEX,CAACwO,IAEuBC,aDfaK,GAAlCF,EAFuB,EAEvBA,mBAER,OAJ+B,EAEHH,UAGnB,cAACM,EAAA,EAAD,IAIP,sBAAKlP,UAAU,mBAAf,UACE,cAAC,EAAD,IACA,cAACmJ,EAAA,EAAD,UACE,cAAC,IAAD,CACE5C,KAAK,OACLuE,SAAUiE,EACVlE,oBAAkB,MAGtB,cAAClF,EAAA,EAAD,eAAW+I,Q,iBJ1BLV,K,YAAAA,E,gBAAAA,E,wBAAAA,E,kBAAAA,E,+BAAAA,M,iBM+EGmB,EAvEI,SAAC,GAAyB,IAAvBhO,EAAsB,EAAtBA,SACd8J,ECHqB,WAC3B,IAAMvD,EAAUC,cACRxF,EAAOiN,cAAPjN,GACAiJ,EAAS/F,aAAY,SAACC,GAAD,OAAkBA,EAAM5B,QAA7C0H,KAWR,MAAO,CACLiE,iBANuB9J,mBAAQ,kBAAM6F,EAAKhL,OAASkP,IAAUC,YAAW,CAACnE,EAAKhL,OAO9EoP,oBAN0BjK,mBAAQ,kBAAM6F,EAAKhL,OAASkP,IAAUG,YAAW,CAACrE,EAAKhL,OAOjFsP,iBANuBnK,mBAAQ,kBAAM6F,EAAKhL,OAASkP,IAAUG,YAAW,CAACrE,EAAKhL,OAO9EuP,uBAN6BpK,mBAAQ,kBAAM6F,EAAKhL,OAASkP,IAAUC,YAAW,CAACnE,EAAKhL,OAOpF6I,YAdkB,SAAC7I,GACnBsH,EAAQgB,KAAR,WAAiBtI,EAAjB,YAAyB+B,MDHdyN,GAEb,OACE,eAACxG,EAAA,EAAD,WACE,yBACEpJ,UAAS,4BACPmB,IAAa6M,EAA4B6B,KAAO,WAAa,IAE/DzP,KAAK,SACLG,QAAS,kBAAM0K,EAAKhC,YAAY+E,EAA4B6B,OAL9D,UAOE,qBAAKxP,IAAI,kCAAkCC,IAAI,SAPjD,gDAWC2K,EAAKoE,kBACJ,yBACErP,UAAS,4BACPmB,IAAa6M,EAA4B8B,OAAS,WAAa,IAEjE1P,KAAK,SACLG,QAAS,kBAAM0K,EAAKhC,YAAY+E,EAA4B8B,SAL9D,UAOE,qBAAKzP,IAAI,kCAAkCC,IAAI,WAPjD,4DAYD2K,EAAKuE,qBACJ,yBACExP,UAAS,4BACPmB,IAAa6M,EAA4B+B,WAAa,WAAa,IAErE3P,KAAK,SACLG,QAAS,kBAAM0K,EAAKhC,YAAY+E,EAA4B+B,aAL9D,UAOE,qBAAK1P,IAAI,kCAAkCC,IAAI,eAPjD,wEAYD2K,EAAKyE,kBACJ,yBACE1P,UAAS,4BACPmB,IAAa6M,EAA4BgC,QAAU,WAAa,IAElE5P,KAAK,SACLG,QAAS,kBAAM0K,EAAKhC,YAAY+E,EAA4BgC,UAL9D,UAOE,qBAAK3P,IAAI,6BAA6BC,IAAI,YAP5C,gDAYD2K,EAAK0E,wBACJ,yBACE3P,UAAS,4BACPmB,IAAa6M,EAA4BiC,cAAgB,WAAa,IAExE7P,KAAK,SACLG,QAAS,kBAAM0K,EAAKhC,YAAY+E,EAA4BiC,gBAL9D,UAOE,qBAAK5P,IAAI,kCAAkCC,IAAI,kBAPjD,iH,0BE9BOkK,EA9BG,WAChB,IAAMS,ECCoB,WAAO,IACzB9I,EAAOiN,cAAPjN,GACF+C,EAAWC,cAFe,EAIEE,aAAY,SAACC,GAAD,OAAkBA,EAAM4K,cAA9DA,EAJwB,EAIxBA,WAAYtB,EAJY,EAIZA,UAQpB,OANAvN,qBAAU,WAGR,OAFA6D,EAASiL,YAAgBhO,EAAImN,IAAUC,YAEhC,WAAQrK,EAASkL,YAAc,QACrC,IAEI,CACLjO,KACAyM,YACAsB,cDhBWtF,GAEb,OAAIK,EAAK2D,UAEL,cAACM,EAAA,EAAD,IAKF,sBAAKlP,UAAU,uBAAf,UACE,qBAAKA,UAAU,iCAAf,gFAEA,qBAAKA,UAAU,OAAf,UACIiL,EAAKiF,YAAc,IAAIhO,KAAI,SAACmO,GAAD,OAC3B,cAAC/J,EAAA,EAAD,CAEE1G,MAAOyQ,EAAUzQ,MACjB2G,KAAI,sBAAiB0E,EAAK9I,GAAtB,YAA4BkO,EAAUlO,IAH5C,SAKGkO,EAAUC,KAAKpO,KAAI,SAAC2H,GAAD,OAClB,+BAAOA,QALJwG,EAAUlO,a,4GElBZ,SAAeoO,EAA9B,oC,4CAAe,WACb9H,EACAtG,GAFa,+BAAAqO,EAAA,6DAGbC,EAHa,+BAGuB,MACpCC,EAJa,yCAOQC,YAAW,CAC5BtC,IAAI,GAAD,OAAKuC,IAAL,6CAAqDzO,GACxD0O,QAAS,CAAEC,cAAc,UAAD,OAAYrI,IACpCgI,SACAC,aAXS,cAOL7P,EAPK,yBAcJA,GAdI,uCAiBXkQ,QAAQC,IAAR,MAjBW,kBAkBJ,MAlBI,0D,sBCuCR,ICuHQC,EAxJG,SAACxG,GACjB,IAAMQ,EDgCoB,SAAC,GAAgC,IAA9BiG,EAA6B,EAA7BA,YAAa/O,EAAgB,EAAhBA,GACpC+C,EAAWC,cACTsD,EAAUpD,aAAY,SAACC,GAAD,OAAkBA,EAAM5B,KAAK0H,QAAnD3C,MAFkD,EAKlBvH,mBAAuB,IALL,mBAKnDiQ,EALmD,KAKrCC,EALqC,OAMNlQ,mBAAuB,IANjB,mBAMnDmQ,EANmD,KAM/BC,EAN+B,OAOEpQ,mBAAuB,IAPzB,mBAOnDqQ,EAPmD,KAO3BC,EAP2B,OAQhBtQ,mBAAuB,IARP,mBAQnDuQ,EARmD,KAQpCC,EARoC,OASdxQ,mBAAuB,IATT,mBASnDyQ,EATmD,KASnCC,EATmC,OAUR1Q,mBAAuB,IAVf,mBAUnD2Q,EAVmD,KAUhCC,EAVgC,OAWR5Q,mBAAuB,IAXf,mBAWnD6Q,EAXmD,KAWhCC,EAXgC,OAYF9Q,mBAAuB,IAZrB,mBAYnD+Q,EAZmD,KAY7BC,EAZ6B,OAaNhR,mBAAuB,IAbjB,mBAanDiR,EAbmD,KAa/BC,EAb+B,OAc1BlR,mBAAuB,IAdG,mBAcnDwK,EAdmD,KAczC2G,EAdyC,QAgBlCnR,mBAAsB,CAC5CoR,QAAS,KACTC,qBAAsB,KACtBC,kBAAmB,KACnBC,iBAAkB,KAClBC,0BAA2B,KAC3BC,sBAAuB,KACvBC,OAAO,EACPC,WAAW,EACXC,UAAW,KACXC,gBAAiB,KACjBC,qBAAsB,KACtBC,wBAAyB,KACzBC,sBAAuB,KACvBC,4BAA6B,KAC7BC,8BAA+B,KAC/BC,6BAA8B,OAhC0B,qBAgBnDxS,GAhBmD,MAgB7CyS,GAhB6C,MAmCpDxT,GAAUqI,uBAAY,WAC1BmL,GAAQ,CACNhB,QAAS,KACTC,qBAAsB,KACtBC,kBAAmB,KACnBC,iBAAkB,KAClBC,0BAA2B,KAC3BC,sBAAuB,KACvBC,OAAO,EACPC,WAAW,EACXC,UAAW,KACXC,gBAAiB,KACjBC,qBAAsB,KACtBC,wBAAyB,KACzBC,sBAAuB,KACvBC,4BAA6B,KAC7BC,8BAA+B,KAC/BC,6BAA8B,SAE/B,IAEGE,GAASpL,sBAAW,sBAAC,kCAAAqI,EAAA,0DACrB/H,EADqB,uBAEjB+K,EAFiB,2BAGlB3S,IAHkB,IAIrBiS,UAAWnQ,YAAW9B,GAAKiS,WAC3BC,gBAAiBpQ,YAAW9B,GAAKkS,iBACjCI,4BAA6BxQ,YAAW9B,GAAKsS,+BANxB,SASY5C,EAAqB9H,EAAOtG,EAAI,MAAOqR,GATnD,gBASf5N,EATe,EASfA,QAASC,EATM,EASNA,QACjBX,EACEO,YAAa,CACXC,MAAM,EACNE,UACAC,aAdmB,2CAkBxB,CAAChF,GAAM4H,IA2CV,OAzCApH,qBAAU,WACR+P,GAA2B,OAAXF,QAAW,IAAXA,OAAA,EAAAA,EAAanF,gBAAiB,IAC9CuF,GAAiC,OAAXJ,QAAW,IAAXA,OAAA,EAAAA,EAAauC,sBAAuB,IAC1DjC,GAAqC,OAAXN,QAAW,IAAXA,OAAA,EAAAA,EAAawC,0BAA2B,IAClEhC,GAA4B,OAAXR,QAAW,IAAXA,OAAA,EAAAA,EAAayC,iBAAkB,IAChD/B,GAA6B,OAAXV,QAAW,IAAXA,OAAA,EAAAA,EAAa0C,kBAAmB,IAClD9B,GAAgC,OAAXZ,QAAW,IAAXA,OAAA,EAAAA,EAAa2C,qBAAsB,IACxD7B,GAAgC,OAAXd,QAAW,IAAXA,OAAA,EAAAA,EAAa4C,qBAAsB,IACxD5B,GAAmC,OAAXhB,QAAW,IAAXA,OAAA,EAAAA,EAAa6C,wBAAyB,IAC9D3B,GAAiC,OAAXlB,QAAW,IAAXA,OAAA,EAAAA,EAAa8C,sBAAuB,IAC1D3B,GAAuB,OAAXnB,QAAW,IAAXA,OAAA,EAAAA,EAAavF,SAAU,IACnC2H,GAAQ,CACNhB,SAAoB,OAAXpB,QAAW,IAAXA,OAAA,EAAAA,EAAaoB,UAAW,KACjCC,sBAAiC,OAAXrB,QAAW,IAAXA,OAAA,EAAAA,EAAaqB,uBAAwB,KAC3DC,mBAA8B,OAAXtB,QAAW,IAAXA,OAAA,EAAAA,EAAasB,oBAAqB,KACrDC,kBAA6B,OAAXvB,QAAW,IAAXA,OAAA,EAAAA,EAAauB,mBAAoB,KACnDC,2BAAsC,OAAXxB,QAAW,IAAXA,OAAA,EAAAA,EAAawB,4BAA6B,KACrEC,uBAAkC,OAAXzB,QAAW,IAAXA,OAAA,EAAAA,EAAayB,wBAAyB,KAC7DK,sBAAiC,OAAX9B,QAAW,IAAXA,OAAA,EAAAA,EAAa8B,uBAAwB,KAC3DC,yBAAoC,OAAX/B,QAAW,IAAXA,OAAA,EAAAA,EAAa+B,0BAA2B,KACjEC,uBAAkC,OAAXhC,QAAW,IAAXA,OAAA,EAAAA,EAAagC,wBAAyB,KAC7DE,+BAA0C,OAAXlC,QAAW,IAAXA,OAAA,EAAAA,EAAakC,gCAAiC,KAC7EC,8BAAyC,OAAXnC,QAAW,IAAXA,OAAA,EAAAA,EAAamC,+BAAgC,KAC3ET,OAAkB,OAAX1B,QAAW,IAAXA,OAAA,EAAAA,EAAa0B,SAAS,EAC7BC,WAAsB,OAAX3B,QAAW,IAAXA,OAAA,EAAAA,EAAa2B,aAAa,EACrCC,WAAsB,OAAX5B,QAAW,IAAXA,OAAA,EAAAA,EAAa4B,WACpB,IAAIzO,KAAK7B,YAAkB,OAAC0O,QAAD,IAACA,OAAD,EAACA,EAAa4B,YAAc,KAC3DC,iBAA4B,OAAX7B,QAAW,IAAXA,OAAA,EAAAA,EAAa6B,iBAC1B,IAAI1O,KAAK7B,YAAkB,OAAC0O,QAAD,IAACA,OAAD,EAACA,EAAa6B,kBAAoB,KACjEI,6BAAwC,OAAXjC,QAAW,IAAXA,OAAA,EAAAA,EAAaiC,6BACtC,IAAI9O,KAAK7B,YAAkB,OAAC0O,QAAD,IAACA,OAAD,EAACA,EAAaiC,8BAAgC,SAE9E,CAACjC,IAEJ7P,qBAAU,YACR,OAAI6P,QAAJ,IAAIA,OAAJ,EAAIA,EAAa2C,qBACf/B,EAAoB,OAACZ,QAAD,IAACA,OAAD,EAACA,EAAa2C,mBAC/BvI,QAAO,SAACzB,GAAD,OAAeA,EAAKyI,UAAYzR,GAAKyR,cAEhD,CAACzR,GAAKyR,QAAN,OAAepB,QAAf,IAAeA,OAAf,EAAeA,EAAa2C,qBAExB,CACLhT,QACAsQ,eACAE,qBACAE,yBACAE,gBACAE,iBACAE,oBACAE,oBACAE,uBACAE,qBACAzG,WACA4H,WACAxT,WACAyT,WCnKWU,CAAaxJ,GAE1B,OACE,sBAAKzK,UAAU,YAAf,UACE,cAACL,EAAA,EAAD,CAAkBC,MAAM,6CAAxB,SACE,sBAAKI,UAAU,OAAf,UACE,cAACW,EAAA,EAAD,CACEF,MAAM,sEACNI,KAAMoK,EAAKkG,aACXvQ,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6ByR,SAAUlK,MACxDtH,cAAemK,EAAKpK,KAAKyR,UAE3B,cAAC3R,EAAA,EAAD,CACEF,MAAM,wFACNI,KAAMoK,EAAK4G,kBACXjR,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6B0R,sBAAuBnK,MACrEtH,cAAemK,EAAKpK,KAAK0R,uBAE3B,cAAC5O,EAAA,EAAD,CACElD,MAAM,yIACNoD,SAAU,SAACuE,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6BiS,UAAW1K,MACzDxE,aAAcqH,EAAKpK,KAAKiS,YAG1B,cAACpO,EAAA,EAAD,CACEjE,MAAM,+DACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6B+R,MAAOxK,MACrDjH,SAAU8J,EAAKpK,KAAK+R,QAEtB,cAACjP,EAAA,EAAD,CACElD,MAAM,oHACNoD,SAAU,SAACuE,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6BkS,gBAAiB3K,MAC/DxE,aAAcqH,EAAKpK,KAAKkS,kBAE1B,cAACrO,EAAA,EAAD,CACEjE,MAAM,kFACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6BgS,UAAWzK,MACzDjH,SAAU8J,EAAKpK,KAAKgS,iBAK1B,cAAClT,EAAA,EAAD,CAAkBC,MAAM,kFAAxB,SACE,qBAAKI,UAAU,cAAf,SACE,cAACW,EAAA,EAAD,CACEF,MAAM,kFACNI,KAAMoK,EAAKwG,cACX7Q,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6B4R,kBAAmBrK,MACjEtH,cAAemK,EAAKpK,KAAK4R,iBACzBzS,UAAU,eAKhB,cAACL,EAAA,EAAD,CAAkBC,MAAM,wFAAxB,SACE,qBAAKI,UAAU,cAAf,SACE,cAACW,EAAA,EAAD,CACEF,MAAM,mIACNI,KAAMoK,EAAK0G,eACX/Q,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6B2R,mBAAoBpK,MAClEtH,cAAemK,EAAKpK,KAAK2R,kBACzBxS,UAAU,eAKhB,cAACL,EAAA,EAAD,CAAkBC,MAAM,wKAAxB,SACE,qBAAKI,UAAU,cAAf,SACE,cAACW,EAAA,EAAD,CACEF,MAAM,4EACNI,KAAMoK,EAAKoG,mBACXzQ,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6B8R,uBAAwBvK,MACtEtH,cAAemK,EAAKpK,KAAK8R,sBACzB3S,UAAU,eAKhB,cAACL,EAAA,EAAD,CAAkBC,MAAM,6KAAxB,SACE,qBAAKI,UAAU,cAAf,SACE,cAACW,EAAA,EAAD,CACEF,MAAM,4EACNI,KAAMoK,EAAKsG,uBACX3Q,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6B6R,2BAA4BtK,MAC1EtH,cAAemK,EAAKpK,KAAK6R,0BACzB1S,UAAU,eAKhB,cAACL,EAAA,EAAD,CAAkBC,MAAM,6RAAxB,SACE,qBAAKI,UAAU,cAAf,SACE,cAACW,EAAA,EAAD,CACEF,MAAM,6HACNI,KAAMoK,EAAK8G,kBACXnR,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6BmS,sBAAuB5K,MACrEtH,cAAemK,EAAKpK,KAAKmS,qBACzBhT,UAAU,eAKhB,cAACL,EAAA,EAAD,CAAkBC,MAAM,uHAAxB,SACE,qBAAKI,UAAU,cAAf,SACE,cAACW,EAAA,EAAD,CACEF,MAAM,kKACNI,KAAMoK,EAAKgH,qBACXrR,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6BoS,yBAA0B7K,MACxEtH,cAAemK,EAAKpK,KAAKoS,wBACzBjT,UAAU,eAKhB,cAACL,EAAA,EAAD,CAAkBC,MAAM,sJAAxB,SACE,sBAAKI,UAAU,mBAAf,UACE,cAACW,EAAA,EAAD,CACEF,MAAM,kKACNI,KAAMoK,EAAKkH,mBACXvR,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6BqS,uBAAwB9K,MACtEtH,cAAemK,EAAKpK,KAAKqS,wBAG3B,cAACvS,EAAA,EAAD,CACEF,MAAM,mDACNI,KAAMoK,EAAKS,SACX9K,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6BwS,6BAA8BjL,MAC5EtH,cAAemK,EAAKpK,KAAKwS,+BAG3B,cAAC1P,EAAA,EAAD,CACElD,MAAM,8FACNoD,SAAU,SAACuE,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6BsS,4BAA6B/K,MAC3ExE,aAAcqH,EAAKpK,KAAKsS,8BAG1B,cAAC9Q,EAAA,EAAD,CACE5B,MAAM,8FACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6BuS,8BAA+BhL,MAC7EzG,MAAOsJ,EAAKpK,KAAKuS,qCAKvB,qBAAKpT,UAAU,gBAAf,SACE,cAACQ,EAAA,EAAD,CAAeC,MAAM,mDAAWF,QAAS0K,EAAKsI,OAAQ7S,UAAU,UCxJzD,SAAewT,EAA9B,oC,4CAAe,WACbzL,EACAtG,GAFa,+BAAAqO,EAAA,6DAGbC,EAHa,+BAGuB,MACpCC,EAJa,yCAOQC,YAAW,CAC5BtC,IAAI,GAAD,OAAKuC,IAAL,4CAAoDzO,GACvD0O,QAAS,CAAEC,cAAc,UAAD,OAAYrI,IACpCgI,SACAC,aAXS,cAOL7P,EAPK,yBAcJA,GAdI,uCAiBXkQ,QAAQC,IAAR,MAjBW,kBAkBJ,MAlBI,0D,sBC2BR,ICqEQmD,EA5FC,SAAC1J,GACf,IAAMQ,EDsBkB,SAAC,GAAgC,IAA9BiG,EAA6B,EAA7BA,YAAa/O,EAAgB,EAAhBA,GAClC+C,EAAWC,cACTsD,EAAUpD,aAAY,SAACC,GAAD,OAAkBA,EAAM5B,KAAK0H,QAAnD3C,MAFgD,EAKtBvH,mBAAuB,IALD,mBAKjDkT,EALiD,KAKtCC,EALsC,OAMxBnT,mBAAuB,IANC,mBAMjDoT,EANiD,KAMvCC,EANuC,OAO1BrT,mBAAuB,IAPG,mBAOjDsT,EAPiD,KAOxCC,EAPwC,OAQhCvT,mBAAsB,CAC5CwT,YAAa,KACbC,YAAa,GACbC,aAAc,GACdC,WAAY,GACZC,oBAAqB,GACrBC,UAAW,GACXC,YAAa,GACbC,OAAQ,GACRC,YAAa,GACbC,aAAc,GACdC,MAAO,GACPrK,QAAS,KApB6C,mBAQjDlK,EARiD,KAQ3CyS,EAR2C,KAuBlDxT,EAAUqI,uBAAY,WAC1BmL,EAAQ,CACNoB,YAAa,KACbC,YAAa,GACbC,aAAc,GACdC,WAAY,GACZC,oBAAqB,GACrBC,UAAW,GACXC,YAAa,GACbC,OAAQ,GACRC,YAAa,GACbC,aAAc,GACdC,MAAO,GACPrK,QAAS,OAEV,IAEGwI,EAASpL,sBAAW,sBAAC,gCAAAqI,EAAA,0DACrB/H,EADqB,gCAEYyL,EAAoBzL,EAAOtG,EAAI,MAAOtB,GAFlD,gBAEf+E,EAFe,EAEfA,QAASC,EAFM,EAENA,QACjBX,EACEO,YAAa,CACXC,MAAM,EACNE,UACAC,aAPmB,2CAWxB,CAAChF,EAAM4H,IAEJ4M,EAAsB9P,mBAC1B,kBAAO1E,EAAK8T,cACN9T,EAAKgU,aACLhU,EAAK6T,cACX,CAAC7T,EAAK8T,YAAa9T,EAAKgU,WAAYhU,EAAK6T,cAuB3C,OApBArT,qBAAU,WACRgT,GAAwB,OAAXnD,QAAW,IAAXA,OAAA,EAAAA,EAAakD,YAAa,IACvCG,GAAuB,OAAXrD,QAAW,IAAXA,OAAA,EAAAA,EAAaoD,WAAY,IACrCG,GAAsB,OAAXvD,QAAW,IAAXA,OAAA,EAAAA,EAAaoE,WAAY,IACpChC,EAAQ,CACNoB,aAAwB,OAAXxD,QAAW,IAAXA,OAAA,EAAAA,EAAawD,cAAe,KACzCC,aAAwB,OAAXzD,QAAW,IAAXA,OAAA,EAAAA,EAAayD,cAAe,GACzCC,cAAyB,OAAX1D,QAAW,IAAXA,OAAA,EAAAA,EAAa0D,eAAgB,GAC3CC,YAAuB,OAAX3D,QAAW,IAAXA,OAAA,EAAAA,EAAa2D,aAAc,GACvCC,qBAAgC,OAAX5D,QAAW,IAAXA,OAAA,EAAAA,EAAa4D,sBAAuB,GACzDC,WAAsB,OAAX7D,QAAW,IAAXA,OAAA,EAAAA,EAAa6D,YAAa,GACrCC,aAAwB,OAAX9D,QAAW,IAAXA,OAAA,EAAAA,EAAa8D,cAAe,GACzCC,QAAmB,OAAX/D,QAAW,IAAXA,OAAA,EAAAA,EAAa+D,SAAU,GAC/BC,aAAwB,OAAXhE,QAAW,IAAXA,OAAA,EAAAA,EAAagE,cAAe,GACzCC,cAAyB,OAAXjE,QAAW,IAAXA,OAAA,EAAAA,EAAaiE,eAAgB,GAC3CC,OAAkB,OAAXlE,QAAW,IAAXA,OAAA,EAAAA,EAAakE,QAAS,GAC7BrK,SAAoB,OAAXmG,QAAW,IAAXA,OAAA,EAAAA,EAAanG,UAAW,OAElC,CAACmG,IAEG,CACLkD,YACAE,WACAE,UACA3T,OACAwU,sBACA/B,UACAxT,UACAyT,UC9GWgC,CAAW9K,GAExB,OACE,qCACE,cAAC9K,EAAA,EAAD,CAAkBC,MAAM,4EAAgBE,QAASmL,EAAKnL,QAAtD,SACE,sBAAKE,UAAU,2BAAf,UACE,cAACW,EAAA,EAAD,CACEK,UAAQ,EACRP,MAAM,wFACNI,KAAMoK,EAAKuJ,QACX5T,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6B6T,aAActM,MAC5DtH,cAAemK,EAAKpK,KAAK6T,cAE3B,cAAC/T,EAAA,EAAD,CACEK,UAAQ,EACRP,MAAM,uCACNI,KAAMoK,EAAKqJ,SACX1T,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6B8T,YAAavM,MAC3DtH,cAAemK,EAAKpK,KAAK8T,cAG3B,cAACtS,EAAA,EAAD,CACErB,UAAQ,EACRP,MAAM,oGACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6BgU,WAAYzM,MAC1DzG,MAAOsJ,EAAKpK,KAAKgU,aAEnB,cAACxS,EAAA,EAAD,CACE5B,MAAM,gHACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6BiU,oBAAqB1M,MACnEzG,MAAOsJ,EAAKpK,KAAKiU,sBAGnB,cAACzS,EAAA,EAAD,CACE5B,MAAM,oIACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6BkU,UAAW3M,MACzDzG,MAAOsJ,EAAKpK,KAAKkU,YAEnB,cAAC1S,EAAA,EAAD,CACE5B,MAAM,kOACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6BmU,YAAa5M,MAC3DzG,MAAOsJ,EAAKpK,KAAKmU,cAGnB,cAAC3S,EAAA,EAAD,CACE5B,MAAM,sHACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6BoU,OAAQ7M,MACtDzG,MAAOsJ,EAAKpK,KAAKoU,SAGnB,sBAAKjV,UAAU,OAAf,UACE,cAACqC,EAAA,EAAD,CACE5B,MAAM,kFACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6BqU,YAAa9M,MAC3DzG,MAAOsJ,EAAKpK,KAAKqU,cAEnB,cAAC7S,EAAA,EAAD,CACE5B,MAAM,4EACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6BsU,aAAc/M,MAC5DzG,MAAOsJ,EAAKpK,KAAKsU,kBAIrB,sBAAKnV,UAAU,OAAf,UACE,cAACW,EAAA,EAAD,CACEF,MAAM,2DACNI,KAAMoK,EAAKmJ,UACXxT,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6B+T,aAAcxM,MAC5DtH,cAAemK,EAAKpK,KAAK+T,eAE3B,cAACvS,EAAA,EAAD,CACE5B,MAAM,oDACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6BuU,MAAOhN,MACrDzG,MAAOsJ,EAAKpK,KAAKuU,QAEnB,cAAC/S,EAAA,EAAD,CACE5B,MAAM,8CACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6BkK,SAAU3C,MACxDzG,MAAOsJ,EAAKpK,KAAKkK,kBAMzB,qBAAK/K,UAAU,gBAAf,SACE,cAACQ,EAAA,EAAD,CAAeC,MAAM,mDAAWF,QAAS0K,EAAKsI,OAAQ7S,SAAUuK,EAAKoK,4BC1F9D,SAAeG,EAA9B,oC,4CAAe,WACb/M,EACAtG,GAFa,+BAAAqO,EAAA,6DAGbC,EAHa,+BAGuB,MACpCC,EAJa,yCAOQC,YAAW,CAC5BtC,IAAI,GAAD,OAAKuC,IAAL,8CAAsDzO,GACzD0O,QAAS,CAAEC,cAAc,UAAD,OAAYrI,IACpCgI,SACAC,aAXS,cAOL7P,EAPK,yBAcJA,GAdI,uCAiBXkQ,QAAQC,IAAR,MAjBW,kBAkBJ,MAlBI,0D,sBCkBR,ICwCQyE,EApDG,SAAChL,GACjB,IAAMQ,EDWoB,SAAC,GAAgC,IAA9BiG,EAA6B,EAA7BA,YAAa/O,EAAgB,EAAhBA,GACpC+C,EAAWC,cACTsD,EAAUpD,aAAY,SAACC,GAAD,OAAkBA,EAAM5B,KAAK0H,QAAnD3C,MAFkD,EAI9BvH,mBAAS,IAJqB,mBAInDyK,EAJmD,KAI3C+J,EAJ2C,OAOlCxU,mBAAsB,CAC5CyU,SAAU,KACVC,WAAY,GACZC,eAAgB,KAChBC,iBAAkB,GAClBrI,UAAW,OAZ6C,mBAOnD5M,EAPmD,KAO7CyS,EAP6C,KAepDxT,EAAUqI,uBAAY,WAC1BmL,EAAQ,CACNqC,SAAU,KACVC,WAAY,GACZC,eAAgB,KAChBC,iBAAkB,GAClBrI,UAAW,SAEZ,IAEG8F,EAASpL,sBAAW,sBAAC,kCAAAqI,EAAA,0DACrB/H,EADqB,uBAEjB+K,EAFiB,2BAGlB3S,GAHkB,IAIrB8U,SAAUhT,YAAW9B,EAAK8U,UAC1BE,eAAgBlT,YAAW9B,EAAKgV,kBALX,SAQYL,EAAsB/M,EAAOtG,EAAI,MAAOqR,GARpD,gBAQf5N,EARe,EAQfA,QAASC,EARM,EAQNA,QACjBX,EACEO,YAAa,CACXC,MAAM,EACNE,UACAC,aAbmB,2CAiBxB,CAAChF,EAAM4H,IAcV,OAZApH,qBAAU,WACRiS,EAAQ,CACNqC,UAAqB,OAAXzE,QAAW,IAAXA,OAAA,EAAAA,EAAayE,UAAW,IAAItR,KAAK7B,YAAkB,OAAC0O,QAAD,IAACA,OAAD,EAACA,EAAayE,WAAa,KACxFC,YAAuB,OAAX1E,QAAW,IAAXA,OAAA,EAAAA,EAAa0E,aAAc,GACvCC,gBAA2B,OAAX3E,QAAW,IAAXA,OAAA,EAAAA,EAAa2E,gBACzB,IAAIxR,KAAK7B,YAAkB,OAAC0O,QAAD,IAACA,OAAD,EAACA,EAAa2E,iBAAmB,KAChEC,kBAA6B,OAAX5E,QAAW,IAAXA,OAAA,EAAAA,EAAa4E,mBAAoB,GACnDrI,WAAsB,OAAXyD,QAAW,IAAXA,OAAA,EAAAA,EAAazD,YAAa,OAEvCiI,GAAqB,OAAXxE,QAAW,IAAXA,OAAA,EAAAA,EAAavF,SAAU,MAChC,CAACuF,IAEG,CACLrQ,OACA8K,SACA2H,UACAxT,UACAyT,UCxEWwC,CAAatL,GAE1B,OACE,sBAAKzK,UAAU,YAAf,UACE,eAACL,EAAA,EAAD,CAAkBC,MAAM,wFAAkBE,QAASmL,EAAKnL,QAAxD,UACE,qBAAKE,UAAU,wBAAf,SACE,cAACW,EAAA,EAAD,CACEF,MAAM,mDACNI,KAAMoK,EAAKU,OACX/K,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6B4M,UAAWrF,MACzDtH,cAAemK,EAAKpK,KAAK4M,cAS7B,sBAAKzN,UAAU,mBAAf,UACE,cAAC2D,EAAA,EAAD,CACElD,MAAM,yKACNoD,SAAU,SAACuE,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6B8U,SAAUvN,MACxDxE,aAAcqH,EAAKpK,KAAK8U,WAE1B,cAACtT,EAAA,EAAD,CACE5B,MAAM,+KACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6B+U,YAAaxN,MAC3DzG,MAAOsJ,EAAKpK,KAAK+U,aAGnB,cAACjS,EAAA,EAAD,CACElD,MAAM,yKACNoD,SAAU,SAACuE,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6BgV,eAAgBzN,MAC9DxE,aAAcqH,EAAKpK,KAAKgV,iBAE1B,cAACxT,EAAA,EAAD,CACE5B,MAAM,+KACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6BiV,kBAAmB1N,MACjEzG,MAAOsJ,EAAKpK,KAAKiV,yBAKvB,qBAAK9V,UAAU,gBAAf,SACE,cAACQ,EAAA,EAAD,CAAeC,MAAM,mDAAWF,QAAS0K,EAAKsI,OAAQ7S,UAAU,UCpDzD,SAAesV,EAA9B,oC,4CAAe,WACbvN,EACAtG,GAFa,+BAAAqO,EAAA,6DAGbC,EAHa,+BAGuB,MACpCC,EAJa,yCAOQC,YAAW,CAC5BtC,IAAI,GAAD,OAAKuC,IAAL,8CAAsDzO,GACzD0O,QAAS,CAAEC,cAAc,UAAD,OAAYrI,IACpCgI,SACAC,aAXS,cAOL7P,EAPK,yBAcJA,GAdI,uCAiBXkQ,QAAQC,IAAR,MAjBW,kBAkBJ,MAlBI,0D,sBCkBR,ICyBQiF,EAtCA,SAACxL,GAAkB,IAAD,EDaR,SAAC,GAAgC,IAA9ByG,EAA6B,EAA7BA,YAAa/O,EAAgB,EAAhBA,GACjC+C,EAAWC,cACTsD,EAAUpD,aAAY,SAACC,GAAD,OAAkBA,EAAM5B,KAAK0H,QAAnD3C,MAF+C,EAKrBvH,mBAAuB,IALF,mBAKhDgV,EALgD,KAKrCC,EALqC,OAM/BjV,mBAAsB,CAC5CkV,sBAAuB,KACvB3T,KAAM,KACN4T,MAAO,KACPzW,MAAO,OAV8C,mBAMhDiB,EANgD,KAM1CyS,EAN0C,KAajDxT,EAAUqI,uBAAY,WAC1BmL,EAAQ,CACN8C,sBAAuB,KACvB3T,KAAM,KACN4T,MAAO,KACPzW,MAAO,SAER,IAEG2T,EAASpL,sBAAW,sBAAC,kCAAAqI,EAAA,0DACrB/H,EADqB,uBAEjB+K,EAFiB,2BAGlB3S,GAHkB,IAIrB4B,KAAME,YAAW9B,EAAK4B,QAJD,SAOYuT,EAAmBvN,EAAOtG,EAAI,MAAOqR,GAPjD,gBAOf5N,EAPe,EAOfA,QAASC,EAPM,EAONA,QACjBX,EACEO,YAAa,CACXC,MAAM,EACNE,UACAC,aAZmB,2CAgBxB,CAAChF,EAAM4H,IAYV,OAVApH,qBAAU,WACR8U,GAAwB,OAAXjF,QAAW,IAAXA,OAAA,EAAAA,EAAaoF,qBAAsB,IAChDhD,EAAQ,CACN8C,uBAAkC,OAAXlF,QAAW,IAAXA,OAAA,EAAAA,EAAakF,wBAAyB,KAC7D3T,MAAiB,OAAXyO,QAAW,IAAXA,OAAA,EAAAA,EAAazO,MAAO,IAAI4B,KAAK7B,YAAkB,OAAC0O,QAAD,IAACA,OAAD,EAACA,EAAazO,OAAS,KAC5E4T,OAAkB,OAAXnF,QAAW,IAAXA,OAAA,EAAAA,EAAamF,QAAS,KAC7BzW,OAAkB,OAAXsR,QAAW,IAAXA,OAAA,EAAAA,EAAatR,QAAS,SAE9B,CAACsR,IAEG,CACLrQ,OACAqV,YACA5C,UACAxT,UACAyT,UCnEoDgD,CAAU9L,GAAxD5J,EADuB,EACvBA,KAAMqV,EADiB,EACjBA,UAAW5C,EADM,EACNA,QAASxT,EADH,EACGA,QAASyT,EADZ,EACYA,OAE3C,OACE,sBAAKvT,UAAU,SAAf,UACE,eAACL,EAAA,EAAD,CAAkBC,MAAM,uCAASE,QAASA,EAA1C,UACE,sBAAKE,UAAU,YAAf,UACE,cAACW,EAAA,EAAD,CACEF,MAAM,2GACNI,KAAMqV,EACNtV,SAAU,SAACwH,GAAD,OAAOkL,EAAQ,2BAAKzS,GAAN,IAAYuV,uBAAwBhO,MAC5DtH,cAAeD,EAAKuV,wBAEtB,cAACzS,EAAA,EAAD,CACElD,MAAM,gEACNoD,SAAU,SAACuE,GAAD,OAAOkL,EAAQ,2BAAKzS,GAAN,IAAY4B,KAAM2F,MAC1CxE,aAAc/C,EAAK4B,OAErB,cAACJ,EAAA,EAAD,CACE5B,MAAM,qDACNG,SAAU,SAACwH,GAAD,OAAOkL,EAAQ,2BAAKzS,GAAN,IAAYwV,OAAQjO,MAC5CzG,MAAOd,EAAKwV,WAGhB,cAAChU,EAAA,EAAD,CACE5B,MAAM,iMACNG,SAAU,SAACwH,GAAD,OAAOkL,EAAQ,2BAAKzS,GAAN,IAAYjB,MAAOwI,MAC3CzG,MAAOd,EAAKjB,WAIhB,qBAAKI,UAAU,gBAAf,SACE,cAACQ,EAAA,EAAD,CAAeC,MAAM,mDAAWF,QAASgT,EAAQ7S,UAAU,UCrCpD,SAAe8V,EAA9B,qC,8CAAe,WACb/N,EACAtG,GAFa,+BAAAqO,EAAA,6DAGbC,EAHa,+BAGuB,MACpCC,EAJa,yCAOQC,YAAW,CAC5BtC,IAAI,GAAD,OAAKuC,IAAL,4CAAoDzO,GACvD0O,QAAS,CAAEC,cAAc,UAAD,OAAYrI,IACpCgI,SACAC,aAXS,cAOL7P,EAPK,yBAcJA,GAdI,uCAiBXkQ,QAAQC,IAAR,MAjBW,kBAkBJ,MAlBI,0D,sBCmBR,IC6BQyF,GA3CS,SAAChM,GACvB,IAAMQ,EDa0B,SAAC,GAAgC,IAA9BiG,EAA6B,EAA7BA,YAAa/O,EAAgB,EAAhBA,GAC1C+C,EAAWC,cACTsD,EAAUpD,aAAY,SAACC,GAAD,OAAkBA,EAAM5B,KAAK0H,QAAnD3C,MAFwD,EAIlCvH,mBAAuB,IAJW,mBAIzDwV,EAJyD,KAIhDC,EAJgD,OAMxCzV,mBAAsB,CAC5C4R,UAAW,KACX8D,WAAY,KACZC,QAAS,KACTC,eAAgB,KAChBC,UAAW,OAXmD,mBAMzDlW,EANyD,KAMnDyS,EANmD,KAc1DxT,EAAUqI,uBAAY,WAC1BmL,EAAQ,CACNR,UAAW,KACX8D,WAAY,KACZC,QAAS,KACTC,eAAgB,KAChBC,UAAW,SAEZ,IAEGxD,EAASpL,sBAAW,sBAAC,kCAAAqI,EAAA,0DACrB/H,EADqB,uBAEjB+K,EAFiB,2BAGlB3S,GAHkB,IAIrBiS,UAAWnQ,YAAW9B,EAAKiS,WAC3B8D,WAAYjU,YAAW9B,EAAK+V,cALP,SAQYJ,EAAoB/N,EAAOtG,EAAI,MAAOqR,GARlD,gBAQf5N,EARe,EAQfA,QAASC,EARM,EAQNA,QACjBX,EACEO,YAAa,CACXC,MAAM,EACNE,UACAC,aAbmB,2CAiBxB,CAAChF,EAAM4H,IAeV,OAbApH,qBAAU,WACRsV,GAAsB,OAAXzF,QAAW,IAAXA,OAAA,EAAAA,EAAawF,UAAW,IACnCpD,EAAQ,CACNR,WAAsB,OAAX5B,QAAW,IAAXA,OAAA,EAAAA,EAAa4B,WACpB,IAAIzO,KAAK7B,YAAkB,OAAC0O,QAAD,IAACA,OAAD,EAACA,EAAa4B,YAAc,KAC3D8D,YAAuB,OAAX1F,QAAW,IAAXA,OAAA,EAAAA,EAAa0F,YACrB,IAAIvS,KAAK7B,YAAkB,OAAC0O,QAAD,IAACA,OAAD,EAACA,EAAa0F,aAAe,KAC5DC,SAAoB,OAAX3F,QAAW,IAAXA,OAAA,EAAAA,EAAa2F,UAAW,KACjCC,gBAA2B,OAAX5F,QAAW,IAAXA,OAAA,EAAAA,EAAa4F,iBAAkB,KAC/CC,WAAsB,OAAX7F,QAAW,IAAXA,OAAA,EAAAA,EAAa6F,YAAa,SAEtC,CAAC7F,IAEG,CACLrQ,OACA6V,UACApD,UACAxT,UACAyT,UC1EWyD,CAAmBvM,GAEhC,OACE,sBAAKzK,UAAU,mBAAf,UACE,cAACL,EAAA,EAAD,CAAkBC,MAAM,wIAA0BE,QAASmL,EAAKnL,QAAhE,SACE,sBAAKE,UAAU,OAAf,UACE,cAACqC,EAAA,EAAD,CACE5B,MAAM,4HACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6BiW,gBAAiB1O,MAC/DzG,MAAOsJ,EAAKpK,KAAKiW,iBAEnB,cAACnW,EAAA,EAAD,CACEF,MAAM,6CACNI,KAAMoK,EAAKyL,QACX9V,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6BkW,WAAY3O,MAC1DtH,cAAemK,EAAKpK,KAAKkW,YAE3B,cAAC1U,EAAA,EAAD,CACE5B,MAAM,2JACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6BgW,SAAUzO,MACxDzG,MAAOsJ,EAAKpK,KAAKgW,UAEnB,cAAClT,EAAA,EAAD,CACElD,MAAM,wFACNoD,SAAU,SAACuE,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6BiS,UAAW1K,MACzDxE,aAAcqH,EAAKpK,KAAKiS,YAE1B,cAACnP,EAAA,EAAD,CACElD,MAAM,wFACNoD,SAAU,SAACuE,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6B+V,WAAYxO,MAC1DxE,aAAcqH,EAAKpK,KAAK+V,kBAK9B,qBAAK5W,UAAU,gBAAf,SACE,cAACQ,EAAA,EAAD,CAAeC,MAAM,mDAAWF,QAAS0K,EAAKsI,OAAQ7S,UAAU,UC1CzD,SAAeuW,GAA9B,qC,8CAAe,WACbxO,EACAtG,GAFa,+BAAAqO,EAAA,6DAGbC,EAHa,+BAGuB,MACpCC,EAJa,yCAOQC,YAAW,CAC5BtC,IAAI,GAAD,OAAKuC,IAAL,gDAAwDzO,GAC3D0O,QAAS,CAAEC,cAAc,UAAD,OAAYrI,IACpCgI,SACAC,aAXS,cAOL7P,EAPK,yBAcJA,GAdI,uCAiBXkQ,QAAQC,IAAR,MAjBW,kBAkBJ,MAlBI,0D,sBCHR,IAAMkG,GAAW,SAACvV,GAAD,OAA0B4C,OAAOC,MAAM2S,WAAWxV,KCG3D,SAAeyV,GAA9B,qC,8CAAe,WACb3O,EACAtG,GAFa,+BAAAqO,EAAA,6DAGbC,EAHa,+BAGuB,MACpCC,EAJa,yCAOQC,YAAW,CAC5BtC,IAAI,GAAD,OAAKuC,IAAL,gDAAwDzO,GAC3D0O,QAAS,CAAEC,cAAc,UAAD,OAAYrI,IACpCgI,SACAC,aAXS,cAOL7P,EAPK,yBAcJA,GAdI,uCAiBXkQ,QAAQC,IAAR,MAjBW,kBAkBJ,MAlBI,0D,sBCUR,ICKKqG,GCqCGC,GA/CK,SAAC7M,GACnB,IAAMQ,ECasB,SAAC,GAAgC,IAA9B9I,EAA6B,EAA7BA,GAAI+O,EAAyB,EAAzBA,YAC7BhM,EAAWC,cACTsD,EAAUpD,aAAY,SAACC,GAAD,OAAkBA,EAAM5B,KAAK0H,QAAnD3C,MAFoD,EAI5BvH,mBAAuB,IAJK,mBAIrDwK,EAJqD,KAI3C2G,EAJ2C,OAKpCnR,mBAAsB,CAC5CuM,UAAW,KACXkI,SAAU,KACVC,WAAY,KACZb,UAAW,KACXwC,aAAc,OAV4C,mBAKrD1W,EALqD,KAK/CyS,EAL+C,KAatDxT,EAAUqI,uBAAY,WAC1BmL,EAAQ,CACN7F,UAAW,KACXkI,SAAU,KACVC,WAAY,KACZb,UAAW,KACXwC,aAAc,SAEf,IAEGhE,EAASpL,sBAAW,sBAAC,kCAAAqI,EAAA,0DACrB/H,EADqB,uBAEjB+K,EAFiB,2BAGlB3S,GAHkB,IAIrB8U,SAAUhT,YAAW9B,EAAK8U,YAJL,SAOYsB,GAAwBxO,EAAOtG,EAAI,MAAOqR,GAPtD,gBAOf5N,EAPe,EAOfA,QAASC,EAPM,EAONA,QACjBX,EACEO,YAAa,CACXC,MAAM,EACNE,UACAC,aAZmB,2CAgBxB,CAAChF,IAaJ,OAXAQ,qBAAU,WACRgR,GAAuB,OAAXnB,QAAW,IAAXA,OAAA,EAAAA,EAAavF,SAAU,IACnC2H,EAAQ,CACN7F,WAAsB,OAAXyD,QAAW,IAAXA,OAAA,EAAAA,EAAazD,YAAa,KACrCmI,YAAuB,OAAX1E,QAAW,IAAXA,OAAA,EAAAA,EAAa0E,aAAc,KACvCb,WAAsB,OAAX7D,QAAW,IAAXA,OAAA,EAAAA,EAAa6D,YAAa,KACrCwC,cAAyB,OAAXrG,QAAW,IAAXA,OAAA,EAAAA,EAAaqG,eAAgB,KAC3C5B,UAAqB,OAAXzE,QAAW,IAAXA,OAAA,EAAAA,EAAayE,UAAWnT,YAAkB,OAAC0O,QAAD,IAACA,OAAD,EAACA,EAAayE,UAAY,SAE/E,CAACzE,IAEG,CACLxF,WACA7K,OACAf,UACAyT,SACAD,WDtEWkE,CAAe/M,GAE5B,OACE,sBAAKzK,UAAU,cAAf,UACE,cAACL,EAAA,EAAD,CAAkBC,MAAM,yLAAmCE,QAASmL,EAAKnL,QAAzE,SACE,sBAAKE,UAAU,OAAf,UACE,cAACW,EAAA,EAAD,CACEF,MAAM,mDACNI,KAAMoK,EAAKS,SACX9K,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6B4M,WAAYrF,MAC1DtH,cAAemK,EAAKpK,KAAK4M,YAG3B,cAAC9J,EAAA,EAAD,CACElD,MAAM,8FACNmD,aAAcqH,EAAKpK,KAAK8U,SACxB9R,SAAU,SAACuE,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6B8U,SAAUvN,QAG1D,cAAC/F,EAAA,EAAD,CACE5B,MAAM,8FACNkB,MAAOsJ,EAAKpK,KAAK+U,WACjBhV,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6B+U,WAAYxN,QAG5D,cAAC/F,EAAA,EAAD,CACE5B,MAAM,+KACNkB,MAAOsJ,EAAKpK,KAAKkU,UACjBnU,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6BkU,UAAW3M,QAG3D,cAAC/F,EAAA,EAAD,CACE5B,MAAM,+KACNkB,MAAOsJ,EAAKpK,KAAK0W,aACjB3W,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6B0W,aAAcnP,aAKlE,qBAAKpI,UAAU,gBAAf,SACE,cAACQ,EAAA,EAAD,CAAeC,MAAM,mDAAWF,QAAS0K,EAAKsI,OAAQ7S,UAAU,U,oBD/B5D2W,K,cAAAA,E,mBAAAA,Q,KAKZ,IAAMI,GAA0B,CAC9B,CACEtV,GAAIkV,GAAwBK,MAC5B9X,MAAO,0DAET,CACEuC,GAAIkV,GAAwBM,QAC5B/X,MAAO,6EGkBIgY,GAzCK,SAACnN,GAAkB,IAAD,EH2BR,SAAC,GAAgC,IAA9ByG,EAA6B,EAA7BA,YAAa/O,EAAgB,EAAhBA,GACtC+C,EAAWC,cACTsD,EAAUpD,aAAY,SAACC,GAAD,OAAkBA,EAAM5B,KAAK0H,QAAnD3C,MAFoD,EAIpCvH,mBAAsB,CAC5C2W,YAAa,KACbC,YAAa,KACb1X,KAAMiX,GAAwBK,QAP4B,mBAIrD7W,EAJqD,KAI/CyS,EAJ+C,KAUtDC,EAASpL,sBAAW,sBAAC,gCAAAqI,EAAA,0DACrB/H,EADqB,gCAEY2O,GAAwB3O,EAAOtG,EAAI,MAAOtB,GAFtD,gBAEf+E,EAFe,EAEfA,QAASC,EAFM,EAENA,QACjBX,EACEO,YAAa,CACXC,MAAM,EACNE,UACAC,aAPmB,2CAWxB,CAAChF,EAAM4H,IAEJ3I,EAAUqI,uBAAY,WAC1BmL,EAAQ,CACNuE,YAAa,KACbC,YAAa,KACb1X,KAAMiX,GAAwBK,UAE/B,IAUH,OARArW,qBAAU,WACRiS,EAAQ,CACNuE,aAAwB,OAAX3G,QAAW,IAAXA,OAAA,EAAAA,EAAa2G,cAAe,KACzCC,aAAwB,OAAX5G,QAAW,IAAXA,OAAA,EAAAA,EAAa4G,cAAe,KACzC1X,MAAiB,OAAX8Q,QAAW,IAAXA,OAAA,EAAAA,EAAa9Q,OAAQiX,GAAwBK,UAEpD,CAACxG,IAEG,CACLuG,2BACA5W,OACAyS,UACAC,SACAzT,WGhEEiY,CAAetN,GALjBgN,EAFkC,EAElCA,wBACA5W,EAHkC,EAGlCA,KACAyS,EAJkC,EAIlCA,QACAC,EALkC,EAKlCA,OACAzT,EANkC,EAMlCA,QAGF,OACE,sBAAKE,UAAU,cAAf,UACE,cAACL,EAAA,EAAD,CAAkBC,MAAM,+DAAaE,QAASA,EAA9C,SACE,sBAAKE,UAAU,OAAf,UACE,cAACqC,EAAA,EAAD,CACE5B,MAAM,2BACNG,SAAU,SAACwH,GAAD,OAAOkL,EAAQ,2BAAKzS,GAAN,IAAYiX,aAAc1P,MAClDzG,MAAOd,EAAKiX,cAGd,cAACzV,EAAA,EAAD,CACE5B,MAAM,oGACNG,SAAU,SAACwH,GAAD,OAAOkL,EAAQ,2BAAKzS,GAAN,IAAYgX,aAAczP,MAClDzG,MAAOd,EAAKgX,cAGd,cAAClR,GAAA,EAAD,CACEE,OAAO,mBACPD,QAAS6Q,EACTtW,SAAUN,EAAKT,KACfQ,SAAU,SAACwH,GAAD,OAAOkL,EAAQ,2BAAKzS,GAAN,IAAYT,KAAMgI,aAKhD,qBAAKpI,UAAU,gBAAf,SACE,cAACQ,EAAA,EAAD,CAAeC,MAAM,mDAAWF,QAASgT,EAAQ7S,UAAU,UChBpDsX,GAhBA,WACb,IAAM/M,ELEiB,WAAO,IACtBxC,EAAUpD,aAAY,SAACC,GAAD,OAAkBA,EAAM5B,KAAK0H,QAAnD3C,MACAwP,EAAgB7I,cAAhB6I,YAFqB,EAKC/W,qBALD,mBAKtBgX,EALsB,KAKbC,EALa,OAMKjX,qBANL,mBAMtBkX,EANsB,KAMXC,EANW,OAOiBnX,qBAPjB,mBAOtBoX,EAPsB,KAOLC,EAPK,OAQCrX,qBARD,mBAQtBsX,EARsB,KAQbC,EARa,OASSvX,qBATT,mBAStBwX,EATsB,KASTC,EATS,OAUKzX,qBAVL,mBAUtB0X,EAVsB,KAUXC,EAVW,OAWS3X,qBAXT,mBAWtB4X,EAXsB,KAWTC,EAXS,KAavBC,EAAczT,mBAAQ,kBAAM2R,GAASe,KAAc,CAACA,IAqE1D,OAnEA5W,qBAAU,WACJoH,GAASuQ,IAEX,sBAAC,4BAAAxI,EAAA,sEACmB0D,EAAoBzL,EAAOwP,GAD9C,QAGC,QAFMgB,EADP,cAGC,IAAIA,OAAJ,EAAIA,EAAKrT,UACPuS,EAAWc,EAAIpY,MAJlB,0CAAD,GASA,sBAAC,4BAAA2P,EAAA,sEACmBgF,EAAsB/M,EAAOwP,GADhD,QAGC,QAFMgB,EADP,cAGC,IAAIA,OAAJ,EAAIA,EAAKrT,UACPyS,EAAaY,EAAIpY,MAJpB,0CAAD,GASA,sBAAC,4BAAA2P,EAAA,sEACmBgG,EAAoB/N,EAAOwP,GAD9C,QAGC,QAFMgB,EADP,cAGC,IAAIA,OAAJ,EAAIA,EAAKrT,UACP2S,EAAmBU,EAAIpY,MAJ1B,0CAAD,GASA,sBAAC,4BAAA2P,EAAA,sEACmBwF,EAAmBvN,EAAOwP,GAD7C,QAGC,QAFMgB,EADP,cAGC,IAAIA,OAAJ,EAAIA,EAAKrT,UACP6S,EAAWQ,EAAIpY,MAJlB,0CAAD,GASA,sBAAC,4BAAA2P,EAAA,sEACmByG,GAAwBxO,EAAOwP,GADlD,QAGC,QAFMgB,EADP,cAGC,IAAIA,OAAJ,EAAIA,EAAKrT,UACP+S,EAAeM,EAAIpY,MAJtB,0CAAD,GASA,sBAAC,4BAAA2P,EAAA,sEACmBD,EAAqB9H,EAAOwP,GAD/C,QAGC,QAFMgB,EADP,cAGC,IAAIA,OAAJ,EAAIA,EAAKrT,UACPiT,EAAaI,EAAIpY,MAJpB,0CAAD,GASA,sBAAC,4BAAA2P,EAAA,sEACmB4G,GAAwB3O,EAAOwP,GADlD,QAGC,QAFMgB,EADP,cAGC,IAAIA,OAAJ,EAAIA,EAAKrT,UACPmT,EAAeE,EAAIpY,MAJtB,0CAAD,MAQD,CAAC4H,EAAOuQ,IAEJ,CACLd,UACAD,cACAG,YACAE,kBACAE,UACAE,cACAE,YACAE,eK5FWI,GAEb,OACE,sBAAKlZ,UAAU,oBAAf,UACE,cAAC,EAAD,CAASkR,YAAajG,EAAKiN,QAAS/V,GAAI8I,EAAKgN,cAC7C,cAAC,EAAD,CAAW/G,YAAajG,EAAKmN,UAAWjW,GAAI8I,EAAKgN,cACjD,cAAC,GAAD,CAAiB/G,YAAajG,EAAKqN,gBAAiBnW,GAAI8I,EAAKgN,cAC7D,cAAC,GAAD,CAAa/G,YAAajG,EAAK6N,YAAa3W,GAAI8I,EAAKgN,cACrD,cAAC,EAAD,CAAQ/G,YAAajG,EAAKuN,QAASrW,GAAI8I,EAAKgN,cAC5C,cAAC,GAAD,CAAa/G,YAAajG,EAAKyN,YAAavW,GAAI8I,EAAKgN,cACrD,cAAC,EAAD,CAAW/G,YAAajG,EAAK2N,UAAWzW,GAAI8I,EAAKgN,kBCLxCkB,GAXY,kBACzB,sBAAMnZ,UAAU,YAAhB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoZ,KAAK,qCAAZ,SACE,cAAC,GAAD,MAEF,cAAC,EAAD,U,SC0BSC,I,OAzBO,SAAC,GAAmD,IAAjDlX,EAAgD,EAAhDA,GAAIvC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,SAAU0G,EAA2B,EAA3BA,KAAMhG,EAAqB,EAArBA,QAMlD,OACE,eAAC,KAAD,CAAMkG,GAAIF,EAAMvG,UAAU,aAA1B,UACE,sBAAKA,UAAU,qBAAf,UACE,+BAAOJ,IACP,wBACEQ,KAAK,SACLG,QAXY,SAAC6H,GACnBA,EAAEkR,iBACF/Y,EAAQ4B,IAUFnC,UAAU,qBAHZ,SAKE,qBAAKK,IAAI,eAAeC,IAAI,gBAGhC,qBAAKN,UAAU,mBAAf,SACGH,S,mEChBL0Z,GAA2BC,cAAiB,SAAqB/O,EAAOgP,GAC1E,IAAI5Z,EAAW4K,EAAM5K,SACjB6Z,EAAUjP,EAAMiP,QAChB1Z,EAAYyK,EAAMzK,UAClB2Z,EAAwBlP,EAAMmP,kBAC9BA,OAA8C,IAA1BD,GAA2CA,EAC/DE,EAAQC,aAAyBrP,EAAO,CAAC,WAAY,UAAW,YAAa,sBAEjF,OAAoB+O,gBAAoB,MAAOO,aAAS,CACtD/Z,UAAWga,aAAKN,EAAQO,KAAMja,GAC9ByZ,IAAKA,GACJI,GAAQD,EAAoB/Z,EAAwB2Z,gBAAoBU,KAAY,CACrFC,UAAW,KACX5Y,QAAS,MACR1B,OA8BUua,gBApDK,CAElBH,KAAM,CACJ/V,OAAQ,EACRmW,QAAS,YACTC,KAAM,aA+CwB,CAChCvV,KAAM,kBADOqV,CAEZb,I,UClDCgB,GAAiCf,cAAiB,SAA2B/O,EAAOgP,GACtF,OAAoBD,gBAAoBU,KAAYH,aAAS,CAC3DI,UAAW,IACX5Y,QAAS,QACTpB,MAAO,gBACPsZ,IAAKA,GACJhP,OAmBU2P,gBA/BK,CAElBH,KAAM,CACJO,aAAc,KA4BgB,CAChCzV,KAAM,wBADOqV,CAEZG,I,oBCLYE,GAtBO,SAAC,GAAD,IAAG/U,EAAH,EAAGA,KAAMF,EAAT,EAASA,YAAakV,EAAtB,EAAsBA,cAAe9a,EAArC,EAAqCA,MAAOiG,EAA5C,EAA4CA,QAA5C,OACpB,eAAC8U,GAAA,EAAD,CACEjV,KAAMA,EACNI,QAASN,EACToV,kBAAgB,qBAChBC,mBAAiB,2BAJnB,UAME,cAAC,GAAD,UAAcjb,IACd,cAACkb,GAAA,EAAD,UACE,cAAC,GAAD,UAAoBjV,MAEtB,eAACkV,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAQza,QAASiF,EAAarF,MAAM,UAApC,wDAGA,cAAC6a,GAAA,EAAD,CAAQza,QAASma,EAAeva,MAAM,UAAU8a,WAAS,EAAzD,uFCvBS,SAAeC,GAA9B,uC,8CAAe,WACbzS,EACA0S,EACAlD,GAHa,eAAAzH,EAAA,+EAMQG,YAAW,CAC5BtC,IAAI,GAAD,OAAKuC,IAAL,yCAAiDqH,EAAjD,YAAgEkD,GACnEtK,QAAS,CAAEC,cAAc,UAAD,OAAYrI,IACpCgI,OAAQ,WATC,cAML5P,EANK,yBAYJA,GAZI,uCAeXkQ,QAAQC,IAAR,MAfW,kBAgBJ,MAhBI,0D,sBCMR,ICyCQxG,GA3CG,WAChB,IAAMS,EDCoB,WAAO,IACzB9I,EAAOiN,cAAPjN,GACF+C,EAAWC,cAETsD,EAAUpD,aAAY,SAACC,GAAD,OAAkBA,EAAM5B,KAAK0H,QAAnD3C,MAJwB,EAKEpD,aAAY,SAACC,GAAD,OAAkBA,EAAM4K,cAA9DA,EALwB,EAKxBA,WAAYtB,EALY,EAKZA,UALY,EAOE1N,oBAAkB,GAPpB,mBAOzBka,EAPyB,KAOdC,EAPc,OAQ0Bna,qBAR1B,mBAQzBoa,EARyB,KAQFC,EARE,KAU1BC,EAAerT,uBAAY,SAACsT,GAChC,sBAAC,kCAAAjL,EAAA,0DACK/H,EADL,gCAE4CyS,GAAgBzS,EAAOtG,EAAIsZ,GAFvE,gBAEW7V,EAFX,EAEWA,QAASC,EAFpB,EAEoBA,QAAShF,EAF7B,EAE6BA,KAEtB+E,IACFV,EAASkL,YAAcvP,IACvBqE,EACEO,YAAa,CACXC,MAAM,EACNE,UACAC,cAVT,0CAAD,KAgBC,CAAC4C,EAAO6S,EAAuBnZ,IAE5BuZ,EAAcvT,uBAAY,SAACsT,GAC/BJ,GAAa,GACbE,EAAyBE,KACxB,IAEGE,EAAiBxT,uBAAY,WACjCkT,GAAa,GACbG,EAAaF,KACZ,CAACA,EAAuBE,IAErBI,EAAgBzT,uBAAY,WAChCkT,GAAa,GACbE,OAAyBM,KACxB,IAQH,OANAxa,qBAAU,WAGR,OAFA6D,EAASiL,YAAgBhO,EAAImN,IAAUwM,UAEhC,WAAQ5W,EAASkL,YAAc,QACrC,IAEI,CACLjO,KACAyM,YACAsB,aACAkL,YACAQ,gBACAD,iBACAD,eC1DW9Q,GAEb,OAAIK,EAAK2D,UAEL,cAACM,EAAA,EAAD,IAKF,sBAAKlP,UAAU,uBAAf,UACE,qBAAKA,UAAU,iCAAf,gFAEA,sBAAKA,UAAU,OAAf,UACGiL,EAAKiF,WAAWhO,KAAI,SAACmO,GAAD,OACnB,cAAC,GAAD,CAEEzQ,MAAOyQ,EAAUzQ,MACjBW,QAAS,kBAAM0K,EAAKyQ,YAAYrL,EAAUlO,GAAG4Z,aAC7CxV,KAAI,sBAAiB0E,EAAK9I,GAAtB,YAA4BkO,EAAUlO,IAJ5C,SAMGkO,EAAUC,KAAKpO,KAAI,SAAC2H,GAAD,OAClB,+BAAOA,QANJwG,EAAUlO,OAWnB,cAAC,KAAD,CAAMsE,GAAE,sBAAiBwE,EAAK9I,GAAtB,WAAmCnC,UAAU,gBAArD,SACE,qBAAKK,IAAI,sBAAsBC,IAAI,gBAIvC,cAAC,GAAD,CACEoF,KAAMuF,EAAKmQ,UACXxb,MAAM,4HACNiG,QAAQ,uQACRL,YAAa,kBAAMyF,EAAK2Q,iBACxBlB,cAAe,kBAAMzP,EAAK0Q,wB,SCLnBK,GAvBA,SAAC,GAA2C,IAAzCnb,EAAwC,EAAxCA,KAAMD,EAAkC,EAAlCA,SAAUqb,EAAwB,EAAxBA,WAOhC,OACE,cAACtc,EAAA,EAAD,CAAkBC,MAAM,yDAAYE,QAPlB,WAClB,IAAMoc,EAAoC,GAC1CC,OAAOC,KAAKvb,GAAMwb,SAAQ,SAACC,GAAUJ,EAAQI,IAAO,KACpD1b,EAASsb,IAIT,SACE,qBAAKlc,UAAU,OAAf,SACGic,EAAW/Z,KAAI,SAAC2H,GAAD,OACd,cAACnF,EAAA,EAAD,CAEEjE,MAAOoJ,EAAKjK,MACZgB,SAAU,SAACwH,GAAD,OAAOxH,EAAS,2BAAKC,GAAN,mBAAagJ,EAAKyS,IAAMlU,MACjDjH,WAAUN,GAAOA,EAAKgJ,EAAKyS,MAHtBzS,EAAKyS,aCWPC,GAvBE,SAAC,GAAsC,IAApC1b,EAAmC,EAAnCA,KAAMD,EAA6B,EAA7BA,SAAU4b,EAAmB,EAAnBA,MAOlC,OACE,cAAC7c,EAAA,EAAD,CAAkBC,MAAM,6CAAUE,QAPhB,WAClBc,EAAS,CACPgN,iBAAkB,QAKpB,SACE,qBAAK5N,UAAU,uBAAf,SACE,qBAAKC,MAAO,CAAE+J,MAAO,SAArB,SACE,cAACrJ,EAAA,EAAD,CACEF,MAAM,sEACNI,KAAM2b,EACN5b,SAAU,SAACwH,GAAD,OAAOxH,EAAS,2BAAKC,GAAN,IAAY+M,iBAAkBxF,MACvDtH,cAAa,OAAED,QAAF,IAAEA,OAAF,EAAEA,EAAM+M,0BCoClBuG,GA9CC,SAAC,GAAiE,IAA/DvU,EAA8D,EAA9DA,MAAOiB,EAAuD,EAAvDA,KAAMD,EAAiD,EAAjDA,SAAU6b,EAAuC,EAAvCA,eAAgBC,EAAuB,EAAvBA,UAUxD,OACE,cAAC/c,EAAA,EAAD,CAAkBC,MAAOA,EAAOE,QAVd,WAClBc,EAAS,CACP+b,kBAAmB,KACnBhI,YAAa,KACbiI,iBAAkB,KAClBC,kBAAmB,QAKrB,SACE,sBAAK7c,UAAU,mBAAf,UACE,cAACW,EAAA,EAAD,CACEK,UAAQ,EACRP,MAAM,wFACNI,KAAM4b,EACN7b,SAAU,SAACwH,GAAD,OAAOxH,EAAS,2BAAKC,GAAN,IAAY8b,kBAAmBvU,MACxDtH,cAAa,OAAED,QAAF,IAAEA,OAAF,EAAEA,EAAM8b,oBAGvB,cAAChc,EAAA,EAAD,CACEK,UAAQ,EACRP,MAAM,6CACNI,KAAM6b,EACN9b,SAAU,SAACwH,GAAD,OAAOxH,EAAS,2BAAKC,GAAN,IAAY8T,YAAavM,MAClDtH,cAAa,OAAED,QAAF,IAAEA,OAAF,EAAEA,EAAM8T,cAGvB,cAACtS,EAAA,EAAD,CACErB,UAAQ,EACRP,MAAM,oGACNG,SAAU,SAACwH,GAAD,OAAOxH,EAAS,2BAAKC,GAAN,IAAY+b,iBAAkBxU,MACvDzG,MAAK,OAAEd,QAAF,IAAEA,OAAF,EAAEA,EAAM+b,mBAGf,cAACva,EAAA,EAAD,CACE5B,MAAM,gHACNG,SAAU,SAACwH,GAAD,OAAOxH,EAAS,2BAAKC,GAAN,IAAYgc,kBAAmBzU,MACxDzG,MAAK,OAAEd,QAAF,IAAEA,OAAF,EAAEA,EAAMgc,0BCbRC,GA7BK,SAAC,GAAqD,IAAnDjc,EAAkD,EAAlDA,KAAMD,EAA4C,EAA5CA,SAAU6K,EAAkC,EAAlCA,OAAQI,EAA0B,EAA1BA,aAQ7C,OACE,cAAClM,EAAA,EAAD,CAAkBC,MAAM,2GAAsBE,QAR5B,WAClBc,EAAS,CACP8M,UAAW,KACXC,gBAAiB,QAKnB,SACE,sBAAK3N,UAAU,mBAAf,UACE,cAACW,EAAA,EAAD,CACEF,MAAM,iCACNI,KAAM4K,EACN7K,SAAU,SAACwH,GAAD,OAAOxH,EAAS,2BAAKC,GAAN,IAAY6M,UAAWtF,MAChDtH,cAAa,OAAED,QAAF,IAAEA,OAAF,EAAEA,EAAM6M,YAGvB,cAAC/M,EAAA,EAAD,CACEF,MAAM,6CACNI,KAAMgL,EACNjL,SAAU,SAACwH,GAAD,OAAOxH,EAAS,2BAAKC,GAAN,IAAY8M,gBAAiBvF,MACtDtH,cAAa,OAAED,QAAF,IAAEA,OAAF,EAAEA,EAAM8M,wBCrChB,SAAeoP,GAA9B,uC,8CAAe,WACbtU,EACA0S,EACAhZ,GAHa,+BAAAqO,EAAA,6DAIbC,EAJa,+BAIuB,MACpCC,EALa,yCAQQC,YAAW,CAC5BtC,IAAI,GAAD,OAAKuC,IAAL,kCAA0CuK,GAA1C,OAA4D,WAAPhZ,EAAkB,GAAlB,WAA2BA,IACnF0O,QAAS,CAAEC,cAAc,UAAD,OAAYrI,IACpCgI,SACAC,aAZS,cAQL7P,EARK,yBAeJA,GAfI,uCAkBXkQ,QAAQC,IAAR,MAlBW,kBAmBJ,MAnBI,0D,sBCSR,ICsCQgM,GAzCS,WACtB,IAAM/R,EDE0B,WAChC,IAAMvD,EAAUC,cACVzC,EAAWC,cACTsD,EAAUpD,aAAY,SAACC,GAAD,OAAkBA,EAAM5B,KAAK0H,QAAnD3C,MAH8B,EAIJ2G,cAA1B6I,EAJ8B,EAI9BA,YAAakD,EAJiB,EAIjBA,SAJiB,EAKZja,mBAAS,IALG,mBAK/BtB,EAL+B,KAKxBqd,EALwB,OAQM/b,mBAAuB,IAR7B,mBAQ/Bub,EAR+B,KAQfS,EARe,OASJhc,mBAAuB,IATnB,mBAS/Bwb,EAT+B,KASpBS,EAToB,OAUVjc,mBAAuB,IAVb,mBAU/BuK,EAV+B,KAUvB2R,EAVuB,OAWElc,mBAAuB,IAXzB,mBAW/B2K,EAX+B,KAWjBwR,EAXiB,OAYJnc,mBAAuB,IAZnB,mBAY/Boc,EAZ+B,KAYpBC,EAZoB,OAaJrc,mBAA4B,IAbxB,mBAa/Bsc,EAb+B,KAapBC,EAboB,OAgBRvc,mBAA6B,CACzDyb,kBAAmB,KACnBhI,YAAa,KACbiI,iBAAkB,KAClBC,kBAAmB,OApBiB,mBAgB/B3E,EAhB+B,KAgBtBC,EAhBsB,OAsBAjX,mBAAiC,CACrEwM,UAAW,KACXC,gBAAiB,OAxBmB,mBAsB/B+P,EAtB+B,KAsBlBC,EAtBkB,OA0BEzc,mBAA8B,CACpE0M,iBAAkB,OA3BkB,mBA0B/BuD,EA1B+B,KA0BjBC,EA1BiB,QA6BVlQ,qBA7BU,qBA6B/B0c,GA7B+B,MA6BvBC,GA7BuB,MA+BhCC,GAAmBvY,mBAAQ,kBAAO2S,EAAQyE,oBAC1CzE,EAAQvD,cACRuD,EAAQ0E,mBACd,CAAC1E,IAEK3E,GAASpL,sBAAW,sBAAC,8BAAAqI,EAAA,yDACnBE,EADmB,mDAEpBwH,GACAwF,GACAvM,GACAyM,KAGDnV,EARqB,gCASLsU,GAAqBtU,EAAO0S,EAAUlD,EAAa,MAAOvH,GATrD,OASjBuI,EATiB,OAWvB/T,EACEO,YAAa,CACXC,MAAM,EACNE,QAAO,OAAEqT,QAAF,IAAEA,OAAF,EAAEA,EAAKrT,QACdC,QAAO,OAAEoT,QAAF,IAAEA,OAAF,EAAEA,EAAKpT,YAIX,OAAHoT,QAAG,IAAHA,OAAA,EAAAA,EAAKrT,UAA2B,WAAhBqS,GAClBvQ,EAAQgB,KAAR,sBAA4ByS,EAA5B,mBAAwClC,QAAxC,IAAwCA,OAAxC,EAAwCA,EAAKpY,KAAKkd,eApB7B,2CAuBxB,CAACtV,EAAOwP,EAAaC,EAASwF,EAAavM,EAAcyM,KAwC5D,OAtCAvc,qBAAU,WACJoH,GAEF,sBAAC,4BAAA+H,EAAA,sEACmBuM,GAAqBtU,EAAO0S,EAAUlD,GADzD,QAGC,QAFMgB,EADP,cAGC,IAAIA,OAAJ,EAAIA,EAAKrT,WACPqX,EAAQ,OAAChE,QAAD,IAACA,OAAD,EAACA,EAAKpY,KAAKjB,OAEnBsd,GAAqB,OAAHjE,QAAG,IAAHA,OAAA,EAAAA,EAAKpY,KAAKmd,iBAAkB,IAC9Cb,GAAgB,OAAHlE,QAAG,IAAHA,OAAA,EAAAA,EAAKpY,KAAKyT,WAAY,IACnC6D,EAAW,CACTwE,mBAAsB,OAAH1D,QAAG,IAAHA,OAAA,EAAAA,EAAKpY,KAAK8b,oBAAqB,GAClDhI,aAAgB,OAAHsE,QAAG,IAAHA,OAAA,EAAAA,EAAKpY,KAAK8T,cAAe,GACtCiI,kBAAqB,OAAH3D,QAAG,IAAHA,OAAA,EAAAA,EAAKpY,KAAK+b,mBAAoB,GAChDC,mBAAsB,OAAH5D,QAAG,IAAHA,OAAA,EAAAA,EAAKpY,KAAKgc,oBAAqB,KAGpDO,EAAS,OAACnE,QAAD,IAACA,OAAD,EAACA,EAAKpY,KAAK4K,QACpB4R,EAAe,OAACpE,QAAD,IAACA,OAAD,EAACA,EAAKpY,KAAKgL,cAC1B8R,EAAe,CACbjQ,WAAc,OAAHuL,QAAG,IAAHA,OAAA,EAAAA,EAAKpY,KAAK6M,YAAa,KAClCC,iBAAoB,OAAHsL,QAAG,IAAHA,OAAA,EAAAA,EAAKpY,KAAK8M,kBAAmB,OAGhD4P,EAAY,OAACtE,QAAD,IAACA,OAAD,EAACA,EAAKpY,KAAKkL,eACvBqF,EAAgB,CAAExD,kBAAqB,OAAHqL,QAAG,IAAHA,OAAA,EAAAA,EAAKpY,KAAK+M,mBAAoB,OAElE6P,GAAgB,OAAHxE,QAAG,IAAHA,OAAA,EAAAA,EAAKpY,KAAKod,aAAc,IACrCJ,GAAS,OAAC5E,QAAD,IAACA,OAAD,EAACA,EAAKpY,KAAKod,WAAWC,QAAO,SAACC,EAAUtU,GAE/C,OADAsU,EAAItU,EAAKyS,KAAOzS,EAAKlI,MACdwc,IACN,MA7BN,0CAAD,KAiCD,CAAC1V,IAEG,CACL7I,QACAsY,UACAuE,iBACAC,YACAjR,SACAI,eACA6R,cACAJ,YACAnM,eACAqM,YACAI,UACAE,oBACAD,aACAzM,kBACA+G,aACAwF,iBACApK,WCtHW6K,GAEb,OACE,sBAAKpe,UAAU,oBAAf,UACE,cAAC,GAAD,CACEJ,MAAOqL,EAAKrL,MACZiB,KAAMoK,EAAKiN,QACXtX,SAAUqK,EAAKkN,WACfsE,eAAgBxR,EAAKwR,eACrBC,UAAWzR,EAAKyR,YAGlB,cAAC,GAAD,CACE7b,KAAMoK,EAAKyS,YACXjS,OAAQR,EAAKQ,OACbI,aAAcZ,EAAKY,aACnBjL,SAAUqK,EAAK0S,iBAGjB,cAAC,GAAD,CACE9c,KAAMoK,EAAKkG,aACXqL,MAAOvR,EAAKqS,UACZ1c,SAAUqK,EAAKmG,kBAGhBnG,EAAK2S,QACJ,cAAC,GAAD,CACE3B,WAAYhR,EAAKuS,UACjB3c,KAAMoK,EAAK2S,OACXhd,SAAUqK,EAAK4S,YAInB,qBAAK7d,UAAU,gBAAf,SACE,cAACQ,EAAA,EAAD,CAAeC,MAAM,mDAAWF,QAAS0K,EAAKsI,OAAQ7S,SAAUuK,EAAK6S,yBC5B9DO,GAXU,kBACvB,sBAAMre,UAAU,YAAhB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoZ,KAAK,qCAAZ,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,UCWSkF,GAdG,WAAO,IACPle,EAAWiF,aAAY,SAACC,GAAD,OAAkBA,EAAM5B,QAAvD0H,KAAQhL,KAEhB,OAAIA,IAASkP,IAAUC,UACd,cAAC,GAAD,IAGLnP,IAASkP,IAAUwM,QACd,cAAC,GAAD,IAGF,M,kBChBM,SAAeyC,GAA9B,uC,8CAAe,WACb9V,EACA0S,EACAqD,GAHa,eAAAhO,EAAA,+EAMQG,YAAW,CAC5BtC,IAAI,GAAD,OAAKuC,IAAL,sCAA8CuK,EAA9C,YAA0DqD,GAC7D3N,QAAS,CAAEC,cAAc,UAAD,OAAYrI,IACpCgI,OAAQ,WATC,cAML5P,EANK,yBAYJA,GAZI,uCAeXkQ,QAAQC,IAAR,MAfW,kBAgBJ,MAhBI,0D,sBCQR,ICuCQxG,GAzCG,WAChB,IAAMS,EDCoB,WAAO,IACzB9I,EAAOiN,cAAPjN,GACF+C,EAAWC,cAETsD,EAAUpD,aAAY,SAACC,GAAD,OAAkBA,EAAM5B,KAAK0H,QAAnD3C,MAJwB,EAKDpD,aAAY,SAACC,GAAD,OAAkBA,EAAMoR,WAA3DA,EALwB,EAKxBA,QAAS9H,EALe,EAKfA,UALe,EAOE1N,oBAAkB,GAPpB,mBAOzBka,EAPyB,KAOdC,EAPc,OAQoBna,qBARpB,mBAQzBud,EARyB,KAQLC,EARK,KAU1BlD,EAAerT,uBAAY,SAACsT,GAChC,sBAAC,kCAAAjL,EAAA,0DACK/H,EADL,gCAE4C8V,GAAoB9V,EAAOgT,EAAUtZ,GAFjF,gBAEWyD,EAFX,EAEWA,QAASC,EAFpB,EAEoBA,QAAShF,EAF7B,EAE6BA,KAEtB+E,IACFV,EAASyR,aAAW9V,IACpBqE,EACEO,YAAa,CACXC,MAAM,EACNE,UACAC,cAVT,0CAAD,KAgBC,CAAC4C,EAAOgW,IAEL/C,EAAcvT,uBAAY,SAACsT,GAC/BJ,GAAa,GACbqD,EAAsBjD,KACrB,IAEGE,EAAiBxT,uBAAY,WACjCkT,GAAa,GACbG,EAAaiD,KACZ,CAACA,IAEE7C,EAAgBzT,uBAAY,WAChCkT,GAAa,GACbqD,OAAsB7C,KACrB,IAQH,OANAxa,qBAAU,WAGR,OAFA6D,EAASyZ,aAAaxc,EAAImN,IAAUwM,UAE7B,WAAQ5W,EAASyR,aAAW,QAClC,CAACxU,IAEG,CACLA,KACAyM,YACA8H,UACA0E,YACAQ,gBACAD,iBACAD,eC1DW9Q,GAEb,OAAIK,EAAK2D,UACA,cAACM,EAAA,EAAD,IAIP,uBAAMlP,UAAU,UAAhB,UACE,qBAAKA,UAAU,iCAAf,wDAEA,sBAAKA,UAAU,OAAf,WACIiL,EAAKyL,SAAW,IAAIxU,KAAI,SAAC0c,GAAD,OACxB,cAAC,GAAD,CAEEhf,MAAOgf,EAAOC,UACdte,QAAS,kBAAM0K,EAAKyQ,YAAYkD,EAAOzc,GAAG4Z,aAC1CxV,KAAI,mBAAc0E,EAAK9I,GAAnB,YAAyByc,EAAOzc,IAJtC,UAMIyc,EAAOtO,MAAQ,IAAIpO,KAAI,SAAC2H,GAAD,OACvB,+BAAOA,QANJ+U,EAAOzc,OAWhB,cAAC,KAAD,CAAMsE,GAAE,mBAAcwE,EAAK9I,GAAnB,WAAgCnC,UAAU,gBAAlD,SACE,qBAAKK,IAAI,sBAAsBC,IAAI,gBAIvC,cAAC,GAAD,CACEoF,KAAMuF,EAAKmQ,UACXxb,MAAM,oGACNiG,QAAQ,2PACRL,YAAa,kBAAMyF,EAAK2Q,iBACxBlB,cAAe,kBAAMzP,EAAK0Q,wB,mBCzCnB,SAAemD,GAA9B,uC,8CAAe,WACbrW,EACA0S,EACAM,GAHa,iCAAAjL,EAAA,6DAIbC,EAJa,+BAIuB,MACpCC,EALa,gCAQLrC,EAAiB,QAAXoC,EAAA,6BAC2B,WAAbgL,EAAwB,GAAxB,WAAiCA,IAD/C,8BAEeN,GAFf,OAEuC,WAAbM,EAAwB,GAAxB,WAAiCA,IAV5D,SAWQ9K,YAAW,CAC5BtC,IAAI,GAAD,OAAKuC,KAAL,OAAmBvC,GACtBwC,QAAS,CAAEC,cAAc,UAAD,OAAYrI,IACpCgI,SACAC,aAfS,cAWL7P,EAXK,yBAkBJA,GAlBI,yCAqBXkQ,QAAQC,IAAR,MArBW,kBAsBJ,MAtBI,2D,sBCMR,ICwJQgH,GAxJA,WAAO,IAAD,UACb/M,EDDiB,WACvB,IAAMvD,EAAUC,cACVzC,EAAWC,cAETsD,EAAUpD,aAAY,SAACC,GAAD,OAAkBA,EAAM5B,KAAK0H,QAAnD3C,MAJqB,EAKE2G,cAAvB+L,EALqB,EAKrBA,SAAUM,EALW,EAKXA,SALW,EAQWva,mBAAuB,IARlC,mBAQtB6d,EARsB,KAQRC,EARQ,OASa9d,mBAAuB,IATpC,mBAStB+d,EATsB,KASPC,EATO,OAYDhe,mBAAc,IAZb,mBAYtBie,EAZsB,KAYdC,EAZc,OAaWle,mBAAc,IAbzB,mBAatBme,EAbsB,KAaRC,EAbQ,OAcCpe,mBAAc,IAdf,mBActBgX,EAdsB,KAcbC,EAda,OAeDjX,mBAAc,IAfb,mBAetBqe,EAfsB,KAedC,EAfc,OAgBWte,mBAAc,IAhBzB,mBAgBtBue,EAhBsB,KAgBRC,EAhBQ,OAiBKxe,mBAAc,IAjBnB,mBAiBtBye,EAjBsB,KAiBXC,EAjBW,OAkBiB1e,mBAAc,IAlB/B,mBAkBtB2e,EAlBsB,KAkBLC,EAlBK,KAoBvBC,EAAuB5X,uBAAY,SAACmB,EAAe3H,GACvD0d,EAAa/V,GAAO3H,MAAQA,EAC5B2d,EAAgB,aAAID,MACnB,CAACA,IAEEW,EAAuB7X,uBAAY,SAACmB,EAAe3H,GACvD8d,EAAanW,GAAO3H,MAAQA,EAC5B+d,EAAgB,aAAID,MACnB,CAACA,IAEEQ,EAA0B9X,uBAAY,SAACmB,EAAe3H,GAC1Dke,EAAgBvW,GAAO3H,MAAQA,EAC/Bme,EAAmB,aAAID,MACtB,CAACA,IAEEK,EAAgB/X,uBAAY,WAChC,IAAMgY,EAAmB,GACzBhE,OAAOC,KAAK+C,GAAQ9C,SAAQ,SAACxS,GAC3BsW,EAAYtW,GAAQ,MAEtBuV,EAAUe,GACVb,GAAgB,SAACrX,GAAD,OAAeA,EAAK/F,KAAI,SAAC2H,GAEvC,OADAA,EAAKlI,OAAQ,EACNkI,UAER,CAACsV,IAEEiB,EAAgBjY,uBAAY,WAChC,IAAMkY,EAAmB,GACzBlE,OAAOC,KAAKmD,GAAQlD,SAAQ,SAACxS,GAC3BwW,EAAYxW,GAAQ,MAEtB2V,EAAUa,GACVX,GAAgB,SAACzX,GAAD,OAAeA,EAAK/F,KAAI,SAAC2H,GAEvC,OADAA,EAAKlI,OAAQ,EACNkI,UAER,CAAC0V,IAEEe,GAAmBnY,uBAAY,WACnC,IAAMoY,EAAsB,GAC5BpE,OAAOC,KAAKuD,GAAWtD,SAAQ,SAACxS,GAC9B0W,EAAe1W,GAAQ,MAEzB+V,EAAaW,GACbT,GAAmB,SAAC7X,GAAD,OAAeA,EAAK/F,KAAI,SAAC2H,GAE1C,OADAA,EAAKlI,OAAQ,EACNkI,UAER,CAAC8V,IAEEpM,GAASpL,sBAAW,sBAAC,oCAAAqI,EAAA,0DACrB/H,EADqB,wBAGjB+X,EAA0B,GAChCnB,EAAahD,SAAQ,SAACxS,GACpB2W,EAAmB3W,EAAKyS,KAAOzS,EAAKlI,SAIhC8e,EAA0B,GAChChB,EAAapD,SAAQ,SAACxS,GACpB4W,EAAmB5W,EAAKyS,KAAOzS,EAAKlI,SAIhC+e,EAA6B,GACnCb,EAAgBxD,SAAQ,SAACxS,GACvB6W,EAAsB7W,EAAKyS,KAAOzS,EAAKlI,SAGnC+O,EAAW,CACfyO,OAAQ,CACNte,KAAMse,EACNwB,KAAMH,GAERjB,OAAQ,CACN1e,KAAM0e,EACNoB,KAAMF,GAERrU,eAAgB,CACdvL,KAAM8e,EACNgB,KAAMD,IA/Ba,UAmCL5B,GAAiBrW,EAAO0S,EAAUM,EAAU,MAAO/K,GAnC9C,QAmCjBuI,EAnCiB,OAqCvB/T,EACEO,YAAa,CACXC,MAAM,EACNE,QAAO,OAAEqT,QAAF,IAAEA,OAAF,EAAEA,EAAKrT,QACdC,QAAO,OAAEoT,QAAF,IAAEA,OAAF,EAAEA,EAAKpT,YAIX,OAAHoT,QAAG,IAAHA,OAAA,EAAAA,EAAKrT,UAAwB,WAAb6V,GAAyBvE,GAAQ,OAAC+B,QAAD,IAACA,OAAD,EAACA,EAAKpY,KAAKkW,YAC9DrP,EAAQgB,KAAR,mBAAyByS,EAAzB,mBAAqClC,QAArC,IAAqCA,OAArC,EAAqCA,EAAKpY,KAAKkW,YA9C1B,4CAiDxB,CAACtO,EAAO0W,EAAQI,EAAQI,EAAWN,EAAcI,EAAcI,IAE5De,GAAuBrb,mBAAQ,kBAAO4Z,EAAOpa,OAC7Coa,EAAO0B,UACP1B,EAAO2B,mBAAkB,CAAC3B,EAAOpa,KAAMoa,EAAO0B,QAAS1B,EAAO2B,mBAsCpE,OApCAzf,qBAAU,WACJoH,GAEF,sBAAC,4BAAA+H,EAAA,sEACmBsO,GAAiBrW,EAAO0S,EAAUM,GADrD,QAGC,QAFMxC,EADP,cAGC,IAAIA,OAAJ,EAAIA,EAAKrT,WACPwZ,GAAa,OAAHnG,QAAG,IAAHA,OAAA,EAAAA,EAAKpY,KAAKse,OAAOte,OAAQ,CACjCggB,QAAS,GACT9b,KAAM,GACNgc,WAAY,GACZC,MAAO,GACPC,MAAO,GACPC,gBAAiB,KACjBJ,iBAAkB,OAEpBxB,EAAe,OAACrG,QAAD,IAACA,OAAD,EAACA,EAAKpY,KAAKse,OAAOwB,MACjCnB,GAAa,OAAHvG,QAAG,IAAHA,OAAA,EAAAA,EAAKpY,KAAK0e,OAAO1e,OAAQ,CACjCggB,QAAS,GACT9b,KAAM,GACNgc,WAAY,KAEdrB,EAAe,OAACzG,QAAD,IAACA,OAAD,EAACA,EAAKpY,KAAK0e,OAAOoB,MACjCf,GAAgB,OAAH3G,QAAG,IAAHA,OAAA,EAAAA,EAAKpY,KAAK8e,UAAU9e,OAAQ,CACvCggB,QAAS,GACT9b,KAAM,GACNgc,WAAY,KAEdjB,EAAkB,OAAC7G,QAAD,IAACA,OAAD,EAACA,EAAKpY,KAAK8e,UAAUgB,MACvC3B,GAAmB,OAAH/F,QAAG,IAAHA,OAAA,EAAAA,EAAKpY,KAAKsgB,gBAAiB,IAC3CjC,GAAoB,OAAHjG,QAAG,IAAHA,OAAA,EAAAA,EAAKpY,KAAKugB,gBAAiB,KA3B/C,0CAAD,KA+BD,CAAC3Y,EAAOgT,IAEJ,CACLN,WACAM,WACA0D,SACAE,eACAnH,UACAqH,SACAE,eACAE,YACAE,kBACAd,eACAE,gBACA2B,wBACAxB,YACAjH,aACAqH,YACAI,eACAG,uBACAC,uBACAC,0BACAC,gBACAE,gBACAE,oBACA/M,WCxLW2F,GAEb,OACE,uBAAMlZ,UAAU,UAAhB,UACE,qBACEA,UAAU,iCACVC,MAAO,CACLC,gBAAiB,UACjBC,MAAO,SAJX,kDAUA,cAACR,EAAA,EAAD,CAAkBC,MAAM,GAAGE,QAASmL,EAAKiV,cAAzC,SACE,sBAAKlgB,UAAU,OAAf,UACE,cAACqC,EAAA,EAAD,CACErB,UAAQ,EACRP,MAAM,mDACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKmU,UAAL,2BAAoBnU,EAAKkU,QAAzB,IAAiC0B,QAASzY,MAC3DzG,MAAK,UAAEsJ,EAAKkU,cAAP,aAAE,EAAa0B,UAGtB,cAACxe,EAAA,EAAD,CACErB,UAAQ,EACRP,MAAM,2BACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKmU,UAAL,2BAAoBnU,EAAKkU,QAAzB,IAAiCpa,KAAMqD,MACxDzG,MAAK,UAAEsJ,EAAKkU,cAAP,aAAE,EAAapa,OAGtB,cAAC1C,EAAA,EAAD,CACE5B,MAAM,gEACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKmU,UAAL,2BAAoBnU,EAAKkU,QAAzB,IAAiC4B,WAAY3Y,MAC9DzG,MAAK,UAAEsJ,EAAKkU,cAAP,aAAE,EAAa4B,aAGtB,cAAClY,GAAA,EAAD,CACEpI,MAAM,kFACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKmU,UAAL,2BAAoBnU,EAAKkU,QAAzB,IAAiC6B,MAAO5Y,MACzDzG,MAAK,UAAEsJ,EAAKkU,cAAP,aAAE,EAAa6B,QAGtB,cAAC3e,EAAA,EAAD,CACE5B,MAAM,SACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKmU,UAAL,2BAAoBnU,EAAKkU,QAAzB,IAAiC8B,MAAO7Y,MACzDzG,MAAK,UAAEsJ,EAAKkU,cAAP,aAAE,EAAa8B,aAK1B,cAACthB,EAAA,EAAD,CAAkBC,MAAM,oGAAxB,SACE,qBAAKI,UAAU,OAAf,SACGiL,EAAKoU,aAAand,KAAI,WAA6BoH,GAA7B,IAAG1J,EAAH,EAAGA,MAAO0c,EAAV,EAAUA,IAAK3a,EAAf,EAAeA,MAAf,OACrB,cAAC+C,EAAA,EAAD,CAEEjE,MAAOb,EACPgB,SAAU,SAACwH,GAAD,OAAO6C,EAAK8U,qBAAqBzW,EAAOlB,IAClDjH,SAAUQ,GAHL2a,UASb,cAAC3c,EAAA,EAAD,CAAkBC,MAAM,4EAAxB,SACE,sBAAKI,UAAU,mBAAf,UACE,cAACW,EAAA,EAAD,CACEF,MAAM,wHACNI,KAAMoK,EAAK8T,aACXne,SAAU,SAACwH,GAAD,OAAO6C,EAAKmU,UAAL,2BAAoBnU,EAAKkU,QAAzB,IAAiC+B,gBAAiB9Y,MACnEtH,cAAemK,EAAKkU,OAAO+B,kBAG7B,cAACvgB,EAAA,EAAD,CACEK,UAAQ,EACRP,MAAM,4EACNI,KAAMoK,EAAKgU,cACXre,SAAU,SAACwH,GAAD,OAAO6C,EAAKmU,UAAL,2BAAoBnU,EAAKkU,QAAzB,IAAiC2B,iBAAkB1Y,MACpEtH,cAAemK,EAAKkU,OAAO2B,wBAKjC,cAACnhB,EAAA,EAAD,CAAkBC,MAAM,mDAAWG,YAAY,UAAUD,QAASmL,EAAKmV,cAAvE,SACE,sBAAKpgB,UAAU,OAAf,UACE,cAACqC,EAAA,EAAD,CACE5B,MAAM,mDACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKuU,UAAL,2BAAoBvU,EAAKsU,QAAzB,IAAiCsB,QAASzY,MAC3DzG,MAAOsJ,EAAKsU,OAAOsB,UAGrB,cAACxe,EAAA,EAAD,CACE5B,MAAM,2BACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKuU,UAAL,2BAAoBvU,EAAKsU,QAAzB,IAAiCxa,KAAMqD,MACxDzG,MAAOsJ,EAAKsU,OAAOxa,OAGrB,cAAC1C,EAAA,EAAD,CACE5B,MAAM,gEACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKuU,UAAL,2BAAoBvU,EAAKsU,QAAzB,IAAiCwB,WAAY3Y,MAC9DzG,MAAOsJ,EAAKsU,OAAOwB,aAGpB9V,EAAKwU,aAAavd,KAAI,WAA6BoH,GAA7B,IAAG1J,EAAH,EAAGA,MAAO0c,EAAV,EAAUA,IAAK3a,EAAf,EAAeA,MAAf,OACrB,cAAC+C,EAAA,EAAD,CAEEjE,MAAOb,EACPgB,SAAU,SAACwH,GAAD,OAAO6C,EAAK+U,qBAAqB1W,EAAOlB,IAClDjH,SAAUQ,GAHL2a,WASb,cAAC3c,EAAA,EAAD,CAAkBC,MAAM,qEAAcG,YAAY,UAAUD,QAASmL,EAAKqV,iBAA1E,SACE,sBAAKtgB,UAAU,OAAf,UACE,cAACqC,EAAA,EAAD,CACE5B,MAAM,mDACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAK2U,aAAL,2BAAuB3U,EAAK0U,WAA5B,IAAuCkB,QAASzY,MACjEzG,MAAOsJ,EAAK0U,UAAUkB,UAGxB,cAACxe,EAAA,EAAD,CACE5B,MAAM,2BACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAK2U,aAAL,2BAAuB3U,EAAK0U,WAA5B,IAAuC5a,KAAMqD,MAC9DzG,MAAOsJ,EAAK0U,UAAU5a,OAGxB,cAAC1C,EAAA,EAAD,CACE5B,MAAM,gEACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAK2U,aAAL,2BAAuB3U,EAAK0U,WAA5B,IAAuCoB,WAAY3Y,MACpEzG,MAAOsJ,EAAK0U,UAAUoB,aAGvB9V,EAAK4U,gBAAgB3d,KAAI,WAA6BoH,GAA7B,IAAG1J,EAAH,EAAGA,MAAO0c,EAAV,EAAUA,IAAK3a,EAAf,EAAeA,MAAf,OACxB,cAAC+C,EAAA,EAAD,CAEEjE,MAAOb,EACPgB,SAAU,SAACwH,GAAD,OAAO6C,EAAKgV,wBAAwB3W,EAAOlB,IACrDjH,SAAUQ,GAHL2a,WASb,qBAAKtc,UAAU,gBAAf,SACE,cAACQ,EAAA,EAAD,CAAeC,MAAM,mDAAWF,QAAS0K,EAAKsI,OAAQ7S,SAAUuK,EAAK2V,6BC7I9DvC,GATU,kBACvB,eAAC,IAAD,WACE,cAAC,IAAD,CAAOjF,KAAK,+BAAZ,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,QC4CWiI,I,OA/CU,WACvB,IAAMpW,ECD2B,WAAO,IAChC9I,EAAOiN,cAAPjN,GACF+C,EAAWC,cAFsB,EAIRE,aAAY,SAACC,GAAD,OAAkBA,EAAMoR,WAA3DA,EAJ+B,EAI/BA,QAAS9H,EAJsB,EAItBA,UA6CjB,OAJAvN,qBAAU,WACR6D,EAASyZ,aAAaxc,EAAImN,IAAUC,cACnC,CAACpN,IAEG,CACLA,KACAyM,YACA8H,WDnDW4K,GAEb,OAAIrW,EAAK2D,UACA,cAACM,EAAA,EAAD,IAIP,uBAAMlP,UAAU,UAAhB,UACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,+BAAf,kDACA,qBAAKA,UAAU,iCAAf,8DACA,qBAAKA,UAAU,gCAAf,mFAGDiL,EAAKyL,QAAQxU,KAAI,SAACid,GAAD,OAChB,qBAAKnf,UAAU,OAAf,SACGmc,OAAOoF,OAAOpC,GAAQjd,KAAI,SAAC0c,GAC1B,OAAKA,EAGH,cAACtY,EAAA,EAAD,CAEE1G,MAAOgf,EAAOC,UAEdtY,KAAI,mBAAc0E,EAAK9I,GAAnB,YAAyByc,EAAOzc,IAJtC,UAMIyc,EAAOtO,MAAQ,IAAIpO,KAAI,SAAC2H,GAAD,OACvB,+BAAOA,QANJ+U,EAAOzc,IAJI,4BAFG8E,uB,8CEpBpB,SAAeua,GAA9B,mC,8CAAe,WACb/Y,GADa,+BAAA+H,EAAA,6DAEbC,EAFa,+BAEwB,MACrCC,EAHa,yCAMQC,YAAW,CAC5BtC,IAAI,GAAD,OAAKuC,IAAL,8BACHC,QAAS,CAAEC,cAAc,UAAD,OAAYrI,IACpCgI,SACAC,aAVS,cAML7P,EANK,yBAaJA,GAbI,uCAgBXkQ,QAAQC,IAAR,MAhBW,kBAiBJ,MAjBI,0D,sBCAA,SAAeyQ,GAA9B,qC,8CAAe,WACbhZ,EACAtG,GAFa,eAAAqO,EAAA,+EAKQG,YAAW,CAC5BtC,IAAI,GAAD,OAAKuC,IAAL,0CAAkDzO,GACrD0O,QAAS,CAAEC,cAAc,UAAD,OAAYrI,IACpCgI,OAAQ,QARC,cAKL5P,EALK,yBAWJA,GAXI,uCAcXkQ,QAAQC,IAAR,MAdW,kBAeJ,MAfI,0D,sBCUR,ICoDQ0Q,GArDM,SAACjX,GACpB,IAAMQ,EDAuB,SAAC,GAAwB,IAAtBnF,EAAqB,EAArBA,QAC1BZ,EAAWC,cACTsW,EAAarM,cAAbqM,SACAhT,EAAUpD,aAAY,SAACC,GAAD,OAAkBA,EAAM5B,KAAK0H,QAAnD3C,MAH6C,EAKzBvH,mBAAS,IALgB,mBAK9CygB,EAL8C,KAKtCC,EALsC,OAMnB1gB,mBAAS,IANU,mBAM9C2gB,EAN8C,KAMnCC,EANmC,OAOnB5gB,mBAAS,IAPU,mBAO9C6gB,EAP8C,KAOnCC,EAPmC,OAQvB9gB,mBAAS,CACrC+gB,UAAW,GACXC,YAAa,GACbC,aAAc,GACdviB,MAAO,KAZ4C,mBAQ9CwiB,EAR8C,KAQrCC,EARqC,KAe/C7c,EAAc2C,uBAAY,WAC9BrC,GAAQ,KACP,IAEGhG,EAAUqI,uBAAY,WAC1Bka,EAAW,CACTJ,UAAW,GACXC,YAAa,GACbC,aAAc,GACdviB,MAAO,OAER,IAEG2T,EAASpL,sBAAW,sBAAC,4BAAAqI,EAAA,0DACrB/H,IAASgT,EADY,gCAEL+F,GAAuB/Y,EAAO,OAAQ2Z,GAFjC,QAEjBnJ,EAFiB,QAIfrT,SACNJ,IAGFN,EACEO,YAAa,CACXC,MAAM,EACNE,QAAO,OAAEqT,QAAF,IAAEA,OAAF,EAAEA,EAAKrT,QACdC,QAAO,OAAEoT,QAAF,IAAEA,OAAF,EAAEA,EAAKpT,WAZK,2CAgBxB,CAACuc,EAAS3Z,EAAOgT,IA2BpB,OAzBApa,qBAAU,WACJoH,GAAS2Z,EAAQH,WACnB,sBAAC,4BAAAzR,EAAA,sEACmBiR,GAAsBhZ,EAAO2Z,EAAQH,WADxD,QAGC,QAFMhJ,EADP,cAGC,IAAIA,OAAJ,EAAIA,EAAKrT,UACPoc,EAAa/I,EAAIpY,KAAKyhB,UAJzB,0CAAD,KAQD,CAACF,EAAQH,YAEZ5gB,qBAAU,WACJoH,GAASgT,GACX,sBAAC,4BAAAjL,EAAA,sEACmBgR,GAAuB/Y,GAD1C,QAGC,QAFMwQ,EADP,cAGC,IAAIA,OAAJ,EAAIA,EAAKrT,WACPgc,EAAU3I,EAAIpY,KAAK0hB,SACnBT,EAAa7I,EAAIpY,KAAK2hB,YALzB,0CAAD,KASD,CAAC/Z,EAAOgT,IAEJ,CACLkG,SACAE,YACAE,YACAK,UACAC,aACAviB,UACAyT,SACA/N,eC/EWid,CAAgBhY,GAE7B,OACE,cAAC,KAAD,CACEzK,UAAU,kBACV0F,KAAM+E,EAAM/E,KACZI,QAASmF,EAAKzF,YACdO,sBAAoB,EACpBC,kBAAmBC,KACnBC,cAAe,CACbC,QAAS,KAPb,SAUE,cAACC,GAAA,EAAD,CAAMC,GAAIoE,EAAM/E,KAAhB,SACE,sBAAK1F,UAAU,iBAAf,UACE,cAACL,EAAA,EAAD,CAAkBC,MAAM,6HAAyBE,QAASmL,EAAKnL,QAA/D,SACE,sBAAKE,UAAU,uBAAf,UACE,cAACW,EAAA,EAAD,CACEF,MAAM,6CACNI,KAAMoK,EAAK0W,OACX/gB,SAAU,SAACwH,GAAD,OAAO6C,EAAKoX,WAAL,2BAAqBpX,EAAKmX,SAA1B,IAAmCH,UAAW7Z,MAC/DtH,cAAemK,EAAKmX,QAAQH,YAE9B,cAACthB,EAAA,EAAD,CACEF,MAAM,iCACNI,KAAMoK,EAAK8W,UACXnhB,SAAU,SAACwH,GAAD,OAAO6C,EAAKoX,WAAL,2BAAqBpX,EAAKmX,SAA1B,IAAmCF,YAAa9Z,MACjEtH,cAAemK,EAAKmX,QAAQF,cAE9B,cAACvhB,EAAA,EAAD,CACEF,MAAM,uHACNI,KAAMoK,EAAK4W,UACXjhB,SAAU,SAACwH,GAAD,OAAO6C,EAAKoX,WAAL,2BAAqBpX,EAAKmX,SAA1B,IAAmCD,aAAc/Z,MAClEtH,cAAemK,EAAKmX,QAAQD,eAE9B,cAAC9f,EAAA,EAAD,CACE5B,MAAM,qDACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKoX,WAAL,2BAAqBpX,EAAKmX,SAA1B,IAAmCxiB,MAAOwI,MAC3DzG,MAAOsJ,EAAKmX,QAAQxiB,aAK1B,qBAAKI,UAAU,gBAAf,SACE,cAACQ,EAAA,EAAD,CAAeC,MAAM,mDAAWF,QAAS0K,EAAKsI,OAAQ7S,UAAU,c,UCsF7DsX,GAzHA,SAAC,GAAD,IACbuK,EADa,EACbA,QACAG,EAFa,EAEbA,OACAX,EAHa,EAGbA,UACAY,EAJa,EAIbA,YACAC,EALa,EAKbA,aACAC,EANa,EAMbA,iBACAC,EAPa,EAObA,cACAjiB,EARa,EAQbA,KACAkiB,EATa,EASbA,OACAC,EAVa,EAUbA,eACAC,EAXa,EAWbA,iBACA3P,EAZa,EAYbA,QACA+H,EAba,EAabA,aAba,OAeb,sBAAKrb,UAAU,qBAAf,UACE,qBAAKA,UAAU,6BAAf,SACE,cAACW,EAAA,EAAD,CACEM,qBAAmB,EACnBR,MAAM,6CACNI,KAAM0hB,EACN3hB,SAAU,SAACwH,GAAD,OAAO4a,EAAe5a,IAChCtH,cAAeiiB,EAASliB,EAAKqiB,iBAAmBriB,EAAKohB,cAIzD,qBAAKjiB,UAAU,6BAAf,SACE,cAACW,EAAA,EAAD,CACEF,MAAM,iCACNI,KAAMkhB,EACNnhB,SAAU,SAACwH,GAAD,OAAO6a,EAAiB7a,IAClCtH,cAAeiiB,EAASliB,EAAKsiB,mBAAqBtiB,EAAKqhB,gBAI3D,sBAAKliB,UAAU,gCAAf,UACE,cAACW,EAAA,EAAD,CACEF,MAAM,wFACNI,KAAM6hB,EACN9hB,SAAU,SAACwH,GAAD,OAAOkL,EAAQ,2BAAKzS,GAAN,6BAAgBkiB,EAAS,iBAAmB,WAAc3a,MAClFtH,cAAeiiB,EAASliB,EAAKuiB,eAAiBviB,EAAKwiB,UAErD,qBAAKrjB,UAAU,aAAf,SACE,cAACgJ,GAAA,EAAD,CAAezI,QAAS,kBAAM8a,GAAa,WAI/C,sBAAKrb,UAAU,qCAAf,UACE,qBAAKA,UAAU,cAAf,SACE,cAACW,EAAA,EAAD,CACEF,MAAM,0DACNI,KAAM8hB,EACN/hB,SAAU,SAACwH,GAAD,OAAOkL,EAAQ,2BAAKzS,GAAN,6BAAgBkiB,EAAS,yBAA2B,mBAAsB3a,MAClGtH,cAAeiiB,EAASliB,EAAKyiB,uBAAyBziB,EAAK0iB,oBAG/D,qBAAKvjB,UAAU,aAAf,SACE,cAACqC,EAAA,EAAD,CACE5B,MAAM,sEACNG,SAAU,SAACwH,GAAD,OAAOkL,EAAQ,2BAAKzS,GAAN,6BAAgBkiB,EAAS,iBAAmB,WAAc3a,MAClFzG,MAAOohB,EAASliB,EAAK2iB,eAAiB3iB,EAAK4iB,eAKjD,sBAAKzjB,UAAU,qCAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACW,EAAA,EAAD,CACEF,MAAM,gEACNI,KAAM+hB,EACNhiB,SAAU,SAACwH,GAAD,OAAOkL,EAAQ,2BAAKzS,GAAN,6BAAgBkiB,EAAS,0BAA4B,oBAAuB3a,MACpGtH,cAAeiiB,EAASliB,EAAK6iB,wBAA0B7iB,EAAK8iB,qBAGhE,qBAAK3jB,UAAU,cAAf,SACE,cAACqC,EAAA,EAAD,CACE5B,MAAM,4EACNG,SAAU,SAACwH,GAAD,OAAOkL,EAAQ,2BAAKzS,GAAN,6BAAgBkiB,EAAS,sBAAwB,gBAAmB3a,MAC5FzG,MAAOohB,EAASliB,EAAK+iB,oBAAsB/iB,EAAKgjB,oBAKtD,sBAAK7jB,UAAU,qCAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACW,EAAA,EAAD,CACEF,MAAM,wFACNI,KAAMgiB,EACNjiB,SAAU,SAACwH,GAAD,OAAOkL,EAAQ,2BAAKzS,GAAN,6BAAgBkiB,EAAS,0BAA4B,oBAAuB3a,MACpGtH,cAAeiiB,EAASliB,EAAKijB,wBAA0BjjB,EAAKkjB,qBAGhE,qBAAK/jB,UAAU,cAAf,SACE,cAACqC,EAAA,EAAD,CACE5B,MAAM,iCACNG,SAAU,SAACwH,GAAD,OAAOkL,EAAQ,2BAAKzS,GAAN,6BAAgBkiB,EAAS,2BAA6B,qBAAwB3a,MACtGzG,MAAOohB,EAASliB,EAAKmjB,yBAA2BnjB,EAAKojB,yBAK3D,sBAAKjkB,UAAU,qCAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACW,EAAA,EAAD,CACEF,MAAM,kFACNI,KAAMiiB,EACNliB,SAAU,SAACwH,GAAD,OAAOkL,EAAQ,2BAAKzS,GAAN,6BAAgBkiB,EAAS,2BAA6B,qBAAwB3a,MACtGtH,cAAeiiB,EAASliB,EAAKqjB,yBAA2BrjB,EAAKsjB,sBAGjE,qBAAKnkB,UAAU,cAAf,SACE,cAACqC,EAAA,EAAD,CACE5B,MAAM,8FACNG,SAAU,SAACwH,GAAD,OAAOkL,EAAQ,2BAAKzS,GAAN,6BAAgBkiB,EAAS,uBAAyB,iBAAoB3a,MAC9FzG,MAAOohB,EAASliB,EAAKujB,qBAAuBvjB,EAAKwjB,yBCrI5C,SAAeC,GAA9B,qC,8CAAe,WACb7b,EACAtG,GAFa,+BAAAqO,EAAA,6DAGbC,EAHa,+BAGuB,MACpCC,EAJa,yCAOQC,YAAW,CAC5BtC,IAAI,GAAD,OAAKuC,IAAL,yCAAiDzO,GACpD0O,QAAS,CAAEC,cAAc,UAAD,OAAYrI,IACpCgI,SACAC,aAXS,cAOL7P,EAPK,yBAcJA,GAdI,uCAiBXkQ,QAAQC,IAAR,MAjBW,kBAkBJ,MAlBI,0D,sBCAA,SAAeuT,GAA9B,uC,8CAAe,WACb9b,EACA+b,EACAC,GAHa,eAAAjU,EAAA,+EAMQG,YAAW,CAC5BtC,IAAI,GAAD,OAAKuC,IAAL,wCAAgD4T,GAAhD,OAA2DC,EAAU,WAAOA,GAAe,IAC9F5T,QAAS,CAAEC,cAAc,UAAD,OAAYrI,MAR3B,cAML5H,EANK,yBAWJA,GAXI,uCAcXkQ,QAAQC,IAAR,MAdW,kBAeJ,MAfI,0D,sBCAA,SAAe0T,GAA9B,qC,8CAAe,WACbjc,EACAtG,GAFa,eAAAqO,EAAA,+EAKQG,YAAW,CAC5BtC,IAAI,GAAD,OAAKuC,IAAL,2CAAmDzO,GACtD0O,QAAS,CAAEC,cAAc,UAAD,OAAYrI,MAP3B,cAKL5H,EALK,yBAUJA,GAVI,uCAaXkQ,QAAQC,IAAR,MAbW,kBAcJ,MAdI,0D,sBCgDR,ICyBQ2T,GApEC,SAACla,GACf,IAAMQ,ED0CkB,SAAC,GAAgC,IAA9BiG,EAA6B,EAA7BA,YAAa/O,EAAgB,EAAhBA,GAClC+C,EAAWC,cACTsD,EAAUpD,aAAY,SAACC,GAAD,OAAkBA,EAAM5B,KAAK0H,QAAnD3C,MAFgD,EAItBvH,oBAAkB,GAJI,mBAIjDka,EAJiD,KAItCC,EAJsC,OAM1Bna,mBAAuB,IANG,mBAMjDqhB,EANiD,KAMxCqC,EANwC,OAOd1jB,mBAAuB,IAPT,mBAOjD2jB,EAPiD,KAOlCC,EAPkC,OAQ5B5jB,mBAAuB,IARK,mBAQjDwhB,EARiD,KAQzCqC,EARyC,OAShB7jB,mBAAuB,IATP,mBASjD8jB,EATiD,KASnCC,EATmC,OAUtB/jB,mBAAuB,IAVD,mBAUjD6gB,EAViD,KAUtCC,EAVsC,OAWV9gB,mBAAuB,IAXb,mBAWjDgkB,EAXiD,KAWhCC,EAXgC,OAYlBjkB,mBAAuB,IAZL,mBAYjDyhB,EAZiD,KAYpCyC,EAZoC,OAahBlkB,mBAAuB,IAbP,mBAajD0hB,EAbiD,KAanCyC,EAbmC,OAcRnkB,mBAAuB,IAdf,mBAcjD2hB,EAdiD,KAc/ByC,EAd+B,OAedpkB,mBAAuB,IAfT,mBAejD4hB,GAfiD,KAelCyC,GAfkC,QAgBhBrkB,oBAAkB,GAhBF,qBAgBjDskB,GAhBiD,MAgBnCC,GAhBmC,SAiB5BvkB,oBAAkB,GAjBU,qBAiBjD6hB,GAjBiD,MAiBzC2C,GAjByC,SAkBhCxkB,mBAAe,CACrC+gB,UAAW,KACXoB,QAAS,KACTE,gBAAiB,KACjBE,QAAS,KACTE,iBAAkB,KAClBE,aAAc,KACdE,iBAAkB,KAClBE,kBAAmB,KACnBE,kBAAmB,KACnBE,cAAe,KACfnC,YAAa,OA7ByC,qBAkBjDrhB,GAlBiD,MAkB3CyS,GAlB2C,SA+BpBpS,mBAA4B,CAC9DgiB,iBAAkB,KAClBE,eAAgB,KAChBE,uBAAwB,KACxBE,eAAgB,KAChBE,wBAAyB,KACzBE,oBAAqB,KACrBE,wBAAyB,KACzBE,yBAA0B,KAC1BE,yBAA0B,KAC1BE,qBAAsB,KACtBjB,mBAAoB,OA1CkC,qBA+BjDwC,GA/BiD,MA+BrCC,GA/BqC,MA6ClD9lB,GAAUqI,uBAAY,WAC1BmL,GAAQ,CACN2O,UAAW,KACXoB,QAAS,KACTE,gBAAiB,KACjBE,QAAS,KACTE,iBAAkB,KAClBE,aAAc,KACdE,iBAAkB,KAClBE,kBAAmB,KACnBE,kBAAmB,KACnBE,cAAe,KACfnC,YAAa,OAGf0D,GAAc,CACZ1C,iBAAkB,KAClBE,eAAgB,KAChBE,uBAAwB,KACxBE,eAAgB,KAChBE,wBAAyB,KACzBE,oBAAqB,KACrBE,wBAAyB,KACzBE,yBAA0B,KAC1BE,yBAA0B,KAC1BE,qBAAsB,KACtBjB,mBAAoB,SAErB,IAEG5P,GAASpL,sBAAW,sBAAC,kCAAAqI,EAAA,0DACrB/H,EADqB,uBAEjBiI,EAFiB,uCAGlB7P,IACA8kB,IAJkB,IAKrB5C,UACAyC,kBANqB,SASYlB,GAAiB7b,EAAOtG,EAAI,MAAOuO,GAT/C,gBASf9K,EATe,EASfA,QAASC,EATM,EASNA,QACjBX,EACEO,YAAa,CACXC,MAAM,EACNE,UACAC,aAdmB,2CAkBxB,CAAChF,GAAM8kB,GAAY5C,GAAQyC,GAAc/c,IAEtCua,GAAiB7a,uBAAY,SAACxG,GAClC2R,GAAQ,2BAAKzS,IAAN,IAAYohB,UAAWtgB,EAAOugB,YAAa,KAAMmB,QAAS,UAChE,CAACxiB,KAEEglB,GAAuB1d,uBAAY,SAACxG,GACxCikB,GAAc,2BACTD,IADQ,IAEXzC,iBAAkBvhB,EAClBwhB,mBAAoB,KACpBC,eAAgB,UAEjB,CAACuC,KAEE1C,GAAmB9a,uBAAY,SAACxG,GACpC2R,GAAQ,2BAAKzS,IAAN,IAAYqhB,YAAavgB,EAAO0hB,QAAS,UAC/C,CAACxiB,KAEEilB,GAAyB3d,uBAAY,SAACxG,GAC1CikB,GAAc,2BAAKD,IAAN,IAAkBxC,mBAAoBxhB,EAAOyhB,eAAgB,UACzE,CAACuC,KA8FJ,OA5FAtkB,qBAAU,WACRujB,GAAsB,OAAX1T,QAAW,IAAXA,OAAA,EAAAA,EAAaqR,UAAW,IACnCuC,GAA4B,OAAX5T,QAAW,IAAXA,OAAA,EAAAA,EAAaqR,UAAW,IACzC6C,GAA0B,OAAXlU,QAAW,IAAXA,OAAA,EAAAA,EAAa6U,eAAgB,IAC5CV,GAA2B,OAAXnU,QAAW,IAAXA,OAAA,EAAAA,EAAa8U,gBAAiB,IAC9CV,GAA+B,OAAXpU,QAAW,IAAXA,OAAA,EAAAA,EAAa+U,gBAAiB,IAClDV,IAA4B,OAAXrU,QAAW,IAAXA,OAAA,EAAAA,EAAagV,iBAAkB,IAChDT,IAA2B,OAAXvU,QAAW,IAAXA,OAAA,EAAAA,EAAasU,gBAAgB,GAC7CE,IAAqB,OAAXxU,QAAW,IAAXA,OAAA,EAAAA,EAAa6R,UAAU,GACjCzP,GAAQ,CACN2O,WAAsB,OAAX/Q,QAAW,IAAXA,OAAA,EAAAA,EAAa+Q,YAAa,KACrCoB,SAAoB,OAAXnS,QAAW,IAAXA,OAAA,EAAAA,EAAamS,UAAW,KACjCE,iBAA4B,OAAXrS,QAAW,IAAXA,OAAA,EAAAA,EAAaqS,kBAAmB,KACjDE,SAAoB,OAAXvS,QAAW,IAAXA,OAAA,EAAAA,EAAauS,UAAW,KACjCE,kBAA6B,OAAXzS,QAAW,IAAXA,OAAA,EAAAA,EAAayS,mBAAoB,KACnDE,cAAyB,OAAX3S,QAAW,IAAXA,OAAA,EAAAA,EAAa2S,eAAgB,KAC3CE,kBAA6B,OAAX7S,QAAW,IAAXA,OAAA,EAAAA,EAAa6S,mBAAoB,KACnDE,mBAA8B,OAAX/S,QAAW,IAAXA,OAAA,EAAAA,EAAa+S,oBAAqB,KACrDE,mBAA8B,OAAXjT,QAAW,IAAXA,OAAA,EAAAA,EAAaiT,oBAAqB,KACrDE,eAA0B,OAAXnT,QAAW,IAAXA,OAAA,EAAAA,EAAamT,gBAAiB,KAC7CnC,aAAwB,OAAXhR,QAAW,IAAXA,OAAA,EAAAA,EAAagR,cAAe,OAE3C0D,GAAc,CACZ1C,kBAA6B,OAAXhS,QAAW,IAAXA,OAAA,EAAAA,EAAagS,mBAAoB,KACnDE,gBAA2B,OAAXlS,QAAW,IAAXA,OAAA,EAAAA,EAAakS,iBAAkB,KAC/CE,wBAAmC,OAAXpS,QAAW,IAAXA,OAAA,EAAAA,EAAaoS,yBAA0B,KAC/DE,gBAA2B,OAAXtS,QAAW,IAAXA,OAAA,EAAAA,EAAasS,iBAAkB,KAC/CE,yBAAoC,OAAXxS,QAAW,IAAXA,OAAA,EAAAA,EAAawS,0BAA2B,KACjEE,qBAAgC,OAAX1S,QAAW,IAAXA,OAAA,EAAAA,EAAa0S,sBAAuB,KACzDE,yBAAoC,OAAX5S,QAAW,IAAXA,OAAA,EAAAA,EAAa4S,0BAA2B,KACjEE,0BAAqC,OAAX9S,QAAW,IAAXA,OAAA,EAAAA,EAAa8S,2BAA4B,KACnEE,0BAAqC,OAAXhT,QAAW,IAAXA,OAAA,EAAAA,EAAagT,2BAA4B,KACnEE,sBAAiC,OAAXlT,QAAW,IAAXA,OAAA,EAAAA,EAAakT,uBAAwB,KAC3DjB,oBAA+B,OAAXjS,QAAW,IAAXA,OAAA,EAAAA,EAAaiS,qBAAsB,SAExD,CAACjS,IAGJ7P,qBAAU,WACJ+Z,IAEJ,sBAAC,4BAAA5K,EAAA,0DACK/H,IAAS5H,GAAKohB,UADnB,gCAEqByC,GAAmBjc,EAAO5H,GAAKohB,WAFpD,QAEShJ,EAFT,QAIWrT,SACNoc,EAAa/I,EAAIpY,MALtB,0CAAD,GAWA,sBAAC,4BAAA2P,EAAA,0DACK/H,IAAS5H,GAAKohB,UADnB,gCAEqBsC,GAAgB9b,EAAO5H,GAAKohB,UAAWphB,GAAKqhB,aAFjE,QAESjJ,EAFT,QAIWrT,SACNmf,EAAU9L,EAAIpY,MALnB,0CAAD,MASC,CAAC4H,EAAO5H,GAAKohB,UAAWphB,GAAKqhB,YAAa9G,IAG7C/Z,qBAAU,WACJ+Z,IAGJ,sBAAC,4BAAA5K,EAAA,0DACK/H,IAASkd,GAAWzC,iBADzB,gCAEqBwB,GAAmBjc,EAAOkd,GAAWzC,kBAF1D,QAESjK,EAFT,QAIWrT,SACNuf,EAAmBlM,EAAIpY,MAL5B,0CAAD,GAWA,sBAAC,4BAAA2P,EAAA,0DACK/H,IAASkd,GAAWzC,iBADzB,gCAEqBqB,GAChB9b,EAAOkd,GAAWzC,iBAAkByC,GAAWxC,oBAHpD,QAESlK,EAFT,QAMWrT,SACNqf,EAAgBhM,EAAIpY,MAPzB,0CAAD,MAWC,CAAC4H,EAAOkd,GAAWzC,iBAAkByC,GAAWxC,mBAAoB/H,IAEhE,CACLmH,UACAsC,gBACAnC,SACAsC,eACAjD,YACAmD,kBACAvC,cACAC,eACAC,mBACAC,iBACAjiB,QACA8kB,cACAvK,YACAoK,gBACAzC,UACA1H,eACA/H,WACAsS,iBACA5C,kBACA6C,wBACA5C,oBACA6C,0BACAhmB,WACAyT,UACAkS,mBACAC,cCpRWS,CAAW1b,GAExB,OACE,sBAAKzK,UAAU,mBAAf,UACE,eAACL,EAAA,EAAD,CAAkBC,MAAM,uCAASE,QAASmL,EAAKnL,QAA/C,UACE,sBAAKE,UAAU,wBAAf,UACE,qBAAKA,UAAU,6BAAf,SACE,cAAC0E,EAAA,EAAD,CACEjE,MAAM,uFACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKwa,gBAAgBrd,IACtCjH,SAAU8J,EAAKua,iBAInB,qBAAKxlB,UAAU,6BAAf,SACE,cAAC0E,EAAA,EAAD,CACEjE,MAAM,qJACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKya,UAAUtd,IAChCjH,SAAU8J,EAAK8X,cAIrB,sBAAK/iB,UAAS,kCAA6BiL,EAAK8X,OAAS,SAAW,IAApE,UACE,cAAC,GAAD,CACER,QAAStX,EAAKsX,QACdG,OAAQzX,EAAKyX,OACbX,UAAW9W,EAAK8W,UAChBY,YAAa1X,EAAK0X,YAClBC,aAAc3X,EAAK2X,aACnBC,iBAAkB5X,EAAK4X,iBACvBC,cAAe7X,EAAK6X,cACpBjiB,KAAMoK,EAAKpK,KACXmiB,eAAgB/X,EAAK+X,eACrBC,iBAAkBhY,EAAKgY,iBACvB3P,QAASrI,EAAKqI,QACd+H,aAAcpQ,EAAKoQ,eAGpBpQ,EAAK8X,QACJ,cAAC,GAAD,CACEA,QAAM,EACNR,QAAStX,EAAK4Z,cACdnC,OAAQzX,EAAK+Z,aACbjD,UAAW9W,EAAKia,gBAChBvC,YAAa1X,EAAK0X,YAClBC,aAAc3X,EAAK2X,aACnBC,iBAAkB5X,EAAK4X,iBACvBC,cAAe7X,EAAK6X,cACpBjiB,KAAMoK,EAAK0a,WACX3C,eAAgB/X,EAAK4a,qBACrB5C,iBAAkBhY,EAAK6a,uBACvBxS,QAASrI,EAAK2a,cACdvK,aAAcpQ,EAAKoQ,qBAM3B,qBAAKrb,UAAU,gBAAf,SACE,cAACQ,EAAA,EAAD,CAAeC,MAAM,mDAAWF,QAAS0K,EAAKsI,OAAQ7S,UAAU,MAGlE,cAAC,GAAD,CAAcgF,KAAMuF,EAAKmQ,UAAWtV,QAASmF,EAAKoQ,mBCpEzC,SAAe+K,GAA9B,qC,8CAAe,WACb3d,EACAtG,GAFa,+BAAAqO,EAAA,6DAGbC,EAHa,+BAGuB,MACpCC,EAJa,yCAOQC,YAAW,CAC5BtC,IAAI,GAAD,OAAKuC,IAAL,8CAAsDzO,GACzD0O,QAAS,CAAEC,cAAc,UAAD,OAAYrI,IACpCgI,SACAC,aAXS,cAOL7P,EAPK,yBAcJA,GAdI,uCAiBXkQ,QAAQC,IAAR,MAjBW,kBAkBJ,MAlBI,0D,sBCkBR,ICUQqV,GAzBK,SAAC5b,GAAkB,IAAD,EDeR,SAAC,GAAgC,IAA9ByG,EAA6B,EAA7BA,YAAa/O,EAAgB,EAAhBA,GACtC+C,EAAWC,cACTsD,EAAUpD,aAAY,SAACC,GAAD,OAAkBA,EAAM5B,KAAK0H,QAAnD3C,MAFoD,EAIpCvH,mBAAyB,IAJW,mBAIrDL,EAJqD,KAI/CyS,EAJ+C,OAK5BpS,qBAL4B,mBAKrDC,EALqD,KAK3CC,EAL2C,KAO5DC,qBAAU,WACRiS,GAAmB,OAAXpC,QAAW,IAAXA,OAAA,EAAAA,EAAaoV,eAAgB,IACrCllB,EAAW,OAAC8P,QAAD,IAACA,OAAD,EAACA,EAAaqV,kBACxB,CAACrV,IAEJ,IAAMqC,EAASpL,sBAAW,sBAAC,gCAAAqI,EAAA,0DACrB/H,EADqB,gCAEY2d,GAAqB3d,EAAOtG,EAAI,MAAO,CAAEokB,eAAgBplB,IAFrE,gBAEfyE,EAFe,EAEfA,QAASC,EAFM,EAENA,QACjBX,EACEO,YAAa,CACXC,MAAM,EACNE,UACAC,aAPmB,2CAWxB,CAAC1E,EAAUsH,IAEd,MAAO,CACL5H,OACAM,WACAC,cACAmS,UC3C8CiT,CAAe/b,GAAvD5J,EAD4B,EAC5BA,KAAMM,EADsB,EACtBA,SAAUC,EADY,EACZA,YAAamS,EADD,EACCA,OAErC,OACE,sBAAKvT,UAAU,uBAAf,UACE,cAACL,EAAA,EAAD,CAAkBC,MAAM,2EAAxB,SACE,qBAAKI,UAAU,uBAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,cAACW,EAAA,EAAD,CACEE,KAAMA,EACNJ,MAAM,2EACNG,SAAUQ,EACVN,cAAeK,UAMvB,qBAAKnB,UAAU,gBAAf,SACE,cAACQ,EAAA,EAAD,CAAeC,MAAM,mDAAWF,QAASgT,EAAQ7S,UAAU,UCtBpD,SAAe+lB,GAA9B,qC,8CAAe,WACbhe,EACAtG,GAFa,+BAAAqO,EAAA,6DAGbC,EAHa,+BAGuB,MACpCC,EAJa,yCAOQC,YAAW,CAC5BtC,IAAI,GAAD,OAAKuC,IAAL,0CAAkDzO,GACrD0O,QAAS,CAAEC,cAAc,UAAD,OAAYrI,IACpCgI,SACAC,aAXS,cAOL7P,EAPK,yBAcJA,GAdI,uCAiBXkQ,QAAQC,IAAR,MAjBW,kBAkBJ,MAlBI,0D,sBCaR,ICuBQ0V,GAhCE,SAACjc,GAAkB,IAAD,EDSP,SAAC,GAAgC,IAA9ByG,EAA6B,EAA7BA,YAAa/O,EAAgB,EAAhBA,GACpC+C,EAAWC,cACTsD,EAAUpD,aAAY,SAACC,GAAD,OAAkBA,EAAM5B,KAAK0H,QAAnD3C,MAFkD,EAIlCvH,mBAAsB,CAC5C+f,MAAO,GACPD,MAAO,KANiD,mBAInDngB,EAJmD,KAI7CyS,EAJ6C,KAS1DjS,qBAAU,WACRiS,EAAQ,CACN2N,OAAkB,OAAX/P,QAAW,IAAXA,OAAA,EAAAA,EAAa+P,QAAS,GAC7BD,OAAkB,OAAX9P,QAAW,IAAXA,OAAA,EAAAA,EAAa8P,QAAS,OAE9B,CAAC9P,IAEJ,IAAMpR,EAAUqI,uBAAY,WAC1BmL,EAAQ,CACN2N,MAAO,GACPD,MAAO,OAER,IAEGzN,EAASpL,sBAAW,sBAAC,gCAAAqI,EAAA,0DACrB/H,EADqB,gCAEYge,GAAkBhe,EAAOtG,EAAI,MAAOtB,GAFhD,gBAEf+E,EAFe,EAEfA,QAASC,EAFM,EAENA,QACjBX,EACEO,YAAa,CACXC,MAAM,EACNE,UACAC,aAPmB,2CAWxB,CAAChF,EAAM4H,IAEV,MAAO,CACL5H,OACAyS,UACAxT,UACAyT,UChDyCoT,CAAalc,GAAhD5J,EADyB,EACzBA,KAAMyS,EADmB,EACnBA,QAASxT,EADU,EACVA,QAASyT,EADC,EACDA,OAEhC,OACE,sBAAKvT,UAAU,oBAAf,UACE,cAACL,EAAA,EAAD,CAAkBC,MAAM,sHAAuBE,QAASA,EAAxD,SACE,sBAAKE,UAAU,uBAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,cAAC6I,GAAA,EAAD,CACEpI,MAAM,kFACNG,SAAU,SAACwH,GAAD,OAAOkL,EAAQ,2BAAKzS,GAAN,IAAYmgB,MAAO5Y,MAC3CzG,MAAOd,EAAKmgB,UAIhB,qBAAKhhB,UAAU,kBAAf,SACE,cAACqC,EAAA,EAAD,CACE5B,MAAM,QACNG,SAAU,SAACwH,GAAD,OAAOkL,EAAQ,2BAAKzS,GAAN,IAAYogB,MAAO7Y,MAC3CzG,MAAOd,EAAKogB,eAMpB,qBAAKjhB,UAAU,gBAAf,SACE,cAACQ,EAAA,EAAD,CAAeC,MAAM,mDAAWF,QAASgT,EAAQ7S,UAAU,UC9BpD,SAAekmB,GAA9B,uC,8CAAe,WACbne,EACA+V,EACArD,GAHa,+BAAA3K,EAAA,6DAIbC,EAJa,+BAIuB,MACpCC,EALa,yCAQQC,YAAW,CAC5BtC,IAAI,GAAD,OAAKuC,IAAL,sCAA8CuK,GACjDtK,QAAS,CAAEC,cAAc,UAAD,OAAYrI,IACpCgI,SACAC,aAZS,cAQL7P,EARK,yBAeJA,GAfI,uCAkBXkQ,QAAQC,IAAR,MAlBW,kBAmBJ,MAnBI,0D,sBCuBR,IC2FQ6V,GA/GH,SAACpc,GAAkB,IAAD,EDoBR,SAAC,GAAgC,IAA9ByG,EAA6B,EAA7BA,YAAa/O,EAAgB,EAAhBA,GAC9B+C,EAAWC,cACTsD,EAAUpD,aAAY,SAACC,GAAD,OAAkBA,EAAM5B,KAAK0H,QAAnD3C,MAF4C,EAI5BvH,mBAAsB,CAC5C4lB,UAAW,GACXC,OAAQ,GACRC,aAAc,GACdC,UAAW,GACXC,OAAQ,GACRC,aAAc,GACdC,UAAW,GACXC,OAAQ,GACRC,aAAc,GACdC,UAAW,GACXC,OAAQ,GACRC,aAAc,KAhBoC,mBAI7C5mB,EAJ6C,KAIvCyS,EAJuC,KAmBpDjS,qBAAU,WACRiS,EAAQ,CACNwT,WAAsB,OAAX5V,QAAW,IAAXA,OAAA,EAAAA,EAAa4V,YAAa,GACrCC,QAAmB,OAAX7V,QAAW,IAAXA,OAAA,EAAAA,EAAa6V,SAAU,GAC/BC,cAAyB,OAAX9V,QAAW,IAAXA,OAAA,EAAAA,EAAa8V,eAAgB,GAC3CC,WAAsB,OAAX/V,QAAW,IAAXA,OAAA,EAAAA,EAAa+V,YAAa,GACrCC,QAAmB,OAAXhW,QAAW,IAAXA,OAAA,EAAAA,EAAagW,SAAU,GAC/BC,cAAyB,OAAXjW,QAAW,IAAXA,OAAA,EAAAA,EAAaiW,eAAgB,GAC3CC,WAAsB,OAAXlW,QAAW,IAAXA,OAAA,EAAAA,EAAakW,YAAa,GACrCC,QAAmB,OAAXnW,QAAW,IAAXA,OAAA,EAAAA,EAAamW,SAAU,GAC/BC,cAAyB,OAAXpW,QAAW,IAAXA,OAAA,EAAAA,EAAaoW,eAAgB,GAC3CC,WAAsB,OAAXrW,QAAW,IAAXA,OAAA,EAAAA,EAAaqW,YAAa,GACrCC,QAAmB,OAAXtW,QAAW,IAAXA,OAAA,EAAAA,EAAasW,SAAU,GAC/BC,cAAyB,OAAXvW,QAAW,IAAXA,OAAA,EAAAA,EAAauW,eAAgB,OAE5C,CAACvW,IAEJ,IAAMpR,EAAUqI,uBAAY,WAC1BmL,EAAQ,CACNwT,UAAW,GACXC,OAAQ,GACRC,aAAc,GACdC,UAAW,GACXC,OAAQ,GACRC,aAAc,GACdC,UAAW,GACXC,OAAQ,GACRC,aAAc,GACdC,UAAW,GACXC,OAAQ,GACRC,aAAc,OAEf,IAEGlU,EAASpL,sBAAW,sBAAC,gCAAAqI,EAAA,0DACrB/H,EADqB,gCAEYme,GAAcne,EAAO,GAAItG,EAAI,MAAOtB,GAFhD,gBAEf+E,EAFe,EAEfA,QAASC,EAFM,EAENA,QACjBX,EACEO,YAAa,CACXC,MAAM,EACNE,UACAC,aAPmB,2CAWxB,CAAChF,EAAM4H,IAEV,MAAO,CACL5H,OACAyS,UACAxT,UACAyT,UCzFyCmU,CAAOjd,GAA1C5J,EADoB,EACpBA,KAAMyS,EADc,EACdA,QAASxT,EADK,EACLA,QAASyT,EADJ,EACIA,OAChC,OACE,sBAAKvT,UAAU,eAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,sBAAMA,UAAU,gBAAhB,gCACA,wBAAQI,KAAK,SAASJ,UAAU,eAAhC,SACE,qBACEK,IAAI,wBACJC,IAAI,QACJN,UAAU,aACVO,QAAST,SAKf,cAACH,EAAA,EAAD,CAAkBC,MAAM,uIAAxB,SACE,sBAAKI,UAAU,OAAf,UACE,cAACqC,EAAA,EAAD,CACE5B,MAAM,mDACNG,SAAU,SAACwH,GAAD,OAAOkL,EAAQ,2BAAKzS,GAAN,IAAYimB,UAAW1e,MAC/CzG,MAAOd,EAAKimB,YAGd,cAACzkB,EAAA,EAAD,CACE5B,MAAM,sBACNG,SAAU,SAACwH,GAAD,OAAOkL,EAAQ,2BAAKzS,GAAN,IAAYkmB,OAAQ3e,MAC5CzG,MAAOd,EAAKkmB,SAGd,cAAC1kB,EAAA,EAAD,CACE5B,MAAM,gEACNG,SAAU,SAACwH,GAAD,OAAOkL,EAAQ,2BAAKzS,GAAN,IAAYmmB,aAAc5e,MAClDzG,MAAOd,EAAKmmB,oBAKlB,cAACrnB,EAAA,EAAD,CAAkBC,MAAM,mJAAxB,SACE,sBAAKI,UAAU,OAAf,UACE,cAACqC,EAAA,EAAD,CACE5B,MAAM,mDACNG,SAAU,SAACwH,GAAD,OAAOkL,EAAQ,2BAAKzS,GAAN,IAAYomB,UAAW7e,MAC/CzG,MAAOd,EAAKomB,YAGd,cAAC5kB,EAAA,EAAD,CACE5B,MAAM,sBACNG,SAAU,SAACwH,GAAD,OAAOkL,EAAQ,2BAAKzS,GAAN,IAAYqmB,OAAQ9e,MAC5CzG,MAAOd,EAAKqmB,SAGd,cAAC7kB,EAAA,EAAD,CACE5B,MAAM,gEACNG,SAAU,SAACwH,GAAD,OAAOkL,EAAQ,2BAAKzS,GAAN,IAAYsmB,aAAc/e,MAClDzG,MAAOd,EAAKsmB,oBAKlB,cAACxnB,EAAA,EAAD,CAAkBC,MAAM,uIAAxB,SACE,sBAAKI,UAAU,OAAf,UACE,cAACqC,EAAA,EAAD,CACE5B,MAAM,mDACNG,SAAU,SAACwH,GAAD,OAAOkL,EAAQ,2BAAKzS,GAAN,IAAYumB,UAAWhf,MAC/CzG,MAAOd,EAAKumB,YAGd,cAAC/kB,EAAA,EAAD,CACE5B,MAAM,sBACNG,SAAU,SAACwH,GAAD,OAAOkL,EAAQ,2BAAKzS,GAAN,IAAYwmB,OAAQjf,MAC5CzG,MAAOd,EAAKwmB,SAGd,cAAChlB,EAAA,EAAD,CACE5B,MAAM,gEACNG,SAAU,SAACwH,GAAD,OAAOkL,EAAQ,2BAAKzS,GAAN,IAAYymB,aAAclf,MAClDzG,MAAOd,EAAKymB,oBAKlB,cAAC3nB,EAAA,EAAD,CAAkBC,MAAM,8JAAxB,SACE,sBAAKI,UAAU,OAAf,UACE,cAACqC,EAAA,EAAD,CACE5B,MAAM,mDACNG,SAAU,SAACwH,GAAD,OAAOkL,EAAQ,2BAAKzS,GAAN,IAAY0mB,UAAWnf,MAC/CzG,MAAOd,EAAK0mB,YAGd,cAACllB,EAAA,EAAD,CACE5B,MAAM,sBACNG,SAAU,SAACwH,GAAD,OAAOkL,EAAQ,2BAAKzS,GAAN,IAAY2mB,OAAQpf,MAC5CzG,MAAOd,EAAK2mB,SAGd,cAACnlB,EAAA,EAAD,CACE5B,MAAM,gEACNG,SAAU,SAACwH,GAAD,OAAOkL,EAAQ,2BAAKzS,GAAN,IAAY4mB,aAAcrf,MAClDzG,MAAOd,EAAK4mB,oBAKlB,qBAAKznB,UAAU,gBAAf,SACE,cAACQ,EAAA,EAAD,CAAeC,MAAM,mDAAWF,QAASgT,EAAQ7S,UAAU,U,UC5GpD,SAAeinB,GAA9B,qC,8CAAe,WACblf,EACAtG,GAFa,+BAAAqO,EAAA,6DAGbC,EAHa,+BAGuB,MACpCC,EAJa,yCAOQC,YAAW,CAC5BtC,IAAI,GAAD,OAAKuC,IAAL,0CAAkDzO,GACrD0O,QAAS,CAAEC,cAAc,UAAD,OAAYrI,IACpCgI,SACAC,aAXS,cAOL7P,EAPK,yBAcJA,GAdI,uCAiBXkQ,QAAQC,IAAR,MAjBW,kBAkBJ,MAlBI,0D,sBCuBR,ICyDQ4W,GA1EE,SAACnd,GAAkB,IAAD,EDiBR,SAAC,GAAgC,IAA9ByG,EAA6B,EAA7BA,YAAa/O,EAAgB,EAAhBA,GACnC+C,EAAWC,cACTsD,EAAUpD,aAAY,SAACC,GAAD,OAAkBA,EAAM5B,KAAK0H,QAAnD3C,MAFiD,EAIfvH,mBAAuB,IAJR,mBAIlD+d,EAJkD,KAInCC,EAJmC,OAKjChe,mBAAsB,CAC5C2mB,OAAQ,SACRC,SAAU,GACVhH,iBAAkB,GAClBiH,cAAe,GACfC,oBAAqB,GACrBC,0BAA2B,GAC3BC,cAAe,KACfC,qBAAsB,KACtBC,cAAe,OAdwC,mBAKlDvnB,EALkD,KAK5CyS,EAL4C,KAiBnD+U,EAAa9iB,mBAAQ,iBAAM,CAC/B,CACEpD,GAAI,SACJvC,MAAO,wCAET,CACEuC,GAAI,OACJvC,MAAO,uDAER,IAEGE,EAAUqI,uBAAY,WAC1BmL,EAAQ,CACNuU,OAAQ,SACRC,SAAU,GACVhH,iBAAkB,GAClBiH,cAAe,GACfC,oBAAqB,GACrBC,0BAA2B,GAC3BC,cAAe,KACfC,qBAAsB,KACtBC,cAAe,SAGhB,IAEG7U,EAASpL,sBAAW,sBAAC,kCAAAqI,EAAA,0DACrB/H,EADqB,uBAEjB+K,EAFiB,2BAGlB3S,GAHkB,IAIrBunB,cAAezlB,YAAW9B,EAAKunB,eAC/BF,cAAevlB,YAAW9B,EAAKqnB,eAC/BC,qBAAsBxlB,YAAW9B,EAAKsnB,wBANjB,SASYR,GAAkBlf,EAAOtG,EAAI,MAAOqR,GAThD,gBASf5N,EATe,EASfA,QAASC,EATM,EASNA,QACjBX,EACEO,YAAa,CACXC,MAAM,EACNE,UACAC,aAdmB,2CAkBxB,CAAChF,EAAM4H,IAoBV,OAlBApH,qBAAU,WACR6d,GAA4B,OAAXhO,QAAW,IAAXA,OAAA,EAAAA,EAAaoX,iBAAkB,IAChDhV,EAAQ,CACNuU,QAAmB,OAAX3W,QAAW,IAAXA,OAAA,EAAAA,EAAa2W,SAAU,SAC/BC,UAAqB,OAAX5W,QAAW,IAAXA,OAAA,EAAAA,EAAa4W,WAAY,GACnChH,kBAA6B,OAAX5P,QAAW,IAAXA,OAAA,EAAAA,EAAa4P,mBAAoB,GACnDiH,eAA0B,OAAX7W,QAAW,IAAXA,OAAA,EAAAA,EAAa6W,gBAAiB,GAC7CC,qBAAgC,OAAX9W,QAAW,IAAXA,OAAA,EAAAA,EAAa8W,sBAAuB,GACzDC,2BAAsC,OAAX/W,QAAW,IAAXA,OAAA,EAAAA,EAAa+W,4BAA6B,GACrEE,sBAAiC,OAAXjX,QAAW,IAAXA,OAAA,EAAAA,EAAaiX,sBAC/B,IAAI9jB,KAAK7B,YAAkB,OAAC0O,QAAD,IAACA,OAAD,EAACA,EAAaiX,uBAAyB,KACtEC,eAA0B,OAAXlX,QAAW,IAAXA,OAAA,EAAAA,EAAakX,eACxB,IAAI/jB,KAAK7B,YAAkB,OAAC0O,QAAD,IAACA,OAAD,EAACA,EAAakX,gBAAkB,KAC/DF,eAA0B,OAAXhX,QAAW,IAAXA,OAAA,EAAAA,EAAagX,eACxB,IAAI7jB,KAAK7B,YAAkB,OAAC0O,QAAD,IAACA,OAAD,EAACA,EAAagX,gBAAkB,SAEhE,CAAChX,IAEG,CACLmX,aACApJ,gBACApe,OACAyS,UACAxT,UACAyT,UCvGoEgV,CAAY9d,GAA1E4d,EADyB,EACzBA,WAAYpJ,EADa,EACbA,cAAepe,EADF,EACEA,KAAMyS,EADR,EACQA,QAASxT,EADjB,EACiBA,QAASyT,EAD1B,EAC0BA,OAE3D,OACE,sBAAKvT,UAAU,oBAAf,UACE,eAACL,EAAA,EAAD,CAAkBC,MAAM,wHAAyBE,QAASA,EAA1D,UACE,sBAAKE,UAAU,YAAf,UACE,sBAAKA,UAAU,MAAf,UACE,mBAAGA,UAAU,aAAb,4CACA,cAAC,KAAD,CACE4G,QAASyhB,EACTznB,SAAU,SAACwH,GAAD,OAAOkL,EAAQ,2BAAKzS,GAAN,IAAYgnB,OAAQzf,EAAE2T,eAC9C5a,SAAUN,EAAKgnB,OACfhhB,OAAO,6BAIX,cAAClD,EAAA,EAAD,CACElD,MAAM,wFACNoD,SAAU,SAACuE,GAAD,OAAOkL,EAAQ,2BAAKzS,GAAN,IAAYunB,cAAehgB,MACnDxE,aAAc/C,EAAKunB,gBAErB,cAAC/lB,EAAA,EAAD,CACE5B,MAAM,qBACNG,SAAU,SAACwH,GAAD,OAAOkL,EAAQ,2BAAKzS,GAAN,IAAYinB,SAAU1f,MAC9CzG,MAAOd,EAAKinB,WAEd,cAACnnB,EAAA,EAAD,CACEF,MAAM,sEACNI,KAAMoe,EACNre,SAAU,SAACwH,GAAD,OAAOkL,EAAQ,2BAAKzS,GAAN,IAAYigB,iBAAkB1Y,MACtDtH,cAAeD,EAAKigB,mBAEtB,cAACze,EAAA,EAAD,CACE5B,MAAM,iHACNG,SAAU,SAACwH,GAAD,OAAOkL,EAAQ,2BAAKzS,GAAN,IAAYknB,cAAe3f,MACnDzG,MAAOd,EAAKknB,gBAEd,cAACpkB,EAAA,EAAD,CACElD,MAAM,gEACNoD,SAAU,SAACuE,GAAD,OAAOkL,EAAQ,2BAAKzS,GAAN,IAAYqnB,cAAe9f,MACnDxE,aAAc/C,EAAKqnB,mBAIvB,qBAAKloB,UAAU,OAAf,SACE,cAACqC,EAAA,EAAD,CACE5B,MAAM,wHACNG,SAAU,SAACwH,GAAD,OAAOkL,EAAQ,2BAAKzS,GAAN,IAAYmnB,oBAAqB5f,MACzDzG,MAAOd,EAAKmnB,wBAIhB,sBAAKhoB,UAAU,OAAf,UACE,cAACqC,EAAA,EAAD,CACE5B,MAAM,oIACNG,SAAU,SAACwH,GAAD,OAAOkL,EAAQ,2BAAKzS,GAAN,IAAYonB,0BAA2B7f,MAC/DzG,MAAOd,EAAKonB,4BAEd,cAACtkB,EAAA,EAAD,CACElD,MAAM,kCACNoD,SAAU,SAACuE,GAAD,OAAOkL,EAAQ,2BAAKzS,GAAN,IAAYsnB,qBAAsB/f,MAC1DxE,aAAc/C,EAAKsnB,6BAKzB,qBAAKnoB,UAAU,gBAAf,SACE,cAACQ,EAAA,EAAD,CAAeC,MAAM,mDAAWF,QAASgT,EAAQ7S,UAAU,UC1EpD,SAAe8nB,GAA9B,uC,8CAAe,WACb/f,EACA0S,EACAM,GAHa,iCAAAjL,EAAA,6DAIbC,EAJa,+BAIuB,MACpCC,EALa,uBAOPrC,EAAiB,QAAXoC,EAAA,yCAAqD0K,EAArD,YAAiEM,GAAjE,yCAAgHA,GAP/G,kBASQ9K,YAAW,CAC5BtC,IAAI,GAAD,OAAKuC,KAAL,OAAmBvC,GACtBwC,QAAS,CAAEC,cAAc,UAAD,OAAYrI,IACpCgI,SACAC,aAbS,cASL7P,EATK,yBAgBJA,GAhBI,yCAmBXkQ,QAAQC,IAAR,MAnBW,kBAoBJ,MApBI,2D,sBCgCR,ICyEQyX,GAnGG,SAAChe,GACjB,IAAMQ,EDyBoB,SAAC,GAAgD,IAA9CiG,EAA6C,EAA7CA,YAAaiK,EAAgC,EAAhCA,SAAUM,EAAsB,EAAtBA,SAC9CvW,EAAWC,cACTsD,EAAUpD,aAAY,SAACC,GAAD,OAAkBA,EAAM5B,KAAK0H,QAAnD3C,MAFkE,EAIpCvH,mBAAuB,IAJa,mBAInEwnB,EAJmE,KAItDC,EAJsD,OAK1BznB,mBAAuB,IALG,mBAKnE0nB,EALmE,KAKjDC,EALiD,OAMhC3nB,mBAAuB,IANS,mBAMnE4nB,EANmE,KAMpDC,EANoD,OAOtB7nB,mBAAuB,IAPD,mBAOnE8nB,EAPmE,KAO/CC,EAP+C,OAQlD/nB,mBAAsB,CAC5CuM,UAAW,GACXyb,oBAAqB,GACrBhI,gBAAiB,GACjBiI,WAAY,GACZC,eAAgB,GAChBC,SAAU,KACVC,WAAY,GACZC,YAAa,GACbzW,UAAW,KACX+D,QAAS,GACT2S,uBAAwB,GACxBC,UAAU,EACVC,OAAO,EACPC,WAAY,OAtB4D,mBAQnE9oB,EARmE,KAQ7DyS,EAR6D,KAyB1EjS,qBAAU,WACRsnB,GAA0B,OAAXzX,QAAW,IAAXA,OAAA,EAAAA,EAAavF,SAAU,IACtCkd,GAA+B,OAAX3X,QAAW,IAAXA,OAAA,EAAAA,EAAa0Y,oBAAqB,IACtDb,GAA4B,OAAX7X,QAAW,IAAXA,OAAA,EAAAA,EAAaiQ,gBAAiB,IAC/C8H,GAAiC,OAAX/X,QAAW,IAAXA,OAAA,EAAAA,EAAa2Y,uBAAwB,IAC3DvW,EAAQ,CACN7F,WAAsB,OAAXyD,QAAW,IAAXA,OAAA,EAAAA,EAAazD,YAAa,GACrCyb,qBAAgC,OAAXhY,QAAW,IAAXA,OAAA,EAAAA,EAAagY,sBAAuB,GACzDhI,iBAA4B,OAAXhQ,QAAW,IAAXA,OAAA,EAAAA,EAAagQ,kBAAmB,GACjDiI,YAAuB,OAAXjY,QAAW,IAAXA,OAAA,EAAAA,EAAaiY,aAAc,GACvCC,gBAA2B,OAAXlY,QAAW,IAAXA,OAAA,EAAAA,EAAakY,iBAAkB,GAC/CC,UAAqB,OAAXnY,QAAW,IAAXA,OAAA,EAAAA,EAAamY,UAAW,IAAIhlB,KAAK7B,YAAkB,OAAC0O,QAAD,IAACA,OAAD,EAACA,EAAamY,WAAa,KACxFC,YAAuB,OAAXpY,QAAW,IAAXA,OAAA,EAAAA,EAAaoY,aAAc,GACvCC,aAAwB,OAAXrY,QAAW,IAAXA,OAAA,EAAAA,EAAaqY,cAAe,GACzCzW,WAAsB,OAAX5B,QAAW,IAAXA,OAAA,EAAAA,EAAa4B,WACpB,IAAIzO,KAAK7B,YAAkB,OAAC0O,QAAD,IAACA,OAAD,EAACA,EAAa4B,YAAc,KAC3D+D,SAAoB,OAAX3F,QAAW,IAAXA,OAAA,EAAAA,EAAa2F,UAAW,GACjC2S,wBAAmC,OAAXtY,QAAW,IAAXA,OAAA,EAAAA,EAAasY,yBAA0B,GAC/DC,UAAqB,OAAXvY,QAAW,IAAXA,OAAA,EAAAA,EAAauY,YAAY,EACnCC,OAAkB,OAAXxY,QAAW,IAAXA,OAAA,EAAAA,EAAawY,SAAS,EAC7BC,YAAuB,OAAXzY,QAAW,IAAXA,OAAA,EAAAA,EAAayY,aAAc,SAExC,CAACzY,IAEJ,IAAMpR,EAAUqI,uBAAY,WAC1BmL,EAAQ,CACN7F,UAAW,GACXyb,oBAAqB,GACrBhI,gBAAiB,GACjBiI,WAAY,GACZC,eAAgB,GAChBC,SAAU,KACVC,WAAY,GACZC,YAAa,GACbzW,UAAW,KACX+D,QAAS,GACT2S,uBAAwB,GACxBC,UAAU,EACVC,OAAO,EACPC,WAAY,SAEb,IAEGpW,EAASpL,sBAAW,sBAAC,kCAAAqI,EAAA,0DACrB/H,EADqB,uBAEjB+K,EAFiB,2BAGlB3S,GAHkB,IAIrBwoB,SAAU1mB,YAAW9B,EAAKwoB,UAC1BvW,UAAWnQ,YAAW9B,EAAKiS,WAC3B6W,WAAY9oB,EAAK6oB,MAAQ/mB,YAAW9B,EAAK8oB,YAAc,OANlC,SASYnB,GAAkB/f,EAAO0S,EAAUM,EAAU,MAAOjI,GAThE,gBASf5N,EATe,EASfA,QAASC,EATM,EASNA,QACjBX,EACEO,YAAa,CACXC,MAAM,EACNE,UACAC,aAdmB,2CAkBxB,CAAChF,EAAM4H,IAEV,MAAO,CACL5H,OACA6nB,cACAE,mBACAE,gBACAE,qBACA1V,UACAxT,UACAyT,UCzHWuW,CAAarf,GAE1B,OACE,sBAAKzK,UAAU,qBAAf,UACE,eAACL,EAAA,EAAD,CAAkBC,MAAM,uHAAwBE,QAASmL,EAAKnL,QAA9D,UACE,sBAAKE,UAAU,YAAf,UACE,cAACW,EAAA,EAAD,CACEF,MAAM,mDACNI,KAAMoK,EAAKyd,YACX9nB,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6B4M,UAAWrF,MACzDtH,cAAemK,EAAKpK,KAAK4M,YAE3B,cAAC9J,EAAA,EAAD,CACElD,MAAM,6HACNoD,SAAU,SAACuE,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6BiS,UAAW1K,MACzDxE,aAAcqH,EAAKpK,KAAKiS,YAE1B,cAACzQ,EAAA,EAAD,CACE5B,MAAM,8FACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6BgW,QAASzO,MACvDzG,MAAOsJ,EAAKpK,KAAKgW,UAEnB,cAAClW,EAAA,EAAD,CACEF,MAAM,sEACNI,KAAMoK,EAAK2d,iBACXhoB,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6BqoB,oBAAqB9gB,MACnEtH,cAAemK,EAAKpK,KAAKqoB,sBAE3B,cAACvoB,EAAA,EAAD,CACEF,MAAM,2GACNI,KAAMoK,EAAK6d,cACXloB,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6BqgB,gBAAiB9Y,MAC/DtH,cAAemK,EAAKpK,KAAKqgB,kBAE3B,cAACvgB,EAAA,EAAD,CACEF,MAAM,wHACNI,KAAMoK,EAAK+d,mBACXpoB,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6B2oB,uBAAwBphB,MACtEtH,cAAemK,EAAKpK,KAAK2oB,yBAE3B,cAACnnB,EAAA,EAAD,CACE5B,MAAM,wFACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6BsoB,WAAY/gB,MAC1DzG,MAAOsJ,EAAKpK,KAAKsoB,aAEnB,cAAC9mB,EAAA,EAAD,CACE5B,MAAM,wFACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6BuoB,eAAgBhhB,MAC9DzG,MAAOsJ,EAAKpK,KAAKuoB,iBAEnB,cAACzlB,EAAA,EAAD,CACElD,MAAM,gEACNoD,SAAU,SAACuE,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6BwoB,SAAUjhB,MACxDxE,aAAcqH,EAAKpK,KAAKwoB,cAI5B,qBAAKrpB,UAAU,OAAf,SACE,cAACqC,EAAA,EAAD,CACE5B,MAAM,8EACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6ByoB,WAAYlhB,MAC1DzG,MAAOsJ,EAAKpK,KAAKyoB,eAIrB,sBAAKtpB,UAAU,YAAf,UACE,cAACqC,EAAA,EAAD,CACE5B,MAAM,uHACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6B0oB,YAAanhB,MAC3DzG,MAAOsJ,EAAKpK,KAAK0oB,cAEnB,cAAC7kB,EAAA,EAAD,CACEjE,MAAM,wFACNU,SAAU8J,EAAKpK,KAAK4oB,SACpB7oB,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6B4oB,SAAUrhB,QAE1D,cAAC1D,EAAA,EAAD,CACEjE,MAAM,mDACNU,SAAU8J,EAAKpK,KAAK6oB,MACpB9oB,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6B6oB,MAAOthB,QAGvD,cAACzE,EAAA,EAAD,CACElD,MAAM,sEACNoD,SAAU,SAACuE,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6B8oB,WAAYvhB,MAC1DxE,aAAcqH,EAAKpK,KAAK8oB,WACxBjpB,UAAWuK,EAAKpK,KAAK6oB,cAK3B,qBAAK1pB,UAAU,gBAAf,SACE,cAACQ,EAAA,EAAD,CAAeC,MAAM,mDAAWF,QAAS0K,EAAKsI,OAAQ7S,UAAU,UCnGzD,SAAeqpB,GAA9B,uC,8CAAe,WACbthB,EACA0S,EACAM,GAHa,iCAAAjL,EAAA,6DAIbC,EAJa,+BAIuB,MACpCC,EALa,gCAQLrC,EAAiB,QAAXoC,EAAA,+CACgC0K,EADhC,YAC4CM,GAD5C,+CAEgCA,GAVjC,SAYQ9K,YAAW,CAC5BtC,IAAI,GAAD,OAAKuC,KAAL,OAAmBvC,GACtBwC,QAAS,CAAEC,cAAc,UAAD,OAAYrI,IACpCgI,SACAC,aAhBS,cAYL7P,EAZK,yBAmBJA,GAnBI,yCAsBXkQ,QAAQC,IAAR,MAtBW,kBAuBJ,MAvBI,2D,sBCmBR,ICmBQgZ,GAjCS,SAACvf,GACvB,IAAMQ,EDa0B,SAAC,GAAgD,IAA9CiG,EAA6C,EAA7CA,YAAaiK,EAAgC,EAAhCA,SAAUM,EAAsB,EAAtBA,SACpDvW,EAAWC,cACTsD,EAAUpD,aAAY,SAACC,GAAD,OAAkBA,EAAM5B,KAAK0H,QAAnD3C,MAFwE,EAIpDvH,mBAAuB,IAJ6B,mBAIzEyK,EAJyE,KAIjE+J,EAJiE,OAK1CxU,mBAAuB,IALmB,mBAKzE+oB,EALyE,KAK5DC,EAL4D,OAMxDhpB,mBAAsB,CAC5CuM,UAAW,GACXoJ,QAAS,GACTlB,SAAU,OAToE,mBAMzE9U,EANyE,KAMnEyS,EANmE,KAYhFjS,qBAAU,WACRqU,GAAqB,OAAXxE,QAAW,IAAXA,OAAA,EAAAA,EAAavF,SAAU,IACjCue,GAA0B,OAAXhZ,QAAW,IAAXA,OAAA,EAAAA,EAAaiZ,eAAgB,IAC5C7W,EAAQ,CACN7F,WAAsB,OAAXyD,QAAW,IAAXA,OAAA,EAAAA,EAAazD,YAAa,GACrCoJ,SAAoB,OAAX3F,QAAW,IAAXA,OAAA,EAAAA,EAAa2F,UAAW,GACjClB,UAAqB,OAAXzE,QAAW,IAAXA,OAAA,EAAAA,EAAayE,UAAW,IAAItR,KAAJ,OAAS6M,QAAT,IAASA,OAAT,EAASA,EAAayE,UAAY,SAErE,CAACzE,IAEJ,IAAMpR,EAAUqI,uBAAY,WAC1BmL,EAAQ,CACN7F,UAAW,GACXoJ,QAAS,GACTlB,SAAU,SAEX,IAEGpC,EAASpL,sBAAW,sBAAC,kCAAAqI,EAAA,0DACrB/H,EADqB,uBAEjB+K,EAFiB,2BAGlB3S,GAHkB,IAIrB8U,SAAUhT,YAAW9B,EAAK8U,YAJL,SAOYoU,GAAwBthB,EAAO0S,EAAUM,EAAU,MAAOjI,GAPtE,gBAOf5N,EAPe,EAOfA,QAASC,EAPM,EAONA,QACjBX,EACEO,YAAa,CACXC,MAAM,EACNE,UACAC,aAZmB,2CAgBxB,CAAChF,EAAM4H,IAEV,MAAO,CACL5H,OACA8K,SACAse,cACA3W,UACAxT,UACAyT,UCnEW6W,CAAmB3f,GAEhC,OACE,sBAAKzK,UAAU,6BAAf,UACE,cAACL,EAAA,EAAD,CAAkBC,MAAM,yLAAmCE,QAASmL,EAAKnL,QAAzE,SACE,sBAAKE,UAAU,OAAf,UACE,cAACW,EAAA,EAAD,CACEF,MAAM,mDACNI,KAAMoK,EAAKU,OACX/K,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6B4M,UAAWrF,MACzDtH,cAAemK,EAAKpK,KAAK4M,YAE3B,cAACpL,EAAA,EAAD,CACE5B,MAAM,8FACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6BgW,QAASzO,MACvDzG,MAAOsJ,EAAKpK,KAAKgW,UAEnB,cAAClT,EAAA,EAAD,CACElD,MAAM,gEACNoD,SAAU,SAACuE,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6B8U,SAAUvN,MACxDxE,aAAcqH,EAAKpK,KAAK8U,gBAK9B,qBAAK3V,UAAU,gBAAf,SACE,cAACQ,EAAA,EAAD,CAAeC,MAAM,mDAAWF,QAAS0K,EAAKsI,OAAQ7S,UAAU,UChCzD,SAAe2pB,GAA9B,uC,8CAAe,WACb5hB,EACA+V,EACA8L,GAHa,+BAAA9Z,EAAA,6DAIbC,EAJa,+BAIuB,MACpCC,EALa,yCAQQC,YAAW,CAC5BtC,IAAI,GAAD,OAAKuC,IAAL,6CAAqD4N,EAArD,YAA+D8L,GAClEzZ,QAAS,CAAEC,cAAc,UAAD,OAAYrI,IACpCgI,SACAC,aAZS,cAQL7P,EARK,yBAeJA,GAfI,uCAkBXkQ,QAAQC,IAAR,MAlBW,kBAmBJ,MAnBI,0D,sBCWR,IC2CQsG,GAjDK,SAAC7M,GACnB,IAAMQ,ECgBsB,SAAC,GAAgD,IAA9CiG,EAA6C,EAA7CA,YAAaiK,EAAgC,EAAhCA,SAAUM,EAAsB,EAAtBA,SAChDvW,EAAWC,cACTsD,EAAUpD,aAAY,SAACC,GAAD,OAAkBA,EAAM5B,KAAK0H,QAAnD3C,MAFoE,EAK5BvH,mBAAuB,IALK,mBAKrE0nB,EALqE,KAKnDC,EALmD,OAMtC3nB,mBAAuB,IANe,mBAMrEqpB,EANqE,KAMxDC,EANwD,OAO5CtpB,mBAAuB,IAPqB,mBAOrEwK,EAPqE,KAO3D2G,EAP2D,OASpDnR,mBAAsB,CAC5CupB,eAAgB,KAChBvB,oBAAqB,KACrBzb,UAAW,KACXkI,SAAU,KACVC,WAAY,OAd8D,mBASrE/U,EATqE,KAS/DyS,EAT+D,KAiB5EjS,qBAAU,WACRwnB,GAA+B,OAAX3X,QAAW,IAAXA,OAAA,EAAAA,EAAa0Y,oBAAqB,IACtDY,GAA0B,OAAXtZ,QAAW,IAAXA,OAAA,EAAAA,EAAawZ,eAAgB,IAC5CrY,GAAuB,OAAXnB,QAAW,IAAXA,OAAA,EAAAA,EAAavF,SAAU,IACnC2H,EAAQ,CACNmX,gBAA2B,OAAXvZ,QAAW,IAAXA,OAAA,EAAAA,EAAauZ,iBAAkB,KAC/CvB,qBAAgC,OAAXhY,QAAW,IAAXA,OAAA,EAAAA,EAAagY,sBAAuB,KACzDzb,WAAsB,OAAXyD,QAAW,IAAXA,OAAA,EAAAA,EAAazD,YAAa,KACrCmI,YAAuB,OAAX1E,QAAW,IAAXA,OAAA,EAAAA,EAAa0E,aAAc,KACvCD,UAAqB,OAAXzE,QAAW,IAAXA,OAAA,EAAAA,EAAayE,UAAW,IAAItR,KAAK7B,YAAkB,OAAC0O,QAAD,IAACA,OAAD,EAACA,EAAayE,WAAa,SAEzF,CAACzE,IAEJ,IAAMpR,EAAUqI,uBAAY,WAC1BmL,EAAQ,CACNmX,eAAgB,KAChBvB,oBAAqB,KACrBzb,UAAW,KACXkI,SAAU,KACVC,WAAY,SAEb,IAEGrC,EAASpL,sBAAW,sBAAC,kCAAAqI,EAAA,0DACrB/H,EADqB,uBAEjBiI,EAFiB,2BAGlB7P,GAHkB,IAIrB8U,SAAUhT,YAAW9B,EAAK8U,YAJL,SAOY0U,GAAe5hB,EAAO0S,EAAUM,EAAU,MAAO/K,GAP7D,gBAOf9K,EAPe,EAOfA,QAASC,EAPM,EAONA,QACjBX,EACEO,YAAa,CACXC,MAAM,EACNE,UACAC,aAZmB,2CAgBxB,CAAChF,EAAM4H,IAEV,MAAO,CACL5H,OACA+nB,mBACA2B,cACA7e,WACA4H,UACAxT,UACAyT,UDjFWiE,CAAe/M,GAE5B,OACE,sBAAKzK,UAAU,cAAf,UACE,cAACL,EAAA,EAAD,CAAkBC,MAAM,uJAA+BE,QAASmL,EAAKnL,QAArE,SACE,sBAAKE,UAAU,OAAf,UACE,cAACW,EAAA,EAAD,CACEF,MAAM,mDACNI,KAAMoK,EAAKS,SACX9K,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6B4M,UAAWrF,MACzDtH,cAAemK,EAAKpK,KAAK4M,YAG3B,cAAC9J,EAAA,EAAD,CACElD,MAAM,8FACNoD,SAAU,SAACuE,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6B8U,SAAUvN,MACxDxE,aAAcqH,EAAKpK,KAAK8U,WAG1B,cAACtT,EAAA,EAAD,CACE5B,MAAM,8FACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6B+U,WAAYxN,MAC1DzG,MAAOsJ,EAAKpK,KAAK+U,aAGnB,cAACjV,EAAA,EAAD,CACEF,MAAM,sEACNI,KAAMoK,EAAK2d,iBACXhoB,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6BqoB,oBAAqB9gB,MACnEtH,cAAemK,EAAKpK,KAAKqoB,sBAG3B,cAACvoB,EAAA,EAAD,CACEF,MAAM,qLACNI,KAAMoK,EAAKsf,YACX3pB,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6B4pB,eAAgBriB,MAC9DtH,cAAemK,EAAKpK,KAAK4pB,sBAK/B,qBAAKzqB,UAAU,gBAAf,SACE,cAACQ,EAAA,EAAD,CAAeC,MAAM,mDAAWF,QAAS0K,EAAKsI,OAAQ7S,UAAU,UEJzDiqB,GAnCO,WACpB,IAAM1f,EHCwB,WAAO,IAC7BxC,EAAUpD,aAAY,SAACC,GAAD,OAAkBA,EAAM5B,KAAK0H,QAAnD3C,MAD4B,EAEL2G,cAAvB+L,EAF4B,EAE5BA,SAAUM,EAFkB,EAElBA,SAFkB,EAIJva,qBAJI,mBAI7B0pB,EAJ6B,KAInBC,EAJmB,OAMN3pB,qBANM,mBAM7B4pB,EAN6B,KAMpBC,EANoB,OAOJ7pB,qBAPI,mBAO7B8pB,EAP6B,KAOnBC,EAPmB,OAQE/pB,qBARF,mBAQ7BgqB,EAR6B,KAQhBC,EARgB,OASJjqB,qBATI,mBAS7BkqB,EAT6B,KASnBC,EATmB,OAUNnqB,qBAVM,mBAU7BuiB,EAV6B,KAUpB6H,EAVoB,OAWJpqB,qBAXI,mBAW7BqqB,EAX6B,KAWnBC,EAXmB,OAYQtqB,qBAZR,mBAY7BkL,EAZ6B,KAYbC,EAZa,OAaEnL,qBAbF,mBAa7BwX,EAb6B,KAahBC,EAbgB,KAe9BK,EAAczT,mBAAQ,kBAAM2R,GAASuE,KAAW,CAACA,IA+EvD,OA7EApa,qBAAU,WACJoH,GAASuQ,IAEX,sBAAC,4BAAAxI,EAAA,sEACmBoW,GAAcne,EAAO,GAAIgT,GAD5C,QAGC,QAFMxC,EADP,cAGC,IAAIA,OAAJ,EAAIA,EAAKrT,WACPmlB,EAAW9R,EAAIpY,MACfgqB,EAAY5R,EAAIpY,KAAKT,OALxB,0CAAD,GAUA,sBAAC,gCAAAoQ,EAAA,sEACiCiW,GAAkBhe,EAAOgT,GAD1D,gBACS7V,EADT,EACSA,QAAS/E,EADlB,EACkBA,KAEb+E,GACFqlB,EAAYpqB,GAJf,0CAAD,GASA,sBAAC,gCAAA2P,EAAA,sEACiC4V,GAAqB3d,EAAOgT,GAD7D,gBACS7V,EADT,EACSA,QAAS/E,EADlB,EACkBA,KAEb+E,GACFulB,EAAetqB,GAJlB,0CAAD,GASA,sBAAC,gCAAA2P,EAAA,sEACiCmX,GAAkBlf,EAAOgT,GAD1D,gBACS7V,EADT,EACSA,QAAS/E,EADlB,EACkBA,KAEb+E,GACFylB,EAAYxqB,GAJf,0CAAD,GASA,sBAAC,gCAAA2P,EAAA,sEACiC8T,GAAiB7b,EAAOgT,GADzD,gBACS7V,EADT,EACSA,QAAS/E,EADlB,EACkBA,KAEb+E,GACF0lB,EAAWzqB,GAJd,0CAAD,GASA,sBAAC,gCAAA2P,EAAA,sEACiCgY,GAAkB/f,EAAO0S,EAAUM,GADpE,gBACS7V,EADT,EACSA,QAAS/E,EADlB,EACkBA,KAEb+E,GACF4lB,EAAY3qB,GAJf,0CAAD,GASA,sBAAC,gCAAA2P,EAAA,sEACiCuZ,GAAwBthB,EAAO0S,EAAUM,GAD1E,gBACS7V,EADT,EACSA,QAAS/E,EADlB,EACkBA,KAEb+E,GACFyG,EAAkBxL,GAJrB,0CAAD,GASA,sBAAC,gCAAA2P,EAAA,sEACiC6Z,GAAe5hB,EAAO0S,EAAUM,GADjE,gBACS7V,EADT,EACSA,QAAS/E,EADlB,EACkBA,KAEb+E,GACF+S,EAAe9X,GAJlB,0CAAD,MAQD,CAAC4H,EAAO0S,EAAUM,EAAUzC,IAExB,CACL4R,WACAzP,WACAM,WACAqP,UACAE,WACAE,cACAE,WACA3H,UACA8H,WACAnf,iBACAsM,eG1GW+S,GAEb,OACE,uBAAMzrB,UAAU,UAAhB,UACE,cAAC,GAAD,CAAKkR,YAAajG,EAAK6f,QAAS3oB,GAAI8I,EAAKwQ,WACzC,cAAC,GAAD,CAAUvK,YAAajG,EAAK+f,SAAU7oB,GAAI8I,EAAKwQ,WAC/C,cAAC,GAAD,CAAavK,YAAajG,EAAKigB,YAAa/oB,GAAI8I,EAAKwQ,WACrD,cAAC,GAAD,CAAUvK,YAAajG,EAAKmgB,SAAUjpB,GAAI8I,EAAKwQ,WAC/C,cAAC,GAAD,CAASvK,YAAajG,EAAKwY,QAASthB,GAAI8I,EAAKwQ,WAE1B,WAAlBxQ,EAAK2f,UACJ,qCACE,cAAC,GAAD,CACE1Z,YAAajG,EAAKsgB,SAClBpQ,SAAUlQ,EAAKkQ,SACfM,SAAUxQ,EAAKwQ,WAEjB,cAAC,GAAD,CACEvK,YAAajG,EAAKmB,eAClB+O,SAAUlQ,EAAKkQ,SACfM,SAAUxQ,EAAKwQ,cAKrB,cAAC,GAAD,CACEvK,YAAajG,EAAKyN,YAClByC,SAAUlQ,EAAKkQ,SACfM,SAAUxQ,EAAKwQ,eC3BRtC,GATY,kBACzB,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,+BAAZ,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,QCWWsS,GAdC,WAAO,IACLtrB,EAAWiF,aAAY,SAACC,GAAD,OAAkBA,EAAM5B,QAAvD0H,KAAQhL,KAEhB,OAAIA,IAASkP,IAAUC,UACd,cAAC,GAAD,IAGLnP,IAASkP,IAAUwM,QACd,cAAC,GAAD,IAGF,MCHM6P,I,cAPO,SAAC,GAAD,IAAG/rB,EAAH,EAAGA,MAAO+gB,EAAV,EAAUA,KAAV,OACpB,sBAAK3gB,UAAU,kBAAf,UACE,sBAAMA,UAAU,QAAhB,SAAyBJ,IACzB,sBAAMI,UAAU,OAAhB,SAAwB2gB,SCRb,SAAeiL,GAA9B,qC,8CAAe,WAA6BnjB,EAAetG,GAA5C,eAAAqO,EAAA,+EAEQG,YAAW,CAC5BtC,IAAI,GAAD,OAAKuC,IAAL,0CAAkDzO,GACrD0O,QAAS,CAAEC,cAAc,UAAD,OAAYrI,MAJ3B,cAEL5H,EAFK,yBAOJA,GAPI,uCAUXkQ,QAAQC,IAAR,MAVW,kBAWJ,MAXI,0D,sBCAA,SAAe6a,GAA9B,qC,8CAAe,WACbpjB,EACAtG,GAFa,+BAAAqO,EAAA,6DAGbC,EAHa,+BAGY,MACzBC,EAJa,yCAOQC,YAAW,CAC5BtC,IAAI,GAAD,OAAKuC,IAAL,mDAA2DzO,GAC9D0O,QAAS,CAAEC,cAAc,UAAD,OAAYrI,IACpCgI,SACAC,aAXS,cAOL7P,EAPK,yBAcJA,GAdI,uCAiBXkQ,QAAQC,IAAR,MAjBW,kBAkBJ,MAlBI,0D,sBCqBR,ICyDQxG,GAvEG,WAChB,IAAMS,EDaoB,WAC1B,IAAM/F,EAAWC,cACThD,EAAOiN,cAAPjN,GACAsG,EAAUpD,aAAY,SAACC,GAAD,OAAkBA,EAAM5B,KAAK0H,QAAnD3C,MAHwB,EAKIvH,mBAA8B,IALlC,mBAKzB8K,EALyB,KAKb8f,EALa,OAMA5qB,oBAAkB,GANlB,mBAMzB0N,EANyB,KAMdmd,EANc,OAQkB7qB,mBAAuB,IARzC,mBAQzB8qB,EARyB,KAQNC,EARM,OAS4B/qB,qBAT5B,mBASzBgM,EATyB,KASDC,EATC,OAWYjM,mBAA+B,IAX3C,mBAWzBkL,EAXyB,KAWTC,EAXS,OAYkBnL,mBAA+B,IAZjD,mBAYzBgrB,EAZyB,KAYNC,EAZM,KAc1B5Y,EAASpL,sBAAW,sBAAC,8BAAAqI,EAAA,0DACrB/H,EADqB,uBAEjB5H,EAAO,CAAEiN,sBAAuBZ,GAFf,SAGL2e,GAAkBpjB,EAAOtG,EAAI,OAAQtB,GAHhC,OAGjBoY,EAHiB,OAKvB/T,EACEO,YAAa,CACXC,MAAM,EACNE,QAAO,OAAEqT,QAAF,IAAEA,OAAF,EAAEA,EAAKrT,QACdC,QAAO,OAAEoT,QAAF,IAAEA,OAAF,EAAEA,EAAKpT,WATK,2CAaxB,CAAC4C,EAAOtG,EAAI+K,IAoCf,OAlCA7L,qBAAU,WACJoH,GAEF,sBAAC,4BAAA+H,EAAA,6DACCub,GAAW,GADZ,SAGmBH,GAAcnjB,EAAOtG,GAHxC,QAKC,QAFM8W,EAHP,cAKC,IAAIA,OAAJ,EAAIA,EAAKrT,WACPkmB,EAAc7S,EAAIpY,KAAKurB,eAAiB,IACxCH,EAAqBhT,EAAIpY,KAAKwrB,oBAAsB,IACpDlf,EAA0B8L,EAAIpY,KAAKyrB,mBACnCjgB,EAAkB4M,EAAIpY,KAAK0rB,qBAAuB,IAClDJ,EAAqBlT,EAAIpY,KAAK2rB,oBAAsB,KAGtDT,GAAW,GAbZ,0CAAD,KAgBD,CAACtjB,EAAOtG,IAEXd,qBAAU,WACJoH,GAASyE,GACX,sBAAC,4BAAAsD,EAAA,sEACmBqb,GAAkBpjB,EAAOyE,GAD5C,QAGC,QAFM+L,EADP,cAGC,IAAIA,OAAJ,EAAIA,EAAKrT,WACPyG,EAAkB4M,EAAIpY,KAAK0rB,qBAC3BJ,EAAqBlT,EAAIpY,KAAK2rB,qBALjC,0CAAD,KASD,CAACtf,EAAwBzE,IAErB,CACLtG,KACA6J,aACA4C,YACAod,oBACA5f,iBACAc,yBACAgf,oBACA/e,4BACAoG,UCrFW3I,GAEb,OAAIK,EAAK2D,UAEL,cAACM,EAAA,EAAD,IAKF,sBAAKlP,UAAU,SAAf,UACE,qBAAKA,UAAU,iCAAf,8DAEA,qBAAKA,UAAU,YAAf,SACGiL,EAAKe,WAAW9J,KAAI,gBAAG/B,EAAH,EAAGA,MAAOgC,EAAV,EAAUA,GAAIvC,EAAd,EAAcA,MAAO+gB,EAArB,EAAqBA,KAArB,OACnB,cAACra,EAAA,EAAD,CAEE1G,MAAOA,EACPG,YAAaI,EACboG,KAAI,kBAAa0E,EAAK9I,GAAlB,YAAwBA,GAJ9B,SAMGwe,EAAKze,KAAI,SAAC2H,GAAD,OACR,+BAAOA,QANJ1H,QAYX,eAACxC,EAAA,EAAD,CAAkBC,MAAM,yDAAxB,UACE,qBAAKI,UAAU,iBAAf,SACE,cAACW,EAAA,EAAD,CACEF,MAAM,yDACNI,KAAMoK,EAAK+gB,kBACXprB,SAAU,SAACwH,GAAD,OAAO6C,EAAKkC,0BAA0B/E,IAChDtH,cAAemK,EAAKiC,uBACpBlN,UAAU,4BAId,qBAAKA,UAAU,uBAAf,2MAIA,qBAAKA,UAAU,uBAAf,SACGiL,EAAKmB,eAAelK,KAAI,gBAAGtC,EAAH,EAAGA,MAAO+B,EAAV,EAAUA,MAAV,OACvB,cAAC,GAAD,CAA2B/B,MAAOA,EAAO+gB,KAAMhf,GAA3B/B,QAIxB,qBAAKI,UAAU,uBAAf,gOAIA,qBAAKA,UAAU,uBAAf,SACGiL,EAAKihB,kBAAkBhqB,KAAI,gBAAGtC,EAAH,EAAGA,MAAO+B,EAAV,EAAUA,MAAV,OAC1B,cAAC,GAAD,CAA2B/B,MAAOA,EAAO+gB,KAAMhf,GAA3B/B,WAK1B,cAACY,EAAA,EAAD,CACEC,MAAM,mDACNF,QAAS0K,EAAKsI,OACd7S,UAAU,EACVV,UAAU,2BCvEH,SAAeysB,GAA9B,uC,8CAAe,WACbhkB,EACAikB,EACAlO,GAHa,+BAAAhO,EAAA,6DAIbC,EAJa,+BAIY,MACzBC,EALa,yCAQQC,YAAW,CAC5BtC,IAAI,GAAD,OAAKuC,IAAL,yCAAiD8b,EAAjD,YAAgElO,GACnE3N,QAAS,CAAEC,cAAc,UAAD,OAAYrI,IACpCgI,SACAC,aAZS,cAQL7P,EARK,yBAeJA,GAfI,uCAkBXkQ,QAAQC,IAAR,MAlBW,kBAmBJ,MAnBI,0D,sBCaR,ICoBQgH,GA7BA,WAAO,IAAD,MACb/M,EDQiB,WAAO,IACtBxC,EAAUpD,aAAY,SAACC,GAAD,OAAkBA,EAAM5B,KAAK0H,QAAnD3C,MADqB,EAEK2G,cAA1Bsd,EAFqB,EAErBA,YAAavR,EAFQ,EAERA,SAFQ,EAIKja,qBAJL,mBAItB+K,EAJsB,KAIX0gB,EAJW,OAKDzrB,mBAAS,IALR,mBAKtBqe,EALsB,KAKdC,EALc,KAqB7B,OAdAne,qBAAU,WACR,IAAMurB,EAAgB1V,GAASwV,GAC3BjkB,GAASmkB,GACX,sBAAC,4BAAApc,EAAA,sEACmBic,GAAahkB,EAAOikB,EAAavR,GADpD,QACOlC,EADP,QAGSrT,UACN+mB,EAAa1T,EAAIpY,KAAKgsB,aACtBrN,EAAUvG,EAAIpY,KAAKisB,kBALtB,0CAAD,KASD,CAACrkB,IAEG,CACLwD,YACAsT,UC/BWrG,GAEb,OACE,uBAAMlZ,UAAU,SAAhB,UACE,cAACL,EAAA,EAAD,CAAkBC,MAAM,yDAAxB,SACE,sBAAKI,UAAU,eAAf,UACE,qBAAKA,UAAU,qBAAqBC,MAAO,CAAEC,gBAAe,UAAE+K,EAAKgB,iBAAP,aAAE,EAAgB9L,OAA9E,mBACG8K,EAAKgB,iBADR,aACG,EAAgBrM,QAEnB,qBAAKI,UAAU,OAAf,mBACGiL,EAAKgB,iBADR,aACG,EAAgB0U,KAAKze,KAAI,gBAAGtC,EAAH,EAAGA,MAAO+B,EAAV,EAAUA,MAAV,OACxB,cAAC,GAAD,CAAe/B,MAAOA,EAAO+gB,KAAMhf,cAM3C,cAAChC,EAAA,EAAD,CAAkBC,MAAM,mDAAxB,SACE,qBAAKI,UAAU,OAAf,SACGiL,EAAKsU,OAAOrd,KAAI,gBAAGtC,EAAH,EAAGA,MAAO+B,EAAV,EAAUA,MAAV,OACf,cAAC,GAAD,CAAe/B,MAAOA,EAAO+gB,KAAMhf,eCNhCorB,GAfA,WAGb,OACE,sBAAM/sB,UAAU,wBAAhB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoZ,KAAK,iCAAZ,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,UCbO,SAAe4T,GAA9B,qC,8CAAe,WAA+BvkB,EAAetG,GAA9C,eAAAqO,EAAA,+EAEQG,YAAW,CAC5BtC,IAAI,GAAD,OAAKuC,IAAL,0CAAkDzO,GACrD0O,QAAS,CAAEC,cAAc,UAAD,OAAYrI,MAJ3B,cAEL5H,EAFK,yBAOJA,GAPI,uCAUXkQ,QAAQC,IAAR,MAVW,kBAWJ,MAXI,0D,sBCSR,IC4BQxG,GAlCG,WAChB,IAAMS,EDKoB,WAAO,IACzB9I,EAAOiN,cAAPjN,GACAsG,EAAUpD,aAAY,SAACC,GAAD,OAAkBA,EAAM5B,KAAK0H,QAAnD3C,MAFwB,EAIAvH,mBAAuB,IAJvB,mBAIzBwK,EAJyB,KAIf2G,EAJe,OAKEnR,qBALF,mBAKzB0N,EALyB,KAKdqe,EALc,KAsBhC,OAfA5rB,qBAAU,WACJoH,GAEF,sBAAC,4BAAA+H,EAAA,6DACCyc,GAAa,GADd,SAEmBD,GAAgBvkB,EAAOtG,GAF1C,QAEO8W,EAFP,QAISrT,SACNyM,EAAY4G,EAAIpY,KAAK8K,QAEvBshB,GAAa,GAPd,0CAAD,KAUD,CAACxkB,EAAOtG,IAEJ,CACLA,KACAyM,YACAlD,YC9BWd,GAEb,OAAIK,EAAK2D,UAEL,cAACM,EAAA,EAAD,IAKF,sBAAKlP,UAAU,yCAAf,UACE,qBAAKA,UAAU,iCAAf,qHAEA,sBAAKA,UAAU,oBAAf,UACGiL,EAAKS,SAASxJ,KAAI,SAACyJ,GAAD,OACjB,cAACrF,EAAA,EAAD,CAEE1G,MAAO+L,EAAO/L,MACd2G,KAAI,yBAAoB0E,EAAK9I,GAAzB,YAA+BwJ,EAAOxJ,IAH5C,SAKGwJ,EAAO2E,KAAKpO,KAAI,SAAC2H,GAAD,OACf,+BAAOA,QALJ8B,EAAOxJ,OAUhB,cAAC,KAAD,CAAMsE,GAAE,yBAAoBwE,EAAK9I,GAAzB,WAAsCnC,UAAU,gBAAxD,SACE,qBAAKK,IAAI,sBAAsBC,IAAI,oBC9B9B,SAAe4sB,GAA9B,uC,8CAAe,WACbzkB,EACAtG,EACAgZ,GAHa,iCAAA3K,EAAA,6DAIbC,EAJa,+BAIW,MACxBC,EALa,uBAOPrC,EAAiB,QAAXoC,EAAA,uCAAmD0K,GAAnD,OAA8DhZ,GAAE,WAAQA,IAAxE,uCAAiHA,GAPhH,kBASQwO,YAAW,CAC5BtC,IAAI,GAAD,OAAKuC,KAAL,OAAmBvC,GACtBwC,QAAS,CAAEC,cAAc,UAAD,OAAYrI,IACpCgI,SACAC,aAbS,cASL7P,EATK,yBAgBJA,GAhBI,yCAmBXkQ,QAAQC,IAAR,MAnBW,kBAoBJ,MApBI,2D,sBCqBR,IC4EQgH,GA9FA,WACb,IAAM/M,EDiBiB,WACvB,IAAM/F,EAAWC,cACXuC,EAAUC,cACRc,EAAUpD,aAAY,SAACC,GAAD,OAAkBA,EAAM5B,KAAK0H,QAAnD3C,MAHqB,EAIE2G,cAAvB+d,EAJqB,EAIrBA,SAAUhS,EAJW,EAIXA,SAJW,EAMSja,mBAAqC,CACzE4lB,UAAW,GACXC,OAAQ,GACRqG,WAAY,GACZpG,aAAc,GACdqG,iBAAkB,GAClBC,WAAY,KAZe,mBAMtBC,EANsB,KAMRC,EANQ,OAcGtsB,mBAAiC,CAC/DmmB,OAAQ,GACRD,UAAW,GACXE,aAAc,GACdmG,WAAY,KAlBe,mBActBC,EAdsB,KAcZC,EAdY,KAqBvBC,EAAiBroB,mBAAQ,iBAAmB,WAAb4nB,GAAyBjW,GAASiW,KAAW,CAACA,IAEnF9rB,qBAAU,WAER,sBAAC,4BAAAmP,EAAA,0DACK/H,IAASmlB,EADd,gCAEqBV,GAAczkB,EAAO0kB,EAAU,IAFpD,QAESlU,EAFT,QAIWrT,UACN4nB,EAAc,CACZ1G,UAAW7N,EAAIpY,KAAKimB,WAAa,GACjCC,OAAQ9N,EAAIpY,KAAKkmB,QAAU,GAC3BqG,WAAYnU,EAAIpY,KAAKusB,YAAc,GACnCpG,aAAc/N,EAAIpY,KAAKmmB,cAAgB,GACvCqG,iBAAkBpU,EAAIpY,KAAKwsB,kBAAoB,GAC/CC,WAAYrU,EAAIpY,KAAKysB,YAAc,KAGrCK,EAAY,CACVtG,OAAQpO,EAAIpY,KAAKwmB,QAAU,GAC3BD,UAAWnO,EAAIpY,KAAKumB,WAAa,GACjCE,aAAcrO,EAAIpY,KAAKymB,cAAgB,GACvCmG,WAAYxU,EAAIpY,KAAK4sB,YAAc,MAlB1C,0CAAD,KAuBC,CAAChlB,EAAO0kB,IAEX,IAAMU,EAAsB1lB,uBAAY,WACtCqlB,EAAc,CACZ1G,UAAW,GACXC,OAAQ,GACRqG,WAAY,GACZpG,aAAc,GACdqG,iBAAkB,GAClBC,WAAY,OAEb,IAEGQ,EAAkB3lB,uBAAY,WAClCwlB,EAAY,CACVtG,OAAQ,GACRD,UAAW,GACXE,aAAc,GACdmG,WAAY,OAEb,IAEGla,EAASpL,sBAAW,sBAAC,gCAAAqI,EAAA,yDACnB3P,EADmB,2BACP0sB,GAAiBG,GAC7BvrB,EAAKyrB,EAAiBT,EAAW,IAEnC1kB,EAJqB,gCAKLykB,GAAczkB,EAAOtG,EAAIgZ,EAAU,MAAOta,GALrC,OAKjBoY,EALiB,OAOvB/T,EACEO,YAAa,CACXC,MAAM,EACNE,QAAO,OAAEqT,QAAF,IAAEA,OAAF,EAAEA,EAAKrT,QACdC,QAAO,OAAEoT,QAAF,IAAEA,OAAF,EAAEA,EAAKpT,YAIX,OAAHoT,QAAG,IAAHA,OAAA,EAAAA,EAAKrT,UAAwB,WAAbunB,GAAyBjW,GAAQ,OAAC+B,QAAD,IAACA,OAAD,EAACA,EAAKpY,KAAK4M,YAC9D/F,EAAQgB,KAAR,yBAA+ByS,EAA/B,mBAA2ClC,QAA3C,IAA2CA,OAA3C,EAA2CA,EAAKpY,KAAK4M,YAhBhC,2CAmBxB,CAAC8f,EAAcG,EAAUjlB,IAEtBslB,EAAmBxoB,mBAAQ,kBAE/B4W,OAAOoF,OAAOgM,GAAcS,MAAK,SAACnkB,GAAD,OAAWA,MACzCsS,OAAOoF,OAAOmM,GAAUM,MAAK,SAACnkB,GAAD,OAAWA,OAAO,CAAC0jB,EAAcG,IAEnE,MAAO,CACLH,eACAG,WACAK,mBACAP,gBACAG,cACAE,sBACAC,kBACAva,UCzHW2F,GAEb,OACE,uBAAMlZ,UAAU,gBAAhB,UACE,eAACL,EAAA,EAAD,CAAkBC,MAAM,8KAAkCE,QAASmL,EAAK4iB,oBAAxE,UACE,sBAAK7tB,UAAU,YAAf,UACE,cAACqC,EAAA,EAAD,CACErB,UAAQ,EACRP,MAAM,mDACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKuiB,cAAL,2BAAwBviB,EAAKsiB,cAA7B,IAA2CzG,UAAW1e,MACvEzG,MAAOsJ,EAAKsiB,aAAazG,YAG3B,cAACzkB,EAAA,EAAD,CACErB,UAAQ,EACRP,MAAM,sBACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKuiB,cAAL,2BAAwBviB,EAAKsiB,cAA7B,IAA2CxG,OAAQ3e,MACpEzG,MAAOsJ,EAAKsiB,aAAaxG,SAG3B,cAAC1kB,EAAA,EAAD,CACErB,UAAQ,EACRP,MAAM,gEACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKuiB,cAAL,2BAAwBviB,EAAKsiB,cAA7B,IAA2CvG,aAAc5e,MAC1EzG,MAAOsJ,EAAKsiB,aAAavG,kBAI7B,sBAAKhnB,UAAU,YAAf,UACE,wBAEA,cAACqC,EAAA,EAAD,CACErB,UAAQ,EACRP,MAAM,+HACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKuiB,cAAL,2BAAwBviB,EAAKsiB,cAA7B,IAA2CH,WAAYhlB,MACxEzG,MAAOsJ,EAAKsiB,aAAaH,aAG3B,cAAC/qB,EAAA,EAAD,CACErB,UAAQ,EACRP,MAAM,yKACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKuiB,cAAL,2BAAwBviB,EAAKsiB,cAA7B,IAA2CF,iBAAkBjlB,MAC9EzG,MAAOsJ,EAAKsiB,aAAaF,sBAI7B,cAAChrB,EAAA,EAAD,CACErB,UAAQ,EACRP,MAAM,oQACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKuiB,cAAL,2BAAwBviB,EAAKsiB,cAA7B,IAA2CD,WAAYllB,MACxEzG,MAAOsJ,EAAKsiB,aAAaD,gBAI7B,eAAC3tB,EAAA,EAAD,CAAkBC,MAAM,8FAAmBE,QAASmL,EAAK6iB,gBAAzD,UACE,sBAAK9tB,UAAU,YAAf,UACE,cAACqC,EAAA,EAAD,CACErB,UAAQ,EACRP,MAAM,mDACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAK0iB,YAAL,2BAAsB1iB,EAAKyiB,UAA3B,IAAqCtG,UAAWhf,MACjEzG,MAAOsJ,EAAKyiB,SAAStG,YAGvB,cAAC/kB,EAAA,EAAD,CACErB,UAAQ,EACRP,MAAM,sBACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAK0iB,YAAL,2BAAsB1iB,EAAKyiB,UAA3B,IAAqCrG,OAAQjf,MAC9DzG,MAAOsJ,EAAKyiB,SAASrG,SAGvB,cAAChlB,EAAA,EAAD,CACErB,UAAQ,EACRP,MAAM,gEACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAK0iB,YAAL,2BAAsB1iB,EAAKyiB,UAA3B,IAAqCpG,aAAclf,MACpEzG,MAAOsJ,EAAKyiB,SAASpG,kBAIzB,cAACjlB,EAAA,EAAD,CACErB,UAAQ,EACRP,MAAM,8PACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAK0iB,YAAL,2BAAsB1iB,EAAKyiB,UAA3B,IAAqCD,WAAYrlB,MAClEzG,MAAOsJ,EAAKyiB,SAASD,gBAIzB,qBAAKztB,UAAU,gBAAf,SACE,cAACQ,EAAA,EAAD,CAAeC,MAAM,mDAAWF,QAAS0K,EAAKsI,OAAQ7S,SAAUuK,EAAK8iB,yBCrE9DE,GAjBI,WAGjB,OAF2B5oB,aAAY,SAACC,GAAD,OAAkBA,EAAM5B,QAAvD0H,KAAQhL,OAEHkP,IAAUC,UAEnB,eAAC,IAAD,WACE,cAAC,IAAD,CAAO6J,KAAK,qCAAZ,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,OAKC,MCIM8U,I,qBAdS,SAAC,GAAD,IACtBztB,EADsB,EACtBA,MAAOF,EADe,EACfA,QAASG,EADM,EACNA,SAAUV,EADJ,EACIA,UADJ,OAGtB,wBACEA,UAAS,2BAAsBU,EAAW,WAAa,GAA9C,YACPV,GAAa,IAEfO,QAASA,EACTG,SAAUA,EALZ,SAOGD,MCnBU,SAAe0tB,GAA9B,qC,8CAAe,WACb1lB,EACAtG,GAFa,mCAAAqO,EAAA,6DAGbC,EAHa,+BAGuB,MACpCrQ,EAJa,uBAKbsQ,EALa,gCAQLrC,EAAe,WAATjO,EAAoB,gBAApB,4CAA2E+B,GAR5E,SASQwO,YAAW,CAC5BtC,IAAI,GAAD,OAAKuC,KAAL,OAAmBvC,GACtBwC,QAAS,CAAEC,cAAc,UAAD,OAAYrI,IACpCgI,SACAC,aAbS,cASL7P,EATK,yBAgBJA,GAhBI,yCAmBXkQ,QAAQC,IAAR,MAnBW,kBAoBJ,MApBI,2D,sBCcR,ICoCQod,GA7CM,SAAC3jB,GAAkB,IAAD,EDSR,SAAC,GAAgC,IAA9ByG,EAA6B,EAA7BA,YAAa/O,EAAgB,EAAhBA,GACvC+C,EAAWC,cACTsD,EAAUpD,aAAY,SAACC,GAAD,OAAkBA,EAAM5B,KAAK0H,QAAnD3C,MAFqD,EAKvBvH,mBAAS,IALc,mBAKtDmtB,EALsD,KAKzCC,EALyC,OAMrBptB,mBAAS,IANY,mBAMtDqtB,EANsD,KAMxCC,EANwC,OAOrBttB,mBAAS,IAPY,mBAOtDutB,EAPsD,KAOxCC,EAPwC,KASvD5uB,EAAUqI,uBAAY,WAC1BmmB,EAAe,IACfE,EAAgB,IAChBE,EAAgB,MACf,IAEGC,EAAgBxmB,sBAAW,sBAAC,4BAAAqI,EAAA,0DAC5B/H,EAD4B,gCAEZ0lB,GAAqB1lB,EAAO,GAAI,MAAO,UAF3B,QAExBwQ,EAFwB,QAGtBrT,UACN0oB,EAAerV,EAAIpY,KAAK+tB,cACxBJ,EAAgBvV,EAAIpY,KAAKguB,eACzBH,EAAgBzV,EAAIpY,KAAKiuB,gBANG,2CAS/B,CAACrmB,IAEE8K,EAASpL,sBAAW,sBAAC,kCAAAqI,EAAA,0DACrB/H,EADqB,uBAEjB5H,EAAO,CACX+tB,aAAcP,EACdQ,cAAeN,EACfO,cAAeL,GALM,SAOYN,GAAqB1lB,EAAOtG,EAAI,MAAO,KAAMtB,GAPzD,gBAOf+E,EAPe,EAOfA,QAASC,EAPM,EAONA,QAEjBX,EACEO,YAAa,CACXC,MAAM,EACNE,UACAC,aAbmB,2CAiBxB,CAACwoB,EAAaE,EAAcE,EAAchmB,IAEvC4M,EAAsB9P,mBAC1B,kBAAO8oB,IAAgBE,IAAiBE,IAAc,CAACJ,EAAaE,EAAcE,IASpF,OANAptB,qBAAU,WACRitB,GAA0B,OAAXpd,QAAW,IAAXA,OAAA,EAAAA,EAAa0d,eAAgB,IAC5CJ,GAA2B,OAAXtd,QAAW,IAAXA,OAAA,EAAAA,EAAa2d,gBAAiB,IAC9CH,GAA2B,OAAXxd,QAAW,IAAXA,OAAA,EAAAA,EAAa4d,gBAAiB,MAC7C,CAAC5d,IAEG,CACLmd,cACAE,eACAE,eACApZ,sBACAiZ,iBACAE,kBACAE,kBACA5uB,UACAyT,SACAob,iBC9DEI,CAAgBtkB,GAVlBgkB,EAFmC,EAEnCA,aACAJ,EAHmC,EAGnCA,YACAE,EAJmC,EAInCA,aACAD,EALmC,EAKnCA,eACAE,EANmC,EAMnCA,gBACAE,EAPmC,EAOnCA,gBACA5uB,EARmC,EAQnCA,QACAyT,EATmC,EASnCA,OACAob,EAVmC,EAUnCA,cACAtZ,EAXmC,EAWnCA,oBAGF,OACE,qCACE,eAAC1V,EAAA,EAAD,CAAkBC,MAAM,6HAAyBE,QAASA,EAA1D,UACE,qBAAKE,UAAU,mBAAf,SACE,kLAGF,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,cAACqC,EAAA,EAAD,CAAarB,UAAQ,EAACP,MAAM,iHAAuBG,SAAU8tB,EAAiB/sB,MAAO8sB,MAEvF,qBAAKzuB,UAAU,kBAAf,SACE,cAACqC,EAAA,EAAD,CAAarB,UAAQ,EAACP,MAAM,kJAA+BG,SAAU0tB,EAAgB3sB,MAAO0sB,MAE9F,qBAAKruB,UAAU,kBAAf,SACE,cAACqC,EAAA,EAAD,CAAarB,UAAQ,EAACP,MAAM,4IAA8BG,SAAU4tB,EAAiB7sB,MAAO4sB,SAIhG,qBAAKvuB,UAAU,gBAAf,SACE,cAAC,GAAD,CAAiBS,MAAM,sEAAeF,QAASouB,EAAejuB,UAAU,SAI5E,qBAAKV,UAAU,gBAAf,SACE,cAACQ,EAAA,EAAD,CAAeC,MAAM,mDAAWF,QAASgT,EAAQ7S,SAAU2U,UC5CpD,SAAe2Z,GAA9B,qC,8CAAe,WAA2BvmB,EAAetG,GAA1C,eAAAqO,EAAA,+EAEQG,YAAW,CAC5BtC,IAAI,GAAD,OAAKuC,IAAL,+BAAuCzO,GAC1C0O,QAAS,CAAEC,cAAc,UAAD,OAAYrI,MAJ3B,cAEL5H,EAFK,yBAOJA,GAPI,uCAUXkQ,QAAQC,IAAR,MAVW,kBAWJ,MAXI,0D,sBCAA,SAAeie,GAA9B,qC,8CAAe,WAA8BxmB,EAAetG,GAA7C,eAAAqO,EAAA,+EAEQG,YAAW,CAC5BtC,IAAI,GAAD,OAAKuC,IAAL,mBAA2BzO,GAC9B0O,QAAS,CAAEC,cAAc,UAAD,OAAYrI,MAJ3B,cAEL5H,EAFK,yBAOJA,GAPI,uCAUXkQ,QAAQC,IAAR,MAVW,kBAWJ,MAXI,0D,sBCOR,IC0BQke,GA5BO,WACpB,IAAMjkB,EDCwB,WAC9B,IAAM/F,EAAWC,cACThD,EAAOiN,cAAPjN,GACAsG,EAAUpD,aAAY,SAACC,GAAD,OAAkBA,EAAM5B,KAAK0H,QAAnD3C,MAH4B,EAKFvH,oBAAkB,GALhB,mBAK7B0N,EAL6B,KAKlBqe,EALkB,OAMV/rB,mBAAiB,IANP,mBAM7BtB,EAN6B,KAMtBqd,EANsB,OAOI/b,mBAAS,IAPb,mBAO7B8N,EAP6B,KAOfmgB,EAPe,OAQJjuB,qBARI,mBAQ7BkuB,EAR6B,KAQnBC,EARmB,KAU9B9b,EAASpL,sBAAW,sBAAC,8BAAAqI,EAAA,0DACrB/H,EADqB,gCAELwmB,GAAexmB,EAAOtG,GAFjB,OAEjB8W,EAFiB,OAIvB/T,EACEO,YAAa,CACXC,MAAM,EACNE,QAAO,OAAEqT,QAAF,IAAEA,OAAF,EAAEA,EAAKrT,QACdC,QAAO,OAAEoT,QAAF,IAAEA,OAAF,EAAEA,EAAKpT,YAIX,OAAHoT,QAAG,IAAHA,OAAA,EAAAA,EAAKrT,WAAL,OAAgBqT,QAAhB,IAAgBA,GAAhB,UAAgBA,EAAKpY,YAArB,aAAgB,EAAW0F,QAC7B+oB,SAASC,SAASC,KAAOvW,EAAIpY,KAAK0F,MAbb,2CAgBxB,CAACkC,EAAOtG,IA2BX,OAzBAd,qBAAU,WACJoH,IACF,sBAAC,sCAAA+H,EAAA,6DACCyc,GAAa,GADd,SAEmB+B,GAAYvmB,EAAOtG,GAFtC,QAIC,QAFM8W,EAFP,cAIC,IAAIA,OAAJ,EAAIA,EAAKrT,WAAU,EACiBqT,EAAIpY,KAAK4uB,UAAnChtB,EADQ,EACRA,KAAMG,EADE,EACFA,IAAK8sB,EADH,EACGA,KAAMC,EADT,EACSA,KACzB1S,EAAS,GAAD,OAAIra,EAAJ,YAAWH,EAAX,YAAmBktB,EAAnB,YAA2BD,IACnCP,EAAgBlW,EAAIpY,KAAKmO,eAG3Bie,GAAa,GAVd,0CAAD,GAaA,sBAAC,4BAAAzc,EAAA,sEACmB2d,GAAqB1lB,EAAOtG,GAD/C,QAGC,QAFM8W,EADP,cAGC,IAAIA,OAAJ,EAAIA,EAAKrT,UACPypB,EAAYpW,EAAIpY,MAJnB,0CAAD,MAQD,CAAC4H,EAAOtG,IAEJ,CACLA,KACAvC,QACAoP,eACAJ,YACAwgB,WACA7b,UC5DWqc,GAEb,OAAI3kB,EAAK2D,UACA,cAACM,EAAA,EAAD,IAIP,uBAAMlP,UAAU,OAAhB,UACE,qBAAKA,UAAU,iCAAf,SAAiDiL,EAAKrL,QAEtD,cAAC,GAAD,CAAcsR,YAAajG,EAAKmkB,SAAUjtB,GAAI8I,EAAK9I,KAEnD,cAACxC,EAAA,EAAD,CAAkBC,MAAM,+JAAxB,SACE,qBAAKI,UAAU,OAAf,SACGiL,EAAK+D,aAAa9M,KAAI,gBAAGtC,EAAH,EAAGA,MAAO+B,EAAV,EAAUA,MAAV,OACrB,cAAC,GAAD,CAAe/B,MAAOA,EAAO+gB,KAAMhf,WAKzC,qBAAK3B,UAAU,gBAAf,SACE,cAACQ,EAAA,EAAD,CAAeC,MAAM,+DAAaF,QAAS0K,EAAKsI,OAAQ7S,UAAU,UC3B3D,SAAemvB,GAA9B,uC,8CAAe,WAAgCpnB,EAAetG,EAAYuO,GAA3D,eAAAF,EAAA,+EAEQG,YAAW,CAC5BtC,IAAI,GAAD,OAAKuC,IAAL,yCAAiDzO,GACpD0O,QAAS,CAAEC,cAAc,UAAD,OAAYrI,IACpCgI,OAAQ,MACRC,aANS,cAEL7P,EAFK,yBASJA,GATI,uCAYXkQ,QAAQC,IAAR,MAZW,kBAaJ,MAbI,0D,mCC6DA8e,GAzDM,SAACrlB,GAAkB,IAAD,MAC/BQ,ECKuB,SAAC,GAAoC,IAAlCiG,EAAiC,EAAjCA,YAAasN,EAAoB,EAApBA,OACvCtZ,EAAWC,cACTsD,EAAUpD,aAAY,SAACC,GAAD,OAAkBA,EAAM5B,KAAK0H,QAAnD3C,MAFyD,EAI3BvH,oBAAS,GAJkB,mBAI1D6uB,EAJ0D,KAI7CC,EAJ6C,OAKnB9uB,oBAAoB,OAAXgQ,QAAW,IAAXA,OAAA,EAAAA,EAAa9E,iBAAkB,IALrB,mBAK1D6jB,EAL0D,KAKzCC,EALyC,OAMnChvB,oBAAoB,OAAXgQ,QAAW,IAAXA,OAAA,EAAAA,EAAaif,UAAW,IANE,mBAM1DA,EAN0D,KAMjDC,EANiD,OAOzClvB,mBAAS,CAC/B2M,cAAyB,OAAXqD,QAAW,IAAXA,OAAA,EAAAA,EAAarD,eAAgB,KAC3CJ,WAAsB,OAAXyD,QAAW,IAAXA,OAAA,EAAAA,EAAazD,YAAa,KACrC6e,mBAA8B,OAAXpb,QAAW,IAAXA,OAAA,EAAAA,EAAaob,oBAAqB,KACrD+D,YAAuB,OAAXnf,QAAW,IAAXA,OAAA,EAAAA,EAAamf,aAAc,KACvCC,cAAyB,OAAXpf,QAAW,IAAXA,OAAA,EAAAA,EAAaof,eAAgB,KAC3CC,kBAA6B,OAAXrf,QAAW,IAAXA,OAAA,EAAAA,EAAaqf,oBAAoB,IAbY,mBAO1D1vB,EAP0D,KAOpDyS,EAPoD,KAgB3DxT,EAAUqI,uBAAY,WAC1BmL,EAAQ,CACNzF,aAAc,KACdJ,UAAW,KACX6e,kBAAmB,KACnB+D,WAAY,KACZC,aAAc,KACdC,kBAAkB,MAEnB,IAEGhd,EAASpL,sBAAW,sBAAC,4BAAAqI,EAAA,0DACrB/H,EADqB,gCAELonB,GAAiBpnB,EAAO+V,EAAQ3d,GAF3B,OAEjBoY,EAFiB,OAIvB/T,EACEO,YAAa,CACXC,MAAM,EACNE,QAAO,OAAEqT,QAAF,IAAEA,OAAF,EAAEA,EAAKrT,QACdC,QAAO,OAAEoT,QAAF,IAAEA,OAAF,EAAEA,EAAKpT,WARK,2CAYxB,CAAChF,EAAM2d,EAAQ/V,IAkBlB,OAhBApH,qBAAU,WACJ0uB,EACFC,GAAe,GAIbvnB,GAAS5H,EAAKgN,cAChB,sBAAC,4BAAA2C,EAAA,sEACmBjD,aAAiB9E,EAAOlE,OAAO1D,EAAKgN,eADvD,OACOoL,EADP,OAEC3F,EAAQ,2BAAKzS,GAAN,IAAYyrB,kBAAmB,KAAM+D,WAAY,QACxDH,EAAmBjX,EAAI7M,gBACvBgkB,EAAWnX,EAAIkX,SAJhB,0CAAD,KAOD,CAACtvB,EAAKgN,aAAcpF,IAEhB,CACL5H,OACAovB,kBACAE,UACA7c,UACAxT,UACAyT,UDpEWid,CAAgB/lB,GAE7B,OACE,qCACE,cAAC9K,EAAA,EAAD,CAAkBC,MAAM,kFAAiBE,QAASmL,EAAKnL,QAAvD,SACE,sBAAKE,UAAU,OAAf,UACE,cAACW,EAAA,EAAD,CACEF,MAAM,+DACNI,MAAM,UAAA4J,EAAMyG,mBAAN,eAAmBjF,YAAa,GACtCrL,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6BgN,aAAczF,MAC5DtH,cAAemK,EAAKpK,KAAKgN,eAG3B,cAAClN,EAAA,EAAD,CACEF,MAAM,qEACNI,KAAMoK,EAAKglB,gBACXrvB,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6ByrB,kBAAmBlkB,MACjEtH,cAAemK,EAAKpK,KAAKyrB,oBAG3B,cAAC3rB,EAAA,EAAD,CACEF,MAAM,mDACNI,KAAMoK,EAAKklB,QACXvvB,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6BwvB,WAAYjoB,MAC1DtH,cAAemK,EAAKpK,KAAKwvB,aAG3B,cAAC1vB,EAAA,EAAD,CACEF,MAAM,mDACNI,MAAM,UAAA4J,EAAMyG,mBAAN,eAAmBvF,SAAU,GACnC/K,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6B4M,UAAWrF,MACzDtH,cAAemK,EAAKpK,KAAK4M,YAG3B,cAAC9M,EAAA,EAAD,CACEF,MAAM,6CACNI,MAAM,UAAA4J,EAAMyG,mBAAN,eAAmBuf,YAAa,GACtC7vB,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6ByvB,aAAcloB,MAC5DtH,cAAemK,EAAKpK,KAAKyvB,eAG3B,cAAC5rB,EAAA,EAAD,CACEjE,MAAM,2GACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAKqI,QAAL,2BAAkBrI,EAAKpK,MAAvB,IAA6B0vB,iBAAkBnoB,MAChEjH,SAAU8J,EAAKpK,KAAK0vB,wBAK1B,qBAAKvwB,UAAU,gBAAf,SACE,cAACQ,EAAA,EAAD,CAAeC,MAAM,6CAAUF,QAAS0K,EAAKsI,OAAQ7S,UAAU,U,UEvDxD,SAAegwB,GAA9B,uC,8CAAe,WAA8BjoB,EAAetG,EAAYuO,GAAzD,eAAAF,EAAA,+EAEQG,YAAW,CAC5BtC,IAAI,GAAD,OAAKuC,IAAL,uCAA+CzO,GAClD0O,QAAS,CAAEC,cAAc,UAAD,OAAYrI,IACpCgI,OAAQ,MACRC,aANS,cAEL7P,EAFK,yBASJA,GATI,uCAYXkQ,QAAQC,IAAR,MAZW,kBAaJ,MAbI,0D,sBCkBf,IAAM2f,GAAoB,CACxBC,YAAa,KACb7rB,KAAM,KACNic,MAAO,KACPC,MAAO,MCiDM4P,GAhEC,SAACpmB,GACf,IAAMQ,EDiBkB,SAAC,GAAoC,IAAlCiG,EAAiC,EAAjCA,YAAasN,EAAoB,EAApBA,OAClCtZ,EAAWC,cACTsD,EAAUpD,aAAY,SAACC,GAAD,OAAkBA,EAAM5B,KAAK0H,QAAnD3C,MAFoD,EAIpCvH,oBACX,OAAXgQ,QAAW,IAAXA,OAAA,EAAAA,EAAanP,QAASmP,EAAc,CAACyf,KALqB,mBAIrD9vB,EAJqD,KAI/CyS,EAJ+C,KAQtDwd,EAAe3oB,uBAAY,SAACmB,EAAO3H,GACvCd,EAAKyI,GAAS3H,EACd2R,EAAQ,aAAIzS,MACX,CAACA,IAEEkwB,EAAa5oB,uBAAY,WAC7BmL,EAAQ,CAACqd,OACR,IAEGK,EAAQ7oB,uBAAY,WACxBmL,EAAQ,GAAD,oBAAKzS,GAAL,CAAW8vB,QACjB,CAAC9vB,IAEEowB,EAAW9oB,uBAAY,SAACmB,GAC5BgK,GAAQ,SAACrL,GAAD,OAAUA,EAAKqD,QAAO,SAAC4lB,EAAGC,GAAJ,OAAiBA,IAAa7nB,UAC3D,IAEGiK,EAASpL,sBAAW,sBAAC,4BAAAqI,EAAA,0DACrB/H,EADqB,gCAELioB,GAAejoB,EAAO+V,EAAQ3d,GAFzB,OAEjBoY,EAFiB,OAIvB/T,EACEO,YAAa,CACXC,MAAM,EACNE,QAAO,OAAEqT,QAAF,IAAEA,OAAF,EAAEA,EAAKrT,QACdC,QAAO,OAAEoT,QAAF,IAAEA,OAAF,EAAEA,EAAKpT,WARK,2CAYxB,CAAChF,EAAM2d,EAAQ/V,IAElB,MAAO,CACL5H,OACAiwB,eACAC,aACAC,QACAC,WACA1d,UC9DW6d,CAAW3mB,GAExB,OACE,qCACE,cAAC9K,EAAA,EAAD,CAAkBC,MAAM,wFAAkBE,QAASmL,EAAK8lB,WAAxD,SACG9lB,EAAKpK,KAAKqB,KAAI,SAAC0c,EAAQtV,GAAT,OACb,sBAAKtJ,UAAU,sCAAf,UACE,cAACW,EAAA,EAAD,CACEF,MAAM,oDACNI,KAAM4J,EAAM4mB,qBAAuB,GACnCzwB,SAAU,SAACwH,GAAD,OAAO6C,EAAK6lB,aAAaxnB,EAAlB,2BAA8BsV,GAA9B,IAAsCgS,YAAaxoB,MACpEtH,cAAe8d,EAAOgS,cAGxB,cAACvuB,EAAA,EAAD,CACE5B,MAAM,qBACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAK6lB,aAAaxnB,EAAlB,2BAA8BsV,GAA9B,IAAsC7Z,KAAMqD,MAC7DzG,MAAOid,EAAO7Z,OAGhB,cAAC1C,EAAA,EAAD,CACE5B,MAAM,SACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAK6lB,aAAaxnB,EAAlB,2BAA8BsV,GAA9B,IAAsCqC,MAAO7Y,MAC9DzG,MAAOid,EAAOqC,QAGhB,sBAAKjhB,UAAU,WAAf,UACE,cAAC6I,GAAA,EAAD,CACEpI,MAAM,kFACNG,SAAU,SAACwH,GAAD,OAAO6C,EAAK6lB,aAAaxnB,EAAlB,2BAA8BsV,GAA9B,IAAsCoC,MAAO5Y,MAC9DzG,MAAOid,EAAOoC,QAGf/V,EAAKpK,KAAKkB,OAAS,GACpB,qBAAK9B,MAAO,CAAEqxB,WAAY,QAA1B,SACE,cAACjoB,GAAA,EAAD,CACE9I,QAAS0K,EAAKgmB,SACd3nB,MAAOA,EACP5I,UAAU,MAKb4I,IAAU2B,EAAKpK,KAAKkB,OAAS,GAC9B,qBAAK9B,MAAO,CAAEqxB,WAAY,QAA1B,SACE,cAACtoB,GAAA,EAAD,CACEzI,QAAS0K,EAAK+lB,MACdtwB,UAAU,iBAStB,qBAAKV,UAAU,gBAAf,SACE,cAACQ,EAAA,EAAD,CAAeC,MAAM,+DAAaF,QAAS0K,EAAKsI,OAAQ7S,UAAU,UCjE3D,SAAe6wB,GAA9B,qC,8CAAe,WAAuB9oB,EAAetG,GAAtC,eAAAqO,EAAA,+EAEQG,YAAW,CAC5BtC,IAAI,GAAD,OAAKuC,IAAL,6BAAqCzO,GACxC0O,QAAS,CAAEC,cAAc,UAAD,OAAYrI,MAJ3B,cAEL5H,EAFK,yBAOJA,GAPI,uCAUXkQ,QAAQC,IAAR,MAVW,kBAWJ,MAXI,0D,sBCgDR,ICzBQwgB,GApBK,WAAO,IAAD,EAClBvmB,ED4CsB,WAC5B,IAAMvD,EAAUC,cACRxF,EAAOiN,cAAPjN,GACAsG,EAAUpD,aAAY,SAACC,GAAD,OAAkBA,EAAM5B,KAAK0H,QAAnD3C,MAH0B,EAKAvH,oBAAkB,GALlB,mBAK3B0N,EAL2B,KAKhBqe,EALgB,OAMV/rB,qBANU,mBAM3BL,EAN2B,KAMrByS,EANqB,OAOcpS,qBAPd,mBAO3BuwB,EAP2B,KAOTC,EAPS,OAQIxwB,qBARJ,mBAQ3BywB,EAR2B,KAQdC,EARc,KAU5BC,EAAYtsB,mBAAQ,kCAAS1E,QAAT,IAASA,OAAT,EAASA,EAAM4uB,UAAU7sB,IAAzB,mBAAgC/B,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAM4uB,UAAUhtB,KAAhD,mBAAwD5B,QAAxD,IAAwDA,OAAxD,EAAwDA,EAAM4uB,UAAUE,KAAxE,mBAAgF9uB,QAAhF,IAAgFA,OAAhF,EAAgFA,EAAM4uB,UAAUC,QAAQ,CAAC7uB,IAoCnI,OAlCAQ,qBAAU,WACH6V,GAAS/U,IACZuF,EAAQgB,KAAK,KAGXD,GAEF,sBAAC,4BAAA+H,EAAA,6DACCyc,GAAa,GADd,SAEmBsE,GAAQ9oB,EAAOtG,GAFlC,QAIC,QAFM8W,EAFP,cAIC,IAAIA,OAAJ,EAAIA,EAAKrT,WACP0N,EAAO,OAAC2F,QAAD,IAACA,OAAD,EAACA,EAAKpY,MACb+wB,EAAc,OAAC3Y,QAAD,IAACA,OAAD,EAACA,EAAKpY,KAAKixB,qBACzBJ,EAAoB,CAClBzlB,WAAc,OAAHgN,QAAG,IAAHA,OAAA,EAAAA,EAAKpY,KAAKoL,YAAa,GAClC4B,cAAiB,OAAHoL,QAAG,IAAHA,OAAA,EAAAA,EAAKpY,KAAKgN,eAAgB,KACxCzB,gBAAmB,OAAH6M,QAAG,IAAHA,OAAA,EAAAA,EAAKpY,KAAKuL,iBAAkB,GAC5CkgB,mBAAsB,OAAHrT,QAAG,IAAHA,OAAA,EAAAA,EAAKpY,KAAKyrB,oBAAqB,KAClD6D,SAAY,OAAHlX,QAAG,IAAHA,OAAA,EAAAA,EAAKpY,KAAKsvB,UAAW,GAC9BE,YAAe,OAAHpX,QAAG,IAAHA,OAAA,EAAAA,EAAKpY,KAAKwvB,aAAc,KACpC1kB,QAAW,OAAHsN,QAAG,IAAHA,OAAA,EAAAA,EAAKpY,KAAK8K,SAAU,GAC5B8B,WAAc,OAAHwL,QAAG,IAAHA,OAAA,EAAAA,EAAKpY,KAAK4M,YAAa,KAClCgjB,WAAc,OAAHxX,QAAG,IAAHA,OAAA,EAAAA,EAAKpY,KAAK4vB,YAAa,KAClCH,cAAiB,OAAHrX,QAAG,IAAHA,OAAA,EAAAA,EAAKpY,KAAKyvB,eAAgB,KACxCC,kBAAqB,OAAHtX,QAAG,IAAHA,OAAA,EAAAA,EAAKpY,KAAK0vB,oBAAoB,KAIpDtD,GAAa,GAtBd,0CAAD,KAyBD,CAACxkB,EAAOtG,IAEJ,CACLA,KACAtB,OACAgxB,YACAjjB,YACA6iB,mBACAE,eChGWI,GAEb,OAAI9mB,EAAK2D,UACA,cAACM,EAAA,EAAD,IAIP,uBAAMlP,UAAU,OAAhB,UACE,qBAAKA,UAAU,iCAAf,SAAiDiL,EAAK4mB,YACtD,cAAC,GAAD,CAAc3gB,YAAajG,EAAKwmB,iBAAkBjT,OAAQvT,EAAK9I,KAC/D,cAAC,GAAD,CACE+O,YAAajG,EAAK0mB,YAClBN,oBAAmB,UAAEpmB,EAAKpK,YAAP,aAAE,EAAWwwB,oBAChC7S,OAAQvT,EAAK9I,SCjBN,SAAe6vB,GAA9B,qC,8CAAe,WACbvpB,EACAtG,GAFa,+BAAAqO,EAAA,6DAGbC,EAHa,+BAGuB,MACpCC,EAJa,yCAOQC,YAAW,CAC5BtC,IAAI,GAAD,OAAKuC,IAAL,wCAAgDzO,GACnD0O,QAAS,CAAEC,cAAc,UAAD,OAAYrI,IACpCgI,SACAC,aAXS,cAOL7P,EAPK,yBAcJA,GAdI,uCAiBXkQ,QAAQC,IAAR,MAjBW,kBAkBJ,MAlBI,0D,sBCqBR,ICiEQihB,GAjFO,WACpB,IAAMhnB,EDewB,WAC9B,IAAM/F,EAAWC,cACTsD,EAAUpD,aAAY,SAACC,GAAD,OAAkBA,EAAM5B,KAAK0H,QAAnD3C,MACAtG,EAAOiN,cAAPjN,GAH4B,EAKEjB,mBAAS,GALX,mBAK7B6uB,EAL6B,KAKhBC,EALgB,OAMV9uB,mBAAS,IANC,mBAM7BtB,EAN6B,KAMtBqd,EANsB,OASR/b,mBAAS,IATD,mBAS7ByK,EAT6B,KASrB+J,EATqB,OAUFxU,mBAAS,IAVP,mBAU7B+K,EAV6B,KAUlB0gB,EAVkB,OAWQzrB,mBAAS,IAXjB,mBAW7BkL,EAX6B,KAWbC,EAXa,OAYNnL,mBAAS,IAZH,mBAY7BivB,EAZ6B,KAYpBC,EAZoB,OAaRlvB,mBAAS,IAbD,mBAa7BuK,EAb6B,KAarB2R,EAbqB,OAcIlc,mBAAS,IAdb,mBAc7B2K,EAd6B,KAcfwR,EAde,OAeFnc,mBAAS,IAfP,mBAe7BuvB,EAf6B,KAelByB,EAfkB,OAkBNhxB,mBAAkB,CAC9CuM,UAAW,KACXI,aAAc,KACdye,kBAAmB,KACnB+D,WAAY,KACZ3iB,UAAW,KACX4iB,aAAc,KACd6B,WAAW,IAzBuB,mBAkB7Bja,EAlB6B,KAkBpBC,EAlBoB,OA2BAjX,mBAAsB,IA3BtB,mBA2B7BgP,EA3B6B,KA2BjBE,GA3BiB,KA6B9BgiB,GAAoBjqB,uBAAY,SAACmB,EAAegT,EAAa3a,GACjEuO,EAAW5G,GAAOgT,GAAO3a,EACzByO,GAAc,aAAIF,MACjB,CAACA,IAEEmiB,GAAiBlqB,uBAAY,WACjCgQ,EAAW,CACT1K,UAAW,KACXI,aAAc,KACdye,kBAAmB,KACnB+D,WAAY,KACZ3iB,UAAW,KACX4iB,aAAc,KACd6B,WAAW,MAEZ,IAEGG,GAAmBnqB,uBAAY,SAACmB,GACpC8G,IAAc,SAACnI,GAAD,OAAUA,EAAK/F,KAAI,SAAC2H,EAAM0oB,GACtC,OAAIjpB,IAAUipB,EACL,2BACF1oB,GADL,IAEE8D,gBAAiB,KACjBD,UAAW,OAIR7D,UAER,CAACqG,IAEEqD,GAASpL,sBAAW,sBAAC,8BAAAqI,EAAA,yDACnBE,EADmB,2BAEpBwH,GAFoB,IAGvBhI,gBAGEzH,EANqB,gCAOLupB,GAAiBvpB,EAAOtG,EAAI,MAAOuO,GAP9B,OAOjBuI,EAPiB,OASvB/T,EACEO,YAAa,CACXC,MAAM,EACNE,QAAO,OAAEqT,QAAF,IAAEA,OAAF,EAAEA,EAAKrT,QACdC,QAAO,OAAEoT,QAAF,IAAEA,OAAF,EAAEA,EAAKpT,WAbK,2CAiBxB,CAAC4C,EAAOyP,EAAShI,IAEd0Q,GAAuBrb,mBAAQ,kBAAO2S,EAAQrK,eAC9CqK,EAAQzK,YAAW,CAACyK,EAAQrK,aAAcqK,EAAQzK,YAuDxD,OArDApM,qBAAU,WACJoH,GAEF,sBAAC,sCAAA+H,EAAA,sEACmBwhB,GAAiBvpB,EAAOtG,GAD3C,QAGC,QAFM8W,EADP,cAGC,IAAIA,OAAJ,EAAIA,EAAKrT,WAAU,EAAD,OACkBqT,QADlB,IACkBA,OADlB,EACkBA,EAAKpY,KAAK4uB,UAApC7sB,EADQ,EACRA,IAAKH,EADG,EACHA,KAAMktB,EADH,EACGA,KAAMD,EADT,EACSA,KACzBzS,EAAS,GAAD,OAAIra,EAAJ,YAAWH,EAAX,YAAmBktB,EAAnB,YAA2BD,IAEnCha,GAAa,OAAHuD,QAAG,IAAHA,OAAA,EAAAA,EAAKpY,KAAK8K,SAAU,IAC9BghB,GAAgB,OAAH1T,QAAG,IAAHA,OAAA,EAAAA,EAAKpY,KAAKoL,YAAa,IACpCI,GAAqB,OAAH4M,QAAG,IAAHA,OAAA,EAAAA,EAAKpY,KAAKuL,iBAAkB,IAC9CgkB,GAAc,OAAHnX,QAAG,IAAHA,OAAA,EAAAA,EAAKpY,KAAKsvB,UAAW,IAChC/S,GAAa,OAAHnE,QAAG,IAAHA,OAAA,EAAAA,EAAKpY,KAAK4K,SAAU,IAC9B4R,GAAmB,OAAHpE,QAAG,IAAHA,OAAA,EAAAA,EAAKpY,KAAKgL,eAAgB,IAC1CqmB,GAAgB,OAAHjZ,QAAG,IAAHA,OAAA,EAAAA,EAAKpY,KAAK4vB,YAAa,IAEpCtY,EAAW,CACT1K,WAAc,OAAHwL,QAAG,IAAHA,OAAA,EAAAA,EAAKpY,KAAK4M,YAAa,KAClCI,cAAiB,OAAHoL,QAAG,IAAHA,OAAA,EAAAA,EAAKpY,KAAKgN,eAAgB,KACxCye,mBAAsB,OAAHrT,QAAG,IAAHA,OAAA,EAAAA,EAAKpY,KAAKyrB,oBAAqB,KAClD+D,YAAe,OAAHpX,QAAG,IAAHA,OAAA,EAAAA,EAAKpY,KAAKwvB,aAAc,KACpC3iB,WAAc,OAAHuL,QAAG,IAAHA,OAAA,EAAAA,EAAKpY,KAAK6M,YAAa,KAClC4iB,cAAiB,OAAHrX,QAAG,IAAHA,OAAA,EAAAA,EAAKpY,KAAKyvB,eAAgB,KACxC6B,UAAS,OAAElZ,QAAF,IAAEA,OAAF,EAAEA,EAAKpY,KAAKsxB,YAGvB/hB,GAAa,OAAC6I,QAAD,IAACA,OAAD,EAACA,EAAKpY,KAAKqP,aAzB3B,0CAAD,KA6BD,CAACzH,EAAOtG,IAEXd,qBAAU,WACJ0uB,EAAc,EAChBC,GAAe,SAAC/nB,GAAD,OAAUA,EAAO,MAIlCoE,EAAkB,IAClB+jB,EAAW,IAEP3nB,GAASyP,EAAQrK,cACnB,sBAAC,4BAAA2C,EAAA,sEACmBjD,aAAiB9E,EAAOlE,OAAO2T,EAAQrK,eAD1D,OACOoL,EADP,OAECd,EAAW,2BAAKD,GAAN,IAAeoU,kBAAmB,KAAM+D,WAAY,QAC9DhkB,EAAkB4M,EAAI7M,gBACtBgkB,EAAWnX,EAAIkX,SAJhB,0CAAD,MAOD,CAACjY,EAAQrK,aAAcpF,IAEnB,CACL7I,QACA+L,SACAM,YACAG,iBACA+jB,UACA1kB,SACAI,eACA4kB,YACAvY,UACAhI,aACA0Q,wBACAzI,aACA/H,iBACAgiB,qBACAC,kBACAC,oBACA/e,WCvKWif,GAEb,OACE,sBAAKxyB,UAAU,OAAf,UACE,qBAAKA,UAAU,iCAAf,SAAiDiL,EAAKrL,QAEtD,cAACD,EAAA,EAAD,CAAkBC,MAAM,kFAAiBE,QAASmL,EAAKonB,eAAvD,SACE,sBAAKryB,UAAU,OAAf,UACE,cAACW,EAAA,EAAD,CACEK,UAAQ,EACRP,MAAM,+DACNI,KAAMoK,EAAKgB,UACXrL,SAAU,SAACwH,GAAD,OAAO6C,EAAKkN,WAAL,2BAAqBlN,EAAKiN,SAA1B,IAAmCrK,aAAczF,MAClEtH,cAAemK,EAAKiN,QAAQrK,eAG9B,cAAClN,EAAA,EAAD,CACEF,MAAM,qEACNI,KAAMoK,EAAKmB,eACXxL,SAAU,SAACwH,GAAD,OAAO6C,EAAKkN,WAAL,2BAAqBlN,EAAKiN,SAA1B,IAAmCoU,kBAAmBlkB,MACvEtH,cAAemK,EAAKiN,QAAQoU,oBAG9B,cAAC3rB,EAAA,EAAD,CACEF,MAAM,mDACNI,KAAMoK,EAAKklB,QACXvvB,SAAU,SAACwH,GAAD,OAAO6C,EAAKkN,WAAL,2BAAqBlN,EAAKiN,SAA1B,IAAmCmY,WAAYjoB,MAChEtH,cAAemK,EAAKiN,QAAQmY,aAG9B,cAAC1vB,EAAA,EAAD,CACEK,UAAQ,EACRP,MAAM,mDACNI,KAAMoK,EAAKU,OACX/K,SAAU,SAACwH,GAAD,OAAO6C,EAAKkN,WAAL,2BAAqBlN,EAAKiN,SAA1B,IAAmCzK,UAAWrF,MAC/DtH,cAAemK,EAAKiN,QAAQzK,YAG9B,cAAC9M,EAAA,EAAD,CACEF,MAAM,6CACNI,KAAMoK,EAAKwlB,UACX7vB,SAAU,SAACwH,GAAD,OAAO6C,EAAKkN,WAAL,2BAAqBlN,EAAKiN,SAA1B,IAAmCoY,aAAcloB,MAClEtH,cAAemK,EAAKiN,QAAQoY,eAG9B,cAAC5rB,EAAA,EAAD,CACEjE,MAAM,oDACNU,SAAU8J,EAAKiN,QAAQia,UACvBvxB,SAAU,SAACwH,GAAD,OAAO6C,EAAKkN,WAAL,2BAAqBlN,EAAKiN,SAA1B,IAAmCia,UAAW/pB,cAKnE6C,EAAKiF,YAAc,IAAIhO,KAAI,SAACmO,EAAW/G,GAAZ,OAC3B,cAAC3J,EAAA,EAAD,CAAkBC,MAAOyQ,EAAUoT,SAAW,GAAI3jB,QAAS,kBAAMmL,EAAKqnB,iBAAiBhpB,IAAvF,SACE,sBAAKtJ,UAAU,mBAAf,UACE,cAACW,EAAA,EAAD,CACEF,MAAM,iCACNI,KAAMoK,EAAKQ,OACX7K,SAAU,SAACwH,GAAD,OAAO6C,EAAKmnB,kBAAkB9oB,EAAO,YAAalB,IAC5DtH,cAAeuP,EAAU3C,YAG3B,cAAC/M,EAAA,EAAD,CACEF,MAAM,6CACNI,KAAMoK,EAAKY,aACXjL,SAAU,SAACwH,GAAD,OAAO6C,EAAKmnB,kBAAkB9oB,EAAO,kBAAmBlB,IAClEtH,cAAeuP,EAAU1C,0BAMjC,qBAAK3N,UAAU,gBAAf,SACE,cAACQ,EAAA,EAAD,CAAeC,MAAM,mDAAWF,QAAS0K,EAAKsI,OAAQ7S,SAAUuK,EAAK2V,6BCxD9D6R,GAlBF,WAAO,IACFryB,EAAWiF,aAAY,SAACC,GAAD,OAAkBA,EAAM5B,QAAvD0H,KAAQhL,KAEhB,OAAIA,IAASkP,IAAUC,UACd,cAAC,GAAD,IAGLnP,IAASkP,IAAUwM,QACd,cAAC,GAAD,IAGL1b,IAASkP,IAAUG,UACd,cAAC,GAAD,IAGF,MCYMijB,GAxBG,SAACjoB,GACjB,OAAIA,EAAMkoB,cAAgB3kB,EAA4B6B,KAC7C,cAAC,GAAD,IAGLpF,EAAMkoB,cAAgB3kB,EAA4B8B,OAC7C,cAAC,GAAD,IAGLrF,EAAMkoB,cAAgB3kB,EAA4BgC,QAC7C,cAAC,GAAD,IAGLvF,EAAMkoB,cAAgB3kB,EAA4B+B,WAC7C,cAAC,GAAD,IAGLtF,EAAMkoB,cAAgB3kB,EAA4BiC,cAC7C,cAAC,GAAD,IAGF,MCTM2iB,GAfS,WACtB,IAAM3nB,ECL0B,WAChC,IAAMvD,EAAUC,cADsB,EAGdyH,cAAhBrE,EAH8B,EAG9BA,QAAS5I,EAHqB,EAGrBA,GAHqB,EAIAjB,qBAJA,mBAI/ByxB,EAJ+B,KAIlBE,EAJkB,OAKf3xB,qBAAhB4xB,EAL+B,oBAmCtC,OA5BAzxB,qBAAU,WACR,OAAQ0J,GACN,KAAKiD,EAA4B6B,KAE/B,YADAgjB,EAAe7kB,EAA4B6B,MAE7C,KAAK7B,EAA4B+B,WAE/B,YADA8iB,EAAe7kB,EAA4B+B,YAE7C,KAAK/B,EAA4BgC,QAE/B,YADA6iB,EAAe7kB,EAA4BgC,SAE7C,KAAKhC,EAA4B8B,OAE/B,YADA+iB,EAAe7kB,EAA4B8B,QAE7C,KAAK9B,EAA4BiC,cAE/B,YADA4iB,EAAe7kB,EAA4BiC,eAE7C,QACE4iB,EAAe7kB,EAA4B6B,SAE9C,CAAC9E,IAEJ1J,qBAAU,WACH6V,GAAS/U,IACZuF,EAAQgB,KAAK,OAEd,CAACvG,IAEG,CACL2wB,eACAH,cACAE,kBDjCWE,GACPrkB,EAAazJ,cAEnB,OACE,uBAAMjF,UAAU,YAAhB,UACE,cAAC,EAAD,CAAYmB,SAAU8J,EAAK0nB,cAC3B,cAACxpB,EAAA,EAAD,UACE,cAAC,GAAD,CAAWwpB,YAAa1nB,EAAK0nB,gBAE/B,cAAChtB,EAAA,EAAD,eAAW+I,QEAFskB,GAZS,kBACtB,qCACE,cAACvrB,EAAA,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2R,KAAK,gBAAZ,SACE,cAAC,GAAD,MAEF,cAAC,EAAD","file":"static/js/7.83a811c8.chunk.js","sourcesContent":["import React from 'react';\nimport './index.scss';\n\ntype Props = {\n  title: string;\n  children: React.ReactNode;\n  headerColor?: string;\n  onClear?: () => void;\n}\n\nconst SectionWithTitle = ({ title, children, onClear, headerColor }: Props) => (\n  <div className=\"section-with-title\">\n    <div\n      className=\"section-with-title__header\"\n      style={{\n        backgroundColor: headerColor || '',\n      }}\n    >\n      <h2\n        className=\"section-title\"\n        style={{\n          color: headerColor ? 'white' : '',\n        }}\n      >\n        {title}\n      </h2>\n      {onClear && (\n        <button type=\"button\" className=\"clear-button\">\n          <img\n            src=\"/icons/clear-form.svg\"\n            alt=\"close\"\n            className=\"clear-icon\"\n            onClick={onClear}\n          />\n        </button>\n      )}\n    </div>\n    <div className=\"section-with-title__body\">\n      {children}\n    </div>\n  </div>\n);\n\nexport default SectionWithTitle;\n","/* eslint-disable prettier/prettier */\n/* eslint-disable react/button-has-type */\nimport React from 'react';\nimport './index.scss';\n\ntype Props = {\n  label: string;\n  onClick: (e: any) => void;\n  disabled?: boolean;\n  className?: string;\n};\n\nconst PrimaryButton = ({\n  label, onClick, disabled, className\n}: Props) => (\n  <button\n    className={`primary-button ${disabled ? 'disabled' : ''} ${\n      className || ''\n    }`}\n    onClick={onClick}\n    disabled={disabled}\n  >\n    {label}\n  </button>\n);\n\nexport default PrimaryButton;\n","export { default } from './CustomInput';\n","/* eslint-disable object-curly-newline */\n/* eslint-disable no-unused-vars */\nimport React, { useState, memo, useEffect } from 'react';\nimport './index.scss';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\ntype Data = {\n  id: number;\n  title: string;\n};\n\ntype Props = {\n  onChange: (value: string) => void;\n  data: Data[];\n  label: string;\n  selectedValue?: string | null | number;\n  disabled?: boolean;\n  size?: 'medium' | 'small';\n  className?: string;\n  required?: boolean;\n  disableDefaultValue?: boolean;\n};\n\nconst CustomSelect = ({\n  onChange,\n  data,\n  label,\n  selectedValue,\n  disabled,\n  size = 'medium',\n  className,\n  required,\n  disableDefaultValue,\n}: Props) => {\n  const [selected, setSelected] = useState(selectedValue || '');\n\n  useEffect(() => {\n    setSelected(selectedValue || '');\n  }, [selectedValue]);\n\n  const handleChange = (event: any) => {\n    const val = event.target.value;\n    setSelected(val);\n    onChange(val);\n  };\n\n  return (\n    <FormControl variant=\"outlined\" className={`customSelect ${className || ''}`} size={size}>\n      <InputLabel>{label}</InputLabel>\n      <Select\n        error={required && !selected}\n        value={selected}\n        onChange={handleChange}\n        disabled={disabled || data.length === 0}\n        defaultValue=\"\"\n      >\n        {!disableDefaultValue && (\n          <MenuItem value=\"\">\n            <em>Выбрать</em>\n          </MenuItem>\n        )}\n        {data.map(({ id, title }: Data) => (\n          <MenuItem value={id} key={id}>\n            {title}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default memo(CustomSelect);\n","/* eslint-disable no-unused-vars */\n/* eslint-disable react/react-in-jsx-scope */\nimport React, { useState, useEffect } from 'react';\nimport './index.scss';\nimport { TextField } from '@material-ui/core';\n\ntype Props = {\n  label: string;\n  value?: string | number | null;\n  onChange?: (value: string) => void;\n  type?: string;\n  disabled?: boolean;\n  required?: boolean;\n};\n\nconst CustomInput = ({\n  label,\n  onChange,\n  value = '',\n  type = 'string',\n  disabled,\n  required,\n}: Props) => {\n  const [text, setText] = useState(value || '');\n\n  useEffect(() => {\n    setText(value || '');\n  }, [value]);\n\n  const handleChange = (event: any) => {\n    setText(event.target.value);\n    onChange && onChange(event.target.value);\n  };\n\n  return (\n    <TextField\n      error={required && !text}\n      label={label}\n      variant=\"outlined\"\n      value={text}\n      onChange={handleChange}\n      type={type}\n      className=\"custom-input\"\n      disabled={disabled || false}\n    />\n  );\n};\n\nexport default CustomInput;\n","export const changeMonthWitDate = (date: string): string => date && date.replace(/(\\d{2}).(\\d{2}).(\\d{4})/, '$2.$1.$3');\n\nexport const formatDate = (date: Date | null): string | null => {\n  if (!date) return null;\n\n  const day = date.getDate() <= 9 ? `0${date.getDate()}` : date.getDate();\n  const month = date.getMonth() < 9 ? `0${date.getMonth() + 1}` : date.getMonth() + 1;\n  const year = date.getFullYear();\n  const hours = date.getHours() <= 9 ? `0${date.getHours()}` : date.getHours();\n  const minutes = date.getMinutes() <= 9 ? `0${date.getMinutes()}` : date.getMinutes();\n\n  return `${day}.${month}.${year} ${hours}:${minutes}`;\n};\n","/* eslint-disable quotes */\n/* eslint-disable react/jsx-curly-brace-presence */\nimport React, { useEffect, useState } from 'react';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport { MaterialUiPickersDate } from '@material-ui/pickers/typings/date';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core';\n\ntype Props = {\n  label: string;\n  onSelect: (value: any) => void;\n  selectedDate?: Date | null;\n  required?: boolean;\n  disabled?: boolean;\n}\n\nconst customTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#165153',\n    }\n  },\n});\n\nconst CustomDatePicker = ({ selectedDate, onSelect, label, required, disabled }: Props) => {\n  const [value, setValue] = useState<MaterialUiPickersDate | undefined>(selectedDate);\n\n  useEffect(() => {\n    setValue(selectedDate);\n  }, [selectedDate]);\n\n  const handleChange = (data: any) => {\n    const parseDate = Date.parse(data);\n    if (Number.isNaN(parseDate) === true) {\n      onSelect(null);\n    } else {\n      onSelect(data);\n    }\n\n    setValue(data);\n  };\n\n  return (\n    <MuiThemeProvider theme={customTheme}>\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <KeyboardDatePicker\n          error={required && !value}\n          margin=\"normal\"\n          label={label}\n          format=\"dd/MM/yyyy\"\n          value={value}\n          onChange={handleChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n          disabled={disabled || false}\n        />\n      </MuiPickersUtilsProvider>\n    </MuiThemeProvider>\n\n  );\n};\n\nexport default CustomDatePicker;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable prettier/prettier */\nimport React, { useEffect, useState, memo } from 'react';\nimport { FormControlLabel, Switch } from '@material-ui/core';\nimport './index.scss';\n\ntype Props = {\n  label: string\n  onChange: (val: boolean) => void;\n  selected: boolean;\n  disabled?: boolean;\n};\n\nconst CustomSwitch = ({\n  label,\n  onChange,\n  selected,\n  disabled\n}: Props) => {\n  const [value, setValue] = useState(selected);\n\n  const handleChange = (event: any) => {\n    setValue(event.target.checked);\n    onChange(event.target.checked);\n  };\n\n  useEffect(() => {\n    setValue(selected);\n  }, [selected]);\n\n  return (\n    <FormControlLabel\n      control={(\n        <Switch\n          checked={value}\n          onChange={handleChange}\n          name=\"checkedB\"\n          color=\"primary\"\n        />\n      )}\n      label={label}\n      labelPlacement=\"start\"\n      className=\"custom-switch\"\n      disabled={disabled || false}\n    />\n  );\n};\n\nexport default memo(CustomSwitch);\n","/* eslint-disable implicit-arrow-linebreak */\nimport { useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setModalInfo } from '../../store/main/actions';\nimport { State } from '../../store/types';\n\nexport const useModal = () => {\n  const dispatch = useDispatch();\n  const { modalInfo } = useSelector((state: State) => state.main);\n\n  const modalProps = useMemo(\n    () => ({\n      ...modalInfo,\n      handleClose: () =>\n        dispatch(\n          setModalInfo({\n            ...modalInfo,\n            open: false,\n          })\n        ),\n    }),\n    [modalInfo]\n  );\n\n  return modalProps;\n};\n","import React from 'react';\nimport './index.scss';\nimport MModal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\ntype Props = {\n  open: boolean;\n  handleClose: () => void;\n  success: boolean;\n  message: string;\n};\n\n// eslint-disable-next-line prettier/prettier\nconst Modal = ({\n  open, handleClose, success, message\n}: Props) => (\n  <MModal\n    className=\"modal-container\"\n    open={open}\n    onClose={handleClose}\n    closeAfterTransition\n    BackdropComponent={Backdrop}\n    BackdropProps={{\n      timeout: 500,\n    }}\n  >\n    <Fade in={open}>\n      <div className={`modal ${success ? 'modal-success' : 'modal-failed'}`}>\n        <p className=\"message\">{message}</p>\n      </div>\n    </Fade>\n  </MModal>\n);\n\nexport default Modal;\n","import * as React from 'react';\nimport './index.scss';\nimport { Link } from 'react-router-dom';\nimport ReactHtmlParser from 'react-html-parser';\n\ntype Props = {\n  title: string;\n  children: React.ReactNode;\n  link: string\n  headerColor?: string;\n  haveStatus?: boolean;\n}\n\nconst Card = ({ title, headerColor, children, link, haveStatus }: Props) => {\n  const getTextColor = () => {\n    if (haveStatus) return 'black';\n    if (headerColor) return 'white';\n\n    return '';\n  };\n\n  const getTitleBackgroundColor = () => {\n    if (haveStatus) return '';\n    if (headerColor) return headerColor;\n\n    return '';\n  };\n\n  return (\n    <Link to={link} className=\"card\">\n      <div className=\"card__header\" style={{ backgroundColor: getTitleBackgroundColor() }}>\n        <span style={{ color: getTextColor() }}>{ReactHtmlParser(title)}</span>\n        {haveStatus && (\n          <div className=\"status\" style={{ backgroundColor: headerColor || '' }} />\n        )}\n      </div>\n      <div className=\"card__main\">\n        {children}\n      </div>\n    </Link>\n  );\n};\n\nexport default Card;\n","/* eslint-disable react/require-default-props */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/no-unused-prop-types */\nimport React, { useState, memo, useEffect } from 'react';\nimport './index.scss';\nimport { v4 as uuidv4 } from 'uuid';\n\ntype Button = {\n  id: number | string;\n  title: string;\n};\n\ntype Props = {\n  buttons: Button[];\n  unicId: string;\n  onChange: (id: number | string) => void;\n  selected?: number | string | null;\n};\n\nexport const RadioButtonsGroup = ({\n  buttons,\n  onChange,\n  selected,\n  unicId,\n}: Props) => {\n  const [selectedValue, setSelectedValue] = useState(selected || buttons[0].id);\n\n  useEffect(() => {\n    setSelectedValue(selected || buttons[0].id);\n    onChange(selected || buttons[0].id);\n  }, [selected]);\n\n  const handleChange = (id: number | string) => {\n    setSelectedValue(id);\n    onChange(id);\n  };\n\n  return (\n    <div className=\"radio-buttons-group\">\n      {buttons.map(({ id, title }: Button) => (\n        <div\n          key={uuidv4()}\n          className={`radio-buttons-group__element ${\n            buttons.length === 1 ? 'edit' : ''\n          }`}\n        >\n          <input\n            type=\"radio\"\n            id={unicId + title}\n            value={id}\n            // eslint-disable-next-line eqeqeq\n            checked={selectedValue == id}\n            onChange={() => handleChange(id)}\n            className=\"input\"\n          />\n          <label htmlFor={unicId + title} className=\"label\">\n            {title}\n          </label>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioButtonsGroup);\n","import React, { useState, useEffect } from 'react';\n\nconst useDebounce = (value: string, delay: number) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value]);\n\n  return debouncedValue;\n};\n\nexport default useDebounce;\n","import * as React from 'react';\nimport './index.scss';\nimport { Link } from 'react-router-dom';\n\nimport { useHeader } from './useHeader';\n\nconst Header = () => {\n  const { onSearch, onLogout, searchText } = useHeader();\n\n  return (\n    <div className=\"header container\">\n      <Link to=\"/\" className=\"header__logo\">\n        <img src=\"/icons/logo.svg\" alt=\"logo\" />\n      </Link>\n      <div className=\"header__search\">\n        <input\n          type=\"text\"\n          placeholder=\"Пошук...\"\n          onChange={onSearch}\n          value={searchText}\n        />\n        <img src=\"/icons/search.svg\" alt=\"search\" />\n      </div>\n      <div className=\"header__control\">\n        <img src=\"/icons/log-out.svg\" alt=\"logout\" onClick={onLogout} />\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport {\n  ChangeEvent, useState, useEffect, useCallback\n} from 'react';\nimport { setUser } from '../../store/main/actions';\nimport { searchAppointments } from '../../store/appointments/actions';\nimport useDebounce from './utils/useDebounce';\n\nexport const useHeader = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [searchText, setSearchText] = useState<string>('');\n  const [count, setCount] = useState<number>(0);\n\n  const debouncedValue = useDebounce(searchText, 1000);\n\n  useEffect(() => {\n    if (!count) {\n      setCount((prev: number) => prev + 1);\n      return;\n    }\n\n    dispatch(searchAppointments(debouncedValue));\n  }, [debouncedValue]);\n\n  const onSearch = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value);\n  }, [searchText]);\n\n  const onLogout = useCallback(() => {\n    localStorage.clear();\n    dispatch(setUser({ type: null, token: null }));\n    history.push('/');\n  }, []);\n\n  return { onSearch, onLogout, searchText };\n};\n","/* eslint-disable no-unused-vars */\n/* eslint-disable react/react-in-jsx-scope */\nimport React, { useState, useEffect } from 'react';\nimport './index.scss';\nimport InputMask from 'react-input-mask';\nimport { TextField } from '@material-ui/core';\n\ntype Props = {\n  label: string;\n  value?: string | number | null;\n  onChange?: (value: string) => void;\n  disabled?: boolean;\n  required?: boolean;\n};\n\nconst PhoneMaskInput = ({\n  label,\n  onChange,\n  value = '',\n  disabled,\n}: Props) => {\n  const [text, setText] = useState(value || '');\n\n  useEffect(() => {\n    setText(value || '');\n  }, [value]);\n\n  const handleChange = (event: any) => {\n    setText(event.target.value);\n    onChange && onChange(event.target.value);\n  };\n\n  return (\n    <InputMask\n      className=\"custom-input\"\n      mask=\"+38(999)999-99-99\"\n      value={text}\n      disabled={disabled || false}\n      onChange={handleChange}\n    >\n      {() => <TextField variant=\"outlined\" label={label} disabled={disabled || false} />}\n    </InputMask>\n  );\n};\n\nexport default PhoneMaskInput;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport './index.scss';\n\ntype Props = {\n  onClick: () => void;\n  disabled?: boolean;\n};\n\nconst AddFormButton = ({ onClick, disabled }: Props) => {\n  const handleClick = () => {\n    if (disabled) return;\n    onClick();\n  };\n\n  return (\n    <div\n      className={`add-form-button ${disabled ? 'disabled' : ''}`}\n      onClick={handleClick}\n      onKeyPress={handleClick}\n    >\n      <img src=\"/icons/plus.svg\" alt=\"plus\" />\n    </div>\n  );\n};\n\nexport default AddFormButton;\n","export { default } from './RadioButtonsGroup';\n","import * as React from 'react';\nimport './index.scss';\n\ntype Props = {\n  children: React.ReactNode\n}\n\nconst ContentPanel = ({ children }: Props) => (\n  <div className=\"contentPanel\">\n    {children}\n  </div>\n);\n\nexport default ContentPanel;\n","import * as React from 'react';\nimport './index.scss';\n\ntype Props = {\n  children: React.ReactNode\n}\n\nconst ControlPanel = ({ children }: Props) => (\n  <div className=\"controlPanel\">\n    {children}\n  </div>\n);\n\nexport default ControlPanel;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport './index.scss';\n\ntype Props = {\n  onClick: (index: number) => void;\n  index: number;\n  disabled?: boolean;\n};\n\nconst RemoveFormButton = ({ onClick, index, disabled }: Props) => {\n  const handleClick = () => {\n    if (disabled) return;\n    onClick(index);\n  };\n\n  return (\n    <div\n      className={`remove-form-button ${disabled ? 'disabled' : ''}`}\n      onClick={handleClick}\n      onKeyPress={() => onClick(index)}\n    >\n      <img src=\"/icons/minus.svg\" alt=\"minus\" />\n    </div>\n  );\n};\n\nexport default RemoveFormButton;\n","import { useState } from 'react';\nimport { SectionCard } from './components/DashboardSection/DashboardSection';\n\n// eslint-disable-next-line no-shadow\nexport enum DashboardViewType {\n  CARDS,\n  TABLE\n}\n\nexport type Section = {\n  title: string;\n  cards: SectionCard[];\n}\n\nexport type Props = {\n  link: string,\n  sections: Section[],\n  isChangeTypeButton?: boolean,\n  style?: DashboardViewType,\n  haveStatus?: boolean;\n}\n\nexport const useDashboard = ({ style }: Props) => {\n  const [selectedType, setSelectedType] = useState(style || DashboardViewType.CARDS);\n\n  return { selectedType, setSelectedType };\n};\n","import * as React from 'react';\nimport Card from '../../../Card';\nimport { DashboardViewType } from '../../useDashboard';\n\nexport type SectionCard = {\n  id: number;\n  title: string;\n  content: string[];\n  color?: string;\n}\n\ntype Props = {\n  link: string;\n  title: string,\n  cards: SectionCard[],\n  style: DashboardViewType;\n  haveStatus?: boolean;\n}\n\nconst DashboardSection = ({ link, title, cards, style, haveStatus }: Props) => (\n  <div className=\"dashboard__main-section\">\n    <h2>{title}</h2>\n    <div className={`cards ${style === DashboardViewType.TABLE ? 'table' : ''}`}>\n      {cards.map((card: SectionCard) => (\n        <Card\n          haveStatus={haveStatus}\n          key={card.id}\n          title={card.title}\n          headerColor={card.color}\n          link={`/${link}/${card.id}`}\n        >\n          {card.content.map((item: string) => (\n            <span key={item} className=\"card__content-item\">{item}</span>\n          ))}\n        </Card>\n      ))}\n    </div>\n  </div>\n);\n\nexport default DashboardSection;\n","import * as React from 'react';\nimport { DashboardViewType } from '../../useDashboard';\nimport './index.scss';\n\ntype Props = {\n  selected: DashboardViewType;\n  onClick: (value: DashboardViewType) => void;\n}\n\nconst DashboardControl = ({ selected, onClick }: Props) => (\n  <div className=\"dashboard__space-control\">\n    <svg\n      className={`${DashboardViewType.CARDS === selected ? 'selected' : ''}`}\n      onClick={() => onClick(DashboardViewType.CARDS)}\n      width=\"18\"\n      height=\"18\"\n      viewBox=\"0 0 18 18\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.50008 0.666748H7.33341C7.83341 0.666748 8.16675 1.00008 8.16675 1.50008V7.33341C8.16675 7.83341 7.83341 8.16675 7.33341 8.16675H1.50008C1.00008 8.16675 0.666748 7.83341 0.666748 7.33341V1.50008C0.666748 1.00008 1.00008 0.666748 1.50008 0.666748ZM2.33341 6.50008H6.50008V2.33341H2.33341V6.50008ZM16.5001 0.666748H10.6667C10.1667 0.666748 9.83342 1.00008 9.83342 1.50008V7.33341C9.83342 7.83341 10.1667 8.16675 10.6667 8.16675H16.5001C17.0001 8.16675 17.3334 7.83341 17.3334 7.33341V1.50008C17.3334 1.00008 17.0001 0.666748 16.5001 0.666748ZM11.5001 6.50008H15.6667V2.33341H11.5001V6.50008ZM16.5001 9.83342H10.6667C10.1667 9.83342 9.83342 10.1667 9.83342 10.6667V16.5001C9.83342 17.0001 10.1667 17.3334 10.6667 17.3334H16.5001C17.0001 17.3334 17.3334 17.0001 17.3334 16.5001V10.6667C17.3334 10.1667 17.0001 9.83342 16.5001 9.83342ZM11.5001 15.6667H15.6667V11.5001H11.5001V15.6667ZM7.33341 9.83342H1.50008C1.00008 9.83342 0.666748 10.1667 0.666748 10.6667V16.5001C0.666748 17.0001 1.00008 17.3334 1.50008 17.3334H7.33341C7.83341 17.3334 8.16675 17.0001 8.16675 16.5001V10.6667C8.16675 10.1667 7.83341 9.83342 7.33341 9.83342ZM2.33341 15.6667H6.50008V11.5001H2.33341V15.6667Z\" fill=\"#165153\" />\n    </svg>\n    <svg\n      className={`${DashboardViewType.TABLE === selected ? 'selected' : ''}`}\n      onClick={() => onClick(DashboardViewType.TABLE)}\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 20 20\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M3.33325 0.833252H16.6666C18.0833 0.833252 19.1666 1.91659 19.1666 3.33325V6.66659C19.1666 8.08325 18.0833 9.16658 16.6666 9.16658H3.33325C1.91659 9.16658 0.833252 8.08325 0.833252 6.66659V3.33325C0.833252 1.91659 1.91659 0.833252 3.33325 0.833252ZM16.6666 7.49992C17.1666 7.49992 17.4999 7.16658 17.4999 6.66658V3.33325C17.4999 2.83325 17.1666 2.49992 16.6666 2.49992H3.33325C2.83325 2.49992 2.49992 2.83325 2.49992 3.33325V6.66658C2.49992 7.16658 2.83325 7.49992 3.33325 7.49992H16.6666ZM16.6666 10.8333H3.33325C1.91659 10.8333 0.833252 11.9166 0.833252 13.3333V16.6666C0.833252 18.0833 1.91659 19.1666 3.33325 19.1666H16.6666C18.0833 19.1666 19.1666 18.0833 19.1666 16.6666V13.3333C19.1666 11.9166 18.0833 10.8333 16.6666 10.8333ZM16.6666 17.4999C17.1666 17.4999 17.4999 17.1666 17.4999 16.6666V13.3333C17.4999 12.8333 17.1666 12.4999 16.6666 12.4999H3.33325C2.83325 12.4999 2.49992 12.8333 2.49992 13.3333V16.6666C2.49992 17.1666 2.83325 17.4999 3.33325 17.4999H16.6666ZM5.58325 4.41659C5.74992 4.58325 5.83325 4.74992 5.83325 4.99992C5.83325 5.24992 5.74992 5.41659 5.58325 5.58325C5.41658 5.74992 5.24992 5.83325 4.99992 5.83325C4.74992 5.83325 4.58325 5.74992 4.41659 5.58325C4.33325 5.49992 4.24992 5.41659 4.24992 5.33325C4.16659 5.24992 4.16659 5.08325 4.16659 4.99992C4.16659 4.91659 4.16659 4.74992 4.24992 4.66659C4.29159 4.62492 4.31242 4.58325 4.33325 4.54159C4.35409 4.49992 4.37492 4.45825 4.41659 4.41659C4.49992 4.33325 4.58325 4.24992 4.66659 4.24992C4.91658 4.16659 5.08325 4.16659 5.33325 4.24992C5.41658 4.24992 5.49992 4.33325 5.58325 4.41659ZM5.83325 14.9999C5.83325 14.7499 5.74992 14.5833 5.58325 14.4166C5.24992 14.0833 4.74992 14.0833 4.41659 14.4166C4.37492 14.4583 4.35409 14.4999 4.33325 14.5416C4.31242 14.5833 4.29159 14.6249 4.24992 14.6666C4.16659 14.7499 4.16659 14.9166 4.16659 14.9999C4.16659 15.2499 4.24992 15.4166 4.41659 15.5833C4.58325 15.7499 4.74992 15.8333 4.99992 15.8333C5.24992 15.8333 5.41658 15.7499 5.58325 15.5833C5.74992 15.4166 5.83325 15.2499 5.83325 14.9999Z\" fill=\"#C0C1C1\" />\n    </svg>\n  </div>\n);\n\nexport default DashboardControl;\n","import React from 'react';\nimport './index.scss';\nimport { v4 as uuidv4 } from 'uuid';\nimport DashboardSection from './components/DashboardSection';\nimport DashboardControl from './components/DashbordControl';\nimport { Section, Props, useDashboard } from './useDashboard';\n\nconst Dashboard = (props: Props) => {\n  const { selectedType, setSelectedType } = useDashboard(props);\n\n  return (\n    <div className=\"dashboard\">\n      {props.isChangeTypeButton\n        && <DashboardControl selected={selectedType} onClick={setSelectedType} />}\n      {props.sections && (\n        <div className=\"dashboard__main\">\n          {props.sections.map((section: Section) => (\n            <DashboardSection\n              key={uuidv4()}\n              link={props.link}\n              title={section.title}\n              style={selectedType}\n              cards={section.cards}\n              haveStatus={props.haveStatus}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport './index.scss';\nimport CustomSelect from '../CustomSelect';\nimport { useFilter, Props } from './useFilter';\n\nconst Filter = (props: Props) => {\n  const meta = useFilter(props);\n\n  if (!meta.shouldRenderFilter) {\n    return null;\n  }\n\n  return (\n    <div className={`filter ${props.horizontal ? 'horizontal' : ''}`}>\n      {!props.horizontal && (\n        <div className=\"filter__header\">\n          <span className=\"title\">Фільтр</span>\n          <img\n            src=\"/icons/clear-form.svg\"\n            alt=\"clear form\"\n            onClick={meta.clearAll}\n            className=\"filter__clear\"\n          />\n        </div>\n      )}\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '115px' : '100%' }}>\n        <CustomSelect\n          data={meta.notaries}\n          selectedValue={meta.selectedNotary}\n          onChange={meta.setSelectedNotary}\n          label=\"Нотаріус\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '90px' : '100%' }}>\n        <CustomSelect\n          data={meta.readers}\n          selectedValue={meta.selectedReader}\n          onChange={meta.setSelectedReader}\n          label=\"Читач\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '110px' : '100%' }}>\n        <CustomSelect\n          data={meta.accompanyings}\n          selectedValue={meta.selectedAccompanying}\n          onChange={meta.setSelectedAccompanying}\n          label=\"Видавач\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '150px' : '100%' }}>\n        <CustomSelect\n          data={meta.contractTypes}\n          selectedValue={meta.selectedContractType}\n          onChange={meta.setSelectedContractType}\n          label=\"Тип договору\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '140px' : '100%' }}>\n        <CustomSelect\n          data={meta.developers}\n          selectedValue={meta.selectedDeveloper}\n          onChange={meta.setSelectedDeveloper}\n          label=\"Забудовник\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '125px' : '100%' }}>\n        <CustomSelect\n          data={meta.representative}\n          selectedValue={meta.selectedRepresentative}\n          onChange={meta.setSelectedRepresentative}\n          label=\"Підписант\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      {!props.horizontal && (\n        <div\n          className=\"filter__select\"\n        >\n          <CustomSelect\n            data={meta.sortType}\n            selectedValue={meta.selectedSortType}\n            onChange={meta.setSelectedSortType}\n            label=\"Сортувати\"\n            size=\"medium\"\n          />\n        </div>\n      )}\n\n      {props.horizontal && (\n        <div className=\" df\">\n          <img\n            src=\"/icons/clear-form.svg\"\n            alt=\"clear form\"\n            onClick={meta.clearAll}\n            className=\"filter__clear\"\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Filter;\n","import {\n  useEffect, useMemo, useState, useCallback\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FilterData, State } from '../../store/types';\nimport { SelectItem } from '../../types';\nimport { fetchFilterData } from '../../store/filter/actions';\nimport getDeveloperInfo from '../../services/getDeveloperInfo';\n\nexport type Props = {\n  onFilterDataChange: (data: FilterData) => void;\n  horizontal?: boolean;\n}\n\nexport const useFilter = ({ onFilterDataChange, horizontal }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n  const { filterInitialData } = useSelector((state: State) => state.filter);\n\n  useEffect(() => {\n    dispatch(fetchFilterData());\n  }, [token]);\n\n  const readers = useMemo(() => filterInitialData?.reader, [filterInitialData]);\n  const notaries = useMemo(() => filterInitialData?.notary, [\n    filterInitialData,\n  ]);\n  const accompanyings = useMemo(() => filterInitialData?.accompanying, [\n    filterInitialData,\n  ]);\n  const contractTypes = useMemo(() => filterInitialData?.contract_type, [\n    filterInitialData,\n  ]);\n  const developers = useMemo(() => filterInitialData?.developer, [\n    filterInitialData,\n  ]);\n  const sortType = useMemo(() => filterInitialData?.sort_type, [\n    filterInitialData,\n  ]);\n  const [representative, setRepresentative] = useState<SelectItem[]>([]);\n\n  const shouldRenderFilter = useMemo(() => Boolean(filterInitialData), [\n    filterInitialData,\n  ]);\n\n  // selected values and CTA\n  const [selectedNotary, setSelectedNotary] = useState<string | null>(null);\n  const [selectedReader, setSelectedReader] = useState<string | null>(null);\n  const [selectedAccompanying, setSelectedAccompanying] = useState<\n    string | null\n  >(null);\n  const [selectedContractType, setSelectedContractType] = useState<\n    string | null\n  >(null);\n  const [selectedDeveloper, setSelectedDeveloper] = useState<string | null>(\n    null\n  );\n  const [selectedRepresentative, setSelectedRepresentative] = useState<\n    string | null\n  >(null);\n  const [selectedSortType, setSelectedSortType] = useState<string | null>(null);\n\n  const clearAll = useCallback(() => {\n    setSelectedNotary(null);\n    setSelectedReader(null);\n    setSelectedAccompanying(null);\n    setSelectedContractType(null);\n    setSelectedDeveloper(null);\n    setSelectedRepresentative(null);\n    setSelectedSortType(null);\n  }, []);\n\n  // useEffects\n  useEffect(() => {\n    setSelectedRepresentative(null);\n    if (token && selectedDeveloper) {\n      getDeveloperInfo(token, +selectedDeveloper)\n        .then((data) => setRepresentative(data.representative || []));\n    }\n  }, [selectedDeveloper]);\n\n  useEffect(() => {\n    const data: FilterData = {\n      notary_id: selectedNotary || null,\n      reader_id: selectedReader || null,\n      accompanying_id: selectedAccompanying || null,\n      contract_type_id: selectedContractType || null,\n      developer_id: selectedDeveloper || null,\n      dev_representative_id: selectedRepresentative || null,\n    };\n\n    if (!horizontal) {\n      data.sort_type = selectedSortType;\n    }\n\n    onFilterDataChange(data);\n  }, [\n    selectedNotary,\n    selectedReader,\n    selectedAccompanying,\n    selectedContractType,\n    selectedDeveloper,\n    selectedRepresentative,\n    selectedSortType,\n  ]);\n\n  return {\n    shouldRenderFilter,\n    notaries,\n    readers,\n    accompanyings,\n    contractTypes,\n    developers,\n    representative,\n    sortType,\n    selectedNotary,\n    selectedReader,\n    selectedRepresentative,\n    selectedDeveloper,\n    selectedContractType,\n    selectedAccompanying,\n    selectedSortType,\n    setSelectedNotary,\n    setSelectedReader,\n    setSelectedAccompanying,\n    setSelectedContractType,\n    setSelectedDeveloper,\n    setSelectedRepresentative,\n    setSelectedSortType,\n    clearAll,\n  };\n};\n","// eslint-disable-next-line no-shadow\nexport enum DashboardContractNavigation {\n  MAIN = 'main',\n  SELLER = 'seller',\n  IMMOVABLES = 'immovables',\n  CLIENTS = 'clients',\n  SIDE_NOTARIES = 'side-notaries',\n}\n","import React, { useCallback, useEffect, useState } from 'react';\nimport './index.scss';\nimport { v4 as uuidv4 } from 'uuid';\n\ntype Props = {\n  data: any,\n  onChange: (value: string) => void;\n}\n\nconst Contracts = ({ data, onChange }: Props) => {\n  const [selected, setSelected] = useState<string | null>(null);\n\n  const handleChange = useCallback((type: string) => {\n    if (selected === type) return;\n    setSelected(type);\n    onChange(type);\n  }, [selected]);\n\n  useEffect(() => {\n    setSelected(data ? data[0].type : null);\n  }, [data]);\n\n  if (!data) {\n    return null;\n  }\n\n  return (\n    <div className=\"dashboard__filter-contracts\">\n      <span className=\"title\">Договори</span>\n      <div className=\"cards\">\n        {data.map((item: any) => (\n          <div\n            key={uuidv4()}\n            className={`item ${selected === item.type ? 'selected' : ''}`}\n            onClick={() => handleChange(item.type)}\n          >\n            <div className=\"item__left\">\n              <img src=\"/icons/contract.svg\" alt=\"contract\" />\n              <span className=\"name\">{item.title}</span>\n            </div>\n            <span className=\"quantity\">{item.count}</span>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Contracts;\n","import React from 'react';\nimport ControlPanel from '../../../../../../components/ControlPanel';\nimport Filter from '../../../../../../components/Filter';\nimport Contracts from './components/Contracts';\nimport { useFilterContainer } from './useFilterContainer';\n\nconst FilterContainer = () => {\n  const {\n    filterInitialData,\n    onFilterDataChange,\n    onContractsFilterChange\n  } = useFilterContainer();\n\n  return (\n    <ControlPanel>\n      <div className=\"dashboard__filter\">\n        <Contracts data={filterInitialData?.filter_type} onChange={onContractsFilterChange} />\n        <Filter onFilterDataChange={onFilterDataChange} />\n      </div>\n    </ControlPanel>\n  );\n};\n\nexport default FilterContainer;\n","import { useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAppointmentsByContracts, fetchAppointmentsByFilter } from '../../../../../../store/appointments/actions';\nimport { FilterData, State } from '../../../../../../store/types';\n\nexport const useFilterContainer = () => {\n  const dispatch = useDispatch();\n  const { filterInitialData } = useSelector((state: State) => state.filter);\n\n  const onFilterDataChange = useCallback((data: FilterData) => {\n    dispatch(fetchAppointmentsByFilter(data));\n  }, []);\n\n  const onContractsFilterChange = useCallback((url: string) => {\n    dispatch(fetchAppointmentsByContracts(url));\n  }, []);\n\n  return {\n    filterInitialData,\n    onFilterDataChange,\n    onContractsFilterChange,\n  };\n};\n","import React from 'react';\nimport Filter from './components/FilterContainer';\nimport { useModal } from '../../../../components/Modal/useModal';\nimport Modal from '../../../../components/Modal';\nimport Dashboard from '../../../../components/Dashboard';\nimport { useDashboardContainer } from './useDashboardContainer';\nimport ContentPanel from '../../../../components/ContentPanel';\nimport Loader from '../../../../components/Loader/Loader';\n\nconst DashboardContainer = () => {\n  const modalProps = useModal();\n  const { formatAppointments, isLoading } = useDashboardContainer();\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <div className=\"dashboard-screen\">\n      <Filter />\n      <ContentPanel>\n        <Dashboard\n          link=\"main\"\n          sections={formatAppointments}\n          isChangeTypeButton\n        />\n      </ContentPanel>\n      <Modal {...modalProps} />\n    </div>\n  );\n};\n\nexport default DashboardContainer;\n","import { useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setAppointments, fetchAppointments } from '../../../../store/appointments/actions';\nimport { UserTypes } from '../../../../types';\nimport { State } from '../../../../store/types';\n\nexport const useDashboardContainer = () => {\n  const dispatch = useDispatch();\n  const { appointments, isLoading } = useSelector((state: State) => state.appointments);\n\n  useEffect(() => {\n    dispatch(fetchAppointments());\n\n    return () => { dispatch(setAppointments([])); };\n  }, []);\n\n  const formatAppointments = useMemo(() => appointments.map((item: any) => ({\n    title: `${item.day} ${item.date}`,\n    cards: item.cards.map((card: any) => ({\n      id: card.id,\n      title: card.title,\n      content: card.instructions,\n      color: card.color,\n    }))\n  })), [appointments]);\n\n  return { formatAppointments, isLoading };\n};\n","import * as React from 'react';\nimport ControlPanel from '../../../../../../components/ControlPanel';\nimport { DashboardContractNavigation } from '../../../../useDashboardScreen';\nimport { useNavigation } from './useNavigation';\n\ntype Props = {\n  selected?: DashboardContractNavigation;\n}\n\nconst Navigation = ({ selected }: Props) => {\n  const meta = useNavigation();\n\n  return (\n    <ControlPanel>\n      <button\n        className={`navigation-button ${\n          selected === DashboardContractNavigation.MAIN ? 'selected' : ''\n        }`}\n        type=\"button\"\n        onClick={() => meta.handleClick(DashboardContractNavigation.MAIN)}\n      >\n        <img src=\"/icons/navigation/book-open.svg\" alt=\"main\" />\n        Головна\n      </button>\n\n      {meta.shouldShowSeller && (\n        <button\n          className={`navigation-button ${\n            selected === DashboardContractNavigation.SELLER ? 'selected' : ''\n          }`}\n          type=\"button\"\n          onClick={() => meta.handleClick(DashboardContractNavigation.SELLER)}\n        >\n          <img src=\"/icons/navigation/developer.svg\" alt=\"seller\" />\n          Продавець\n        </button>\n      )}\n\n      {meta.shouldShowImmovable && (\n        <button\n          className={`navigation-button ${\n            selected === DashboardContractNavigation.IMMOVABLES ? 'selected' : ''\n          }`}\n          type=\"button\"\n          onClick={() => meta.handleClick(DashboardContractNavigation.IMMOVABLES)}\n        >\n          <img src=\"/icons/navigation/immovable.svg\" alt=\"immovables\" />\n          Нерухомість\n        </button>\n      )}\n\n      {meta.shouldShowClient && (\n        <button\n          className={`navigation-button ${\n            selected === DashboardContractNavigation.CLIENTS ? 'selected' : ''\n          }`}\n          type=\"button\"\n          onClick={() => meta.handleClick(DashboardContractNavigation.CLIENTS)}\n        >\n          <img src=\"/icons/navigation/user.svg\" alt=\"clients\" />\n          Клієнти\n        </button>\n      )}\n\n      {meta.shouldShowSideNotaries && (\n        <button\n          className={`navigation-button ${\n            selected === DashboardContractNavigation.SIDE_NOTARIES ? 'selected' : ''\n          }`}\n          type=\"button\"\n          onClick={() => meta.handleClick(DashboardContractNavigation.SIDE_NOTARIES)}\n        >\n          <img src=\"/icons/navigation/book-open.svg\" alt=\"side notaries\" />\n          Сторонній нотаріус\n        </button>\n      )}\n    </ControlPanel>\n  );\n};\n\nexport default Navigation;\n","import { useMemo } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { UserTypes } from '../../../../../../types';\nimport { State } from '../../../../../../store/types';\nimport { DashboardContractNavigation } from '../../../../useDashboardScreen';\n\nexport const useNavigation = () => {\n  const history = useHistory();\n  const { id } = useParams<{ id: string }>();\n  const { user } = useSelector((state: State) => state.main);\n\n  const handleClick = (type: DashboardContractNavigation) => {\n    history.push(`/${type}/${id}`);\n  };\n\n  const shouldShowSeller = useMemo(() => user.type === UserTypes.GENERATOR, [user.type]);\n  const shouldShowImmovable = useMemo(() => user.type !== UserTypes.ASSISTANT, [user.type]);\n  const shouldShowClient = useMemo(() => user.type !== UserTypes.ASSISTANT, [user.type]);\n  const shouldShowSideNotaries = useMemo(() => user.type === UserTypes.GENERATOR, [user.type]);\n\n  return {\n    shouldShowSeller,\n    shouldShowImmovable,\n    shouldShowClient,\n    shouldShowSideNotaries,\n    handleClick,\n  };\n};\n","import * as React from 'react';\nimport Card from '../../../../../../../../../../../../components/Card';\nimport Loader from '../../../../../../../../../../../../components/Loader/Loader';\nimport { useDashboard } from './useDashboard';\n\nconst Dashboard = () => {\n  const meta = useDashboard();\n\n  if (meta.isLoading) {\n    return (\n      <Loader />\n    );\n  }\n\n  return (\n    <div className=\"immovable__dashboard\">\n      <div className=\"dashboard-header section-title\">Нерухомість</div>\n\n      <div className=\"grid\">\n        {(meta.immovables || []).map((immovable) => (\n          <Card\n            key={immovable.id}\n            title={immovable.title}\n            link={`/immovables/${meta.id}/${immovable.id}`}\n          >\n            {immovable.list.map((item) => (\n              <span>{item}</span>\n            ))}\n          </Card>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { UserTypes } from '../../../../../../../../../../../../types';\nimport { fetchImmovables, setImmovables } from '../../../../../../../../../../../../store/immovables/actions';\nimport { State } from '../../../../../../../../../../../../store/types';\n\nexport const useDashboard = () => {\n  const { id } = useParams<{ id: string }>();\n  const dispatch = useDispatch();\n\n  const { immovables, isLoading } = useSelector((state: State) => state.immovables);\n\n  useEffect(() => {\n    dispatch(fetchImmovables(id, UserTypes.GENERATOR));\n\n    return () => { dispatch(setImmovables([])); };\n  }, []);\n\n  return {\n    id,\n    isLoading,\n    immovables,\n  };\n};\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqImmovableTemplate(\n  token: string,\n  id: string,\n  method: 'GET' | 'PUT' | undefined = 'GET',\n  bodyData?: any\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/immovable/template/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeMonthWitDate, formatDate } from '../../../../../../../../../../../../../../utils/formatDates';\nimport { SelectItem } from '../../../../../../../../../../../../../../types';\nimport { setModalInfo } from '../../../../../../../../../../../../../../store/main/actions';\nimport { State } from '../../../../../../../../../../../../../../store/types';\nimport reqImmovableTemplate from '../../../../../../../../../../../../../../services/generator/Immovable/reqImmovableTemplate';\n\ntype InitialData = {\n  bank_template_id: number | null,\n  taxes_template_id: number | null,\n  contract_template_id: number | null,\n  questionnaire_template_id: number | null,\n  statement_template_id: number | null,\n  type_id: number | null,\n  communal_template_id: number | null,\n  termination_contract_id: number | null,\n  termination_refund_id: number | null,\n  termination_refund_reg_number: string | null,\n  termination_refund_notary_id: string | null,\n  ready: boolean,\n  translate: boolean,\n  sign_date: any,\n  final_sign_date: any,\n  termination_refund_reg_date: any,\n  contract_type?: SelectItem[],\n  statement_templates?: SelectItem[],\n  questionnaire_templates?: SelectItem[],\n  bank_templates?: SelectItem[],\n  taxes_templates?: SelectItem[],\n  communal_templates?: SelectItem[],\n  termination_contracts?: SelectItem[],\n  termination_refunds?: SelectItem[],\n  notary?: SelectItem[],\n  contract_templates?: any,\n}\n\nexport type Props = {\n  id: string,\n  initialData?: InitialData,\n}\n\nexport const useTemplates = ({ initialData, id }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  // Initial data\n  const [contractType, setContractType] = useState<SelectItem[]>([]);\n  const [statementTemplates, setStatementTemplates] = useState<SelectItem[]>([]);\n  const [questionnaireTemplates, setQuestionnaireTemplates] = useState<SelectItem[]>([]);\n  const [bankTemplates, setBankTemplates] = useState<SelectItem[]>([]);\n  const [taxesTemplates, setTaxesTemplates] = useState<SelectItem[]>([]);\n  const [contractTemplates, setContractTemplates] = useState<SelectItem[]>([]);\n  const [communalTemplates, setCommunalTemplates] = useState<SelectItem[]>([]);\n  const [terminationContracts, setTerminationContracts] = useState<SelectItem[]>([]);\n  const [terminationRefunds, setTerminationRefunds] = useState<SelectItem[]>([]);\n  const [notaries, setNotaries] = useState<SelectItem[]>([]);\n\n  const [data, setData] = useState<InitialData>({\n    type_id: null,\n    contract_template_id: null,\n    taxes_template_id: null,\n    bank_template_id: null,\n    questionnaire_template_id: null,\n    statement_template_id: null,\n    ready: false,\n    translate: false,\n    sign_date: null,\n    final_sign_date: null,\n    communal_template_id: null,\n    termination_contract_id: null,\n    termination_refund_id: null,\n    termination_refund_reg_date: null,\n    termination_refund_reg_number: null,\n    termination_refund_notary_id: null,\n  });\n\n  const onClear = useCallback(() => {\n    setData({\n      type_id: null,\n      contract_template_id: null,\n      taxes_template_id: null,\n      bank_template_id: null,\n      questionnaire_template_id: null,\n      statement_template_id: null,\n      ready: false,\n      translate: false,\n      sign_date: null,\n      final_sign_date: null,\n      communal_template_id: null,\n      termination_contract_id: null,\n      termination_refund_id: null,\n      termination_refund_reg_date: null,\n      termination_refund_reg_number: null,\n      termination_refund_notary_id: null,\n    });\n  }, []);\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const reqData = {\n        ...data,\n        sign_date: formatDate(data.sign_date),\n        final_sign_date: formatDate(data.final_sign_date),\n        termination_refund_reg_date: formatDate(data.termination_refund_reg_date)\n      };\n\n      const { success, message } = await reqImmovableTemplate(token, id, 'PUT', reqData);\n      dispatch(\n        setModalInfo({\n          open: true,\n          success,\n          message,\n        })\n      );\n    }\n  }, [data, token]);\n\n  useEffect(() => {\n    setContractType(initialData?.contract_type || []);\n    setStatementTemplates(initialData?.statement_templates || []);\n    setQuestionnaireTemplates(initialData?.questionnaire_templates || []);\n    setBankTemplates(initialData?.bank_templates || []);\n    setTaxesTemplates(initialData?.taxes_templates || []);\n    setContractTemplates(initialData?.contract_templates || []);\n    setCommunalTemplates(initialData?.communal_templates || []);\n    setTerminationContracts(initialData?.termination_contracts || []);\n    setTerminationRefunds(initialData?.termination_refunds || []);\n    setNotaries(initialData?.notary || []);\n    setData({\n      type_id: initialData?.type_id || null,\n      contract_template_id: initialData?.contract_template_id || null,\n      taxes_template_id: initialData?.taxes_template_id || null,\n      bank_template_id: initialData?.bank_template_id || null,\n      questionnaire_template_id: initialData?.questionnaire_template_id || null,\n      statement_template_id: initialData?.statement_template_id || null,\n      communal_template_id: initialData?.communal_template_id || null,\n      termination_contract_id: initialData?.termination_contract_id || null,\n      termination_refund_id: initialData?.termination_refund_id || null,\n      termination_refund_reg_number: initialData?.termination_refund_reg_number || null,\n      termination_refund_notary_id: initialData?.termination_refund_notary_id || null,\n      ready: initialData?.ready || false,\n      translate: initialData?.translate || false,\n      sign_date: initialData?.sign_date\n        ? new Date(changeMonthWitDate(initialData?.sign_date)) : null,\n      final_sign_date: initialData?.final_sign_date\n        ? new Date(changeMonthWitDate(initialData?.final_sign_date)) : null,\n      termination_refund_reg_date: initialData?.termination_refund_reg_date\n        ? new Date(changeMonthWitDate(initialData?.termination_refund_reg_date)) : null,\n    });\n  }, [initialData]);\n\n  useEffect(() => {\n    if (initialData?.contract_templates) {\n      setContractTemplates(initialData?.contract_templates\n        .filter((item: any) => item.type_id === data.type_id));\n    }\n  }, [data.type_id, initialData?.contract_templates]);\n\n  return {\n    data,\n    contractType,\n    statementTemplates,\n    questionnaireTemplates,\n    bankTemplates,\n    taxesTemplates,\n    contractTemplates,\n    communalTemplates,\n    terminationContracts,\n    terminationRefunds,\n    notaries,\n    setData,\n    onClear,\n    onSave,\n  };\n};\n","import * as React from 'react';\nimport CustomDatePicker from '../../../../../../../../../../../../../../components/CustomDatePicker';\nimport CustomInput from '../../../../../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../../../../../components/CustomSelect';\nimport CustomSwitch from '../../../../../../../../../../../../../../components/CustomSwitch';\nimport PrimaryButton from '../../../../../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../../../../../components/SectionWithTitle';\nimport { useTemplates, Props } from './useTemplates';\n\nconst Templates = (props: Props) => {\n  const meta = useTemplates(props);\n\n  return (\n    <div className=\"templates\">\n      <SectionWithTitle title=\"Договір\">\n        <div className=\"grid\">\n          <CustomSelect\n            label=\"Тип договору\"\n            data={meta.contractType}\n            onChange={(e) => meta.setData({ ...meta.data, type_id: +e })}\n            selectedValue={meta.data.type_id}\n          />\n          <CustomSelect\n            label=\"Шаблон договору\"\n            data={meta.contractTemplates}\n            onChange={(e) => meta.setData({ ...meta.data, contract_template_id: +e })}\n            selectedValue={meta.data.contract_template_id}\n          />\n          <CustomDatePicker\n            label=\"Дата підписання договору\"\n            onSelect={(e) => meta.setData({ ...meta.data, sign_date: e })}\n            selectedDate={meta.data.sign_date}\n          />\n\n          <CustomSwitch\n            label=\"Оброблений\"\n            onChange={(e) => meta.setData({ ...meta.data, ready: e })}\n            selected={meta.data.ready}\n          />\n          <CustomDatePicker\n            label=\"ПД - дата підписання ОД\"\n            onSelect={(e) => meta.setData({ ...meta.data, final_sign_date: e })}\n            selectedDate={meta.data.final_sign_date}\n          />\n          <CustomSwitch\n            label=\"Усний переклад\"\n            onChange={(e) => meta.setData({ ...meta.data, translate: e })}\n            selected={meta.data.translate}\n          />\n        </div>\n      </SectionWithTitle>\n\n      <SectionWithTitle title=\"Оплата рахунку\">\n        <div className=\"flex-center\">\n          <CustomSelect\n            label=\"Шаблон рахунку\"\n            data={meta.bankTemplates}\n            onChange={(e) => meta.setData({ ...meta.data, bank_template_id: +e })}\n            selectedValue={meta.data.bank_template_id}\n            className=\"single\"\n          />\n        </div>\n      </SectionWithTitle>\n\n      <SectionWithTitle title=\"Оплата податків\">\n        <div className=\"flex-center\">\n          <CustomSelect\n            label=\"Шаблон рахунку податків\"\n            data={meta.taxesTemplates}\n            onChange={(e) => meta.setData({ ...meta.data, taxes_template_id: +e })}\n            selectedValue={meta.data.taxes_template_id}\n            className=\"single\"\n          />\n        </div>\n      </SectionWithTitle>\n\n      <SectionWithTitle title=\"Запит щодо зареєстрованих осіб\">\n        <div className=\"flex-center\">\n          <CustomSelect\n            label=\"Шаблон запиту\"\n            data={meta.statementTemplates}\n            onChange={(e) => meta.setData({ ...meta.data, statement_template_id: +e })}\n            selectedValue={meta.data.statement_template_id}\n            className=\"single\"\n          />\n        </div>\n      </SectionWithTitle>\n\n      <SectionWithTitle title=\"Анкета фінансового моніторінгу\">\n        <div className=\"flex-center\">\n          <CustomSelect\n            label=\"Шаблон анкети\"\n            data={meta.questionnaireTemplates}\n            onChange={(e) => meta.setData({ ...meta.data, questionnaire_template_id: +e })}\n            selectedValue={meta.data.questionnaire_template_id}\n            className=\"single\"\n          />\n        </div>\n      </SectionWithTitle>\n\n      <SectionWithTitle title=\"Довіреність щодо надання комунальних та інших послуг\">\n        <div className=\"flex-center\">\n          <CustomSelect\n            label=\"Шаблон по коммунальним\"\n            data={meta.communalTemplates}\n            onChange={(e) => meta.setData({ ...meta.data, communal_template_id: +e })}\n            selectedValue={meta.data.communal_template_id}\n            className=\"single\"\n          />\n        </div>\n      </SectionWithTitle>\n\n      <SectionWithTitle title=\"Договір розірвання ПД\">\n        <div className=\"flex-center\">\n          <CustomSelect\n            label=\"Шаблон договору розірвання ПД\"\n            data={meta.terminationContracts}\n            onChange={(e) => meta.setData({ ...meta.data, termination_contract_id: +e })}\n            selectedValue={meta.data.termination_contract_id}\n            className=\"single\"\n          />\n        </div>\n      </SectionWithTitle>\n\n      <SectionWithTitle title=\"Заява про повернення коштів\">\n        <div className=\"grid-center-duet\">\n          <CustomSelect\n            label=\"Шаблон договору розірвання ПД\"\n            data={meta.terminationRefunds}\n            onChange={(e) => meta.setData({ ...meta.data, termination_refund_id: +e })}\n            selectedValue={meta.data.termination_refund_id}\n          />\n\n          <CustomSelect\n            label=\"Нотаріус\"\n            data={meta.notaries}\n            onChange={(e) => meta.setData({ ...meta.data, termination_refund_notary_id: e })}\n            selectedValue={meta.data.termination_refund_notary_id}\n          />\n\n          <CustomDatePicker\n            label=\"Дата посвідчення\"\n            onSelect={(e) => meta.setData({ ...meta.data, termination_refund_reg_date: e })}\n            selectedDate={meta.data.termination_refund_reg_date}\n          />\n\n          <CustomInput\n            label=\"Реєстровий номер\"\n            onChange={(e) => meta.setData({ ...meta.data, termination_refund_reg_number: e })}\n            value={meta.data.termination_refund_reg_number}\n          />\n        </div>\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={meta.onSave} disabled={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default Templates;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqImmovableGeneral(\n  token: string,\n  id: string,\n  method: 'GET' | 'PUT' | undefined = 'GET',\n  bodyData?: any\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/immovable/general/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport reqImmovableGeneral from '../../../../../../../../../../../../../../services/generator/Immovable/reqImmovableGeneral';\nimport { setModalInfo } from '../../../../../../../../../../../../../../store/main/actions';\nimport { State } from '../../../../../../../../../../../../../../store/types';\nimport { SelectItem } from '../../../../../../../../../../../../../../types';\n\ntype InitialData = {\n  imm_type_id: number | null;\n  building_id: string;\n  roominess_id: string;\n  imm_number: string;\n  registration_number: string;\n  price_grn: string;\n  reserve_grn: string;\n  m2_grn: string;\n  total_space: string;\n  living_space: string;\n  floor: string;\n  section: any;\n  roominess?: SelectItem[],\n  building?: SelectItem[],\n  imm_type?: SelectItem[]\n}\n\nexport type Props = {\n  id: string,\n  initialData?: InitialData,\n}\n\nexport const useGeneral = ({ initialData, id }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  // Initial data\n  const [roominess, setRoominess] = useState<SelectItem[]>([]);\n  const [building, setBuilding] = useState<SelectItem[]>([]);\n  const [immType, setImmType] = useState<SelectItem[]>([]);\n  const [data, setData] = useState<InitialData>({\n    imm_type_id: null,\n    building_id: '',\n    roominess_id: '',\n    imm_number: '',\n    registration_number: '',\n    price_grn: '',\n    reserve_grn: '',\n    m2_grn: '',\n    total_space: '',\n    living_space: '',\n    floor: '',\n    section: '',\n  });\n\n  const onClear = useCallback(() => {\n    setData({\n      imm_type_id: null,\n      building_id: '',\n      roominess_id: '',\n      imm_number: '',\n      registration_number: '',\n      price_grn: '',\n      reserve_grn: '',\n      m2_grn: '',\n      total_space: '',\n      living_space: '',\n      floor: '',\n      section: '',\n    });\n  }, []);\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const { success, message } = await reqImmovableGeneral(token, id, 'PUT', data);\n      dispatch(\n        setModalInfo({\n          open: true,\n          success,\n          message,\n        })\n      );\n    }\n  }, [data, token]);\n\n  const isSaveButtonDisable = useMemo(\n    () => !data.building_id\n      || !data.imm_number\n      || !data.imm_type_id,\n    [data.building_id, data.imm_number, data.imm_type_id]\n  );\n\n  useEffect(() => {\n    setRoominess(initialData?.roominess || []);\n    setBuilding(initialData?.building || []);\n    setImmType(initialData?.imm_type || []);\n    setData({\n      imm_type_id: initialData?.imm_type_id || null,\n      building_id: initialData?.building_id || '',\n      roominess_id: initialData?.roominess_id || '',\n      imm_number: initialData?.imm_number || '',\n      registration_number: initialData?.registration_number || '',\n      price_grn: initialData?.price_grn || '',\n      reserve_grn: initialData?.reserve_grn || '',\n      m2_grn: initialData?.m2_grn || '',\n      total_space: initialData?.total_space || '',\n      living_space: initialData?.living_space || '',\n      floor: initialData?.floor || '',\n      section: initialData?.section || '',\n    });\n  }, [initialData]);\n\n  return {\n    roominess,\n    building,\n    immType,\n    data,\n    isSaveButtonDisable,\n    setData,\n    onClear,\n    onSave,\n  };\n};\n","import * as React from 'react';\nimport CustomInput from '../../../../../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../../../../../components/CustomSelect';\nimport PrimaryButton from '../../../../../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../../../../../components/SectionWithTitle';\nimport { useGeneral, Props } from './useGeneral';\n\nconst General = (props: Props) => {\n  const meta = useGeneral(props);\n\n  return (\n    <>\n      <SectionWithTitle title=\"Загальні дані\" onClear={meta.onClear}>\n        <div className=\"general grid-center-duet\">\n          <CustomSelect\n            required\n            label=\"Тип нерухомості\"\n            data={meta.immType}\n            onChange={(e) => meta.setData({ ...meta.data, imm_type_id: +e })}\n            selectedValue={meta.data.imm_type_id}\n          />\n          <CustomSelect\n            required\n            label=\"Адреса\"\n            data={meta.building}\n            onChange={(e) => meta.setData({ ...meta.data, building_id: e })}\n            selectedValue={meta.data.building_id}\n          />\n\n          <CustomInput\n            required\n            label=\"Номер нерухомості\"\n            onChange={(e) => meta.setData({ ...meta.data, imm_number: e })}\n            value={meta.data.imm_number}\n          />\n          <CustomInput\n            label=\"Реєстраційний номер\"\n            onChange={(e) => meta.setData({ ...meta.data, registration_number: e })}\n            value={meta.data.registration_number}\n          />\n\n          <CustomInput\n            label=\"Повна вартість в гривнях\"\n            onChange={(e) => meta.setData({ ...meta.data, price_grn: e })}\n            value={meta.data.price_grn}\n          />\n          <CustomInput\n            label=\"Сума внеску зг. попереднього договору в грн\"\n            onChange={(e) => meta.setData({ ...meta.data, reserve_grn: e })}\n            value={meta.data.reserve_grn}\n          />\n\n          <CustomInput\n            label=\"Вартість 1 кв. м. гривнях\"\n            onChange={(e) => meta.setData({ ...meta.data, m2_grn: e })}\n            value={meta.data.m2_grn}\n          />\n\n          <div className=\"duet\">\n            <CustomInput\n              label=\"Загальна площа\"\n              onChange={(e) => meta.setData({ ...meta.data, total_space: e })}\n              value={meta.data.total_space}\n            />\n            <CustomInput\n              label=\"Житлова площа\"\n              onChange={(e) => meta.setData({ ...meta.data, living_space: e })}\n              value={meta.data.living_space}\n            />\n          </div>\n\n          <div className=\"trio\">\n            <CustomSelect\n              label=\"К-ть кімнат\"\n              data={meta.roominess}\n              onChange={(e) => meta.setData({ ...meta.data, roominess_id: e })}\n              selectedValue={meta.data.roominess_id}\n            />\n            <CustomInput\n              label=\"№ поверху\"\n              onChange={(e) => meta.setData({ ...meta.data, floor: e })}\n              value={meta.data.floor}\n            />\n            <CustomInput\n              label=\"№ секції\"\n              onChange={(e) => meta.setData({ ...meta.data, section: +e })}\n              value={meta.data.section}\n            />\n          </div>\n        </div>\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={meta.onSave} disabled={meta.isSaveButtonDisable} />\n      </div>\n    </>\n  );\n};\n\nexport default General;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqImmovableOwnership(\n  token: string,\n  id: string,\n  method: 'GET' | 'PUT' | undefined = 'GET',\n  bodyData?: any\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/immovable/ownership/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeMonthWitDate, formatDate } from '../../../../../../../../../../../../../../utils/formatDates';\nimport { setModalInfo } from '../../../../../../../../../../../../../../store/main/actions';\nimport { State } from '../../../../../../../../../../../../../../store/types';\nimport reqImmovableOwnership from '../../../../../../../../../../../../../../services/generator/Immovable/reqImmovableOwnership';\n\ntype InitialData = {\n  reg_date: any;\n  reg_number: number | string;\n  discharge_date: any;\n  discharge_number: number | string;\n  notary_id: string | null;\n  notary?: any,\n}\n\nexport type Props = {\n  id: string,\n  initialData?: InitialData,\n}\n\nexport const useOwnership = ({ initialData, id }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  const [notary, setNotary] = useState([]);\n\n  // Initial data\n  const [data, setData] = useState<InitialData>({\n    reg_date: null,\n    reg_number: '',\n    discharge_date: null,\n    discharge_number: '',\n    notary_id: null,\n  });\n\n  const onClear = useCallback(() => {\n    setData({\n      reg_date: null,\n      reg_number: '',\n      discharge_date: null,\n      discharge_number: '',\n      notary_id: null,\n    });\n  }, []);\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const reqData = {\n        ...data,\n        reg_date: formatDate(data.reg_date),\n        discharge_date: formatDate(data.discharge_date),\n      };\n\n      const { success, message } = await reqImmovableOwnership(token, id, 'PUT', reqData);\n      dispatch(\n        setModalInfo({\n          open: true,\n          success,\n          message,\n        })\n      );\n    }\n  }, [data, token]);\n\n  useEffect(() => {\n    setData({\n      reg_date: initialData?.reg_date ? new Date(changeMonthWitDate(initialData?.reg_date)) : null,\n      reg_number: initialData?.reg_number || '',\n      discharge_date: initialData?.discharge_date\n        ? new Date(changeMonthWitDate(initialData?.discharge_date)) : null,\n      discharge_number: initialData?.discharge_number || '',\n      notary_id: initialData?.notary_id || null,\n    });\n    setNotary(initialData?.notary || []);\n  }, [initialData]);\n\n  return {\n    data,\n    notary,\n    setData,\n    onClear,\n    onSave,\n  };\n};\n","import { data } from 'jquery';\nimport * as React from 'react';\nimport CustomDatePicker from '../../../../../../../../../../../../../../components/CustomDatePicker';\nimport CustomInput from '../../../../../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../../../../../components/CustomSelect';\nimport PrimaryButton from '../../../../../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../../../../../components/SectionWithTitle';\nimport { useOwnership, Props } from './useOwnership';\n\nconst Ownership = (props: Props) => {\n  const meta = useOwnership(props);\n\n  return (\n    <div className=\"ownership\">\n      <SectionWithTitle title=\"Право власності\" onClear={meta.onClear}>\n        <div className=\"grid-center-duet mb20\">\n          <CustomSelect\n            label=\"Нотаріус\"\n            data={meta.notary}\n            onChange={(e) => meta.setData({ ...meta.data, notary_id: e })}\n            selectedValue={meta.data.notary_id}\n          />\n          {/* <CustomSelect\n            label=\"Нотаріус\"\n            data={meta.notary}\n            onChange={(e) => meta.setData({ ...meta.data, notary_id: e })}\n            selectedValue={meta.data.notary_id}\n          /> */}\n        </div>\n        <div className=\"grid-center-duet\">\n          <CustomDatePicker\n            label=\"Дата запису про право власності\"\n            onSelect={(e) => meta.setData({ ...meta.data, reg_date: e })}\n            selectedDate={meta.data.reg_date}\n          />\n          <CustomInput\n            label=\"Номер запису про право власності\"\n            onChange={(e) => meta.setData({ ...meta.data, reg_number: +e })}\n            value={meta.data.reg_number}\n          />\n\n          <CustomDatePicker\n            label=\"Дата витягу про право власності\"\n            onSelect={(e) => meta.setData({ ...meta.data, discharge_date: e })}\n            selectedDate={meta.data.discharge_date}\n          />\n          <CustomInput\n            label=\"Номер витягу про право власності\"\n            onChange={(e) => meta.setData({ ...meta.data, discharge_number: +e })}\n            value={meta.data.discharge_number}\n          />\n        </div>\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={meta.onSave} disabled={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default Ownership;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqImmovableRating(\n  token: string,\n  id?: string,\n  method: 'GET' | 'PUT' | undefined = 'GET',\n  bodyData?: any\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/immovable/valuation/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeMonthWitDate, formatDate } from '../../../../../../../../../../../../../../utils/formatDates';\nimport { SelectItem } from '../../../../../../../../../../../../../../types';\nimport { setModalInfo } from '../../../../../../../../../../../../../../store/main/actions';\nimport { State } from '../../../../../../../../../../../../../../store/types';\nimport reqImmovableRating from '../../../../../../../../../../../../../../services/generator/Immovable/reqImmovableRating';\n\ntype InitialData = {\n  property_valuation_id: number | null,\n  date: any,\n  price: number | null,\n  title: string | null,\n  property_valuation?: SelectItem[]\n}\n\nexport type Props = {\n  id: string,\n  initialData?: InitialData,\n}\n\nexport const useRating = ({ initialData, id }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  // Initial data\n  const [valuation, setValuation] = useState<SelectItem[]>([]);\n  const [data, setData] = useState<InitialData>({\n    property_valuation_id: null,\n    date: null,\n    price: null,\n    title: null,\n  });\n\n  const onClear = useCallback(() => {\n    setData({\n      property_valuation_id: null,\n      date: null,\n      price: null,\n      title: null,\n    });\n  }, []);\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const reqData = {\n        ...data,\n        date: formatDate(data.date),\n      };\n\n      const { success, message } = await reqImmovableRating(token, id, 'PUT', reqData);\n      dispatch(\n        setModalInfo({\n          open: true,\n          success,\n          message,\n        })\n      );\n    }\n  }, [data, token]);\n\n  useEffect(() => {\n    setValuation(initialData?.property_valuation || []);\n    setData({\n      property_valuation_id: initialData?.property_valuation_id || null,\n      date: initialData?.date ? new Date(changeMonthWitDate(initialData?.date)) : null,\n      price: initialData?.price || null,\n      title: initialData?.title || null,\n    });\n  }, [initialData]);\n\n  return {\n    data,\n    valuation,\n    setData,\n    onClear,\n    onSave,\n  };\n};\n","import * as React from 'react';\nimport CustomDatePicker from '../../../../../../../../../../../../../../components/CustomDatePicker';\nimport CustomInput from '../../../../../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../../../../../components/CustomSelect';\nimport PrimaryButton from '../../../../../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../../../../../components/SectionWithTitle';\nimport { useRating, Props } from './useRating';\n\nconst Rating = (props: Props) => {\n  const { data, valuation, setData, onClear, onSave } = useRating(props);\n\n  return (\n    <div className=\"rating\">\n      <SectionWithTitle title=\"Оцінка\" onClear={onClear}>\n        <div className=\"grid mb20\">\n          <CustomSelect\n            label=\"Оцінка від компанії\"\n            data={valuation}\n            onChange={(e) => setData({ ...data, property_valuation_id: +e })}\n            selectedValue={data.property_valuation_id}\n          />\n          <CustomDatePicker\n            label=\"Дата оцінки\"\n            onSelect={(e) => setData({ ...data, date: e })}\n            selectedDate={data.date}\n          />\n          <CustomInput\n            label=\"Ціна в грн\"\n            onChange={(e) => setData({ ...data, price: +e })}\n            value={data.price}\n          />\n        </div>\n        <CustomInput\n          label=\"Назва документа у родовому відмінку\"\n          onChange={(e) => setData({ ...data, title: e })}\n          value={data.title}\n        />\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={onSave} disabled={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default Rating;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqImmovablePayment(\n  token: string,\n  id: string,\n  method: 'GET' | 'PUT' | undefined = 'GET',\n  bodyData?: any\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/immovable/payment/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SelectItem } from '../../../../../../../../../../../../../../types';\nimport { changeMonthWitDate, formatDate } from '../../../../../../../../../../../../../../utils/formatDates';\nimport reqImmovablePayment from '../../../../../../../../../../../../../../services/generator/Immovable/reqImmovablePayment';\nimport { setModalInfo } from '../../../../../../../../../../../../../../store/main/actions';\nimport { State } from '../../../../../../../../../../../../../../store/types';\n\ntype InitialData = {\n  sign_date: any,\n  final_date: any,\n  reg_num: number | null,\n  first_part_grn: number | null,\n  client_id: number | null,\n  clients?: SelectItem[],\n}\n\nexport type Props = {\n  id: string,\n  initialData?: InitialData,\n}\n\nexport const useSecurityPayment = ({ initialData, id }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  const [clients, setClients] = useState<SelectItem[]>([]);\n  // Initial data\n  const [data, setData] = useState<InitialData>({\n    sign_date: null,\n    final_date: null,\n    reg_num: null,\n    first_part_grn: null,\n    client_id: null,\n  });\n\n  const onClear = useCallback(() => {\n    setData({\n      sign_date: null,\n      final_date: null,\n      reg_num: null,\n      first_part_grn: null,\n      client_id: null,\n    });\n  }, []);\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const reqData = {\n        ...data,\n        sign_date: formatDate(data.sign_date),\n        final_date: formatDate(data.final_date),\n      };\n\n      const { success, message } = await reqImmovablePayment(token, id, 'PUT', reqData);\n      dispatch(\n        setModalInfo({\n          open: true,\n          success,\n          message,\n        })\n      );\n    }\n  }, [data, token]);\n\n  useEffect(() => {\n    setClients(initialData?.clients || []);\n    setData({\n      sign_date: initialData?.sign_date\n        ? new Date(changeMonthWitDate(initialData?.sign_date)) : null,\n      final_date: initialData?.final_date\n        ? new Date(changeMonthWitDate(initialData?.final_date)) : null,\n      reg_num: initialData?.reg_num || null,\n      first_part_grn: initialData?.first_part_grn || null,\n      client_id: initialData?.client_id || null,\n    });\n  }, [initialData]);\n\n  return {\n    data,\n    clients,\n    setData,\n    onClear,\n    onSave,\n  };\n};\n","import * as React from 'react';\nimport CustomDatePicker from '../../../../../../../../../../../../../../components/CustomDatePicker';\nimport CustomInput from '../../../../../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../../../../../components/CustomSelect';\nimport PrimaryButton from '../../../../../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../../../../../components/SectionWithTitle';\nimport { useSecurityPayment, Props } from './useSecurityPayment';\n\nconst SecurityPayment = (props: Props) => {\n  const meta = useSecurityPayment(props);\n\n  return (\n    <div className=\"security-payment\">\n      <SectionWithTitle title=\"Забезпечувальний платіж\" onClear={meta.onClear}>\n        <div className=\"grid\">\n          <CustomInput\n            label=\"I частина з. платежу у грн\"\n            onChange={(e) => meta.setData({ ...meta.data, first_part_grn: +e })}\n            value={meta.data.first_part_grn}\n          />\n          <CustomSelect\n            label=\"Клієнти\"\n            data={meta.clients}\n            onChange={(e) => meta.setData({ ...meta.data, client_id: +e })}\n            selectedValue={meta.data.client_id}\n          />\n          <CustomInput\n            label=\"Номер договору резервування\"\n            onChange={(e) => meta.setData({ ...meta.data, reg_num: +e })}\n            value={meta.data.reg_num}\n          />\n          <CustomDatePicker\n            label=\"Дата підписання\"\n            onSelect={(e) => meta.setData({ ...meta.data, sign_date: e })}\n            selectedDate={meta.data.sign_date}\n          />\n          <CustomDatePicker\n            label=\"Дата закінчення\"\n            onSelect={(e) => meta.setData({ ...meta.data, final_date: e })}\n            selectedDate={meta.data.final_date}\n          />\n        </div>\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={meta.onSave} disabled={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default SecurityPayment;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqImmovableTermination(\n  token: string,\n  id?: string,\n  method: 'GET' | 'PUT' | undefined = 'GET',\n  bodyData?: any\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/immovable/termination/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","export const isNumber = (value: any): boolean => !Number.isNaN(parseFloat(value));\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqImmovableInstallment(\n  token: string,\n  id?: string,\n  method: 'GET' | 'PUT' | undefined = 'GET',\n  bodyData?: any\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/immovable/installment/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { useMemo, useState, useEffect } from 'react';\nimport { State } from '../../../../../../../../../../../../store/types';\nimport reqImmovableGeneral from '../../../../../../../../../../../../services/generator/Immovable/reqImmovableGeneral';\nimport reqImmovableOwnership from '../../../../../../../../../../../../services/generator/Immovable/reqImmovableOwnership';\nimport reqImmovablePayment from '../../../../../../../../../../../../services/generator/Immovable/reqImmovablePayment';\nimport reqImmovableRating from '../../../../../../../../../../../../services/generator/Immovable/reqImmovableRating';\nimport reqImmovableTemplate from '../../../../../../../../../../../../services/generator/Immovable/reqImmovableTemplate';\nimport reqImmovableTermination from '../../../../../../../../../../../../services/generator/Immovable/reqImmovableTermination';\nimport { isNumber } from '../../../../../../../../../../../../utils/numbers';\nimport reqImmovableInstallment from '../../../../../../../../../../../../services/generator/Immovable/reqImmovableInstallment';\n\nexport const useFields = () => {\n  const { token } = useSelector((state: State) => state.main.user);\n  const { immovableId } = useParams<{clientId: string, immovableId: string}>();\n\n  // Fields Data\n  const [general, setGeneral] = useState();\n  const [ownerShip, setOwnerShip] = useState();\n  const [securityPayment, setSecurityPayment] = useState();\n  const [retting, setRetting] = useState();\n  const [termination, setTermination] = useState();\n  const [templates, setTemplates] = useState();\n  const [installment, setInstallment] = useState();\n\n  const isCorrectId = useMemo(() => isNumber(immovableId), [immovableId]);\n\n  useEffect(() => {\n    if (token && isCorrectId) {\n      // get GENERAL\n      (async () => {\n        const res = await reqImmovableGeneral(token, immovableId);\n\n        if (res?.success) {\n          setGeneral(res.data);\n        }\n      })();\n\n      // get OWNERSHIP\n      (async () => {\n        const res = await reqImmovableOwnership(token, immovableId);\n\n        if (res?.success) {\n          setOwnerShip(res.data);\n        }\n      })();\n\n      // get SECURITY_PAYMENT\n      (async () => {\n        const res = await reqImmovablePayment(token, immovableId);\n\n        if (res?.success) {\n          setSecurityPayment(res.data);\n        }\n      })();\n\n      // get RATING\n      (async () => {\n        const res = await reqImmovableRating(token, immovableId);\n\n        if (res?.success) {\n          setRetting(res.data);\n        }\n      })();\n\n      // get TERMINATION\n      (async () => {\n        const res = await reqImmovableTermination(token, immovableId);\n\n        if (res?.success) {\n          setTermination(res.data);\n        }\n      })();\n\n      // get TEMPLATES\n      (async () => {\n        const res = await reqImmovableTemplate(token, immovableId);\n\n        if (res?.success) {\n          setTemplates(res.data);\n        }\n      })();\n\n      // get INSTALLMENT\n      (async () => {\n        const res = await reqImmovableInstallment(token, immovableId);\n\n        if (res?.success) {\n          setInstallment(res.data);\n        }\n      })();\n    }\n  }, [token, isCorrectId]);\n\n  return {\n    general,\n    immovableId,\n    ownerShip,\n    securityPayment,\n    retting,\n    termination,\n    templates,\n    installment,\n  };\n};\n","import { useState, useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport reqImmovableInstallment from '../../../../../../../../../../../../../../services/generator/Immovable/reqImmovableInstallment';\nimport { setModalInfo } from '../../../../../../../../../../../../../../store/main/actions';\nimport { State } from '../../../../../../../../../../../../../../store/types';\n\ntype InitialData = {\n  total_month: number | null\n  total_price: number | null,\n  type: any\n}\n\nexport type Props = {\n  id: string,\n  initialData?: InitialData,\n}\n\n// eslint-disable-next-line no-shadow\nexport enum InstallmentRadioButtons {\n  MONTH='month',\n  QUARTER='quarter'\n}\n\nconst installmentRadioButtons = [\n  {\n    id: InstallmentRadioButtons.MONTH,\n    title: 'Щомісячно'\n  },\n  {\n    id: InstallmentRadioButtons.QUARTER,\n    title: 'Поквартально'\n  }\n];\n\nexport const useInstallment = ({ initialData, id }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  const [data, setData] = useState<InitialData>({\n    total_month: null,\n    total_price: null,\n    type: InstallmentRadioButtons.MONTH\n  });\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const { success, message } = await reqImmovableInstallment(token, id, 'PUT', data);\n      dispatch(\n        setModalInfo({\n          open: true,\n          success,\n          message,\n        })\n      );\n    }\n  }, [data, token]);\n\n  const onClear = useCallback(() => {\n    setData({\n      total_month: null,\n      total_price: null,\n      type: InstallmentRadioButtons.MONTH\n    });\n  }, []);\n\n  useEffect(() => {\n    setData({\n      total_month: initialData?.total_month || null,\n      total_price: initialData?.total_price || null,\n      type: initialData?.type || InstallmentRadioButtons.MONTH\n    });\n  }, [initialData]);\n\n  return {\n    installmentRadioButtons,\n    data,\n    setData,\n    onSave,\n    onClear\n  };\n};\n","import * as React from 'react';\nimport CustomDatePicker from '../../../../../../../../../../../../../../components/CustomDatePicker';\nimport CustomInput from '../../../../../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../../../../../components/CustomSelect';\nimport PrimaryButton from '../../../../../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../../../../../components/SectionWithTitle';\nimport { Props, useTermination } from './useTermination';\n\nconst Termination = (props: Props) => {\n  const meta = useTermination(props);\n\n  return (\n    <div className=\"termination\">\n      <SectionWithTitle title=\"Розірвання попереднього договору\" onClear={meta.onClear}>\n        <div className=\"grid\">\n          <CustomSelect\n            label=\"Нотаріус\"\n            data={meta.notaries}\n            onChange={(e) => meta.setData({ ...meta.data, notary_id: +e })}\n            selectedValue={meta.data.notary_id}\n          />\n\n          <CustomDatePicker\n            label=\"Дата посвідчення\"\n            selectedDate={meta.data.reg_date}\n            onSelect={(e) => meta.setData({ ...meta.data, reg_date: e })}\n          />\n\n          <CustomInput\n            label=\"Реєстровий номер\"\n            value={meta.data.reg_number}\n            onChange={(e) => meta.setData({ ...meta.data, reg_number: e })}\n          />\n\n          <CustomInput\n            label=\"Сума повернення коштів в гривнях\"\n            value={meta.data.price_grn}\n            onChange={(e) => meta.setData({ ...meta.data, price_grn: e })}\n          />\n\n          <CustomInput\n            label=\"Сума повернення коштів в доларах\"\n            value={meta.data.price_dollar}\n            onChange={(e) => meta.setData({ ...meta.data, price_dollar: e })}\n          />\n        </div>\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={meta.onSave} disabled={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default Termination;\n","import { useCallback, useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport reqImmovableTermination from '../../../../../../../../../../../../../../services/generator/Immovable/reqImmovableTermination';\nimport { setModalInfo } from '../../../../../../../../../../../../../../store/main/actions';\nimport { State } from '../../../../../../../../../../../../../../store/types';\nimport { SelectItem } from '../../../../../../../../../../../../../../types';\nimport { changeMonthWitDate, formatDate } from '../../../../../../../../../../../../../../utils/formatDates';\n\ntype InitialData = {\n  notary_id: number | null,\n  reg_date: any,\n  reg_number: string | null,\n  price_grn: string | null,\n  price_dollar: string | null,\n  notary?: SelectItem[],\n}\n\nexport type Props = {\n  id: string,\n  initialData?: InitialData,\n}\n\nexport const useTermination = ({ id, initialData }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  const [notaries, setNotaries] = useState<SelectItem[]>([]);\n  const [data, setData] = useState<InitialData>({\n    notary_id: null,\n    reg_date: null,\n    reg_number: null,\n    price_grn: null,\n    price_dollar: null,\n  });\n\n  const onClear = useCallback(() => {\n    setData({\n      notary_id: null,\n      reg_date: null,\n      reg_number: null,\n      price_grn: null,\n      price_dollar: null,\n    });\n  }, []);\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const reqData = {\n        ...data,\n        reg_date: formatDate(data.reg_date),\n      };\n\n      const { success, message } = await reqImmovableTermination(token, id, 'PUT', reqData);\n      dispatch(\n        setModalInfo({\n          open: true,\n          success,\n          message,\n        })\n      );\n    }\n  }, [data]);\n\n  useEffect(() => {\n    setNotaries(initialData?.notary || []);\n    setData({\n      notary_id: initialData?.notary_id || null,\n      reg_number: initialData?.reg_number || null,\n      price_grn: initialData?.price_grn || null,\n      price_dollar: initialData?.price_dollar || null,\n      reg_date: initialData?.reg_date ? changeMonthWitDate(initialData?.reg_date) : null,\n    });\n  }, [initialData]);\n\n  return {\n    notaries,\n    data,\n    onClear,\n    onSave,\n    setData,\n  };\n};\n","import React from 'react';\nimport CustomInput from '../../../../../../../../../../../../../../components/CustomInput';\nimport PrimaryButton from '../../../../../../../../../../../../../../components/PrimaryButton';\nimport { RadioButtonsGroup } from '../../../../../../../../../../../../../../components/RadioButtonsGroup/RadioButtonsGroup';\nimport SectionWithTitle from '../../../../../../../../../../../../../../components/SectionWithTitle';\nimport { useInstallment, Props } from './useInstallment';\n\nconst Installment = (props: Props) => {\n  const {\n    installmentRadioButtons,\n    data,\n    setData,\n    onSave,\n    onClear,\n  } = useInstallment(props);\n\n  return (\n    <div className=\"installment\">\n      <SectionWithTitle title=\"Розстрочка\" onClear={onClear}>\n        <div className=\"grid\">\n          <CustomInput\n            label=\"Сума\"\n            onChange={(e) => setData({ ...data, total_price: +e })}\n            value={data.total_price}\n          />\n\n          <CustomInput\n            label=\"Кількість місяців\"\n            onChange={(e) => setData({ ...data, total_month: +e })}\n            value={data.total_month}\n          />\n\n          <RadioButtonsGroup\n            unicId=\"installmentRadio\"\n            buttons={installmentRadioButtons}\n            selected={data.type}\n            onChange={(e) => setData({ ...data, type: e })}\n          />\n        </div>\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={onSave} disabled={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default Installment;\n","import React from 'react';\nimport Templates from './components/Templates';\nimport General from './components/General';\nimport Ownership from './components/Ownership';\nimport Rating from './components/Rating';\nimport SecurityPayment from './components/SecurityPayment';\nimport { useFields } from './useFields';\nimport Termination from './components/Termination';\nimport Installment from './components/Installment';\n\nconst Fields = () => {\n  const meta = useFields();\n\n  return (\n    <div className=\"immovable__fields\">\n      <General initialData={meta.general} id={meta.immovableId} />\n      <Ownership initialData={meta.ownerShip} id={meta.immovableId} />\n      <SecurityPayment initialData={meta.securityPayment} id={meta.immovableId} />\n      <Installment initialData={meta.installment} id={meta.immovableId} />\n      <Rating initialData={meta.retting} id={meta.immovableId} />\n      <Termination initialData={meta.termination} id={meta.immovableId} />\n      <Templates initialData={meta.templates} id={meta.immovableId} />\n    </div>\n  );\n};\n\nexport default Fields;\n","import * as React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport ImmovableDashboard from './components/ImmovableDashboard';\nimport ImmovableFields from './components/ImmovableFields';\n\nconst GeneratorContainer = () => (\n  <main className=\"immovable\">\n    <Switch>\n      <Route path=\"/immovables/:clientId/:immovableId\">\n        <ImmovableFields />\n      </Route>\n      <ImmovableDashboard />\n    </Switch>\n  </main>\n);\n\nexport default GeneratorContainer;\n","import * as React from 'react';\nimport './index.scss';\nimport { Link, useHistory } from 'react-router-dom';\n\ntype Props = {\n  title: string;\n  children: React.ReactNode;\n  link: string\n  onClick: (id: string | undefined) => void;\n  id?: string;\n}\n\nconst CardWithClose = ({ id, title, children, link, onClick }: Props) => {\n  const handleClick = (e: any) => {\n    e.preventDefault();\n    onClick(id);\n  };\n\n  return (\n    <Link to={link} className=\"card-close\">\n      <div className=\"card-close__header\">\n        <span>{title}</span>\n        <button\n          type=\"button\"\n          onClick={handleClick}\n          className=\"card-close__button\"\n        >\n          <img src=\"/icons/x.svg\" alt=\"delete\" />\n        </button>\n      </div>\n      <div className=\"card-close__main\">\n        {children}\n      </div>\n    </Link>\n  );\n};\n\nexport default CardWithClose;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    margin: 0,\n    padding: '16px 24px',\n    flex: '0 0 auto'\n  }\n};\nvar DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), disableTypography ? children : /*#__PURE__*/React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h6\"\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a typography component.\n   * For instance, this can be useful to render an h4 instead of the default h2.\n   */\n  disableTypography: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogTitle'\n})(DialogTitle);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    marginBottom: 12\n  }\n};\nvar DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(props, ref) {\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"textSecondary\",\n    ref: ref\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogContentText'\n})(DialogContentText);","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport React from 'react';\n\ntype Props = {\n  open: boolean;\n  handleClose: () => void;\n  handleConfirm: () => void;\n  title: string;\n  message: string;\n}\n\nconst ConfirmDialog = ({ open, handleClose, handleConfirm, title, message }: Props) => (\n  <Dialog\n    open={open}\n    onClose={handleClose}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n  >\n    <DialogTitle>{title}</DialogTitle>\n    <DialogContent>\n      <DialogContentText>{message}</DialogContentText>\n    </DialogContent>\n    <DialogActions>\n      <Button onClick={handleClose} color=\"primary\">\n        Закрити\n      </Button>\n      <Button onClick={handleConfirm} color=\"primary\" autoFocus>\n        Підтвердити\n      </Button>\n    </DialogActions>\n  </Dialog>\n);\n\nexport default ConfirmDialog;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function deleteImmovable(\n  token: string,\n  clientId: string,\n  immovableId: string,\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/manager/immovable/delete/${immovableId}/${clientId}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'DELETE',\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useCallback, useState } from 'react';\nimport { fetchImmovables, setImmovables } from '../../../../../../../../../../../../store/immovables/actions';\nimport { State } from '../../../../../../../../../../../../store/types';\nimport { UserTypes } from '../../../../../../../../../../../../types';\nimport { setModalInfo } from '../../../../../../../../../../../../store/main/actions';\nimport deleteImmovable from '../../../../../../../../../../../../services/generator/Immovable/deleteImmovable';\n\nexport const useDashboard = () => {\n  const { id } = useParams<{ id: string }>();\n  const dispatch = useDispatch();\n\n  const { token } = useSelector((state: State) => state.main.user);\n  const { immovables, isLoading } = useSelector((state: State) => state.immovables);\n\n  const [showModal, setShowModal] = useState<boolean>(false);\n  const [immovableNeedToRemove, setImmovableNeedToRemove] = useState<any>();\n\n  const clientRemove = useCallback((personId: string) => {\n    (async () => {\n      if (token) {\n        const { success, message, data } = await deleteImmovable(token, id, personId);\n\n        if (success) {\n          dispatch(setImmovables(data));\n          dispatch(\n            setModalInfo({\n              open: true,\n              success,\n              message,\n            })\n          );\n        }\n      }\n    })();\n  }, [token, immovableNeedToRemove, id]);\n\n  const onModalShow = useCallback((personId: string) => {\n    setShowModal(true);\n    setImmovableNeedToRemove(personId);\n  }, []);\n\n  const onModalConfirm = useCallback(() => {\n    setShowModal(false);\n    clientRemove(immovableNeedToRemove);\n  }, [immovableNeedToRemove, clientRemove]);\n\n  const onModalCancel = useCallback(() => {\n    setShowModal(false);\n    setImmovableNeedToRemove(undefined);\n  }, []);\n\n  useEffect(() => {\n    dispatch(fetchImmovables(id, UserTypes.MANAGER));\n\n    return () => { dispatch(setImmovables([])); };\n  }, []);\n\n  return {\n    id,\n    isLoading,\n    immovables,\n    showModal,\n    onModalCancel,\n    onModalConfirm,\n    onModalShow,\n  };\n};\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport CardWithClose from '../../../../../../../../../../../../components/CardWithClose';\nimport ConfirmDialog from '../../../../../../../../../../../../components/ConfirmDialog';\nimport Loader from '../../../../../../../../../../../../components/Loader/Loader';\nimport { useDashboard } from './useDashboard';\n\nconst Dashboard = () => {\n  const meta = useDashboard();\n\n  if (meta.isLoading) {\n    return (\n      <Loader />\n    );\n  }\n\n  return (\n    <div className=\"immovable__dashboard\">\n      <div className=\"dashboard-header section-title\">Нерухомість</div>\n\n      <div className=\"grid\">\n        {meta.immovables.map((immovable) => (\n          <CardWithClose\n            key={immovable.id}\n            title={immovable.title}\n            onClick={() => meta.onModalShow(immovable.id.toString())}\n            link={`/immovables/${meta.id}/${immovable.id}`}\n          >\n            {immovable.list.map((item) => (\n              <span>{item}</span>\n            ))}\n          </CardWithClose>\n        ))}\n\n        <Link to={`/immovables/${meta.id}/create`} className=\"add-item-card\">\n          <img src=\"/icons/plus-big.svg\" alt=\"create\" />\n        </Link>\n      </div>\n\n      <ConfirmDialog\n        open={meta.showModal}\n        title=\"Видалення нерухомості\"\n        message=\"Ви впевнені, що бажаєте видалити дану нерухомість?\"\n        handleClose={() => meta.onModalCancel()}\n        handleConfirm={() => meta.onModalConfirm()}\n      />\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import * as React from 'react';\nimport CustomSwitch from '../../../../../../../../../../../../../../components/CustomSwitch';\nimport SectionWithTitle from '../../../../../../../../../../../../../../components/SectionWithTitle';\n\nexport type ManagerChecksData = {\n  value: boolean;\n  title: string;\n  key: string;\n}[];\n\ntype Props = {\n  checksList: ManagerChecksData;\n  data: {[key: string]: boolean},\n  onChange: (arg: {[key: string]: boolean}) => void,\n}\n\nconst Checks = ({ data, onChange, checksList }: Props) => {\n  const handleClear = () => {\n    const newData: {[key: string]: boolean} = {};\n    Object.keys(data).forEach((key) => { newData[key] = false; });\n    onChange(newData);\n  };\n\n  return (\n    <SectionWithTitle title=\"Перевірки\" onClear={handleClear}>\n      <div className=\"grid\">\n        {checksList.map((item) => (\n          <CustomSwitch\n            key={item.key}\n            label={item.title}\n            onChange={(e) => onChange({ ...data, [item.key]: e, })}\n            selected={data ? data[item.key] : false}\n          />\n        ))}\n      </div>\n    </SectionWithTitle>\n  );\n};\n\nexport default Checks;\n","import * as React from 'react';\nimport CustomInput from '../../../../../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../../../../../components/CustomSelect';\nimport SectionWithTitle from '../../../../../../../../../../../../../../components/SectionWithTitle';\nimport { SelectItem } from '../../../../../../../../../../../../../../types';\n\ntype Props = {\n  onChange: (arg: ManagerContractData) => void;\n  types: SelectItem[],\n  data: ManagerContractData;\n}\n\nexport type ManagerContractData = {\n  contract_type_id: string | null,\n};\n\nconst Contract = ({ data, onChange, types }: Props) => {\n  const handleClear = () => {\n    onChange({\n      contract_type_id: null\n    });\n  };\n\n  return (\n    <SectionWithTitle title=\"Договір\" onClear={handleClear}>\n      <div className=\"middle-column-fields\">\n        <div style={{ width: '360px' }}>\n          <CustomSelect\n            label=\"Тип договору\"\n            data={types}\n            onChange={(e) => onChange({ ...data, contract_type_id: e })}\n            selectedValue={data?.contract_type_id}\n          />\n        </div>\n      </div>\n    </SectionWithTitle>\n  );\n};\n\nexport default Contract;\n","import * as React from 'react';\nimport CustomInput from '../../../../../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../../../../../components/CustomSelect';\nimport SectionWithTitle from '../../../../../../../../../../../../../../components/SectionWithTitle';\nimport { SelectItem } from '../../../../../../../../../../../../../../types';\n\ntype Props = {\n  title: string;\n  onChange: (arg: ManagerGeneralData) => void;\n  immovableTypes: SelectItem[],\n  buildings: SelectItem[],\n  data: ManagerGeneralData;\n}\n\nexport type ManagerGeneralData = {\n  immovable_type_id: string | null,\n  building_id: string | null,\n  immovable_number: string | null,\n  immovable_reg_num: string | null,\n}\n\nconst General = ({ title, data, onChange, immovableTypes, buildings }: Props) => {\n  const handleClear = () => {\n    onChange({\n      immovable_type_id: null,\n      building_id: null,\n      immovable_number: null,\n      immovable_reg_num: null,\n    });\n  };\n\n  return (\n    <SectionWithTitle title={title} onClear={handleClear}>\n      <div className=\"grid-center-duet\">\n        <CustomSelect\n          required\n          label=\"Тип нерухомості\"\n          data={immovableTypes}\n          onChange={(e) => onChange({ ...data, immovable_type_id: e })}\n          selectedValue={data?.immovable_type_id}\n        />\n\n        <CustomSelect\n          required\n          label=\"Будинок\"\n          data={buildings}\n          onChange={(e) => onChange({ ...data, building_id: e })}\n          selectedValue={data?.building_id}\n        />\n\n        <CustomInput\n          required\n          label=\"Номер нерухомості\"\n          onChange={(e) => onChange({ ...data, immovable_number: e })}\n          value={data?.immovable_number}\n        />\n\n        <CustomInput\n          label=\"Реєстраційний номер\"\n          onChange={(e) => onChange({ ...data, immovable_reg_num: e })}\n          value={data?.immovable_reg_num}\n        />\n      </div>\n    </SectionWithTitle>\n  );\n};\n\nexport default General;\n","import * as React from 'react';\nimport CustomInput from '../../../../../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../../../../../components/CustomSelect';\nimport SectionWithTitle from '../../../../../../../../../../../../../../components/SectionWithTitle';\nimport { SelectItem } from '../../../../../../../../../../../../../../types';\n\ntype Props = {\n  onChange: (arg: ManagerResponsibleData) => void;\n  reader: SelectItem[],\n  accompanying: SelectItem[],\n  data: ManagerResponsibleData;\n}\n\nexport type ManagerResponsibleData = {\n  reader_id: string | null,\n  accompanying_id: string | null,\n};\n\nconst Responsible = ({ data, onChange, reader, accompanying }: Props) => {\n  const handleClear = () => {\n    onChange({\n      reader_id: null,\n      accompanying_id: null,\n    });\n  };\n\n  return (\n    <SectionWithTitle title=\"Відповідaльні особи\" onClear={handleClear}>\n      <div className=\"grid-center-duet\">\n        <CustomSelect\n          label=\"Читач\"\n          data={reader}\n          onChange={(e) => onChange({ ...data, reader_id: e })}\n          selectedValue={data?.reader_id}\n        />\n\n        <CustomSelect\n          label=\"Видавач\"\n          data={accompanying}\n          onChange={(e) => onChange({ ...data, accompanying_id: e })}\n          selectedValue={data?.accompanying_id}\n        />\n      </div>\n    </SectionWithTitle>\n  );\n};\n\nexport default Responsible;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqManagerImmovables(\n  token: string,\n  clientId: string,\n  id: string,\n  method: 'GET' | 'PUT' | undefined = 'GET',\n  bodyData?: any\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/manager/immovable/${clientId}${id === 'create' ? '' : `/${id}`}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useParams, useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useMemo, useEffect, useState, useCallback } from 'react';\nimport { SelectItem } from '../../../../../../../../../../../../types';\nimport { State } from '../../../../../../../../../../../../store/types';\nimport reqManagerImmovables from '../../../../../../../../../../../../services/manager/Immovables/reqManagerImmovables';\nimport { ManagerGeneralData } from './components/General/General';\nimport { ManagerResponsibleData } from './components/Responsible/Responsible';\nimport { ManagerContractData } from './components/Contract/Contract';\nimport { ManagerChecksData } from './components/Checks/Checks';\nimport { setModalInfo } from '../../../../../../../../../../../../store/main/actions';\n\nexport const useImmovableFields = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n  const { immovableId, clientId } = useParams<{clientId: string, immovableId: string}>();\n  const [title, setTitle] = useState('');\n\n  // Selects\n  const [immovableTypes, setImmovableTypes] = useState<SelectItem[]>([]);\n  const [buildings, setBuildings] = useState<SelectItem[]>([]);\n  const [reader, setReader] = useState<SelectItem[]>([]);\n  const [accompanying, setAccompanying] = useState<SelectItem[]>([]);\n  const [contracts, setContracts] = useState<SelectItem[]>([]);\n  const [checkList, setCheckList] = useState<ManagerChecksData>([]);\n\n  // Fields Data\n  const [general, setGeneral] = useState<ManagerGeneralData>({\n    immovable_type_id: null,\n    building_id: null,\n    immovable_number: null,\n    immovable_reg_num: null,\n  });\n  const [responsible, setResponsible] = useState<ManagerResponsibleData>({\n    reader_id: null,\n    accompanying_id: null,\n  });\n  const [contractType, setContractType] = useState<ManagerContractData>({\n    contract_type_id: null,\n  });\n  const [checks, setChecks] = useState<any>();\n\n  const isOnSaveDisabled = useMemo(() => !general.immovable_type_id\n    || !general.building_id\n    || !general.immovable_number,\n  [general]);\n\n  const onSave = useCallback(async () => {\n    const bodyData = {\n      ...general,\n      ...responsible,\n      ...contractType,\n      ...checks,\n    };\n\n    if (token) {\n      const res = await reqManagerImmovables(token, clientId, immovableId, 'PUT', bodyData);\n\n      dispatch(\n        setModalInfo({\n          open: true,\n          success: res?.success,\n          message: res?.message,\n        })\n      );\n\n      if (res?.success && immovableId === 'create') {\n        history.push(`/immovables/${clientId}/${res?.data.immovable_id}`);\n      }\n    }\n  }, [token, immovableId, general, responsible, contractType, checks]);\n\n  useEffect(() => {\n    if (token) {\n      // get MANAGER_GENERAL\n      (async () => {\n        const res = await reqManagerImmovables(token, clientId, immovableId);\n\n        if (res?.success) {\n          setTitle(res?.data.title);\n\n          setImmovableTypes(res?.data.immovable_type || []);\n          setBuildings(res?.data.building || []);\n          setGeneral({\n            immovable_type_id: res?.data.immovable_type_id || '',\n            building_id: res?.data.building_id || '',\n            immovable_number: res?.data.immovable_number || '',\n            immovable_reg_num: res?.data.immovable_reg_num || '',\n          });\n\n          setReader(res?.data.reader);\n          setAccompanying(res?.data.accompanying);\n          setResponsible({\n            reader_id: res?.data.reader_id || null,\n            accompanying_id: res?.data.accompanying_id || null,\n          });\n\n          setContracts(res?.data.contract_type);\n          setContractType({ contract_type_id: res?.data.contract_type_id || null });\n\n          setCheckList(res?.data.check_list || []);\n          setChecks(res?.data.check_list.reduce((acc: any, item: any) => {\n            acc[item.key] = item.value;\n            return acc;\n          }, {}));\n        }\n      })();\n    }\n  }, [token]);\n\n  return {\n    title,\n    general,\n    immovableTypes,\n    buildings,\n    reader,\n    accompanying,\n    responsible,\n    contracts,\n    contractType,\n    checkList,\n    checks,\n    isOnSaveDisabled,\n    setChecks,\n    setContractType,\n    setGeneral,\n    setResponsible,\n    onSave,\n  };\n};\n","import React from 'react';\nimport PrimaryButton from '../../../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../../../components/SectionWithTitle';\nimport Checks from './components/Checks/Checks';\nimport Contract from './components/Contract';\nimport General from './components/General';\nimport Responsible from './components/Responsible';\nimport { useImmovableFields } from './useImmovableFields';\n\nconst ImmovableFields = () => {\n  const meta = useImmovableFields();\n\n  return (\n    <div className=\"immovable__fields\">\n      <General\n        title={meta.title}\n        data={meta.general}\n        onChange={meta.setGeneral}\n        immovableTypes={meta.immovableTypes}\n        buildings={meta.buildings}\n      />\n\n      <Responsible\n        data={meta.responsible}\n        reader={meta.reader}\n        accompanying={meta.accompanying}\n        onChange={meta.setResponsible}\n      />\n\n      <Contract\n        data={meta.contractType}\n        types={meta.contracts}\n        onChange={meta.setContractType}\n      />\n\n      {meta.checks && (\n        <Checks\n          checksList={meta.checkList}\n          data={meta.checks}\n          onChange={meta.setChecks}\n        />\n      )}\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={meta.onSave} disabled={meta.isOnSaveDisabled} />\n      </div>\n    </div>\n  );\n};\n\nexport default ImmovableFields;\n","import * as React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport ImmovableDashboard from './components/Dashboard';\nimport ImmovableFields from './components/Fields';\n\nconst ManagerContainer = () => (\n  <main className=\"immovable\">\n    <Switch>\n      <Route path=\"/immovables/:clientId/:immovableId\">\n        <ImmovableFields />\n      </Route>\n      <ImmovableDashboard />\n    </Switch>\n  </main>\n);\n\nexport default ManagerContainer;\n","import * as React from 'react';\nimport './index.scss';\nimport { useSelector } from 'react-redux';\nimport { State } from '../../../../../../../../store/types';\nimport { UserTypes } from '../../../../../../../../types';\nimport GeneratorContainer from './components/GeneratorContainer';\nimport ManagerContainer from './components/ManagerContainer';\n\nconst Immovable = () => {\n  const { user: { type } } = useSelector((state: State) => state.main);\n\n  if (type === UserTypes.GENERATOR) {\n    return <GeneratorContainer />;\n  }\n\n  if (type === UserTypes.MANAGER) {\n    return <ManagerContainer />;\n  }\n\n  return null;\n};\n\nexport default Immovable;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function deleteManagerClient(\n  token: string,\n  clientId: string,\n  cardId: string,\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/manager/client/delete/${clientId}/${cardId}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'DELETE',\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useCallback, useState } from 'react';\n\nimport { UserTypes } from '../../../../../../../../../../../../types';\nimport { State } from '../../../../../../../../../../../../store/types';\nimport { fetchClients, setClients } from '../../../../../../../../../../../../store/clients/actions';\nimport reqClientName from '../../../../../../../../../../../../services/generator/Client/reqClientName';\nimport { setModalInfo } from '../../../../../../../../../../../../store/main/actions';\nimport deleteManagerClient from '../../../../../../../../../../../../services/manager/Clients/deleteManagerClient';\n\nexport const useDashboard = () => {\n  const { id } = useParams<{ id: string }>();\n  const dispatch = useDispatch();\n\n  const { token } = useSelector((state: State) => state.main.user);\n  const { clients, isLoading } = useSelector((state: State) => state.clients);\n\n  const [showModal, setShowModal] = useState<boolean>(false);\n  const [personNeedToRemove, setPersonNeedToRemove] = useState<any>();\n\n  const clientRemove = useCallback((personId: string) => {\n    (async () => {\n      if (token) {\n        const { success, message, data } = await deleteManagerClient(token, personId, id);\n\n        if (success) {\n          dispatch(setClients(data));\n          dispatch(\n            setModalInfo({\n              open: true,\n              success,\n              message,\n            })\n          );\n        }\n      }\n    })();\n  }, [token, personNeedToRemove]);\n\n  const onModalShow = useCallback((personId: string) => {\n    setShowModal(true);\n    setPersonNeedToRemove(personId);\n  }, []);\n\n  const onModalConfirm = useCallback(() => {\n    setShowModal(false);\n    clientRemove(personNeedToRemove);\n  }, [personNeedToRemove]);\n\n  const onModalCancel = useCallback(() => {\n    setShowModal(false);\n    setPersonNeedToRemove(undefined);\n  }, []);\n\n  useEffect(() => {\n    dispatch(fetchClients(id, UserTypes.MANAGER));\n\n    return () => { dispatch(setClients([])); };\n  }, [id]);\n\n  return {\n    id,\n    isLoading,\n    clients,\n    showModal,\n    onModalCancel,\n    onModalConfirm,\n    onModalShow,\n  };\n};\n","import * as React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Link } from 'react-router-dom';\nimport CardWithClose from '../../../../../../../../../../../../components/CardWithClose';\nimport ConfirmDialog from '../../../../../../../../../../../../components/ConfirmDialog';\nimport Loader from '../../../../../../../../../../../../components/Loader/Loader';\nimport './index.scss';\nimport { useDashboard } from './useDashboard';\n\nconst Dashboard = () => {\n  const meta = useDashboard();\n\n  if (meta.isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <main className=\"clients\">\n      <div className=\"dashboard-header section-title\">Клієнти</div>\n\n      <div className=\"grid\">\n        {(meta.clients || []).map((person: any) => (\n          <CardWithClose\n            key={person.id}\n            title={person.full_name}\n            onClick={() => meta.onModalShow(person.id.toString())}\n            link={`/clients/${meta.id}/${person.id}`}\n          >\n            {(person.list || []).map((item: any) => (\n              <span>{item}</span>\n            ))}\n          </CardWithClose>\n        ))}\n\n        <Link to={`/clients/${meta.id}/create`} className=\"add-item-card\">\n          <img src=\"/icons/plus-big.svg\" alt=\"create\" />\n        </Link>\n      </div>\n\n      <ConfirmDialog\n        open={meta.showModal}\n        title=\"Видалення клієнта\"\n        message=\"Ви впевнені, що бажаєте видалити даного клієнта?\"\n        handleClose={() => meta.onModalCancel()}\n        handleConfirm={() => meta.onModalConfirm()}\n      />\n    </main>\n  );\n};\n\nexport default Dashboard;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqManagerClient(\n  token: string,\n  clientId: string,\n  personId: string,\n  method: 'GET' | 'PUT' | undefined = 'GET',\n  bodyData?: any\n) {\n  try {\n    const url = method === 'GET'\n      ? `/api/manager/client${personId === 'create' ? '' : `/${personId}`}`\n      : `/api/manager/client/${clientId}${personId === 'create' ? '' : `/${personId}`}`;\n    const data = await requestApi({\n      url: `${DEFAULT_URL}${url}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useParams, useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useCallback, useState, useMemo } from 'react';\nimport { SelectItem } from '../../../../../../../../../../../../types';\nimport { State } from '../../../../../../../../../../../../store/types';\nimport reqManagerClient from '../../../../../../../../../../../../services/manager/Clients/reqManagerClient';\nimport { setModalInfo } from '../../../../../../../../../../../../store/main/actions';\nimport { isNumber } from '../../../../../../../../../../../../utils/numbers';\n\nexport const useFields = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const { token } = useSelector((state: State) => state.main.user);\n  const { clientId, personId } = useParams<{clientId: string, personId: string}>();\n\n  // Selects\n  const [marriedTypes, setMarriedTypes] = useState<SelectItem[]>([]);\n  const [passportTypes, setPassportTypes] = useState<SelectItem[]>([]);\n\n  // Fields Data\n  const [client, setClient] = useState<any>({});\n  const [clientChecks, setClientChecks] = useState<any>([]);\n  const [general, setGeneral] = useState<any>({});\n  const [spouse, setSpouse] = useState<any>({});\n  const [spouseChecks, setSpouseChecks] = useState<any>([]);\n  const [confidant, setConfidant] = useState<any>({});\n  const [confidantChecks, setConfidantChecks] = useState<any>([]);\n\n  const onClientChecksChange = useCallback((index: number, value: boolean) => {\n    clientChecks[index].value = value;\n    setClientChecks([...clientChecks]);\n  }, [clientChecks]);\n\n  const onSpouseChecksChange = useCallback((index: number, value: boolean) => {\n    spouseChecks[index].value = value;\n    setSpouseChecks([...spouseChecks]);\n  }, [spouseChecks]);\n\n  const onConfidantChecksChange = useCallback((index: number, value: boolean) => {\n    confidantChecks[index].value = value;\n    setConfidantChecks([...confidantChecks]);\n  }, [confidantChecks]);\n\n  const onClientClear = useCallback(() => {\n    const clearClient: any = {};\n    Object.keys(client).forEach((item: string) => {\n      clearClient[item] = '';\n    });\n    setClient(clearClient);\n    setClientChecks((prev: any) => prev.map((item: any) => {\n      item.value = false;\n      return item;\n    }));\n  }, [client]);\n\n  const onSpouseClear = useCallback(() => {\n    const clearSpouse: any = {};\n    Object.keys(spouse).forEach((item: string) => {\n      clearSpouse[item] = '';\n    });\n    setSpouse(clearSpouse);\n    setSpouseChecks((prev: any) => prev.map((item: any) => {\n      item.value = false;\n      return item;\n    }));\n  }, [spouse]);\n\n  const onConfidantClear = useCallback(() => {\n    const clearConfidant: any = {};\n    Object.keys(confidant).forEach((item: string) => {\n      clearConfidant[item] = '';\n    });\n    setConfidant(clearConfidant);\n    setConfidantChecks((prev: any) => prev.map((item: any) => {\n      item.value = false;\n      return item;\n    }));\n  }, [confidant]);\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      // format clientsChecks for request\n      const clientChecksValues: any = {};\n      clientChecks.forEach((item: any) => {\n        clientChecksValues[item.key] = item.value;\n      });\n\n      // format spouseChecks for request\n      const spouseChecksValues: any = {};\n      spouseChecks.forEach((item: any) => {\n        spouseChecksValues[item.key] = item.value;\n      });\n\n      // format confidantChecks for request\n      const confidantChecksValues: any = {};\n      confidantChecks.forEach((item: any) => {\n        confidantChecksValues[item.key] = item.value;\n      });\n\n      const bodyData = {\n        client: {\n          data: client,\n          info: clientChecksValues,\n        },\n        spouse: {\n          data: spouse,\n          info: spouseChecksValues,\n        },\n        representative: {\n          data: confidant,\n          info: confidantChecksValues,\n        }\n      };\n\n      const res = await reqManagerClient(token, clientId, personId, 'PUT', bodyData);\n\n      dispatch(\n        setModalInfo({\n          open: true,\n          success: res?.success,\n          message: res?.message,\n        })\n      );\n\n      if (res?.success && personId === 'create' && isNumber(res?.data.client_id)) {\n        history.push(`/clients/${clientId}/${res?.data.client_id}`);\n      }\n    }\n  }, [token, client, spouse, confidant, clientChecks, spouseChecks, confidantChecks]);\n\n  const isSaveButtonDisabled = useMemo(() => !client.name\n    || !client.surname\n    || !client.passport_type_id, [client.name, client.surname, client.passport_type_id]);\n\n  useEffect(() => {\n    if (token) {\n      // get CLIENT_DATA\n      (async () => {\n        const res = await reqManagerClient(token, clientId, personId);\n\n        if (res?.success) {\n          setClient(res?.data.client.data || {\n            surname: '',\n            name: '',\n            patronymic: '',\n            phone: '',\n            email: '',\n            married_type_id: null,\n            passport_type_id: null,\n          });\n          setClientChecks(res?.data.client.info);\n          setSpouse(res?.data.spouse.data || {\n            surname: '',\n            name: '',\n            patronymic: '',\n          });\n          setSpouseChecks(res?.data.spouse.info);\n          setConfidant(res?.data.confidant.data || {\n            surname: '',\n            name: '',\n            patronymic: '',\n          });\n          setConfidantChecks(res?.data.confidant.info);\n          setMarriedTypes(res?.data.married_types || []);\n          setPassportTypes(res?.data.passport_type || []);\n        }\n      })();\n    }\n  }, [token, personId]);\n\n  return {\n    clientId,\n    personId,\n    client,\n    clientChecks,\n    general,\n    spouse,\n    spouseChecks,\n    confidant,\n    confidantChecks,\n    marriedTypes,\n    passportTypes,\n    isSaveButtonDisabled,\n    setClient,\n    setGeneral,\n    setSpouse,\n    setConfidant,\n    onClientChecksChange,\n    onSpouseChecksChange,\n    onConfidantChecksChange,\n    onClientClear,\n    onSpouseClear,\n    onConfidantClear,\n    onSave,\n  };\n};\n","import * as React from 'react';\nimport CustomInput from '../../../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../../../components/CustomSelect';\nimport CustomSwitch from '../../../../../../../../../../../../components/CustomSwitch';\nimport PhoneMaskInput from '../../../../../../../../../../../../components/PhoneMaskInput';\nimport PrimaryButton from '../../../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../../../components/SectionWithTitle';\nimport { useFields } from './useFields';\n\nconst Fields = () => {\n  const meta = useFields();\n\n  return (\n    <main className=\"clients\">\n      <div\n        className=\"dashboard-header section-title\"\n        style={{\n          backgroundColor: '#2323B5',\n          color: 'white',\n        }}\n      >\n        Клієнт\n      </div>\n\n      <SectionWithTitle title=\"\" onClear={meta.onClientClear}>\n        <div className=\"grid\">\n          <CustomInput\n            required\n            label=\"Прізвище\"\n            onChange={(e) => meta.setClient({ ...meta.client, surname: e })}\n            value={meta.client?.surname}\n          />\n\n          <CustomInput\n            required\n            label=\"Ім’я\"\n            onChange={(e) => meta.setClient({ ...meta.client, name: e })}\n            value={meta.client?.name}\n          />\n\n          <CustomInput\n            label=\"По батькові\"\n            onChange={(e) => meta.setClient({ ...meta.client, patronymic: e })}\n            value={meta.client?.patronymic}\n          />\n\n          <PhoneMaskInput\n            label=\"Номер телефону\"\n            onChange={(e) => meta.setClient({ ...meta.client, phone: e })}\n            value={meta.client?.phone}\n          />\n\n          <CustomInput\n            label=\"E-mail\"\n            onChange={(e) => meta.setClient({ ...meta.client, email: e })}\n            value={meta.client?.email}\n          />\n        </div>\n      </SectionWithTitle>\n\n      <SectionWithTitle title=\"Перевірки ПОКУПЦЯ\">\n        <div className=\"grid\">\n          {meta.clientChecks.map(({ title, key, value }: any, index: number) => (\n            <CustomSwitch\n              key={key}\n              label={title}\n              onChange={(e) => meta.onClientChecksChange(index, e)}\n              selected={value}\n            />\n          ))}\n        </div>\n      </SectionWithTitle>\n\n      <SectionWithTitle title=\"Загальні дані\">\n        <div className=\"grid-center-duet\">\n          <CustomSelect\n            label=\"Тип свідоцтва про шлюб\"\n            data={meta.marriedTypes}\n            onChange={(e) => meta.setClient({ ...meta.client, married_type_id: e })}\n            selectedValue={meta.client.married_type_id}\n          />\n\n          <CustomSelect\n            required\n            label=\"Тип документа\"\n            data={meta.passportTypes}\n            onChange={(e) => meta.setClient({ ...meta.client, passport_type_id: e })}\n            selectedValue={meta.client.passport_type_id}\n          />\n        </div>\n      </SectionWithTitle>\n\n      <SectionWithTitle title=\"Подружжя\" headerColor=\"#FFB800\" onClear={meta.onSpouseClear}>\n        <div className=\"grid\">\n          <CustomInput\n            label=\"Прізвище\"\n            onChange={(e) => meta.setSpouse({ ...meta.spouse, surname: e })}\n            value={meta.spouse.surname}\n          />\n\n          <CustomInput\n            label=\"Ім’я\"\n            onChange={(e) => meta.setSpouse({ ...meta.spouse, name: e })}\n            value={meta.spouse.name}\n          />\n\n          <CustomInput\n            label=\"По батькові\"\n            onChange={(e) => meta.setSpouse({ ...meta.spouse, patronymic: e })}\n            value={meta.spouse.patronymic}\n          />\n\n          {meta.spouseChecks.map(({ title, key, value }: any, index: number) => (\n            <CustomSwitch\n              key={key}\n              label={title}\n              onChange={(e) => meta.onSpouseChecksChange(index, e)}\n              selected={value}\n            />\n          ))}\n        </div>\n      </SectionWithTitle>\n\n      <SectionWithTitle title=\"Представник\" headerColor=\"#04BC00\" onClear={meta.onConfidantClear}>\n        <div className=\"grid\">\n          <CustomInput\n            label=\"Прізвище\"\n            onChange={(e) => meta.setConfidant({ ...meta.confidant, surname: e })}\n            value={meta.confidant.surname}\n          />\n\n          <CustomInput\n            label=\"Ім’я\"\n            onChange={(e) => meta.setConfidant({ ...meta.confidant, name: e })}\n            value={meta.confidant.name}\n          />\n\n          <CustomInput\n            label=\"По батькові\"\n            onChange={(e) => meta.setConfidant({ ...meta.confidant, patronymic: e })}\n            value={meta.confidant.patronymic}\n          />\n\n          {meta.confidantChecks.map(({ title, key, value }: any, index: number) => (\n            <CustomSwitch\n              key={key}\n              label={title}\n              onChange={(e) => meta.onConfidantChecksChange(index, e)}\n              selected={value}\n            />\n          ))}\n        </div>\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={meta.onSave} disabled={meta.isSaveButtonDisabled} />\n      </div>\n    </main>\n  );\n};\n\nexport default Fields;\n","import * as React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Dashboard from './components/Dashboard';\nimport Fields from './components/Fields';\n\nconst ManagerContainer = () => (\n  <Switch>\n    <Route path=\"/clients/:clientId/:personId\">\n      <Fields />\n    </Route>\n    <Dashboard />\n  </Switch>\n);\n\nexport default ManagerContainer;\n","import * as React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Card from '../../../../../../../../../../../../components/Card';\nimport Loader from '../../../../../../../../../../../../components/Loader/Loader';\nimport './index.scss';\nimport { useClientsDashboard } from './useClientsDashboard';\n\nconst ClientsDashboard = () => {\n  const meta = useClientsDashboard();\n\n  if (meta.isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <main className=\"clients\">\n      <div className=\"grid mb20\">\n        <div className=\"clients__colorful-title blue\">Клієнт</div>\n        <div className=\"clients__colorful-title yellow\">Подружжя</div>\n        <div className=\"clients__colorful-title green\">Представник</div>\n      </div>\n\n      {meta.clients.map((client) => (\n        <div className=\"grid\" key={uuidv4()}>\n          {Object.values(client).map((person: any) => {\n            if (!person) return <div />;\n\n            return (\n              <Card\n                key={person.id}\n                title={person.full_name}\n                // onClick={() => meta.onModalShow(person.id.toString())}\n                link={`/clients/${meta.id}/${person.id}`}\n              >\n                {(person.list || []).map((item: any) => (\n                  <span>{item}</span>\n                ))}\n              </Card>\n            );\n          })}\n        </div>\n      ))}\n\n      {/* <ConfirmDialog\n        open={meta.showModal}\n        title=\"Видалення клієнта\"\n        message=\"Ви впевнені, що бажаєте видалити даного клієнта\"\n        handleClose={() => meta.onModalCancel()}\n        handleConfirm={() => meta.onModalConfirm()}\n      /> */}\n    </main>\n  );\n};\n\nexport default ClientsDashboard;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { UserTypes } from '../../../../../../../../../../../../types';\nimport { State } from '../../../../../../../../../../../../store/types';\nimport { fetchClients } from '../../../../../../../../../../../../store/clients/actions';\n\nexport const useClientsDashboard = () => {\n  const { id } = useParams<{ id: string }>();\n  const dispatch = useDispatch();\n\n  const { clients, isLoading } = useSelector((state: State) => state.clients);\n\n  // !can use remove client here in future\n\n  // const [showModal, setShowModal] = useState<boolean>(false);\n  // const [personNeedToRemove, setPersonNeedToRemove] = useState<any>();\n\n  // const clientRemove = useCallback((personId: string) => {\n  //   (async () => {\n  //     if (token) {\n  //       const { success, message, data } = await reqClientName(token, id, personId, 'DELETE');\n\n  //       if (success) {\n  //         dispatch(setClients(data));\n  //         dispatch(\n  //           setModalInfo({\n  //             open: true,\n  //             success,\n  //             message,\n  //           })\n  //         );\n  //       }\n  //     }\n  //   })();\n  // }, [token, personNeedToRemove]);\n\n  // const onModalShow = useCallback((personId: string) => {\n  //   setShowModal(true);\n  //   setPersonNeedToRemove(personId);\n  // }, []);\n\n  // const onModalConfirm = useCallback(() => {\n  //   setShowModal(false);\n  //   clientRemove(personNeedToRemove);\n  // }, [personNeedToRemove]);\n\n  // const onModalCancel = useCallback(() => {\n  //   setShowModal(false);\n  //   setPersonNeedToRemove(undefined);\n  // }, []);\n\n  useEffect(() => {\n    dispatch(fetchClients(id, UserTypes.GENERATOR));\n  }, [id]);\n\n  return {\n    id,\n    isLoading,\n    clients,\n    // showModal,\n    // onModalCancel,\n    // onModalConfirm,\n    // onModalShow,\n  };\n};\n","import { DEFAULT_URL } from '../../../Constants';\nimport requestApi from '../../../utils/requestApi';\n\nexport default async function reqGeneratorCityCreate(\n  token: string,\n  method: 'GET' | 'POST' | undefined = 'GET',\n  bodyData?: any\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/city/create`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from '../../../Constants';\nimport requestApi from '../../../utils/requestApi';\n\nexport default async function getGeneratorDistricts(\n  token: string,\n  id: string,\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/region/district/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'GET',\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport reqGeneratorCityCreate from '../../../../../../../../../../../../../../../../services/generator/Client/AddNewCityModal/reqGeneratorCityCreate';\nimport { State } from '../../../../../../../../../../../../../../../../store/types';\nimport getGeneratorDistricts from '../../../../../../../../../../../../../../../../services/generator/Client/AddNewCityModal/getGeneratorDistricts';\nimport { setModalInfo } from '../../../../../../../../../../../../../../../../store/main/actions';\n\nexport type Props = {\n  open: boolean;\n  onClose: (value: boolean) => void;\n};\n\nexport const useAddCityModal = ({ onClose }: Props) => {\n  const dispatch = useDispatch();\n  const { personId } = useParams<{personId: string}>();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  const [region, setRegion] = useState([]);\n  const [cityTypes, setCityTypes] = useState([]);\n  const [districts, setDistricts] = useState([]);\n  const [allData, setAllData] = useState({\n    region_id: '',\n    district_id: '',\n    city_type_id: '',\n    title: '',\n  });\n\n  const handleClose = useCallback(() => {\n    onClose(false);\n  }, []);\n\n  const onClear = useCallback(() => {\n    setAllData({\n      region_id: '',\n      district_id: '',\n      city_type_id: '',\n      title: '',\n    });\n  }, []);\n\n  const onSave = useCallback(async () => {\n    if (token && personId) {\n      const res = await reqGeneratorCityCreate(token, 'POST', allData);\n\n      if (res.success) {\n        handleClose();\n      }\n\n      dispatch(\n        setModalInfo({\n          open: true,\n          success: res?.success,\n          message: res?.message,\n        })\n      );\n    }\n  }, [allData, token, personId]);\n\n  useEffect(() => {\n    if (token && allData.region_id) {\n      (async () => {\n        const res = await getGeneratorDistricts(token, allData.region_id);\n\n        if (res?.success) {\n          setDistricts(res.data.district);\n        }\n      })();\n    }\n  }, [allData.region_id]);\n\n  useEffect(() => {\n    if (token && personId) {\n      (async () => {\n        const res = await reqGeneratorCityCreate(token);\n\n        if (res?.success) {\n          setRegion(res.data.regions);\n          setCityTypes(res.data.city_type);\n        }\n      })();\n    }\n  }, [token, personId]);\n\n  return {\n    region,\n    cityTypes,\n    districts,\n    allData,\n    setAllData,\n    onClear,\n    onSave,\n    handleClose,\n  };\n};\n","import React from 'react';\nimport './index.scss';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport SectionWithTitle from '../../../../../../../../../../../../../../../../components/SectionWithTitle';\nimport CustomSelect from '../../../../../../../../../../../../../../../../components/CustomSelect';\nimport CustomInput from '../../../../../../../../../../../../../../../../components/CustomInput';\nimport PrimaryButton from '../../../../../../../../../../../../../../../../components/PrimaryButton';\nimport { useAddCityModal, Props } from './useAddCityModal';\n\n// eslint-disable-next-line prettier/prettier\nconst AddCityModal = (props: Props) => {\n  const meta = useAddCityModal(props);\n\n  return (\n    <Modal\n      className=\"modal-container\"\n      open={props.open}\n      onClose={meta.handleClose}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}\n    >\n      <Fade in={props.open}>\n        <div className=\"add-city-modal\">\n          <SectionWithTitle title=\"Додати населений пункт\" onClear={meta.onClear}>\n            <div className=\"add-city-modal__grid\">\n              <CustomSelect\n                label=\"Область\"\n                data={meta.region}\n                onChange={(e) => meta.setAllData({ ...meta.allData, region_id: e })}\n                selectedValue={meta.allData.region_id}\n              />\n              <CustomSelect\n                label=\"Район\"\n                data={meta.districts}\n                onChange={(e) => meta.setAllData({ ...meta.allData, district_id: e })}\n                selectedValue={meta.allData.district_id}\n              />\n              <CustomSelect\n                label=\"Тип населеного пункту\"\n                data={meta.cityTypes}\n                onChange={(e) => meta.setAllData({ ...meta.allData, city_type_id: e })}\n                selectedValue={meta.allData.city_type_id}\n              />\n              <CustomInput\n                label=\"Назва у НВ\"\n                onChange={(e) => meta.setAllData({ ...meta.allData, title: e })}\n                value={meta.allData.title}\n              />\n            </div>\n          </SectionWithTitle>\n\n          <div className=\"middle-button\">\n            <PrimaryButton label=\"Зберегти\" onClick={meta.onSave} disabled={false} />\n          </div>\n        </div>\n      </Fade>\n    </Modal>\n  );\n};\n\nexport default AddCityModal;\n","import * as React from 'react';\nimport AddFormButton from '../../../../../../../../../../../../../../../../components/AddFormButton';\nimport CustomInput from '../../../../../../../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../../../../../../../components/CustomSelect';\nimport { SelectItem } from '../../../../../../../../../../../../../../../../types';\n\ntype Props = {\n  regions: SelectItem[],\n  cities: SelectItem[],\n  districts: SelectItem[],\n  addressType: SelectItem[],\n  apartmentType: SelectItem[],\n  buildingType: SelectItem[],\n  buildingPartType: SelectItem[],\n  data: any,\n  onRegionChange: (value: string) => void,\n  onDistrictChange: (value: string) => void,\n  setData: (data: any) => void,\n  setShowModal: (val: boolean) => void,\n  actual?: boolean,\n}\n\nconst Fields = ({\n  regions,\n  cities,\n  districts,\n  addressType,\n  buildingType,\n  buildingPartType,\n  apartmentType,\n  data,\n  actual,\n  onRegionChange,\n  onDistrictChange,\n  setData,\n  setShowModal\n}: Props) => (\n  <div className=\"address__container\">\n    <div className=\"clients__address-container\">\n      <CustomSelect\n        disableDefaultValue\n        label=\"Область\"\n        data={regions}\n        onChange={(e) => onRegionChange(e)}\n        selectedValue={actual ? data.actual_region_id : data.region_id}\n      />\n    </div>\n\n    <div className=\"clients__address-container\">\n      <CustomSelect\n        label=\"Район\"\n        data={districts}\n        onChange={(e) => onDistrictChange(e)}\n        selectedValue={actual ? data.actual_district_id : data.district_id}\n      />\n    </div>\n\n    <div className=\"clients__address-container df\">\n      <CustomSelect\n        label=\"Населений пункт\"\n        data={cities}\n        onChange={(e) => setData({ ...data, [`${actual ? 'actual_city_id' : 'city_id'}`]: e })}\n        selectedValue={actual ? data.actual_city_id : data.city_id}\n      />\n      <div className=\"add-button\">\n        <AddFormButton onClick={() => setShowModal(true)} />\n      </div>\n    </div>\n\n    <div className=\"clients__address-container df duet\">\n      <div className=\"short-width\">\n        <CustomSelect\n          label=\"Тип вулиці\"\n          data={addressType}\n          onChange={(e) => setData({ ...data, [`${actual ? 'actual_address_type_id' : 'address_type_id'}`]: e })}\n          selectedValue={actual ? data.actual_address_type_id : data.address_type_id}\n        />\n      </div>\n      <div className=\"long-width\">\n        <CustomInput\n          label=\"Назва вулиці\"\n          onChange={(e) => setData({ ...data, [`${actual ? 'actual_address' : 'address'}`]: e })}\n          value={actual ? data.actual_address : data.address}\n        />\n      </div>\n    </div>\n\n    <div className=\"clients__address-container df duet\">\n      <div className=\"long-width\">\n        <CustomSelect\n          label=\"Тип будинку\"\n          data={buildingType}\n          onChange={(e) => setData({ ...data, [`${actual ? 'actual_building_type_id' : 'building_type_id'}`]: e })}\n          selectedValue={actual ? data.actual_building_type_id : data.building_type_id}\n        />\n      </div>\n      <div className=\"short-width\">\n        <CustomInput\n          label=\"Номер будинку\"\n          onChange={(e) => setData({ ...data, [`${actual ? 'actual_building_num' : 'building_num'}`]: e })}\n          value={actual ? data.actual_building_num : data.building_num}\n        />\n      </div>\n    </div>\n\n    <div className=\"clients__address-container df duet\">\n      <div className=\"long-width\">\n        <CustomSelect\n          label=\"Частина будівлі\"\n          data={buildingPartType}\n          onChange={(e) => setData({ ...data, [`${actual ? 'actual_building_part_id' : 'building_part_id'}`]: e })}\n          selectedValue={actual ? data.actual_building_part_id : data.building_part_id}\n        />\n      </div>\n      <div className=\"short-width\">\n        <CustomInput\n          label=\"Номер\"\n          onChange={(e) => setData({ ...data, [`${actual ? 'actual_building_part_num' : 'building_part_num'}`]: e })}\n          value={actual ? data.actual_building_part_num : data.building_part_num}\n        />\n      </div>\n    </div>\n\n    <div className=\"clients__address-container df duet\">\n      <div className=\"long-width\">\n        <CustomSelect\n          label=\"Тип приміщення\"\n          data={apartmentType}\n          onChange={(e) => setData({ ...data, [`${actual ? 'actual_apartment_type_id' : 'apartment_type_id'}`]: e })}\n          selectedValue={actual ? data.actual_apartment_type_id : data.apartment_type_id}\n        />\n      </div>\n      <div className=\"short-width\">\n        <CustomInput\n          label=\"Номер приміщення\"\n          onChange={(e) => setData({ ...data, [`${actual ? 'actual_apartment_num' : 'apartment_num'}`]: e })}\n          value={actual ? data.actual_apartment_num : data.apartment_num}\n        />\n      </div>\n    </div>\n  </div>\n);\n\nexport default Fields;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqClientAddress(\n  token: string,\n  id: string,\n  method: 'GET' | 'PUT' | undefined = 'GET',\n  bodyData?: any\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/client/address/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqClientCities(\n  token: string,\n  regionId: string | null,\n  districtId: string | null,\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/client/cities/${regionId}${districtId ? `/${districtId}` : ''}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqClientDistricts(\n  token: string,\n  id: string,\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/client/districts/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useCallback, useState, useEffect } from 'react';\nimport { SelectItem } from '../../../../../../../../../../../../../../types';\nimport { State } from '../../../../../../../../../../../../../../store/types';\nimport { setModalInfo } from '../../../../../../../../../../../../../../store/main/actions';\nimport reqClientAddress from '../../../../../../../../../../../../../../services/generator/Client/reqClientAddress';\nimport reqClientCities from '../../../../../../../../../../../../../../services/generator/Client/reqClientCities';\nimport reqClientDistricts from '../../../../../../../../../../../../../../services/generator/Client/reqClientDistricts';\n\ntype ActualInitialData = {\n  actual_region_id: string | null,\n  actual_city_id: string | null,\n  actual_address_type_id: string | null,\n  actual_address: string | null,\n  actual_building_type_id: string | null,\n  actual_building_num: string | null,\n  actual_building_part_id: string | null,\n  actual_building_part_num: string | null,\n  actual_apartment_type_id: string | null,\n  actual_apartment_num: string | null,\n  actual_district_id: string | null,\n}\n\ntype Data = {\n  region_id: string | null,\n  city_id: string | null,\n  address_type_id: string | null,\n  address: string | null,\n  building_type_id: string | null,\n  building_num: string | null,\n  building_part_id: string | null,\n  building_part_num: string | null,\n  apartment_type_id: string | null,\n  apartment_num: string | null,\n  district_id: string | null,\n}\ninterface InitialData extends ActualInitialData, Data {\n  registration: boolean,\n  actual: boolean,\n  regions?: SelectItem[],\n  address_type?: SelectItem[],\n  building_type?: SelectItem[],\n  apartment_type?: SelectItem[],\n  building_part?: SelectItem[],\n}\n\nexport type Props = {\n  id: string;\n  initialData?: InitialData;\n}\n\nexport const useAddress = ({ initialData, id }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  const [showModal, setShowModal] = useState<boolean>(false);\n\n  const [regions, setRegions] = useState<SelectItem[]>([]);\n  const [actualRegions, setActualRegions] = useState<SelectItem[]>([]);\n  const [cities, setCities] = useState<SelectItem[]>([]);\n  const [actualCities, setActualCities] = useState<SelectItem[]>([]);\n  const [districts, setDistricts] = useState<SelectItem[]>([]);\n  const [actualDistricts, setActualDistricts] = useState<SelectItem[]>([]);\n  const [addressType, setAddressType] = useState<SelectItem[]>([]);\n  const [buildingType, setBuildingType] = useState<SelectItem[]>([]);\n  const [buildingPartType, setBuildingPartType] = useState<SelectItem[]>([]);\n  const [apartmentType, setApartmentType] = useState<SelectItem[]>([]);\n  const [registration, setRegistration] = useState<boolean>(false);\n  const [actual, setActual] = useState<boolean>(false);\n  const [data, setData] = useState<Data>({\n    region_id: null,\n    city_id: null,\n    address_type_id: null,\n    address: null,\n    building_type_id: null,\n    building_num: null,\n    building_part_id: null,\n    building_part_num: null,\n    apartment_type_id: null,\n    apartment_num: null,\n    district_id: null,\n  });\n  const [actualData, setActualData] = useState<ActualInitialData>({\n    actual_region_id: null,\n    actual_city_id: null,\n    actual_address_type_id: null,\n    actual_address: null,\n    actual_building_type_id: null,\n    actual_building_num: null,\n    actual_building_part_id: null,\n    actual_building_part_num: null,\n    actual_apartment_type_id: null,\n    actual_apartment_num: null,\n    actual_district_id: null,\n  });\n\n  const onClear = useCallback(() => {\n    setData({\n      region_id: null,\n      city_id: null,\n      address_type_id: null,\n      address: null,\n      building_type_id: null,\n      building_num: null,\n      building_part_id: null,\n      building_part_num: null,\n      apartment_type_id: null,\n      apartment_num: null,\n      district_id: null,\n    });\n\n    setActualData({\n      actual_region_id: null,\n      actual_city_id: null,\n      actual_address_type_id: null,\n      actual_address: null,\n      actual_building_type_id: null,\n      actual_building_num: null,\n      actual_building_part_id: null,\n      actual_building_part_num: null,\n      actual_apartment_type_id: null,\n      actual_apartment_num: null,\n      actual_district_id: null,\n    });\n  }, []);\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const bodyData = {\n        ...data,\n        ...actualData,\n        actual,\n        registration,\n      };\n\n      const { success, message } = await reqClientAddress(token, id, 'PUT', bodyData);\n      dispatch(\n        setModalInfo({\n          open: true,\n          success,\n          message,\n        })\n      );\n    }\n  }, [data, actualData, actual, registration, token]);\n\n  const onRegionChange = useCallback((value) => {\n    setData({ ...data, region_id: value, district_id: null, city_id: null });\n  }, [data]);\n\n  const onActualRegionChange = useCallback((value) => {\n    setActualData({\n      ...actualData,\n      actual_region_id: value,\n      actual_district_id: null,\n      actual_city_id: null,\n    });\n  }, [actualData]);\n\n  const onDistrictChange = useCallback((value) => {\n    setData({ ...data, district_id: value, city_id: null });\n  }, [data]);\n\n  const onActualDistrictChange = useCallback((value) => {\n    setActualData({ ...actualData, actual_district_id: value, actual_city_id: null });\n  }, [actualData]);\n\n  useEffect(() => {\n    setRegions(initialData?.regions || []);\n    setActualRegions(initialData?.regions || []);\n    setAddressType(initialData?.address_type || []);\n    setBuildingType(initialData?.building_type || []);\n    setBuildingPartType(initialData?.building_part || []);\n    setApartmentType(initialData?.apartment_type || []);\n    setRegistration(initialData?.registration || false);\n    setActual(initialData?.actual || false);\n    setData({\n      region_id: initialData?.region_id || null,\n      city_id: initialData?.city_id || null,\n      address_type_id: initialData?.address_type_id || null,\n      address: initialData?.address || null,\n      building_type_id: initialData?.building_type_id || null,\n      building_num: initialData?.building_num || null,\n      building_part_id: initialData?.building_part_id || null,\n      building_part_num: initialData?.building_part_num || null,\n      apartment_type_id: initialData?.apartment_type_id || null,\n      apartment_num: initialData?.apartment_num || null,\n      district_id: initialData?.district_id || null,\n    });\n    setActualData({\n      actual_region_id: initialData?.actual_region_id || null,\n      actual_city_id: initialData?.actual_city_id || null,\n      actual_address_type_id: initialData?.actual_address_type_id || null,\n      actual_address: initialData?.actual_address || null,\n      actual_building_type_id: initialData?.actual_building_type_id || null,\n      actual_building_num: initialData?.actual_building_num || null,\n      actual_building_part_id: initialData?.actual_building_part_id || null,\n      actual_building_part_num: initialData?.actual_building_part_num || null,\n      actual_apartment_type_id: initialData?.actual_apartment_type_id || null,\n      actual_apartment_num: initialData?.actual_apartment_num || null,\n      actual_district_id: initialData?.actual_district_id || null,\n    });\n  }, [initialData]);\n\n  // Change district and city when changed region\n  useEffect(() => {\n    if (showModal) return;\n    // get DISTRICTS\n    (async () => {\n      if (token && data.region_id) {\n        const res = await reqClientDistricts(token, data.region_id);\n\n        if (res.success) {\n          setDistricts(res.data);\n        }\n      }\n    })();\n\n    // get CITIES\n    (async () => {\n      if (token && data.region_id) {\n        const res = await reqClientCities(token, data.region_id, data.district_id);\n\n        if (res.success) {\n          setCities(res.data);\n        }\n      }\n    })();\n  }, [token, data.region_id, data.district_id, showModal]);\n\n  // Change actual district and city when changed actual region\n  useEffect(() => {\n    if (showModal) return;\n\n    // get DISTRICTS\n    (async () => {\n      if (token && actualData.actual_region_id) {\n        const res = await reqClientDistricts(token, actualData.actual_region_id);\n\n        if (res.success) {\n          setActualDistricts(res.data);\n        }\n      }\n    })();\n\n    // get CITIES\n    (async () => {\n      if (token && actualData.actual_region_id) {\n        const res = await reqClientCities(\n          token, actualData.actual_region_id, actualData.actual_district_id\n        );\n\n        if (res.success) {\n          setActualCities(res.data);\n        }\n      }\n    })();\n  }, [token, actualData.actual_region_id, actualData.actual_district_id, showModal]);\n\n  return {\n    regions,\n    actualRegions,\n    cities,\n    actualCities,\n    districts,\n    actualDistricts,\n    addressType,\n    buildingType,\n    buildingPartType,\n    apartmentType,\n    data,\n    actualData,\n    showModal,\n    registration,\n    actual,\n    setShowModal,\n    setData,\n    setActualData,\n    onRegionChange,\n    onActualRegionChange,\n    onDistrictChange,\n    onActualDistrictChange,\n    onClear,\n    onSave,\n    setRegistration,\n    setActual,\n  };\n};\n","import React from 'react';\nimport CustomSwitch from '../../../../../../../../../../../../../../components/CustomSwitch';\nimport PrimaryButton from '../../../../../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../../../../../components/SectionWithTitle';\nimport AddCityModal from './components/AddCityModal';\nimport Fields from './components/Fields';\nimport { useAddress, Props } from './useAddress';\n\nconst Address = (props: Props) => {\n  const meta = useAddress(props);\n\n  return (\n    <div className=\"clients__address\">\n      <SectionWithTitle title=\"Адреса\" onClear={meta.onClear}>\n        <div className=\"grid-center-duet mb20\">\n          <div className=\"clients__address-container\">\n            <CustomSwitch\n              label=\"Зареєстрований\"\n              onChange={(e) => meta.setRegistration(e)}\n              selected={meta.registration}\n            />\n          </div>\n\n          <div className=\"clients__address-container\">\n            <CustomSwitch\n              label=\"Актуальне місце проживання\"\n              onChange={(e) => meta.setActual(e)}\n              selected={meta.actual}\n            />\n          </div>\n        </div>\n        <div className={`clients__address-fields ${meta.actual ? 'double' : ''}`}>\n          <Fields\n            regions={meta.regions}\n            cities={meta.cities}\n            districts={meta.districts}\n            addressType={meta.addressType}\n            buildingType={meta.buildingType}\n            buildingPartType={meta.buildingPartType}\n            apartmentType={meta.apartmentType}\n            data={meta.data}\n            onRegionChange={meta.onRegionChange}\n            onDistrictChange={meta.onDistrictChange}\n            setData={meta.setData}\n            setShowModal={meta.setShowModal}\n          />\n\n          {meta.actual && (\n            <Fields\n              actual\n              regions={meta.actualRegions}\n              cities={meta.actualCities}\n              districts={meta.actualDistricts}\n              addressType={meta.addressType}\n              buildingType={meta.buildingType}\n              buildingPartType={meta.buildingPartType}\n              apartmentType={meta.apartmentType}\n              data={meta.actualData}\n              onRegionChange={meta.onActualRegionChange}\n              onDistrictChange={meta.onActualDistrictChange}\n              setData={meta.setActualData}\n              setShowModal={meta.setShowModal}\n            />\n          )}\n        </div>\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={meta.onSave} disabled={false} />\n      </div>\n\n      <AddCityModal open={meta.showModal} onClose={meta.setShowModal} />\n    </div>\n  );\n};\n\nexport default Address;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqClientCitizenship(\n  token: string,\n  id: string,\n  method: 'GET' | 'PUT' | undefined = 'GET',\n  bodyData?: any\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/client/citizenships/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useCallback, useState, useEffect } from 'react';\nimport { State } from '../../../../../../../../../../../../../../store/types';\nimport { setModalInfo } from '../../../../../../../../../../../../../../store/main/actions';\nimport reqClientCitizenship from '../../../../../../../../../../../../../../services/generator/Client/reqClientCitizenship';\n\ntype Citizenships = {\n  id: number,\n  title: string,\n}\n\ntype InitialData = {\n  citizenships: Citizenships[],\n  citizenship_id: number,\n}\n\nexport type Props = {\n  id: string;\n  initialData?: InitialData;\n}\n\nexport const useCitizenship = ({ initialData, id }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  const [data, setData] = useState<Citizenships[]>([]);\n  const [selected, setSelected] = useState<number | string | null>();\n\n  useEffect(() => {\n    setData(initialData?.citizenships || []);\n    setSelected(initialData?.citizenship_id);\n  }, [initialData]);\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const { success, message } = await reqClientCitizenship(token, id, 'PUT', { citizenship_id: selected });\n      dispatch(\n        setModalInfo({\n          open: true,\n          success,\n          message,\n        })\n      );\n    }\n  }, [selected, token]);\n\n  return {\n    data,\n    selected,\n    setSelected,\n    onSave,\n  };\n};\n","import * as React from 'react';\nimport CustomSelect from '../../../../../../../../../../../../../../components/CustomSelect';\nimport PrimaryButton from '../../../../../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../../../../../components/SectionWithTitle';\nimport { useCitizenship, Props } from './useCitizenship';\n\nconst Citizenship = (props: Props) => {\n  const { data, selected, setSelected, onSave } = useCitizenship(props);\n\n  return (\n    <div className=\"clients__citizenship\">\n      <SectionWithTitle title=\"Громадянство\">\n        <div className=\"middle-column-fields\">\n          <div className=\"input-container\">\n            <CustomSelect\n              data={data}\n              label=\"Громадянство\"\n              onChange={setSelected}\n              selectedValue={selected}\n            />\n          </div>\n        </div>\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={onSave} disabled={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default Citizenship;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqClientContacts(\n  token: string,\n  id: string,\n  method: 'GET' | 'PUT' | undefined = 'GET',\n  bodyData?: any\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/client/contacts/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useCallback, useState, useEffect } from 'react';\nimport { State } from '../../../../../../../../../../../../../../store/types';\nimport { setModalInfo } from '../../../../../../../../../../../../../../store/main/actions';\nimport reqClientContacts from '../../../../../../../../../../../../../../services/generator/Client/reqClientContacts';\n\ntype InitialData = {\n  email: string | null,\n  phone: string | null,\n}\n\nexport type Props = {\n  id: string;\n  initialData?: InitialData,\n}\n\nexport const useContracts = ({ initialData, id }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  const [data, setData] = useState<InitialData>({\n    email: '',\n    phone: '',\n  });\n\n  useEffect(() => {\n    setData({\n      email: initialData?.email || '',\n      phone: initialData?.phone || '',\n    });\n  }, [initialData]);\n\n  const onClear = useCallback(() => {\n    setData({\n      email: '',\n      phone: '',\n    });\n  }, []);\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const { success, message } = await reqClientContacts(token, id, 'PUT', data);\n      dispatch(\n        setModalInfo({\n          open: true,\n          success,\n          message,\n        })\n      );\n    }\n  }, [data, token]);\n\n  return {\n    data,\n    setData,\n    onClear,\n    onSave,\n  };\n};\n","import * as React from 'react';\nimport CustomInput from '../../../../../../../../../../../../../../components/CustomInput';\nimport PhoneMaskInput from '../../../../../../../../../../../../../../components/PhoneMaskInput';\nimport PrimaryButton from '../../../../../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../../../../../components/SectionWithTitle';\nimport { useContracts, Props } from './useContracts';\n\nconst Contacts = (props: Props) => {\n  const { data, setData, onClear, onSave } = useContracts(props);\n\n  return (\n    <div className=\"clients__contacts\">\n      <SectionWithTitle title=\"Контактна інформація\" onClear={onClear}>\n        <div className=\"middle-column-fields\">\n          <div className=\"input-container\">\n            <PhoneMaskInput\n              label=\"Номер телефону\"\n              onChange={(e) => setData({ ...data, phone: e })}\n              value={data.phone}\n            />\n          </div>\n\n          <div className=\"input-container\">\n            <CustomInput\n              label=\"Email\"\n              onChange={(e) => setData({ ...data, email: e })}\n              value={data.email}\n            />\n          </div>\n        </div>\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={onSave} disabled={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default Contacts;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqClientName(\n  token: string,\n  cardId: string,\n  clientId: string,\n  method: 'GET' | 'PUT' | undefined = 'GET',\n  bodyData?: any\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/client/name/${clientId}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useCallback, useState, useEffect } from 'react';\nimport { State } from '../../../../../../../../../../../../../../store/types';\nimport reqClientName from '../../../../../../../../../../../../../../services/generator/Client/reqClientName';\nimport { setModalInfo } from '../../../../../../../../../../../../../../store/main/actions';\n\ntype InitialData = {\n  surname_n: string;\n  name_n: string;\n  patronymic_n: string;\n  surname_r: string;\n  name_r: string;\n  patronymic_r: string;\n  surname_o: string;\n  name_o: string;\n  patronymic_o: string;\n  surname_d: string;\n  name_d: string;\n  patronymic_d: string;\n}\n\nexport type Props = {\n  id: string;\n  initialData?: InitialData;\n}\n\nexport const useFio = ({ initialData, id }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  const [data, setData] = useState<InitialData>({\n    surname_n: '',\n    name_n: '',\n    patronymic_n: '',\n    surname_r: '',\n    name_r: '',\n    patronymic_r: '',\n    surname_o: '',\n    name_o: '',\n    patronymic_o: '',\n    surname_d: '',\n    name_d: '',\n    patronymic_d: '',\n  });\n\n  useEffect(() => {\n    setData({\n      surname_n: initialData?.surname_n || '',\n      name_n: initialData?.name_n || '',\n      patronymic_n: initialData?.patronymic_n || '',\n      surname_r: initialData?.surname_r || '',\n      name_r: initialData?.name_r || '',\n      patronymic_r: initialData?.patronymic_r || '',\n      surname_o: initialData?.surname_o || '',\n      name_o: initialData?.name_o || '',\n      patronymic_o: initialData?.patronymic_o || '',\n      surname_d: initialData?.surname_d || '',\n      name_d: initialData?.name_d || '',\n      patronymic_d: initialData?.patronymic_d || '',\n    });\n  }, [initialData]);\n\n  const onClear = useCallback(() => {\n    setData({\n      surname_n: '',\n      name_n: '',\n      patronymic_n: '',\n      surname_r: '',\n      name_r: '',\n      patronymic_r: '',\n      surname_o: '',\n      name_o: '',\n      patronymic_o: '',\n      surname_d: '',\n      name_d: '',\n      patronymic_d: '',\n    });\n  }, []);\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const { success, message } = await reqClientName(token, '', id, 'PUT', data);\n      dispatch(\n        setModalInfo({\n          open: true,\n          success,\n          message,\n        })\n      );\n    }\n  }, [data, token]);\n\n  return {\n    data,\n    setData,\n    onClear,\n    onSave,\n  };\n};\n","import * as React from 'react';\nimport CustomInput from '../../../../../../../../../../../../../../components/CustomInput';\nimport PrimaryButton from '../../../../../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../../../../../components/SectionWithTitle';\nimport { useFio, Props } from './useFio';\n\nconst Fio = (props: Props) => {\n  const { data, setData, onClear, onSave } = useFio(props);\n  return (\n    <div className=\"clients__fio\">\n      <div className=\"clients__fio-header\">\n        <span className=\"section-title\">ПІБ</span>\n        <button type=\"button\" className=\"clear-button\">\n          <img\n            src=\"/icons/clear-form.svg\"\n            alt=\"close\"\n            className=\"clear-icon\"\n            onClick={onClear}\n          />\n        </button>\n      </div>\n\n      <SectionWithTitle title=\"Називний відмінок: Хто? Що?\">\n        <div className=\"grid\">\n          <CustomInput\n            label=\"Прізвище\"\n            onChange={(e) => setData({ ...data, surname_n: e })}\n            value={data.surname_n}\n          />\n\n          <CustomInput\n            label=\"Ім'я\"\n            onChange={(e) => setData({ ...data, name_n: e })}\n            value={data.name_n}\n          />\n\n          <CustomInput\n            label=\"По батькові\"\n            onChange={(e) => setData({ ...data, patronymic_n: e })}\n            value={data.patronymic_n}\n          />\n        </div>\n      </SectionWithTitle>\n\n      <SectionWithTitle title=\"Родовий відмінок: Кого? Чого?\">\n        <div className=\"grid\">\n          <CustomInput\n            label=\"Прізвище\"\n            onChange={(e) => setData({ ...data, surname_r: e })}\n            value={data.surname_r}\n          />\n\n          <CustomInput\n            label=\"Ім'я\"\n            onChange={(e) => setData({ ...data, name_r: e })}\n            value={data.name_r}\n          />\n\n          <CustomInput\n            label=\"По батькові\"\n            onChange={(e) => setData({ ...data, patronymic_r: e })}\n            value={data.patronymic_r}\n          />\n        </div>\n      </SectionWithTitle>\n\n      <SectionWithTitle title=\"Орудний відмінок: Ким? Чим?\">\n        <div className=\"grid\">\n          <CustomInput\n            label=\"Прізвище\"\n            onChange={(e) => setData({ ...data, surname_o: e })}\n            value={data.surname_o}\n          />\n\n          <CustomInput\n            label=\"Ім'я\"\n            onChange={(e) => setData({ ...data, name_o: e })}\n            value={data.name_o}\n          />\n\n          <CustomInput\n            label=\"По батькові\"\n            onChange={(e) => setData({ ...data, patronymic_o: e })}\n            value={data.patronymic_o}\n          />\n        </div>\n      </SectionWithTitle>\n\n      <SectionWithTitle title=\"Давальний відмінок Кому? Чому?\">\n        <div className=\"grid\">\n          <CustomInput\n            label=\"Прізвище\"\n            onChange={(e) => setData({ ...data, surname_d: e })}\n            value={data.surname_d}\n          />\n\n          <CustomInput\n            label=\"Ім'я\"\n            onChange={(e) => setData({ ...data, name_d: e })}\n            value={data.name_d}\n          />\n\n          <CustomInput\n            label=\"По батькові\"\n            onChange={(e) => setData({ ...data, patronymic_d: e })}\n            value={data.patronymic_d}\n          />\n        </div>\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={onSave} disabled={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default Fio;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqClientPassport(\n  token: string,\n  id: string,\n  method: 'GET' | 'PUT' | undefined = 'GET',\n  bodyData?: any\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/client/passport/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useCallback, useState, useEffect, useMemo } from 'react';\nimport { SelectItem } from '../../../../../../../../../../../../../../types';\nimport { State } from '../../../../../../../../../../../../../../store/types';\nimport { setModalInfo } from '../../../../../../../../../../../../../../store/main/actions';\nimport reqClientPassport from '../../../../../../../../../../../../../../services/generator/Client/reqClientPassport';\nimport { formatDate, changeMonthWitDate } from '../../../../../../../../../../../../../../utils/formatDates';\n\ntype InitialData = {\n  gender: string,\n  date_of_birth: any,\n  tax_code: string,\n  passport_type_id: string,\n  passport_code: string,\n  passport_date: any\n  passport_department: string,\n  passport_demographic_code: string,\n  passport_finale_date: any,\n  passport_types?: SelectItem[],\n}\n\nexport type Props = {\n  id: string;\n  initialData?: InitialData;\n}\n\nexport const usePassport = ({ initialData, id }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  const [passportTypes, setPassportTypes] = useState<SelectItem[]>([]);\n  const [data, setData] = useState<InitialData>({\n    gender: 'female',\n    tax_code: '',\n    passport_type_id: '',\n    passport_code: '',\n    passport_department: '',\n    passport_demographic_code: '',\n    passport_date: null,\n    passport_finale_date: null,\n    date_of_birth: null,\n  });\n\n  const sexButtons = useMemo(() => [\n    {\n      id: 'female',\n      title: 'Жіноча',\n    },\n    {\n      id: 'male',\n      title: 'Чоловіча'\n    }\n  ], []);\n\n  const onClear = useCallback(() => {\n    setData({\n      gender: 'female',\n      tax_code: '',\n      passport_type_id: '',\n      passport_code: '',\n      passport_department: '',\n      passport_demographic_code: '',\n      passport_date: null,\n      passport_finale_date: null,\n      date_of_birth: null,\n\n    });\n  }, []);\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const reqData = {\n        ...data,\n        date_of_birth: formatDate(data.date_of_birth),\n        passport_date: formatDate(data.passport_date),\n        passport_finale_date: formatDate(data.passport_finale_date),\n      };\n\n      const { success, message } = await reqClientPassport(token, id, 'PUT', reqData);\n      dispatch(\n        setModalInfo({\n          open: true,\n          success,\n          message,\n        })\n      );\n    }\n  }, [data, token]);\n\n  useEffect(() => {\n    setPassportTypes(initialData?.passport_types || []);\n    setData({\n      gender: initialData?.gender || 'female',\n      tax_code: initialData?.tax_code || '',\n      passport_type_id: initialData?.passport_type_id || '',\n      passport_code: initialData?.passport_code || '',\n      passport_department: initialData?.passport_department || '',\n      passport_demographic_code: initialData?.passport_demographic_code || '',\n      passport_finale_date: initialData?.passport_finale_date\n        ? new Date(changeMonthWitDate(initialData?.passport_finale_date)) : null,\n      date_of_birth: initialData?.date_of_birth\n        ? new Date(changeMonthWitDate(initialData?.date_of_birth)) : null,\n      passport_date: initialData?.passport_date\n        ? new Date(changeMonthWitDate(initialData?.passport_date)) : null,\n    });\n  }, [initialData]);\n\n  return {\n    sexButtons,\n    passportTypes,\n    data,\n    setData,\n    onClear,\n    onSave,\n  };\n};\n","import * as React from 'react';\nimport CustomDatePicker from '../../../../../../../../../../../../../../components/CustomDatePicker';\nimport CustomInput from '../../../../../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../../../../../components/CustomSelect';\nimport PrimaryButton from '../../../../../../../../../../../../../../components/PrimaryButton';\nimport RadioButtonsGroup from '../../../../../../../../../../../../../../components/RadioButtonsGroup';\nimport SectionWithTitle from '../../../../../../../../../../../../../../components/SectionWithTitle';\nimport { usePassport, Props } from './usePassport';\n\nconst Passport = (props: Props) => {\n  const { sexButtons, passportTypes, data, setData, onClear, onSave } = usePassport(props);\n\n  return (\n    <div className=\"clients__passport\">\n      <SectionWithTitle title=\"Код та Паспортні данні\" onClear={onClear}>\n        <div className=\"grid mb20\">\n          <div className=\"sex\">\n            <p className=\"sex__title\">Стать</p>\n            <RadioButtonsGroup\n              buttons={sexButtons}\n              onChange={(e) => setData({ ...data, gender: e.toString() })}\n              selected={data.gender}\n              unicId=\"clients__passport-sex\"\n            />\n          </div>\n\n          <CustomDatePicker\n            label=\"Дата народження\"\n            onSelect={(e) => setData({ ...data, date_of_birth: e })}\n            selectedDate={data.date_of_birth}\n          />\n          <CustomInput\n            label=\"ІНН\"\n            onChange={(e) => setData({ ...data, tax_code: e })}\n            value={data.tax_code}\n          />\n          <CustomSelect\n            label=\"Тип паспорту\"\n            data={passportTypes}\n            onChange={(e) => setData({ ...data, passport_type_id: e })}\n            selectedValue={data.passport_type_id}\n          />\n          <CustomInput\n            label=\"Серія/Номер паспорту\"\n            onChange={(e) => setData({ ...data, passport_code: e })}\n            value={data.passport_code}\n          />\n          <CustomDatePicker\n            label=\"Дата видачі\"\n            onSelect={(e) => setData({ ...data, passport_date: e })}\n            selectedDate={data.passport_date}\n          />\n        </div>\n\n        <div className=\"mb20\">\n          <CustomInput\n            label=\"Орган що видав паспорт\"\n            onChange={(e) => setData({ ...data, passport_department: e })}\n            value={data.passport_department}\n          />\n        </div>\n\n        <div className=\"grid\">\n          <CustomInput\n            label=\"Запису в ЄДДР (для ID карток)\"\n            onChange={(e) => setData({ ...data, passport_demographic_code: e })}\n            value={data.passport_demographic_code}\n          />\n          <CustomDatePicker\n            label=\"Діє до\"\n            onSelect={(e) => setData({ ...data, passport_finale_date: e })}\n            selectedDate={data.passport_finale_date}\n          />\n        </div>\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={onSave} disabled={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default Passport;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqClientConsents(\n  token: string,\n  clientId: string,\n  personId: string,\n  method: 'GET' | 'PUT' | undefined = 'GET',\n  bodyData?: any\n) {\n  const url = method === 'GET' ? `/api/generator/client/consents/${clientId}/${personId}` : `/api/generator/client/consents/${personId}`;\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}${url}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useCallback, useState, useEffect } from 'react';\nimport { changeMonthWitDate, formatDate } from '../../../../../../../../../../../../../../utils/formatDates';\nimport { SelectItem } from '../../../../../../../../../../../../../../types';\nimport { State } from '../../../../../../../../../../../../../../store/types';\nimport { setModalInfo } from '../../../../../../../../../../../../../../store/main/actions';\nimport reqClientConsents from '../../../../../../../../../../../../../../services/generator/Client/reqClientConsents';\n\ntype InitialData = {\n  notary_id: string,\n  consent_template_id: string,\n  married_type_id: string,\n  mar_series: string,\n  mar_series_num: string,\n  mar_date: any,\n  mar_depart: string,\n  mar_reg_num: string,\n  sign_date: any,\n  reg_num: string,\n  original: boolean,\n  widow: boolean,\n  widow_date: any,\n  consent_spouse_word_id: string,\n  notary?: SelectItem[],\n  consent_templates?: SelectItem[],\n  married_types?: SelectItem[],\n  consent_spouse_words?: SelectItem[],\n}\n\nexport type Props = {\n  clientId: string;\n  personId: string;\n  initialData?: InitialData;\n}\n\nexport const useStatement = ({ initialData, clientId, personId }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  const [rakulNotary, setRakulNotary] = useState<SelectItem[]>([]);\n  const [consentTemplates, setConsentTemplates] = useState<SelectItem[]>([]);\n  const [marriageTypes, setMarriageTypes] = useState<SelectItem[]>([]);\n  const [consentSpouseWords, setConsentSpouseWords] = useState<SelectItem[]>([]);\n  const [data, setData] = useState<InitialData>({\n    notary_id: '',\n    consent_template_id: '',\n    married_type_id: '',\n    mar_series: '',\n    mar_series_num: '',\n    mar_date: null,\n    mar_depart: '',\n    mar_reg_num: '',\n    sign_date: null,\n    reg_num: '',\n    consent_spouse_word_id: '',\n    original: false,\n    widow: false,\n    widow_date: null,\n  });\n\n  useEffect(() => {\n    setRakulNotary(initialData?.notary || []);\n    setConsentTemplates(initialData?.consent_templates || []);\n    setMarriageTypes(initialData?.married_types || []);\n    setConsentSpouseWords(initialData?.consent_spouse_words || []);\n    setData({\n      notary_id: initialData?.notary_id || '',\n      consent_template_id: initialData?.consent_template_id || '',\n      married_type_id: initialData?.married_type_id || '',\n      mar_series: initialData?.mar_series || '',\n      mar_series_num: initialData?.mar_series_num || '',\n      mar_date: initialData?.mar_date ? new Date(changeMonthWitDate(initialData?.mar_date)) : null,\n      mar_depart: initialData?.mar_depart || '',\n      mar_reg_num: initialData?.mar_reg_num || '',\n      sign_date: initialData?.sign_date\n        ? new Date(changeMonthWitDate(initialData?.sign_date)) : null,\n      reg_num: initialData?.reg_num || '',\n      consent_spouse_word_id: initialData?.consent_spouse_word_id || '',\n      original: initialData?.original || false,\n      widow: initialData?.widow || false,\n      widow_date: initialData?.widow_date || null,\n    });\n  }, [initialData]);\n\n  const onClear = useCallback(() => {\n    setData({\n      notary_id: '',\n      consent_template_id: '',\n      married_type_id: '',\n      mar_series: '',\n      mar_series_num: '',\n      mar_date: null,\n      mar_depart: '',\n      mar_reg_num: '',\n      sign_date: null,\n      reg_num: '',\n      consent_spouse_word_id: '',\n      original: false,\n      widow: false,\n      widow_date: null,\n    });\n  }, []);\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const reqData = {\n        ...data,\n        mar_date: formatDate(data.mar_date),\n        sign_date: formatDate(data.sign_date),\n        widow_date: data.widow ? formatDate(data.widow_date) : null,\n      };\n\n      const { success, message } = await reqClientConsents(token, clientId, personId, 'PUT', reqData);\n      dispatch(\n        setModalInfo({\n          open: true,\n          success,\n          message,\n        })\n      );\n    }\n  }, [data, token]);\n\n  return {\n    data,\n    rakulNotary,\n    consentTemplates,\n    marriageTypes,\n    consentSpouseWords,\n    setData,\n    onClear,\n    onSave,\n  };\n};\n","import * as React from 'react';\nimport CustomDatePicker from '../../../../../../../../../../../../../../components/CustomDatePicker';\nimport CustomInput from '../../../../../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../../../../../components/CustomSelect';\nimport CustomSwitch from '../../../../../../../../../../../../../../components/CustomSwitch';\nimport PrimaryButton from '../../../../../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../../../../../components/SectionWithTitle';\nimport { useStatement, Props } from './useStatement';\n\nconst Statement = (props: Props) => {\n  const meta = useStatement(props);\n\n  return (\n    <div className=\"clients__statement\">\n      <SectionWithTitle title=\"Сімейний стан покупця\" onClear={meta.onClear}>\n        <div className=\"grid mb20\">\n          <CustomSelect\n            label=\"Нотаріус\"\n            data={meta.rakulNotary}\n            onChange={(e) => meta.setData({ ...meta.data, notary_id: e })}\n            selectedValue={meta.data.notary_id}\n          />\n          <CustomDatePicker\n            label=\"Дата посвідчення заяви\"\n            onSelect={(e) => meta.setData({ ...meta.data, sign_date: e })}\n            selectedDate={meta.data.sign_date}\n          />\n          <CustomInput\n            label=\"Реєстровий номер\"\n            onChange={(e) => meta.setData({ ...meta.data, reg_num: e })}\n            value={meta.data.reg_num}\n          />\n          <CustomSelect\n            label=\"Шаблон згоди\"\n            data={meta.consentTemplates}\n            onChange={(e) => meta.setData({ ...meta.data, consent_template_id: e })}\n            selectedValue={meta.data.consent_template_id}\n          />\n          <CustomSelect\n            label=\"Тип назви свідоцтва\"\n            data={meta.marriageTypes}\n            onChange={(e) => meta.setData({ ...meta.data, married_type_id: e })}\n            selectedValue={meta.data.married_type_id}\n          />\n          <CustomSelect\n            label=\"Пункт згоди у договорі\"\n            data={meta.consentSpouseWords}\n            onChange={(e) => meta.setData({ ...meta.data, consent_spouse_word_id: e })}\n            selectedValue={meta.data.consent_spouse_word_id}\n          />\n          <CustomInput\n            label=\"Серія свідоцтва\"\n            onChange={(e) => meta.setData({ ...meta.data, mar_series: e })}\n            value={meta.data.mar_series}\n          />\n          <CustomInput\n            label=\"Номер свідоцтва\"\n            onChange={(e) => meta.setData({ ...meta.data, mar_series_num: e })}\n            value={meta.data.mar_series_num}\n          />\n          <CustomDatePicker\n            label=\"Дата видачі\"\n            onSelect={(e) => meta.setData({ ...meta.data, mar_date: e })}\n            selectedDate={meta.data.mar_date}\n          />\n        </div>\n\n        <div className=\"mb20\">\n          <CustomInput\n            label=\"Орган, що видав\"\n            onChange={(e) => meta.setData({ ...meta.data, mar_depart: e })}\n            value={meta.data.mar_depart}\n          />\n        </div>\n\n        <div className=\"grid mb20\">\n          <CustomInput\n            label=\"Номер актового запису\"\n            onChange={(e) => meta.setData({ ...meta.data, mar_reg_num: e })}\n            value={meta.data.mar_reg_num}\n          />\n          <CustomSwitch\n            label=\"Видано повторно\"\n            selected={meta.data.original}\n            onChange={(e) => meta.setData({ ...meta.data, original: e })}\n          />\n          <CustomSwitch\n            label=\"Вдівство\"\n            selected={meta.data.widow}\n            onChange={(e) => meta.setData({ ...meta.data, widow: e })}\n          />\n\n          <CustomDatePicker\n            label=\"Вдівство від\"\n            onSelect={(e) => meta.setData({ ...meta.data, widow_date: e })}\n            selectedDate={meta.data.widow_date}\n            disabled={!meta.data.widow}\n          />\n        </div>\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={meta.onSave} disabled={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default Statement;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqClientRepresentative(\n  token: string,\n  clientId: string,\n  personId: string,\n  method: 'GET' | 'PUT' | undefined = 'GET',\n  bodyData?: any\n) {\n  try {\n    const url = method === 'GET'\n      ? `/api/generator/client/representative/${clientId}/${personId}`\n      : `/api/generator/client/representative/${personId}`;\n\n    const data = await requestApi({\n      url: `${DEFAULT_URL}${url}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useCallback, useState, useEffect } from 'react';\nimport { SelectItem } from '../../../../../../../../../../../../../../types';\nimport { State } from '../../../../../../../../../../../../../../store/types';\nimport { setModalInfo } from '../../../../../../../../../../../../../../store/main/actions';\nimport reqClientRepresentative from '../../../../../../../../../../../../../../services/generator/Client/reqClientRepresentative';\nimport { formatDate } from '../../../../../../../../../../../../../../utils/formatDates';\n\ntype InitialData = {\n  notary_id: string,\n  reg_num: string,\n  reg_date: any,\n  notary?: SelectItem[],\n  other_notary?: SelectItem[],\n}\n\nexport type Props = {\n  clientId: string;\n  personId: string;\n  initialData?: InitialData;\n}\n\nexport const usePowerOfAttorney = ({ initialData, clientId, personId }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  const [notary, setNotary] = useState<SelectItem[]>([]);\n  const [otherNotary, setOtherNotary] = useState<SelectItem[]>([]);\n  const [data, setData] = useState<InitialData>({\n    notary_id: '',\n    reg_num: '',\n    reg_date: null,\n  });\n\n  useEffect(() => {\n    setNotary(initialData?.notary || []);\n    setOtherNotary(initialData?.other_notary || []);\n    setData({\n      notary_id: initialData?.notary_id || '',\n      reg_num: initialData?.reg_num || '',\n      reg_date: initialData?.reg_date ? new Date(initialData?.reg_date) : null,\n    });\n  }, [initialData]);\n\n  const onClear = useCallback(() => {\n    setData({\n      notary_id: '',\n      reg_num: '',\n      reg_date: null,\n    });\n  }, []);\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const reqData = {\n        ...data,\n        reg_date: formatDate(data.reg_date),\n      };\n\n      const { success, message } = await reqClientRepresentative(token, clientId, personId, 'PUT', reqData);\n      dispatch(\n        setModalInfo({\n          open: true,\n          success,\n          message,\n        })\n      );\n    }\n  }, [data, token]);\n\n  return {\n    data,\n    notary,\n    otherNotary,\n    setData,\n    onClear,\n    onSave,\n  };\n};\n","import * as React from 'react';\nimport CustomDatePicker from '../../../../../../../../../../../../../../components/CustomDatePicker';\nimport CustomInput from '../../../../../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../../../../../components/CustomSelect';\nimport PrimaryButton from '../../../../../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../../../../../components/SectionWithTitle';\nimport { usePowerOfAttorney, Props } from './usePowerOfAttorney';\n\nconst PowerOfAttorney = (props: Props) => {\n  const meta = usePowerOfAttorney(props);\n\n  return (\n    <div className=\"clients__power-of-attorney\">\n      <SectionWithTitle title=\"Довіреність представника клієнта\" onClear={meta.onClear}>\n        <div className=\"grid\">\n          <CustomSelect\n            label=\"Нотаріус\"\n            data={meta.notary}\n            onChange={(e) => meta.setData({ ...meta.data, notary_id: e })}\n            selectedValue={meta.data.notary_id}\n          />\n          <CustomInput\n            label=\"Реєстровий номер\"\n            onChange={(e) => meta.setData({ ...meta.data, reg_num: e })}\n            value={meta.data.reg_num}\n          />\n          <CustomDatePicker\n            label=\"Дата видачі\"\n            onSelect={(e) => meta.setData({ ...meta.data, reg_date: e })}\n            selectedDate={meta.data.reg_date}\n          />\n        </div>\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={meta.onSave} disabled={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default PowerOfAttorney;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqTermination(\n  token: string,\n  cardId: string,\n  userId: string,\n  method: 'GET' | 'PUT' | undefined = 'GET',\n  bodyData?: any\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/client/termination/${cardId}/${userId}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { useState, useEffect, useMemo } from 'react';\nimport { State } from '../../../../../../../../../../../../store/types';\nimport reqClientName from '../../../../../../../../../../../../services/generator/Client/reqClientName';\nimport reqClientContacts from '../../../../../../../../../../../../services/generator/Client/reqClientContacts';\nimport reqClientCitizenship from '../../../../../../../../../../../../services/generator/Client/reqClientCitizenship';\nimport reqClientPassport from '../../../../../../../../../../../../services/generator/Client/reqClientPassport';\nimport reqClientAddress from '../../../../../../../../../../../../services/generator/Client/reqClientAddress';\nimport reqClientConsents from '../../../../../../../../../../../../services/generator/Client/reqClientConsents';\nimport reqClientRepresentative from '../../../../../../../../../../../../services/generator/Client/reqClientRepresentative';\nimport reqTermination from '../../../../../../../../../../../../services/generator/Client/reqTermination';\nimport { isNumber } from '../../../../../../../../../../../../utils/numbers';\n\nexport const useClientsFields = () => {\n  const { token } = useSelector((state: State) => state.main.user);\n  const { clientId, personId } = useParams<{clientId: string, personId: string}>();\n\n  const [userType, setUserType] = useState();\n  // Fields Data\n  const [fioData, setFioData] = useState();\n  const [contacts, setContacts] = useState();\n  const [citizenship, setCitizenship] = useState();\n  const [passport, setPassport] = useState();\n  const [address, setAddress] = useState();\n  const [consents, setConsents] = useState();\n  const [representative, setRepresentative] = useState();\n  const [termination, setTermination] = useState();\n\n  const isCorrectId = useMemo(() => isNumber(personId), [personId]);\n\n  useEffect(() => {\n    if (token && isCorrectId) {\n      // get FIO\n      (async () => {\n        const res = await reqClientName(token, '', personId);\n\n        if (res?.success) {\n          setFioData(res.data);\n          setUserType(res.data.type);\n        }\n      })();\n\n      // get CONTACTS\n      (async () => {\n        const { success, data } = await reqClientContacts(token, personId);\n\n        if (success) {\n          setContacts(data);\n        }\n      })();\n\n      // get CITIZENSHIP\n      (async () => {\n        const { success, data } = await reqClientCitizenship(token, personId);\n\n        if (success) {\n          setCitizenship(data);\n        }\n      })();\n\n      // get PASSPORT\n      (async () => {\n        const { success, data } = await reqClientPassport(token, personId);\n\n        if (success) {\n          setPassport(data);\n        }\n      })();\n\n      // get ADDRESS\n      (async () => {\n        const { success, data } = await reqClientAddress(token, personId);\n\n        if (success) {\n          setAddress(data);\n        }\n      })();\n\n      // get CONSENTS\n      (async () => {\n        const { success, data } = await reqClientConsents(token, clientId, personId);\n\n        if (success) {\n          setConsents(data);\n        }\n      })();\n\n      // get REPRESENTATIVE\n      (async () => {\n        const { success, data } = await reqClientRepresentative(token, clientId, personId);\n\n        if (success) {\n          setRepresentative(data);\n        }\n      })();\n\n      // get TERMINATION\n      (async () => {\n        const { success, data } = await reqTermination(token, clientId, personId);\n\n        if (success) {\n          setTermination(data);\n        }\n      })();\n    }\n  }, [token, clientId, personId, isCorrectId]);\n\n  return {\n    userType,\n    clientId,\n    personId,\n    fioData,\n    contacts,\n    citizenship,\n    passport,\n    address,\n    consents,\n    representative,\n    termination,\n  };\n};\n","import * as React from 'react';\nimport CustomDatePicker from '../../../../../../../../../../../../../../components/CustomDatePicker';\nimport CustomInput from '../../../../../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../../../../../components/CustomSelect';\nimport PrimaryButton from '../../../../../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../../../../../components/SectionWithTitle';\nimport { useTermination, Props } from './useTermination';\n\nconst Termination = (props: Props) => {\n  const meta = useTermination(props);\n\n  return (\n    <div className=\"termination\">\n      <SectionWithTitle title=\"Заява-згода на розірвання ПД\" onClear={meta.onClear}>\n        <div className=\"grid\">\n          <CustomSelect\n            label=\"Нотаріус\"\n            data={meta.notaries}\n            onChange={(e) => meta.setData({ ...meta.data, notary_id: e })}\n            selectedValue={meta.data.notary_id}\n          />\n\n          <CustomDatePicker\n            label=\"Дата посвідчення\"\n            onSelect={(e) => meta.setData({ ...meta.data, reg_date: e })}\n            selectedDate={meta.data.reg_date}\n          />\n\n          <CustomInput\n            label=\"Реєстровий номер\"\n            onChange={(e) => meta.setData({ ...meta.data, reg_number: e })}\n            value={meta.data.reg_number}\n          />\n\n          <CustomSelect\n            label=\"Шаблон згоди\"\n            data={meta.consentTemplates}\n            onChange={(e) => meta.setData({ ...meta.data, consent_template_id: e })}\n            selectedValue={meta.data.consent_template_id}\n          />\n\n          <CustomSelect\n            label=\"Пункт згоди у договорі розірвання\"\n            data={meta.spouseWords}\n            onChange={(e) => meta.setData({ ...meta.data, spouse_word_id: e })}\n            selectedValue={meta.data.spouse_word_id}\n          />\n        </div>\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={meta.onSave} disabled={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default Termination;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SelectItem } from '../../../../../../../../../../../../../../types';\nimport { State } from '../../../../../../../../../../../../../../store/types';\nimport reqTermination from '../../../../../../../../../../../../../../services/generator/Client/reqTermination';\nimport { setModalInfo } from '../../../../../../../../../../../../../../store/main/actions';\nimport { changeMonthWitDate, formatDate } from '../../../../../../../../../../../../../../utils/formatDates';\n\ntype InitialData = {\n  spouse_word_id: string | null,\n  consent_template_id: string | null,\n  notary_id: string | null,\n  reg_date: any,\n  reg_number: string | null,\n  consent_templates?: SelectItem[],\n  spouse_words?: SelectItem[],\n  notary?: SelectItem[],\n}\n\nexport type Props = {\n  initialData: any;\n  clientId: string;\n  personId: string;\n}\n\nexport const useTermination = ({ initialData, clientId, personId }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  // pickers\n  const [consentTemplates, setConsentTemplates] = useState<SelectItem[]>([]);\n  const [spouseWords, setSpouseWords] = useState<SelectItem[]>([]);\n  const [notaries, setNotaries] = useState<SelectItem[]>([]);\n\n  const [data, setData] = useState<InitialData>({\n    spouse_word_id: null,\n    consent_template_id: null,\n    notary_id: null,\n    reg_date: null,\n    reg_number: null,\n  });\n\n  useEffect(() => {\n    setConsentTemplates(initialData?.consent_templates || []);\n    setSpouseWords(initialData?.spouse_words || []);\n    setNotaries(initialData?.notary || []);\n    setData({\n      spouse_word_id: initialData?.spouse_word_id || null,\n      consent_template_id: initialData?.consent_template_id || null,\n      notary_id: initialData?.notary_id || null,\n      reg_number: initialData?.reg_number || null,\n      reg_date: initialData?.reg_date ? new Date(changeMonthWitDate(initialData?.reg_date)) : null,\n    });\n  }, [initialData]);\n\n  const onClear = useCallback(() => {\n    setData({\n      spouse_word_id: null,\n      consent_template_id: null,\n      notary_id: null,\n      reg_date: null,\n      reg_number: null,\n    });\n  }, []);\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const bodyData = {\n        ...data,\n        reg_date: formatDate(data.reg_date),\n      };\n\n      const { success, message } = await reqTermination(token, clientId, personId, 'PUT', bodyData);\n      dispatch(\n        setModalInfo({\n          open: true,\n          success,\n          message,\n        })\n      );\n    }\n  }, [data, token]);\n\n  return {\n    data,\n    consentTemplates,\n    spouseWords,\n    notaries,\n    setData,\n    onClear,\n    onSave,\n  };\n};\n","import * as React from 'react';\nimport './index.scss';\nimport Address from './components/Address';\nimport Citizenship from './components/Citizenship';\nimport Contacts from './components/Contacts';\nimport Fio from './components/Fio';\nimport Passport from './components/Passport';\nimport Statement from './components/Statement';\nimport PowerOfAttorney from './components/PowerOfAttorney';\nimport { useClientsFields } from './useClientsFields';\nimport Termination from './components/Termination';\n\nconst ClientsFields = () => {\n  const meta = useClientsFields();\n\n  return (\n    <main className=\"clients\">\n      <Fio initialData={meta.fioData} id={meta.personId} />\n      <Contacts initialData={meta.contacts} id={meta.personId} />\n      <Citizenship initialData={meta.citizenship} id={meta.personId} />\n      <Passport initialData={meta.passport} id={meta.personId} />\n      <Address initialData={meta.address} id={meta.personId} />\n\n      {meta.userType === 'client' && (\n        <>\n          <Statement\n            initialData={meta.consents}\n            clientId={meta.clientId}\n            personId={meta.personId}\n          />\n          <PowerOfAttorney\n            initialData={meta.representative}\n            clientId={meta.clientId}\n            personId={meta.personId}\n          />\n        </>\n      )}\n\n      <Termination\n        initialData={meta.termination}\n        clientId={meta.clientId}\n        personId={meta.personId}\n      />\n    </main>\n  );\n};\n\nexport default ClientsFields;\n","import * as React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport ClientsDashboard from './components/ClientsDashboard';\nimport ClientsFields from './components/ClientsFields';\n\nconst GeneratorContainer = () => (\n  <Switch>\n    <Route path=\"/clients/:clientId/:personId\">\n      <ClientsFields />\n    </Route>\n    <ClientsDashboard />\n  </Switch>\n);\n\nexport default GeneratorContainer;\n","import * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { State } from '../../../../../../../../store/types';\nimport { UserTypes } from '../../../../../../../../types';\nimport ManagerContainer from './components/ManagerContainer';\nimport GeneratorView from './components/GeneratorContainer';\n\nconst Clients = () => {\n  const { user: { type } } = useSelector((state: State) => state.main);\n\n  if (type === UserTypes.GENERATOR) {\n    return <GeneratorView />;\n  }\n\n  if (type === UserTypes.MANAGER) {\n    return <ManagerContainer />;\n  }\n\n  return null;\n};\n\nexport default Clients;\n","import * as React from 'react';\nimport './index.scss';\n\ntype Props = {\n  title: string;\n  info: string;\n}\n\nconst TitleInfoDuet = ({ title, info }: Props) => (\n  <div className=\"title-info-duet\">\n    <span className=\"title\">{title}</span>\n    <span className=\"info\">{info}</span>\n  </div>\n);\n\nexport default TitleInfoDuet;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function getDevelopers(token: string, id: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/developer/group/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqRepresentative(\n  token: string,\n  id: string,\n  method: 'POST' | 'GET' = 'GET',\n  bodyData?: any,\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/developer/representative/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect, useCallback, useMemo } from 'react';\nimport { SelectItem } from '../../../../../../../../../../types';\nimport { State } from '../../../../../../../../../../store/types';\nimport getDevelopers from '../../../../../../../../../../services/generator/Developer/getDevelopers';\nimport reqRepresentative from '../../../../../../../../../../services/generator/Developer/reqRepresentative';\nimport { setModalInfo } from '../../../../../../../../../../store/main/actions';\n\ntype DeveloperCardData = {\n  id: string;\n  title: string;\n  color: string;\n  info: {\n    title: string;\n    value: string;\n  }[]\n}\n\ntype RepresentativeData = {\n  title: string,\n  value: string,\n}\n\nexport const useDashboard = () => {\n  const dispatch = useDispatch();\n  const { id } = useParams<{ id: string }>();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  const [developers, setDevelopers] = useState<DeveloperCardData[]>([]);\n  const [isLoading, setLoading] = useState<boolean>(false);\n\n  const [devRepresentative, setDevRepresentative] = useState<SelectItem[]>([]);\n  const [selectedRepresentative, setSelectedRepresentative] = useState<any>();\n\n  const [representative, setRepresentative] = useState<RepresentativeData[]>([]);\n  const [representativeDoc, setRepresentativeDoc] = useState<RepresentativeData[]>([]);\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const data = { dev_representative_id: selectedRepresentative };\n      const res = await reqRepresentative(token, id, 'POST', data);\n\n      dispatch(\n        setModalInfo({\n          open: true,\n          success: res?.success,\n          message: res?.message,\n        })\n      );\n    }\n  }, [token, id, selectedRepresentative]);\n\n  useEffect(() => {\n    if (token) {\n      // get DEVELOPERS\n      (async () => {\n        setLoading(true);\n\n        const res = await getDevelopers(token, id);\n\n        if (res?.success) {\n          setDevelopers(res.data.dev_companies || []);\n          setDevRepresentative(res.data.dev_representative || []);\n          setSelectedRepresentative(res.data.representative_id);\n          setRepresentative(res.data.representative_info || []);\n          setRepresentativeDoc(res.data.representative_doc || []);\n        }\n\n        setLoading(false);\n      })();\n    }\n  }, [token, id]);\n\n  useEffect(() => {\n    if (token && selectedRepresentative) {\n      (async () => {\n        const res = await reqRepresentative(token, selectedRepresentative);\n\n        if (res?.success) {\n          setRepresentative(res.data.representative_info);\n          setRepresentativeDoc(res.data.representative_doc);\n        }\n      })();\n    }\n  }, [selectedRepresentative, token]);\n\n  return {\n    id,\n    developers,\n    isLoading,\n    devRepresentative,\n    representative,\n    selectedRepresentative,\n    representativeDoc,\n    setSelectedRepresentative,\n    onSave,\n  };\n};\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from '../../../../../../../../../../components/Card';\nimport CustomSelect from '../../../../../../../../../../components/CustomSelect';\nimport Loader from '../../../../../../../../../../components/Loader/Loader';\nimport PrimaryButton from '../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../components/SectionWithTitle';\nimport TitleInfoDuet from '../../../../../../../../../../components/TitleInfoDuet';\nimport { useDashboard } from './useDashboard';\n\nconst Dashboard = () => {\n  const meta = useDashboard();\n\n  if (meta.isLoading) {\n    return (\n      <Loader />\n    );\n  }\n\n  return (\n    <div className=\"seller\">\n      <div className=\"dashboard-header section-title\">Продавці</div>\n\n      <div className=\"grid mb50\">\n        {meta.developers.map(({ color, id, title, info }) => (\n          <Card\n            key={id}\n            title={title}\n            headerColor={color}\n            link={`/seller/${meta.id}/${id}`}\n          >\n            {info.map((item) => (\n              <span>{item}</span>\n            ))}\n          </Card>\n        ))}\n      </div>\n\n      <SectionWithTitle title=\"Підписант\">\n        <div className=\"seller__signer\">\n          <CustomSelect\n            label=\"Підписант\"\n            data={meta.devRepresentative}\n            onChange={(e) => meta.setSelectedRepresentative(e)}\n            selectedValue={meta.selectedRepresentative}\n            className=\"seller__signer-select\"\n          />\n        </div>\n\n        <div className=\"seller__signer-title\">\n          Загальна інформація про підписанта\n        </div>\n\n        <div className=\"grid grid-flex-start\">\n          {meta.representative.map(({ title, value }) => (\n            <TitleInfoDuet key={title} title={title} info={value} />\n          ))}\n        </div>\n\n        <div className=\"seller__signer-title\">\n          Дані про договір доручення (довіреності)\n        </div>\n\n        <div className=\"grid grid-flex-start\">\n          {meta.representativeDoc.map(({ title, value }) => (\n            <TitleInfoDuet key={title} title={title} info={value} />\n          ))}\n        </div>\n      </SectionWithTitle>\n\n      <PrimaryButton\n        label=\"Зберегти\"\n        onClick={meta.onSave}\n        disabled={false}\n        className=\"seller__ban-button\"\n      />\n\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqDeveloper(\n  token: string,\n  developerId: string,\n  cardId: string,\n  method: 'POST' | 'GET' = 'GET',\n  bodyData?: any,\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/developer/main/${developerId}/${cardId}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { useState, useEffect } from 'react';\nimport { State } from '../../../../../../../../../../store/types';\nimport reqDeveloper from '../../../../../../../../../../services/generator/Developer/reqDeveloper';\nimport { isNumber } from '../../../../../../../../../../utils/numbers';\n\ntype Developer = {\n  title: string;\n  color: string;\n  info: {\n    title: string;\n    value: string;\n  }[]\n}\n\nexport const useFields = () => {\n  const { token } = useSelector((state: State) => state.main.user);\n  const { developerId, clientId } = useParams<{ developerId: string, clientId: string }>();\n\n  const [developer, setDeveloper] = useState<Developer>();\n  const [spouse, setSpouse] = useState([]);\n\n  useEffect(() => {\n    const developerIsId = isNumber(developerId);\n    if (token && developerIsId) {\n      (async () => {\n        const res = await reqDeveloper(token, developerId, clientId);\n\n        if (res.success) {\n          setDeveloper(res.data.dev_company);\n          setSpouse(res.data.ceo_spouse_info);\n        }\n      })();\n    }\n  }, [token]);\n\n  return {\n    developer,\n    spouse,\n  };\n};\n","import * as React from 'react';\nimport CheckBanFields from '../../../../../../../../../../components/CheckBanFields';\nimport PrimaryButton from '../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../components/SectionWithTitle';\nimport TitleInfoDuet from '../../../../../../../../../../components/TitleInfoDuet';\nimport { useFields } from './useFields';\n\nconst Fields = () => {\n  const meta = useFields();\n\n  return (\n    <main className=\"seller\">\n      <SectionWithTitle title=\"Продавець\">\n        <div className=\"seller__info\">\n          <div className=\"seller__info-title\" style={{ backgroundColor: meta.developer?.color }}>\n            {meta.developer?.title}\n          </div>\n          <div className=\"grid\">\n            {meta.developer?.info.map(({ title, value }) => (\n              <TitleInfoDuet title={title} info={value} />\n            ))}\n          </div>\n        </div>\n      </SectionWithTitle>\n\n      <SectionWithTitle title=\"Подружжя\">\n        <div className=\"grid\">\n          {meta.spouse.map(({ title, value }) => (\n            <TitleInfoDuet title={title} info={value} />\n          ))}\n        </div>\n      </SectionWithTitle>\n    </main>\n  );\n};\n\nexport default Fields;\n","import * as React from 'react';\nimport './index.scss';\nimport { Switch, Route } from 'react-router-dom';\nimport { useSeller } from './useSeller';\nimport Dashboard from './components/Dashboard';\nimport Fields from './components/Fields';\n\nconst Seller = () => {\n  const meta = useSeller();\n\n  return (\n    <main className=\"manage__seller seller\">\n      <Switch>\n        <Route path=\"/seller/:clientId/:developerId\">\n          <Fields />\n        </Route>\n        <Dashboard />\n      </Switch>\n    </main>\n  );\n};\n\nexport default Seller;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function getSideNotaries(token: string, id: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/client/notaries/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useCallback, useState } from 'react';\nimport { State } from '../../../../../../../../../../store/types';\nimport getSideNotaries from '../../../../../../../../../../services/generator/SideNotary/getSideNotaries';\n\ntype SideNotary = {\n  id: number,\n  title: string,\n  list: string[]\n}\n\nexport const useDashboard = () => {\n  const { id } = useParams<{ id: string }>();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  const [notaries, setNotaries] = useState<SideNotary[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>();\n\n  useEffect(() => {\n    if (token) {\n      // get SIDE_NOTARIES\n      (async () => {\n        setIsLoading(true);\n        const res = await getSideNotaries(token, id);\n\n        if (res.success) {\n          setNotaries(res.data.notary);\n        }\n        setIsLoading(false);\n      })();\n    }\n  }, [token, id]);\n\n  return {\n    id,\n    isLoading,\n    notaries,\n  };\n};\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from '../../../../../../../../../../components/Card';\nimport Loader from '../../../../../../../../../../components/Loader/Loader';\nimport { useDashboard } from './useDashboard';\n\nconst Dashboard = () => {\n  const meta = useDashboard();\n\n  if (meta.isLoading) {\n    return (\n      <Loader />\n    );\n  }\n\n  return (\n    <div className=\"side-notaries side-notaries__dashboard\">\n      <div className=\"dashboard-header section-title\">Сторонній нотаріус</div>\n\n      <div className=\"grid grid-stretch\">\n        {meta.notaries.map((notary) => (\n          <Card\n            key={notary.id}\n            title={notary.title}\n            link={`/side-notaries/${meta.id}/${notary.id}`}\n          >\n            {notary.list.map((item) => (\n              <span>{item}</span>\n            ))}\n          </Card>\n        ))}\n\n        <Link to={`/side-notaries/${meta.id}/create`} className=\"add-item-card\">\n          <img src=\"/icons/plus-big.svg\" alt=\"create\" />\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqNotaryData(\n  token: string,\n  id: string,\n  clientId: string,\n  method: 'GET' | 'PUT' = 'GET',\n  bodyData?: any,\n) {\n  const url = method === 'PUT' ? `/api/generator/client/notary/${clientId}${id && `/${id}`}` : `/api/generator/client/notary/${id}`;\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}${url}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useParams, useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useCallback, useState, useEffect, useMemo } from 'react';\nimport { State } from '../../../../../../../../../../store/types';\nimport reqNotaryData from '../../../../../../../../../../services/generator/SideNotary/reqNotaryData';\nimport { setModalInfo } from '../../../../../../../../../../store/main/actions';\nimport { isNumber } from '../../../../../../../../../../utils/numbers';\n\ntype SideNotaryDenominativeData = {\n  surname_n: string,\n  name_n: string,\n  short_name: string,\n  patronymic_n: string,\n  short_patronymic: string,\n  activity_n: string,\n}\n\ntype SideNotaryFblativeData = {\n  name_o: string,\n  surname_o: string,\n  patronymic_o: string,\n  activity_o: string,\n}\n\nexport const useFields = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { token } = useSelector((state: State) => state.main.user);\n  const { notaryId, clientId } = useParams<{ notaryId: string, clientId: string }>();\n\n  const [denominative, setDenominate] = useState<SideNotaryDenominativeData>({\n    surname_n: '',\n    name_n: '',\n    short_name: '',\n    patronymic_n: '',\n    short_patronymic: '',\n    activity_n: '',\n  });\n  const [ablative, setAblative] = useState<SideNotaryFblativeData>({\n    name_o: '',\n    surname_o: '',\n    patronymic_o: '',\n    activity_o: '',\n  });\n\n  const shouldLoadData = useMemo(() => notaryId !== 'create' && isNumber(notaryId), [notaryId]);\n\n  useEffect(() => {\n    // get NOTARY_DATA\n    (async () => {\n      if (token && shouldLoadData) {\n        const res = await reqNotaryData(token, notaryId, '');\n\n        if (res.success) {\n          setDenominate({\n            surname_n: res.data.surname_n || '',\n            name_n: res.data.name_n || '',\n            short_name: res.data.short_name || '',\n            patronymic_n: res.data.patronymic_n || '',\n            short_patronymic: res.data.short_patronymic || '',\n            activity_n: res.data.activity_n || '',\n          });\n\n          setAblative({\n            name_o: res.data.name_o || '',\n            surname_o: res.data.surname_o || '',\n            patronymic_o: res.data.patronymic_o || '',\n            activity_o: res.data.activity_o || '',\n          });\n        }\n      }\n    })();\n  }, [token, notaryId]);\n\n  const onDenominativeClear = useCallback(() => {\n    setDenominate({\n      surname_n: '',\n      name_n: '',\n      short_name: '',\n      patronymic_n: '',\n      short_patronymic: '',\n      activity_n: '',\n    });\n  }, []);\n\n  const onAblativeClear = useCallback(() => {\n    setAblative({\n      name_o: '',\n      surname_o: '',\n      patronymic_o: '',\n      activity_o: '',\n    });\n  }, []);\n\n  const onSave = useCallback(async () => {\n    const data = { ...denominative, ...ablative };\n    const id = shouldLoadData ? notaryId : '';\n\n    if (token) {\n      const res = await reqNotaryData(token, id, clientId, 'PUT', data);\n\n      dispatch(\n        setModalInfo({\n          open: true,\n          success: res?.success,\n          message: res?.message,\n        })\n      );\n\n      if (res?.success && notaryId === 'create' && isNumber(res?.data.notary_id)) {\n        history.push(`/side-notaries/${clientId}/${res?.data.notary_id}`);\n      }\n    }\n  }, [denominative, ablative, token]);\n\n  const isButtonDisabled = useMemo(() =>\n    // eslint-disable-next-line implicit-arrow-linebreak\n    Object.values(denominative).some((item) => !item)\n    || Object.values(ablative).some((item) => !item), [denominative, ablative]);\n\n  return {\n    denominative,\n    ablative,\n    isButtonDisabled,\n    setDenominate,\n    setAblative,\n    onDenominativeClear,\n    onAblativeClear,\n    onSave,\n  };\n};\n","import * as React from 'react';\nimport CustomInput from '../../../../../../../../../../components/CustomInput';\nimport PrimaryButton from '../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../components/SectionWithTitle';\nimport { useFields } from './useFields';\n\nconst Fields = () => {\n  const meta = useFields();\n\n  return (\n    <main className=\"side-notaries\">\n      <SectionWithTitle title=\"Називний відмінок та скорочення\" onClear={meta.onDenominativeClear}>\n        <div className=\"grid mb20\">\n          <CustomInput\n            required\n            label=\"Прізвище\"\n            onChange={(e) => meta.setDenominate({ ...meta.denominative, surname_n: e })}\n            value={meta.denominative.surname_n}\n          />\n\n          <CustomInput\n            required\n            label=\"Ім'я\"\n            onChange={(e) => meta.setDenominate({ ...meta.denominative, name_n: e })}\n            value={meta.denominative.name_n}\n          />\n\n          <CustomInput\n            required\n            label=\"По батькові\"\n            onChange={(e) => meta.setDenominate({ ...meta.denominative, patronymic_n: e })}\n            value={meta.denominative.patronymic_n}\n          />\n        </div>\n\n        <div className=\"grid mb20\">\n          <div />\n\n          <CustomInput\n            required\n            label=\"Ім'я скорочено з крапкою\"\n            onChange={(e) => meta.setDenominate({ ...meta.denominative, short_name: e })}\n            value={meta.denominative.short_name}\n          />\n\n          <CustomInput\n            required\n            label=\"По батькові скорочено з крапкою\"\n            onChange={(e) => meta.setDenominate({ ...meta.denominative, short_patronymic: e })}\n            value={meta.denominative.short_patronymic}\n          />\n        </div>\n\n        <CustomInput\n          required\n          label=\"Назва нотаріального округу у називному відмінку\"\n          onChange={(e) => meta.setDenominate({ ...meta.denominative, activity_n: e })}\n          value={meta.denominative.activity_n}\n        />\n      </SectionWithTitle>\n\n      <SectionWithTitle title=\"Орудний відмінок\" onClear={meta.onAblativeClear}>\n        <div className=\"grid mb20\">\n          <CustomInput\n            required\n            label=\"Прізвище\"\n            onChange={(e) => meta.setAblative({ ...meta.ablative, surname_o: e })}\n            value={meta.ablative.surname_o}\n          />\n\n          <CustomInput\n            required\n            label=\"Ім'я\"\n            onChange={(e) => meta.setAblative({ ...meta.ablative, name_o: e })}\n            value={meta.ablative.name_o}\n          />\n\n          <CustomInput\n            required\n            label=\"По батькові\"\n            onChange={(e) => meta.setAblative({ ...meta.ablative, patronymic_o: e })}\n            value={meta.ablative.patronymic_o}\n          />\n        </div>\n\n        <CustomInput\n          required\n          label=\"Назва нотаріального округу в орудному відмінку\"\n          onChange={(e) => meta.setAblative({ ...meta.ablative, activity_o: e })}\n          value={meta.ablative.activity_o}\n        />\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={meta.onSave} disabled={meta.isButtonDisabled} />\n      </div>\n    </main>\n  );\n};\n\nexport default Fields;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\nimport { State } from '../../../../../../../../store/types';\nimport { UserTypes } from '../../../../../../../../types';\nimport Dashboard from './components/Dashboard';\nimport Fields from './components/Fields';\n\nconst SideNotary = () => {\n  const { user: { type } } = useSelector((state: State) => state.main);\n\n  if (type === UserTypes.GENERATOR) {\n    return (\n      <Switch>\n        <Route path=\"/side-notaries/:clientId/:notaryId\">\n          <Fields />\n        </Route>\n        <Dashboard />\n      </Switch>\n    );\n  }\n\n  return null;\n};\n\nexport default SideNotary;\n","/* eslint-disable prettier/prettier */\n/* eslint-disable react/button-has-type */\nimport React from 'react';\nimport './index.scss';\n\ntype Props = {\n  label: string;\n  onClick: (e: any) => void;\n  disabled: boolean;\n  className?: string;\n};\n\nconst SecondaryButton = ({\n  label, onClick, disabled, className\n}: Props) => (\n  <button\n    className={`secondary-button ${disabled ? 'disabled' : ''} ${\n      className || ''\n    }`}\n    onClick={onClick}\n    disabled={disabled}\n  >\n    {label}\n  </button>\n);\n\nexport default SecondaryButton;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function reqImmovableExchange(\n  token: string,\n  id?: string,\n  method: 'GET' | 'PUT' | undefined = 'GET',\n  type?: 'MINFIN' | null,\n  bodyData?: any\n) {\n  try {\n    const url = type === 'MINFIN' ? '/api/exchange' : `/api/generator/immovable/exchange/${id}`;\n    const data = await requestApi({\n      url: `${DEFAULT_URL}${url}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport reqImmovableExchange from '../../../../../../../../../../../../services/generator/Immovable/reqImmovableExchange';\nimport { setModalInfo } from '../../../../../../../../../../../../store/main/actions';\nimport { State } from '../../../../../../../../../../../../store/types';\n\ntype InitialData = {\n  contract_buy: string,\n  exchange_rate: string,\n  contract_sell: string,\n}\n\nexport type Props = {\n  id: string,\n  initialData?: InitialData,\n}\n\nexport const useExchangeRate = ({ initialData, id }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  // Initial data\n  const [contractBuy, setContractBuy] = useState('');\n  const [contractSell, setContractSell] = useState('');\n  const [exchangeRate, setExchangeRate] = useState('');\n\n  const onClear = useCallback(() => {\n    setContractBuy('');\n    setContractSell('');\n    setExchangeRate('');\n  }, []);\n\n  const onRefreshRate = useCallback(async () => {\n    if (token) {\n      const res = await reqImmovableExchange(token, '', 'GET', 'MINFIN');\n      if (res.success) {\n        setContractBuy(res.data.contract_buy);\n        setContractSell(res.data.contract_sell);\n        setExchangeRate(res.data.exchange_rate);\n      }\n    }\n  }, [token]);\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const data = {\n        contract_buy: contractBuy,\n        contract_sell: contractSell,\n        exchange_rate: exchangeRate,\n      };\n      const { success, message } = await reqImmovableExchange(token, id, 'PUT', null, data);\n\n      dispatch(\n        setModalInfo({\n          open: true,\n          success,\n          message,\n        })\n      );\n    }\n  }, [contractBuy, contractSell, exchangeRate, token]);\n\n  const isSaveButtonDisable = useMemo(\n    () => !contractBuy || !contractSell || !exchangeRate, [contractBuy, contractSell, exchangeRate]\n  );\n\n  useEffect(() => {\n    setContractBuy(initialData?.contract_buy || '');\n    setContractSell(initialData?.contract_sell || '');\n    setExchangeRate(initialData?.exchange_rate || '');\n  }, [initialData]);\n\n  return {\n    contractBuy,\n    contractSell,\n    exchangeRate,\n    isSaveButtonDisable,\n    setContractBuy,\n    setContractSell,\n    setExchangeRate,\n    onClear,\n    onSave,\n    onRefreshRate\n  };\n};\n","import * as React from 'react';\nimport './index.scss';\nimport CustomInput from '../../../../../../../../../../../../components/CustomInput';\nimport PrimaryButton from '../../../../../../../../../../../../components/PrimaryButton';\nimport SecondaryButton from '../../../../../../../../../../../../components/SecondaryButton';\nimport SectionWithTitle from '../../../../../../../../../../../../components/SectionWithTitle';\nimport { useExchangeRate, Props } from './useExchangeRate';\n\nconst ExchangeRate = (props: Props) => {\n  const {\n    exchangeRate,\n    contractBuy,\n    contractSell,\n    setContractBuy,\n    setContractSell,\n    setExchangeRate,\n    onClear,\n    onSave,\n    onRefreshRate,\n    isSaveButtonDisable\n  } = useExchangeRate(props);\n\n  return (\n    <>\n      <SectionWithTitle title=\"Комерційний курс валют\" onClear={onClear}>\n        <div className=\"flex-center mb20\">\n          <span>Курс української грн до 1$ CША</span>\n        </div>\n\n        <div className=\"exchange mb20\">\n          <div className=\"exchange__field\">\n            <CustomInput required label=\"Середній курс долара\" onChange={setExchangeRate} value={exchangeRate} />\n          </div>\n          <div className=\"exchange__field\">\n            <CustomInput required label=\"Курс для договорів - купівля\" onChange={setContractBuy} value={contractBuy} />\n          </div>\n          <div className=\"exchange__field\">\n            <CustomInput required label=\"Курс для договорів - продаж\" onChange={setContractSell} value={contractSell} />\n          </div>\n        </div>\n\n        <div className=\"middle-button\">\n          <SecondaryButton label=\"ОНОВИТИ КУРС\" onClick={onRefreshRate} disabled={false} />\n        </div>\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={onSave} disabled={isSaveButtonDisable} />\n      </div>\n    </>\n  );\n};\n\nexport default ExchangeRate;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function getMainData(token: string, id: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/main/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function createContract(token: string, id: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/create/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { data } from 'jquery';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { State } from '../../../../../../../../../../store/types';\nimport getMainData from '../../../../../../../../../../services/generator/Main/getMainData';\nimport createContract from '../../../../../../../../../../services/generator/Main/createContract';\nimport { setModalInfo } from '../../../../../../../../../../store/main/actions';\nimport reqImmovableExchange from '../../../../../../../../../../services/generator/Immovable/reqImmovableExchange';\n\nexport const useGeneratorMain = () => {\n  const dispatch = useDispatch();\n  const { id } = useParams<{id: string}>();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [title, setTitle] = useState<string>('');\n  const [instructions, setInstructions] = useState([]);\n  const [exchange, setExchange] = useState();\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const res = await createContract(token, id);\n\n      dispatch(\n        setModalInfo({\n          open: true,\n          success: res?.success,\n          message: res?.message,\n        })\n      );\n\n      if (res?.success && res?.data?.link) {\n        document.location.href = res.data.link;\n      }\n    }\n  }, [token, id]);\n\n  useEffect(() => {\n    if (token) {\n      (async () => {\n        setIsLoading(true);\n        const res = await getMainData(token, id);\n\n        if (res?.success) {\n          const { date, day, room, time } = res.data.date_info;\n          setTitle(`${day} ${date} ${time} ${room}`);\n          setInstructions(res.data.instructions);\n        }\n\n        setIsLoading(false);\n      })();\n\n      (async () => {\n        const res = await reqImmovableExchange(token, id);\n\n        if (res?.success) {\n          setExchange(res.data);\n        }\n      })();\n    }\n  }, [token, id]);\n\n  return {\n    id,\n    title,\n    instructions,\n    isLoading,\n    exchange,\n    onSave,\n  };\n};\n","import * as React from 'react';\nimport Loader from '../../../../../../../../../../components/Loader/Loader';\nimport PrimaryButton from '../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../components/SectionWithTitle';\nimport TitleInfoDuet from '../../../../../../../../../../components/TitleInfoDuet';\nimport ExchangeRate from './components/ExchangeRate';\nimport { useGeneratorMain } from './useGeneratorMain';\n\nconst GeneratorMain = () => {\n  const meta = useGeneratorMain();\n\n  if (meta.isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <main className=\"main\">\n      <div className=\"dashboard-header section-title\">{meta.title}</div>\n\n      <ExchangeRate initialData={meta.exchange} id={meta.id} />\n\n      <SectionWithTitle title=\"Дані які не додані до договору \">\n        <div className=\"grid\">\n          {meta.instructions.map(({ title, value }) => (\n            <TitleInfoDuet title={title} info={value} />\n          ))}\n        </div>\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Генерувати\" onClick={meta.onSave} disabled={false} />\n      </div>\n    </main>\n  );\n};\n\nexport default GeneratorMain;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function putMainDeveloper(token: string, id: string, bodyData: any) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/manager/notary/developer/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'PUT',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import * as React from 'react';\nimport CustomSelect from '../../../../../../../../../../../../components/CustomSelect';\nimport CustomSwitch from '../../../../../../../../../../../../components/CustomSwitch';\nimport PrimaryButton from '../../../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../../../components/SectionWithTitle';\nimport { useParticipants, Props } from './useParticipants';\n\nconst Participants = (props: Props) => {\n  const meta = useParticipants(props);\n\n  return (\n    <>\n      <SectionWithTitle title=\"Учасники угоди\" onClear={meta.onClear}>\n        <div className=\"grid\">\n          <CustomSelect\n            label=\"Забудовник\"\n            data={props.initialData?.developer || []}\n            onChange={(e) => meta.setData({ ...meta.data, developer_id: e })}\n            selectedValue={meta.data.developer_id}\n          />\n\n          <CustomSelect\n            label=\"Представник\"\n            data={meta.representatives}\n            onChange={(e) => meta.setData({ ...meta.data, representative_id: e })}\n            selectedValue={meta.data.representative_id}\n          />\n\n          <CustomSelect\n            label=\"Менеджер\"\n            data={meta.manager}\n            onChange={(e) => meta.setData({ ...meta.data, manager_id: e })}\n            selectedValue={meta.data.manager_id}\n          />\n\n          <CustomSelect\n            label=\"Нотаріус\"\n            data={props.initialData?.notary || []}\n            onChange={(e) => meta.setData({ ...meta.data, notary_id: e })}\n            selectedValue={meta.data.notary_id}\n          />\n\n          <CustomSelect\n            label=\"Набирач\"\n            data={props.initialData?.generator || []}\n            onChange={(e) => meta.setData({ ...meta.data, generator_id: e })}\n            selectedValue={meta.data.generator_id}\n          />\n\n          <CustomSwitch\n            label=\"Готово до генерації\"\n            onChange={(e) => meta.setData({ ...meta.data, generation_ready: e })}\n            selected={meta.data.generation_ready}\n          />\n        </div>\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Оновити\" onClick={meta.onSave} disabled={false} />\n      </div>\n    </>\n  );\n};\n\nexport default Participants;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useState, useCallback, useEffect } from 'react';\nimport putMainDeveloper from '../../../../../../../../../../../../services/manager/Main/putMainDeveloper';\nimport { ManagerParticipantsData } from '../../useManagerMain';\nimport { State } from '../../../../../../../../../../../../store/types';\nimport { setModalInfo } from '../../../../../../../../../../../../store/main/actions';\nimport getDeveloperInfo from '../../../../../../../../../../../../services/getDeveloperInfo';\n\nexport type Props = {\n  initialData?: ManagerParticipantsData;\n  cardId: string;\n};\n\nexport const useParticipants = ({ initialData, cardId }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  const [firstRender, setFirstRender] = useState(true);\n  const [representatives, setRepresentatives] = useState(initialData?.representative || []);\n  const [manager, setManager] = useState(initialData?.manager || []);\n  const [data, setData] = useState({\n    developer_id: initialData?.developer_id || null,\n    notary_id: initialData?.notary_id || null,\n    representative_id: initialData?.representative_id || null,\n    manager_id: initialData?.manager_id || null,\n    generator_id: initialData?.generator_id || null,\n    generation_ready: initialData?.generation_ready || false,\n  });\n\n  const onClear = useCallback(() => {\n    setData({\n      developer_id: null,\n      notary_id: null,\n      representative_id: null,\n      manager_id: null,\n      generator_id: null,\n      generation_ready: false,\n    });\n  }, []);\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const res = await putMainDeveloper(token, cardId, data);\n\n      dispatch(\n        setModalInfo({\n          open: true,\n          success: res?.success,\n          message: res?.message,\n        })\n      );\n    }\n  }, [data, cardId, token]);\n\n  useEffect(() => {\n    if (firstRender) {\n      setFirstRender(false);\n      return;\n    }\n\n    if (token && data.developer_id) {\n      (async () => {\n        const res = await getDeveloperInfo(token, Number(data.developer_id));\n        setData({ ...data, representative_id: null, manager_id: null });\n        setRepresentatives(res.representative);\n        setManager(res.manager);\n      })();\n    }\n  }, [data.developer_id, token]);\n\n  return {\n    data,\n    representatives,\n    manager,\n    setData,\n    onClear,\n    onSave,\n  };\n};\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function putMainPersons(token: string, id: string, bodyData: any) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/manager/contact/person/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'PUT',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useState, useCallback } from 'react';\nimport { SelectItem } from '../../../../../../../../../../../../types';\nimport { ContactPersonInfo } from '../../useManagerMain';\nimport { State } from '../../../../../../../../../../../../store/types';\nimport putMainPersons from '../../../../../../../../../../../../services/manager/Main/putMainPersons';\nimport { setModalInfo } from '../../../../../../../../../../../../store/main/actions';\n\nexport type Props = {\n  cardId: string;\n  contact_person_type?: SelectItem[],\n  initialData?: ContactPersonInfo[],\n}\n\ntype InitialPersonData = {\n  person_type: null | string,\n  name: null | string,\n  phone: null | string,\n  email: null | string,\n}\n\nconst initialPersonData = {\n  person_type: null,\n  name: null,\n  phone: null,\n  email: null,\n};\n\nexport const usePersons = ({ initialData, cardId }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  const [data, setData] = useState<InitialPersonData[]>(\n    initialData?.length ? initialData : [initialPersonData]\n  );\n\n  const onDataChange = useCallback((index, value) => {\n    data[index] = value;\n    setData([...data]);\n  }, [data]);\n\n  const onClearAll = useCallback(() => {\n    setData([initialPersonData]);\n  }, []);\n\n  const onAdd = useCallback(() => {\n    setData([...data, initialPersonData]);\n  }, [data]);\n\n  const onRemove = useCallback((index) => {\n    setData((prev) => prev.filter((_, mapIndex) => mapIndex !== index));\n  }, []);\n\n  const onSave = useCallback(async () => {\n    if (token) {\n      const res = await putMainPersons(token, cardId, data);\n\n      dispatch(\n        setModalInfo({\n          open: true,\n          success: res?.success,\n          message: res?.message,\n        })\n      );\n    }\n  }, [data, cardId, token]);\n\n  return {\n    data,\n    onDataChange,\n    onClearAll,\n    onAdd,\n    onRemove,\n    onSave,\n  };\n};\n","import * as React from 'react';\nimport AddFormButton from '../../../../../../../../../../../../components/AddFormButton';\nimport CustomInput from '../../../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../../../components/CustomSelect';\nimport PhoneMaskInput from '../../../../../../../../../../../../components/PhoneMaskInput';\nimport PrimaryButton from '../../../../../../../../../../../../components/PrimaryButton';\nimport RemoveFormButton from '../../../../../../../../../../../../components/RemoveFormButton';\nimport SectionWithTitle from '../../../../../../../../../../../../components/SectionWithTitle';\nimport { usePersons, Props } from './usePersons';\n\nconst Persons = (props: Props) => {\n  const meta = usePersons(props);\n\n  return (\n    <>\n      <SectionWithTitle title=\"Контактні особи\" onClear={meta.onClearAll}>\n        {meta.data.map((person, index) => (\n          <div className=\"grid-center-duet main__person-block\">\n            <CustomSelect\n              label=\"Тип особи\"\n              data={props.contact_person_type || []}\n              onChange={(e) => meta.onDataChange(index, { ...person, person_type: e })}\n              selectedValue={person.person_type}\n            />\n\n            <CustomInput\n              label=\"ПІБ\"\n              onChange={(e) => meta.onDataChange(index, { ...person, name: e })}\n              value={person.name}\n            />\n\n            <CustomInput\n              label=\"E-mail\"\n              onChange={(e) => meta.onDataChange(index, { ...person, email: e })}\n              value={person.email}\n            />\n\n            <div className=\"df-jc-sb\">\n              <PhoneMaskInput\n                label=\"Номер телефону\"\n                onChange={(e) => meta.onDataChange(index, { ...person, phone: e })}\n                value={person.phone}\n              />\n\n              {meta.data.length > 1 && (\n              <div style={{ marginLeft: '12px' }}>\n                <RemoveFormButton\n                  onClick={meta.onRemove}\n                  index={index}\n                  disabled={false}\n                />\n              </div>\n              )}\n\n              {index === meta.data.length - 1 && (\n              <div style={{ marginLeft: '12px' }}>\n                <AddFormButton\n                  onClick={meta.onAdd}\n                  disabled={false}\n                />\n              </div>\n              )}\n            </div>\n          </div>\n        ))}\n      </SectionWithTitle>\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Редагувати\" onClick={meta.onSave} disabled={false} />\n      </div>\n    </>\n  );\n};\n\nexport default Persons;\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function getMain(token: string, id: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/manager/main/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { useEffect, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams, useHistory } from 'react-router-dom';\nimport getMain from '../../../../../../../../../../services/manager/Main/getMain';\nimport { State } from '../../../../../../../../../../store/types';\nimport { SelectItem } from '../../../../../../../../../../types';\nimport { isNumber } from '../../../../../../../../../../utils/numbers';\n\nexport type ContactPersonInfo = {\n  person_type: string;\n  name: string;\n  phone: string;\n  email: string;\n  id?: string;\n};\n\ntype ManagerMainData = {\n  date_info: {\n    day: string;\n    date: string;\n    time: string;\n    room: string;\n  },\n  notary: SelectItem[];\n  developer: SelectItem[];\n  representative: SelectItem[];\n  manager: SelectItem[];\n  contact_person_type: SelectItem[];\n  contact_person_info: ContactPersonInfo[];\n  generator: SelectItem[];\n  notary_id: string;\n  developer_id: string;\n  representative_id: string;\n  manager_id: string;\n  generator_id: string;\n}\n\nexport type ManagerParticipantsData = {\n  developer: SelectItem[];\n  developer_id: string | null;\n  representative: SelectItem[];\n  representative_id: string | null;\n  manager: SelectItem[];\n  manager_id: string | null;\n  notary: SelectItem[];\n  notary_id: string | null;\n  generator: SelectItem[];\n  generator_id: string | null;\n  generation_ready: boolean;\n}\n\nexport const useManagerMain = () => {\n  const history = useHistory();\n  const { id } = useParams<{id: string}>();\n  const { token } = useSelector((state: State) => state.main.user);\n\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [data, setData] = useState<ManagerMainData>();\n  const [participantsData, setParticipantsData] = useState<ManagerParticipantsData>();\n  const [personsData, setPersonsData] = useState<ContactPersonInfo[]>();\n\n  const mainTitle = useMemo(() => `${data?.date_info.day} ${data?.date_info.date} ${data?.date_info.time} ${data?.date_info.room}`, [data]);\n\n  useEffect(() => {\n    if (!isNumber(id)) {\n      history.push('/');\n    }\n\n    if (token) {\n      // get MAIN_DATA\n      (async () => {\n        setIsLoading(true);\n        const res = await getMain(token, id);\n\n        if (res?.success) {\n          setData(res?.data);\n          setPersonsData(res?.data.contact_person_info);\n          setParticipantsData({\n            developer: res?.data.developer || [],\n            developer_id: res?.data.developer_id || null,\n            representative: res?.data.representative || [],\n            representative_id: res?.data.representative_id || null,\n            manager: res?.data.manager || [],\n            manager_id: res?.data.manager_id || null,\n            notary: res?.data.notary || [],\n            notary_id: res?.data.notary_id || null,\n            generator: res?.data.generator || null,\n            generator_id: res?.data.generator_id || null,\n            generation_ready: res?.data.generation_ready || false,\n          });\n        }\n\n        setIsLoading(false);\n      })();\n    }\n  }, [token, id]);\n\n  return {\n    id,\n    data,\n    mainTitle,\n    isLoading,\n    participantsData,\n    personsData,\n  };\n};\n","import * as React from 'react';\nimport Loader from '../../../../../../../../../../components/Loader/Loader';\nimport Participants from './components/Participants';\nimport Persons from './components/Persons';\nimport { useManagerMain } from './useManagerMain';\n\nconst ManagerMain = () => {\n  const meta = useManagerMain();\n\n  if (meta.isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <main className=\"main\">\n      <div className=\"dashboard-header section-title\">{meta.mainTitle}</div>\n      <Participants initialData={meta.participantsData} cardId={meta.id} />\n      <Persons\n        initialData={meta.personsData}\n        contact_person_type={meta.data?.contact_person_type}\n        cardId={meta.id}\n      />\n    </main>\n  );\n};\n\nexport default ManagerMain;\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\nexport default async function reqAssistantMain(\n  token: string,\n  id: string,\n  method: 'GET' | 'PUT' | undefined = 'GET',\n  bodyData?: any\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/assistant/card/settings/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method,\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { data } from 'jquery';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState, useCallback, useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { State } from '../../../../../../../../../../store/types';\nimport reqAssistantMain from '../../../../../../../../../../services/assistant/reqAssistantMain';\nimport getDeveloperInfo from '../../../../../../../../../../services/getDeveloperInfo';\nimport { setModalInfo } from '../../../../../../../../../../store/main/actions';\n\ntype General = {\n  notary_id: string | null,\n  developer_id: string | null,\n  representative_id: string | null,\n  manager_id: string | null,\n  reader_id: string | null,\n  generator_id: string | null,\n  cancelled: boolean,\n}\n\ntype Immovable = {\n  [key: string]: string | null;\n}\n\nexport const useAssistantMain = () => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n  const { id } = useParams<{id: string}>();\n\n  const [firstRender, setFirstRender] = useState(0);\n  const [title, setTitle] = useState('');\n\n  // selects\n  const [notary, setNotary] = useState([]);\n  const [developer, setDeveloper] = useState([]);\n  const [representative, setRepresentative] = useState([]);\n  const [manager, setManager] = useState([]);\n  const [reader, setReader] = useState([]);\n  const [accompanying, setAccompanying] = useState([]);\n  const [generator, setGenerator] = useState([]);\n\n  // data\n  const [general, setGeneral] = useState<General>({\n    notary_id: null,\n    developer_id: null,\n    representative_id: null,\n    manager_id: null,\n    reader_id: null,\n    generator_id: null,\n    cancelled: false,\n  });\n  const [immovables, setImmovables] = useState<Immovable[]>([]);\n\n  const onImmovableChange = useCallback((index: number, key: string, value: any) => {\n    immovables[index][key] = value;\n    setImmovables([...immovables]);\n  }, [immovables]);\n\n  const onGeneralClear = useCallback(() => {\n    setGeneral({\n      notary_id: null,\n      developer_id: null,\n      representative_id: null,\n      manager_id: null,\n      reader_id: null,\n      generator_id: null,\n      cancelled: false,\n    });\n  }, []);\n\n  const onImmovableClear = useCallback((index: number) => {\n    setImmovables((prev) => prev.map((item, i) => {\n      if (index === i) {\n        return {\n          ...item,\n          accompanying_id: null,\n          reader_id: null,\n        };\n      }\n\n      return item;\n    }));\n  }, [immovables]);\n\n  const onSave = useCallback(async () => {\n    const bodyData = {\n      ...general,\n      immovables\n    };\n\n    if (token) {\n      const res = await reqAssistantMain(token, id, 'PUT', bodyData);\n\n      dispatch(\n        setModalInfo({\n          open: true,\n          success: res?.success,\n          message: res?.message,\n        })\n      );\n    }\n  }, [token, general, immovables]);\n\n  const isSaveButtonDisabled = useMemo(() => !general.developer_id\n    || !general.notary_id, [general.developer_id, general.notary_id]);\n\n  useEffect(() => {\n    if (token) {\n    // GET DATA FOR ASSISTANT\n      (async () => {\n        const res = await reqAssistantMain(token, id);\n\n        if (res?.success) {\n          const { day, date, time, room } = res?.data.date_info;\n          setTitle(`${day} ${date} ${time} ${room}`);\n\n          setNotary(res?.data.notary || []);\n          setDeveloper(res?.data.developer || []);\n          setRepresentative(res?.data.representative || []);\n          setManager(res?.data.manager || []);\n          setReader(res?.data.reader || []);\n          setAccompanying(res?.data.accompanying || []);\n          setGenerator(res?.data.generator || []);\n\n          setGeneral({\n            notary_id: res?.data.notary_id || null,\n            developer_id: res?.data.developer_id || null,\n            representative_id: res?.data.representative_id || null,\n            manager_id: res?.data.manager_id || null,\n            reader_id: res?.data.reader_id || null,\n            generator_id: res?.data.generator_id || null,\n            cancelled: res?.data.cancelled,\n          });\n\n          setImmovables(res?.data.immovables);\n        }\n      })();\n    }\n  }, [token, id]);\n\n  useEffect(() => {\n    if (firstRender < 2) {\n      setFirstRender((prev) => prev + 1);\n      return;\n    }\n\n    setRepresentative([]);\n    setManager([]);\n\n    if (token && general.developer_id) {\n      (async () => {\n        const res = await getDeveloperInfo(token, Number(general.developer_id));\n        setGeneral({ ...general, representative_id: null, manager_id: null });\n        setRepresentative(res.representative);\n        setManager(res.manager);\n      })();\n    }\n  }, [general.developer_id, token]);\n\n  return {\n    title,\n    notary,\n    developer,\n    representative,\n    manager,\n    reader,\n    accompanying,\n    generator,\n    general,\n    immovables,\n    isSaveButtonDisabled,\n    setGeneral,\n    setImmovables,\n    onImmovableChange,\n    onGeneralClear,\n    onImmovableClear,\n    onSave,\n  };\n};\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport CustomSelect from '../../../../../../../../../../components/CustomSelect';\nimport CustomSwitch from '../../../../../../../../../../components/CustomSwitch';\nimport PrimaryButton from '../../../../../../../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../../../../../../../components/SectionWithTitle';\nimport { useAssistantMain } from './useAssistantMain';\n\nconst AssistantMain = () => {\n  const meta = useAssistantMain();\n\n  return (\n    <div className=\"main\">\n      <div className=\"dashboard-header section-title\">{meta.title}</div>\n\n      <SectionWithTitle title=\"Учасники угоди\" onClear={meta.onGeneralClear}>\n        <div className=\"grid\">\n          <CustomSelect\n            required\n            label=\"Забудовник\"\n            data={meta.developer}\n            onChange={(e) => meta.setGeneral({ ...meta.general, developer_id: e })}\n            selectedValue={meta.general.developer_id}\n          />\n\n          <CustomSelect\n            label=\"Представник\"\n            data={meta.representative}\n            onChange={(e) => meta.setGeneral({ ...meta.general, representative_id: e })}\n            selectedValue={meta.general.representative_id}\n          />\n\n          <CustomSelect\n            label=\"Менеджер\"\n            data={meta.manager}\n            onChange={(e) => meta.setGeneral({ ...meta.general, manager_id: e })}\n            selectedValue={meta.general.manager_id}\n          />\n\n          <CustomSelect\n            required\n            label=\"Нотаріус\"\n            data={meta.notary}\n            onChange={(e) => meta.setGeneral({ ...meta.general, notary_id: e })}\n            selectedValue={meta.general.notary_id}\n          />\n\n          <CustomSelect\n            label=\"Набирач\"\n            data={meta.generator}\n            onChange={(e) => meta.setGeneral({ ...meta.general, generator_id: e })}\n            selectedValue={meta.general.generator_id}\n          />\n\n          <CustomSwitch\n            label=\"Скаcовано\"\n            selected={meta.general.cancelled}\n            onChange={(e) => meta.setGeneral({ ...meta.general, cancelled: e })}\n          />\n        </div>\n      </SectionWithTitle>\n\n      {(meta.immovables || []).map((immovable, index) => (\n        <SectionWithTitle title={immovable.address || ''} onClear={() => meta.onImmovableClear(index)}>\n          <div className=\"grid-center-duet\">\n            <CustomSelect\n              label=\"Читач\"\n              data={meta.reader}\n              onChange={(e) => meta.onImmovableChange(index, 'reader_id', e)}\n              selectedValue={immovable.reader_id}\n            />\n\n            <CustomSelect\n              label=\"Видавач\"\n              data={meta.accompanying}\n              onChange={(e) => meta.onImmovableChange(index, 'accompanying_id', e)}\n              selectedValue={immovable.accompanying_id}\n            />\n          </div>\n        </SectionWithTitle>\n      ))}\n\n      <div className=\"middle-button\">\n        <PrimaryButton label=\"Зберегти\" onClick={meta.onSave} disabled={meta.isSaveButtonDisabled} />\n      </div>\n    </div>\n  );\n};\n\nexport default AssistantMain;\n","import * as React from 'react';\nimport './index.scss';\nimport { useSelector } from 'react-redux';\nimport { State } from '../../../../../../../../store/types';\nimport { UserTypes } from '../../../../../../../../types';\nimport GeneratorMain from './components/GeneratorMain';\nimport ManagerMain from './components/ManagerMain';\nimport AssistantMain from './components/Assistant';\n\nconst Main = () => {\n  const { user: { type } } = useSelector((state: State) => state.main);\n\n  if (type === UserTypes.GENERATOR) {\n    return <GeneratorMain />;\n  }\n\n  if (type === UserTypes.MANAGER) {\n    return <ManagerMain />;\n  }\n\n  if (type === UserTypes.ASSISTANT) {\n    return <AssistantMain />;\n  }\n\n  return null;\n};\n\nexport default Main;\n","import * as React from 'react';\nimport Immovable from './components/Immovable';\nimport { DashboardContractNavigation } from '../../../../useDashboardScreen';\nimport Clients from './components/Clients';\nimport Seller from './components/Seller';\nimport SideNotary from './components/SideNotary/SideNotary';\nimport Main from './components/Main';\n\ntype Props = {\n  selectedNav?: DashboardContractNavigation\n}\n\nconst WorkSpace = (props: Props) => {\n  if (props.selectedNav === DashboardContractNavigation.MAIN) {\n    return <Main />;\n  }\n\n  if (props.selectedNav === DashboardContractNavigation.SELLER) {\n    return <Seller />;\n  }\n\n  if (props.selectedNav === DashboardContractNavigation.CLIENTS) {\n    return <Clients />;\n  }\n\n  if (props.selectedNav === DashboardContractNavigation.IMMOVABLES) {\n    return <Immovable />;\n  }\n\n  if (props.selectedNav === DashboardContractNavigation.SIDE_NOTARIES) {\n    return <SideNotary />;\n  }\n\n  return null;\n};\n\nexport default WorkSpace;\n","import * as React from 'react';\nimport './index.scss';\nimport ContentPanel from '../../../../components/ContentPanel';\nimport Modal from '../../../../components/Modal';\nimport { useModal } from '../../../../components/Modal/useModal';\nimport Navigation from './components/Navigation';\nimport WorkSpace from './components/WorkSpace';\nimport { useManageContainer } from './useManageContainer';\n\nconst ManageContainer = () => {\n  const meta = useManageContainer();\n  const modalProps = useModal();\n\n  return (\n    <main className=\"manage df\">\n      <Navigation selected={meta.selectedNav} />\n      <ContentPanel>\n        <WorkSpace selectedNav={meta.selectedNav} />\n      </ContentPanel>\n      <Modal {...modalProps} />\n    </main>\n  );\n};\n\nexport default ManageContainer;\n","import { useParams, useHistory } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { DashboardContractNavigation } from '../../useDashboardScreen';\nimport { isNumber } from '../../../../utils/numbers';\n\nexport const useManageContainer = () => {\n  const history = useHistory();\n\n  const { section, id } = useParams<{ section: string, id: string }>();\n  const [selectedNav, setSelectedNav] = useState<DashboardContractNavigation>();\n  const [contractData] = useState();\n\n  useEffect(() => {\n    switch (section) {\n      case DashboardContractNavigation.MAIN:\n        setSelectedNav(DashboardContractNavigation.MAIN);\n        return;\n      case DashboardContractNavigation.IMMOVABLES:\n        setSelectedNav(DashboardContractNavigation.IMMOVABLES);\n        return;\n      case DashboardContractNavigation.CLIENTS:\n        setSelectedNav(DashboardContractNavigation.CLIENTS);\n        return;\n      case DashboardContractNavigation.SELLER:\n        setSelectedNav(DashboardContractNavigation.SELLER);\n        return;\n      case DashboardContractNavigation.SIDE_NOTARIES:\n        setSelectedNav(DashboardContractNavigation.SIDE_NOTARIES);\n        return;\n      default:\n        setSelectedNav(DashboardContractNavigation.MAIN);\n    }\n  }, [section]);\n\n  useEffect(() => {\n    if (!isNumber(id)) {\n      history.push('/');\n    }\n  }, [id]);\n\n  return {\n    contractData,\n    selectedNav,\n    setSelectedNav\n  };\n};\n","import React from 'react';\nimport './index.scss';\nimport { Switch, Route } from 'react-router-dom';\nimport Header from '../../components/Header';\nimport DashboardContainer from './components/DashboardContainer';\nimport ManageContainer from './components/ManageContainer';\n\nconst DashboardScreen = () => (\n  <>\n    <Header />\n    <Switch>\n      <Route path=\"/:section/:id\">\n        <ManageContainer />\n      </Route>\n      <DashboardContainer />\n    </Switch>\n  </>\n);\n\nexport default DashboardScreen;\n"],"sourceRoot":""}