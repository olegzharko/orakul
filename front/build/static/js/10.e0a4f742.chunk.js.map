{"version":3,"sources":["components/PrimaryButton/PrimaryButton.tsx","components/CustomInput/index.ts","components/CustomInput/CustomInput.tsx","components/Modal/useModal.ts","components/Modal/Modal.tsx","components/Carousel/Carousel.tsx","components/CustomCheckBox/CustomCheckBox.tsx","components/CustomPasswordInput/CustomPasswordInput.tsx","services/getLoginCarouselImages.ts","Screens/LoginScreen/components/Authorization/Authorization.tsx","Screens/LoginScreen/components/Authorization/useAuthorization.tsx","Screens/LoginScreen/components/ForgotPassword/ForgotPassword.tsx","Screens/LoginScreen/components/ForgotPassword/useForgotPassword.ts","Screens/LoginScreen/components/UpdatePassword/UpdatePassword.tsx","Screens/LoginScreen/components/UpdatePassword/useUpdatePassword.ts","Screens/LoginScreen/LoginScreen.tsx"],"names":["PrimaryButton","label","onClick","disabled","className","CustomInput","onChange","value","type","useState","text","setText","useEffect","variant","event","target","useModal","dispatch","useDispatch","modalInfo","useSelector","state","main","useMemo","handleClose","setModalInfo","open","Modal","success","message","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Carousel","images","dots","infinite","speed","arrows","slidesToShow","slidesToScroll","map","item","src","alt","memo","CustomCheckBox","checked","setValue","handleChange","useCallback","e","FormControlLabel","control","Checkbox","color","CustomPasswordInput","password","setPassword","showPassword","setShowPassword","FormControl","InputLabel","htmlFor","OutlinedInput","endAdornment","InputAdornment","position","IconButton","aria-label","prev","onMouseDown","preventDefault","edge","Visibility","VisibilityOff","labelWidth","getLoginCarouselImages","a","requestApi","url","DEFAULT_URL","data","console","log","Authorization","meta","setImages","email","setEmail","remember","setRemember","handleLogin","sendLogin","disabledButton","res","image","fetchImages","useAuthorization","Loader","autoComplete","onSubmit","to","ForgotPassword","handleReset","forgotPassword","useForgotPassword","UpdatePassword","token","useParams","repeatPassword","setRepeatPassword","handleUpdate","c_password","resetPassword","useUpdatePassword","LoginScreen","modalProps","path","exact"],"mappings":"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","file":"static/js/10.e0a4f742.chunk.js","sourcesContent":["/* eslint-disable prettier/prettier */\n/* eslint-disable react/button-has-type */\nimport React from 'react';\nimport './index.scss';\n\ntype Props = {\n  label: string;\n  onClick: (e: any) => void;\n  disabled: boolean;\n  className?: string;\n};\n\nconst PrimaryButton = ({\n  label, onClick, disabled, className\n}: Props) => (\n  <button\n    className={`primary-button ${disabled ? 'disabled' : ''} ${\n      className || ''\n    }`}\n    onClick={onClick}\n    disabled={disabled}\n  >\n    {label}\n  </button>\n);\n\nexport default PrimaryButton;\n","export { default } from './CustomInput';\n","/* eslint-disable no-unused-vars */\n/* eslint-disable react/react-in-jsx-scope */\nimport React, { useState, useEffect } from 'react';\nimport './index.scss';\nimport { TextField } from '@material-ui/core';\n\ntype Props = {\n  label: string;\n  value?: string | number | null;\n  onChange?: (value: string) => void;\n  type?: string;\n  disabled?: boolean;\n};\n\nconst CustomInput = ({\n  label,\n  onChange,\n  value = '',\n  type = 'string',\n  disabled,\n}: Props) => {\n  const [text, setText] = useState(value || '');\n\n  useEffect(() => {\n    setText(value || '');\n  }, [value]);\n\n  const handleChange = (event: any) => {\n    setText(event.target.value);\n    onChange && onChange(event.target.value);\n  };\n\n  return (\n    <TextField\n      label={label}\n      variant=\"outlined\"\n      value={text}\n      onChange={handleChange}\n      type={type}\n      className=\"custom-input\"\n      disabled={disabled || false}\n    />\n  );\n};\n\nexport default CustomInput;\n","/* eslint-disable implicit-arrow-linebreak */\nimport { useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setModalInfo } from '../../store/main/actions';\nimport { State } from '../../store/types';\n\nexport const useModal = () => {\n  const dispatch = useDispatch();\n  const { modalInfo } = useSelector((state: State) => state.main);\n\n  const modalProps = useMemo(\n    () => ({\n      ...modalInfo,\n      handleClose: () =>\n        dispatch(\n          setModalInfo({\n            ...modalInfo,\n            open: false,\n          })\n        ),\n    }),\n    [modalInfo]\n  );\n\n  return modalProps;\n};\n","import React from 'react';\nimport './index.scss';\nimport MModal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\ntype Props = {\n  open: boolean;\n  handleClose: () => void;\n  success: boolean;\n  message: string;\n};\n\n// eslint-disable-next-line prettier/prettier\nconst Modal = ({\n  open, handleClose, success, message\n}: Props) => (\n  <MModal\n    className=\"modal-container\"\n    open={open}\n    onClose={handleClose}\n    closeAfterTransition\n    BackdropComponent={Backdrop}\n    BackdropProps={{\n      timeout: 500,\n    }}\n  >\n    <Fade in={open}>\n      <div className={`modal ${success ? 'modal-success' : 'modal-failed'}`}>\n        <p className=\"message\">{message}</p>\n      </div>\n    </Fade>\n  </MModal>\n);\n\nexport default Modal;\n","import React, { memo } from 'react';\nimport Slider from 'react-slick';\nimport './index.scss';\n\ntype Props = {\n  images: string[];\n};\n\nconst Carousel = ({ images }: Props) => {\n  const settings = {\n    dots: true,\n    infinite: false,\n    speed: 800,\n    arrows: true,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n  };\n\n  return (\n    <div className=\"carousel\">\n      <div className=\"container\">\n        <Slider {...settings}>\n          {images.map((item: string) => (\n            <img\n              src={item}\n              alt={item}\n              key={item}\n              className=\"officeMapMain__image\"\n            />\n          ))}\n        </Slider>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Carousel);\n","import { Checkbox, FormControlLabel } from '@material-ui/core';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport './index.scss';\n\ntype Props = {\n  onChange: (value: boolean) => void;\n  label: string;\n  checked?: boolean;\n};\n\nconst CustomCheckBox = ({ onChange, label, checked = false }: Props) => {\n  const [value, setValue] = useState<boolean>(checked);\n\n  useEffect(() => {\n    setValue(checked);\n  }, [checked]);\n\n  const handleChange = useCallback(\n    (e: any) => {\n      setValue(e.target.checked);\n      onChange(e.target.checked);\n    },\n    [checked]\n  );\n\n  return (\n    <FormControlLabel\n      control={\n        <Checkbox checked={value} onChange={handleChange} color=\"default\" />\n      }\n      label={label}\n      className=\"custom-checkBox\"\n    />\n  );\n};\n\nexport default CustomCheckBox;\n","/* eslint-disable react/jsx-wrap-multilines */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/react-in-jsx-scope */\nimport React, { useState, useEffect } from 'react';\nimport './index.scss';\nimport {\n  FormControl,\n  InputLabel,\n  OutlinedInput,\n  InputAdornment,\n  IconButton,\n} from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\n\ntype Props = {\n  label: string;\n  onChange: (value: string) => void;\n  value?: string | number | null;\n  type?: string;\n  disabled?: boolean;\n};\n\nconst CustomPasswordInput = ({ label, onChange, value = '' }: Props) => {\n  const [password, setPassword] = useState(value || '');\n  const [showPassword, setShowPassword] = useState<boolean>(false);\n\n  useEffect(() => {\n    setPassword(value || '');\n  }, [value]);\n\n  const handleClickShowPassword = () => {\n    setShowPassword((prev) => !prev);\n  };\n\n  const handleMouseDownPassword = (event: any) => {\n    event.preventDefault();\n  };\n\n  const handleChange = (event: any) => {\n    setPassword(event.target.value);\n    onChange(event.target.value);\n  };\n\n  return (\n    <FormControl variant=\"outlined\" className=\"custom-input\">\n      <InputLabel htmlFor=\"outlined-adornment-password\">{label}</InputLabel>\n      <OutlinedInput\n        type={showPassword ? 'text' : 'password'}\n        value={password}\n        onChange={handleChange}\n        endAdornment={\n          <InputAdornment position=\"end\">\n            <IconButton\n              aria-label=\"toggle password visibility\"\n              onClick={handleClickShowPassword}\n              onMouseDown={handleMouseDownPassword}\n              edge=\"end\"\n            >\n              {showPassword ? <Visibility /> : <VisibilityOff />}\n            </IconButton>\n          </InputAdornment>\n        }\n        labelWidth={70}\n      />\n    </FormControl>\n  );\n};\n\nexport default CustomPasswordInput;\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getLoginCarouselImages() {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/slides`,\n    });\n\n    return data.data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport Carousel from '../../../../components/Carousel/Carousel';\nimport CustomCheckBox from '../../../../components/CustomCheckBox';\nimport CustomInput from '../../../../components/CustomInput';\nimport CustomPasswordInput from '../../../../components/CustomPasswordInput';\nimport Loader from '../../../../components/Loader/Loader';\nimport Modal from '../../../../components/Modal';\nimport { useModal } from '../../../../components/Modal/useModal';\nimport PrimaryButton from '../../../../components/PrimaryButton';\nimport { useAuthorization } from './useAuthorization';\n\nconst Authorization = () => {\n  const meta = useAuthorization();\n\n  return (\n    <div className=\"login__authorization\">\n      <div className=\"login__carousel\">\n        {!meta.images && <Loader />}\n        {meta.images && <Carousel images={meta.images} />}\n      </div>\n      <form\n        className=\"login__form\"\n        autoComplete=\"on\"\n        onSubmit={meta.handleLogin}\n      >\n        <img src=\"/icons/logo-full.svg\" alt=\"Rakul\" />\n\n        <div className=\"mv12\">\n          <CustomInput\n            label=\"E-mail\"\n            value={meta.email}\n            onChange={meta.setEmail}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomPasswordInput\n            label=\"Пароль\"\n            value={meta.password}\n            onChange={meta.setPassword}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <PrimaryButton\n            label=\"Авторизуватися\"\n            onClick={meta.handleLogin}\n            disabled={meta.disabledButton}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomCheckBox\n            label=\"Запам’ятати мене\"\n            onChange={meta.setRemember}\n          />\n        </div>\n\n        <Link to=\"/forgot\" className=\"link\">\n          Забули пароль?\n        </Link>\n      </form>\n    </div>\n  );\n};\n\nexport default Authorization;\n","// eslint-disable-next-line object-curly-newline\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport getLoginCarouselImages from '../../../../services/getLoginCarouselImages';\nimport { sendLogin } from '../../../../store/main/actions';\n\nexport const useAuthorization = () => {\n  const dispatch = useDispatch();\n  const [images, setImages] = useState<string[] | null>(null);\n  const [email, setEmail] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n  const [remember, setRemember] = useState<boolean>(false);\n\n  const handleLogin = useCallback(\n    (e: any) => {\n      e.preventDefault();\n      dispatch(sendLogin({ email, password }, remember));\n    },\n    [password, email, remember]\n  );\n\n  const disabledButton = useMemo(() => !email || !password, [email, password]);\n\n  useEffect(() => {\n    const fetchImages = async () => {\n      const res = await getLoginCarouselImages();\n      setImages(res.map((item: any) => item.image));\n    };\n    fetchImages();\n  }, []);\n\n  return {\n    email,\n    password,\n    images,\n    disabledButton,\n    handleLogin,\n    setRemember,\n    setPassword,\n    setEmail,\n  };\n};\n","import React, { memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport CustomInput from '../../../../components/CustomInput';\nimport Modal from '../../../../components/Modal';\nimport { useModal } from '../../../../components/Modal/useModal';\nimport PrimaryButton from '../../../../components/PrimaryButton';\nimport { useForgotPassword } from './useForgotPassword';\n\nconst ForgotPassword = () => {\n  const meta = useForgotPassword();\n\n  return (\n    <>\n      <form className=\"login__forgot\" onSubmit={meta.handleReset}>\n        <img src=\"/icons/logo-full.svg\" alt=\"Rakul\" />\n        <h1 className=\"login__forgot-title mv12\">Відновлення паролю</h1>\n\n        <div className=\"mv12\">\n          <CustomInput\n            label=\"E-mail\"\n            value={meta.email}\n            onChange={meta.setEmail}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <PrimaryButton\n            label=\"Відновити пароль\"\n            onClick={meta.handleReset}\n            disabled={meta.disabledButton}\n          />\n        </div>\n\n        <Link to=\"/\" className=\"link\">\n          Повернутися до авторизації\n        </Link>\n      </form>\n    </>\n  );\n};\n\nexport default memo(ForgotPassword);\n","/* eslint-disable implicit-arrow-linebreak */\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState, useCallback, useMemo } from 'react';\nimport { State } from '../../../../store/types';\nimport { setModalInfo, forgotPassword } from '../../../../store/main/actions';\n\nexport const useForgotPassword = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState<string>('');\n\n  const handleReset = useCallback(\n    (e: any) => {\n      e.preventDefault();\n      dispatch(forgotPassword({ email }));\n    },\n    [email]\n  );\n\n  const disabledButton = useMemo(() => !email, [email]);\n\n  return {\n    email,\n    disabledButton,\n    setEmail,\n    handleReset,\n  };\n};\n","import React, { memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport CustomPasswordInput from '../../../../components/CustomPasswordInput';\nimport Modal from '../../../../components/Modal';\nimport { useModal } from '../../../../components/Modal/useModal';\nimport PrimaryButton from '../../../../components/PrimaryButton';\nimport { useUpdatePassword } from './useUpdatePassword';\n\nconst UpdatePassword = () => {\n  const meta = useUpdatePassword();\n\n  return (\n    <>\n      <form className=\"login__update\" onSubmit={meta.handleUpdate}>\n        <img src=\"/icons/logo-full.svg\" alt=\"Rakul\" />\n        <h1 className=\"login__forgot-title mv12\">Новий пароль</h1>\n\n        <div className=\"mv12\">\n          <CustomPasswordInput\n            label=\"Пароль\"\n            value={meta.password}\n            onChange={meta.setPassword}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomPasswordInput\n            label=\"Повторіть пароль\"\n            value={meta.repeatPassword}\n            onChange={meta.setRepeatPassword}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <PrimaryButton\n            label=\"Відновити пароль\"\n            onClick={meta.handleUpdate}\n            disabled={meta.disabledButton}\n          />\n        </div>\n\n        <Link to=\"/\" className=\"link\">\n          Повернутися до авторизації\n        </Link>\n      </form>\n    </>\n  );\n};\n\nexport default UpdatePassword;\n","/* eslint-disable implicit-arrow-linebreak */\nimport { useDispatch } from 'react-redux';\nimport { useState, useCallback, useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport resetPassword, {\n  ResetPasswordType,\n} from '../../../../services/login/resetPassword';\n\nexport const useUpdatePassword = () => {\n  const { token } = useParams<{ token: string }>();\n  const dispatch = useDispatch();\n  const [password, setPassword] = useState<string>('');\n  const [repeatPassword, setRepeatPassword] = useState<string>('');\n\n  const handleUpdate = useCallback(\n    (e: any) => {\n      e.preventDefault();\n      const data: ResetPasswordType = {\n        password,\n        token,\n        c_password: repeatPassword,\n      };\n\n      dispatch(resetPassword(data));\n    },\n    [password, repeatPassword]\n  );\n\n  const disabledButton = useMemo(\n    () => !password || !repeatPassword || password !== repeatPassword,\n    [password, repeatPassword]\n  );\n\n  return {\n    password,\n    repeatPassword,\n    disabledButton,\n    setPassword,\n    setRepeatPassword,\n    handleUpdate,\n  };\n};\n","import * as React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Authorization from './components/Authorization';\nimport './index.scss';\nimport ForgotPassword from './components/ForgotPassword';\nimport UpdatePassword from './components/UpdatePassword';\nimport Modal from '../../components/Modal';\nimport { useModal } from '../../components/Modal/useModal';\n\nconst LoginScreen = () => {\n  const modalProps = useModal();\n\n  return (\n    <main className=\"login\">\n      <Switch>\n        <Route path=\"/forgot\" exact>\n          <ForgotPassword />\n        </Route>\n        <Route path=\"/update-password/:token\">\n          <UpdatePassword />\n        </Route>\n        <Authorization />\n      </Switch>\n      <Modal {...modalProps} />\n    </main>\n  );\n};\n\nexport default LoginScreen;\n"],"sourceRoot":""}