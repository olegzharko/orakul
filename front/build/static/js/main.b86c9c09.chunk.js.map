{"version":3,"sources":["services/Constants.ts","services/utils/requestApi.ts","services/getToken.ts","store/token/actions.ts","actions/fetchTag.ts","services/getCalendar.ts","store/calendar/actions.ts","actions/fetchCalendarData.ts","components/Loader.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/SchedulerDay/SchedulerDay.js","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridLayout/GridLayout.js","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTableCell/GridTableCell.js","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTable/GridTable.js","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/SchedulerTable.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/useSchedulerTable.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/Filter/Filter.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Form/Form.tsx","Screens/SchedulerScreen/components/SchedulerContainer/SchedulerContainer.tsx","Screens/SchedulerScreen/SchedulerScreen.tsx","App/App.tsx","App/useApp.ts","store/token/store.ts","store/calendar/store.ts","store/index.ts","index.tsx"],"names":["DEFAULT_URL","requestApi","options","a","url","method","headers","bodyData","params","body","undefined","Accept","JSON","stringify","fetch","res","json","success","status","message","Error","data","getToken","token","console","log","ACTIONS","fetchTag","dispatch","type","payload","getCalendar","Authorization","setIsLoading","fetchCalendarData","Loader","SchedulerDay","day","hours","className","date","map","time","ReactGridLayout","WidthProvider","RGL","GridLayout","appointments","cols","handleDrag","useState","dragAndDropWidth","setDragAndDropWidth","useEffect","$","width","rowHeight","margin","containerPadding","verticalCompact","preventCollision","layout","onDragStop","all","current","currentApp","find","item","i","title","color","short_info","style","borderLeft","Object","values","uuidv4","GridLayoutCell","rawsQuantity","GridTable","raws","columns","_","rowIndex","cellIndex","length","row","cell","SchedulerTable","useDispatch","useSelector","state","calendar","isLoading","rooms","useMemo","work_time","shouldLoad","tableColumns","Array","fill","days","day_and_date","tableRaws","contracts","handleAppointmentDrag","useCallback","appointment","y","Math","floor","useSchedulerTable","SchedulerFilter","SchedulerForm","SchedulerContainer","SchedulerScreen","App","useApp","initialState","reducer","action","combineReducers","createStore","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.b86c9c09.chunk.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\nexport const DEFAULT_URL = 'http://app.synction.space';\n","/* eslint-disable comma-dangle */\ntype RequestOptions = {\n  url: string;\n  method?: 'GET' | 'POST' | 'DELETE' | 'PATCH';\n  bodyData?: any;\n  headers?: {};\n};\n\nconst requestApi = async (options: RequestOptions) => {\n  // eslint-disable-next-line object-curly-newline\n  const { url, method = 'GET', headers = {}, bodyData } = options;\n\n  const params = {\n    body: undefined as string | undefined,\n    method: method || 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'applicatioin/json',\n      ...headers,\n    },\n  };\n\n  if (bodyData) {\n    params.body = JSON.stringify(bodyData);\n  }\n\n  const res: any = await fetch(url, params);\n  const json: any = await res.json();\n\n  if (!json.success) {\n    const { status, message } = res;\n    throw new Error(\n      `[${status}, ${message}] Could not fetch on URL (${url}) data:\\n${JSON.stringify(\n        json,\n        null,\n        2\n      )}`\n    );\n  }\n\n  return json.data;\n};\n\nexport default requestApi;\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getToken() {\n  try {\n    const { token } = await requestApi({\n      url: `${DEFAULT_URL}/api/login?email=oleg99@gmail.com&password=admin123`,\n      method: 'POST',\n    });\n\n    return token;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","export const ACTIONS = {\n  SET_TOKEN: 'SET_TOKEN',\n};\n\nexport const setToken = (payload: string) => ({\n  type: ACTIONS.SET_TOKEN,\n  payload,\n});\n","import getToken from '../services/getToken';\nimport { setToken } from '../store/token/actions';\n\nconst fetchTag = async (dispatch: any) => {\n  const token = await getToken();\n  dispatch(setToken(token));\n};\n\nexport default fetchTag;\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getCalendar(token: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/calendar`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","export const ACTIONS = {\n  SET_OPTIONS: 'SET_OPTIONS',\n  SET_IS_LOADING: 'SET_IS_LOADING',\n};\n\nexport const setCalendarOptions = (payload: any) => ({\n  type: ACTIONS.SET_OPTIONS,\n  payload,\n});\n\nexport const setIsLoading = (payload: boolean) => ({\n  type: ACTIONS.SET_IS_LOADING,\n  payload,\n});\n","import getCalendar from '../services/getCalendar';\nimport { setCalendarOptions, setIsLoading } from '../store/calendar/actions';\n\nconst fetchCalendarData = async (dispatch: any, token: string) => {\n  dispatch(setIsLoading(true));\n  const data = await getCalendar(token);\n\n  dispatch(setCalendarOptions(data));\n  dispatch(setIsLoading(false));\n};\n\nexport default fetchCalendarData;\n","import React from 'react';\nimport { LoopCircleLoading } from 'react-loadingg';\n\nconst Loader = () => <LoopCircleLoading />;\n\nexport default Loader;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport './SchedulerDay.scss';\n\nconst SchedulerDay = ({ day, hours }) => (\n  <div className=\"scheduler__weekDay\">\n    <div className=\"scheduler__day\">\n      <p>\n        {day.day}\n        <br />\n        {day.date}\n      </p>\n    </div>\n    <div className=\"scheduler__timeLine\">\n      {hours.map(({ time }) => (\n        <p key={time}>{time}</p>\n      ))}\n    </div>\n  </div>\n);\n\nexport default SchedulerDay;\n","/* eslint-disable object-curly-newline */\n/* eslint-disable camelcase */\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport './GridLayout.scss';\nimport RGL, { WidthProvider } from 'react-grid-layout';\nimport $ from 'jquery';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst ReactGridLayout = WidthProvider(RGL);\n\nexport default function GridLayout({ appointments, cols, handleDrag }) {\n  const [dragAndDropWidth, setDragAndDropWidth] = useState(1200);\n\n  useEffect(() => {\n    setDragAndDropWidth($('.scheduler__appointments').width());\n  }, []);\n\n  const onDrag = (all, current) => {\n    const currentApp = all.find((item) => item.i === current.i);\n    handleDrag(currentApp);\n  };\n\n  if (!appointments) {\n    return <span>Loading...</span>;\n  }\n\n  return (\n    <ReactGridLayout\n      className=\"scheduler__dragAndDrop\"\n      cols={cols}\n      rowHeight={75}\n      width={dragAndDropWidth}\n      margin={[0, 0]}\n      containerPadding={[0, 0]}\n      verticalCompact={false}\n      preventCollision\n      layout={appointments}\n      onDragStop={onDrag}\n    >\n      {appointments.map(({ i, title, color, short_info }) => (\n        <div\n          key={i}\n          className=\"appointment\"\n          style={{ borderLeft: `4px solid ${color}` }}\n        >\n          <div className=\"appointment__title\">{title}</div>\n          <table className=\"appointment__table\">\n            <tbody>\n              <tr>\n                {Object.values(short_info).map((item) => (\n                  <td key={uuidv4()}>{item}</td>\n                ))}\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      ))}\n    </ReactGridLayout>\n  );\n}\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable react/prop-types */\nimport React from 'react';\n// import { v4 as uuidv4 } from 'uuid';\n\n// redux\n\nexport default function GridLayoutCell({ rawsQuantity }) {\n  // const handleClick = () => {\n  //   const appointment = {\n  //     i: uuidv4(),\n  //     x: cell,\n  //     y: row,\n  //     w: 1,\n  //     h: 1,\n  //   };\n  // };\n\n  return (\n    <td\n      // onClick={handleClick}\n      style={{ width: `calc(100% / ${rawsQuantity})` }}\n    />\n  );\n}\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport GridTableCell from '../GridTableCell/GridTableCell';\n\nexport default function GridTable({ raws, columns }) {\n  return (\n    <div className=\"scheduler__bodyTable\">\n      <table>\n        <tbody>\n          {raws.map((_, rowIndex) => (\n            <tr key={uuidv4()}>\n              {columns.map((day, cellIndex) => (\n                <GridTableCell\n                  rawsQuantity={raws.length}\n                  row={rowIndex}\n                  cell={cellIndex}\n                  key={uuidv4()}\n                />\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import React from 'react';\nimport './index.scss';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useSchedulerTable } from './useSchedulerTable';\nimport Loader from '../../../../../../components/Loader';\n\n// components\nimport SchedulerDay from './components/SchedulerDay/SchedulerDay';\nimport GridLayout from './components/GridLayout/GridLayout';\nimport GridTable from './components/GridTable/GridTable';\n\nconst SchedulerTable = () => {\n  const {\n    shouldLoad,\n    rooms,\n    hours,\n    tableRaws,\n    tableColumns,\n    days,\n    appointments,\n    handleAppointmentDrag,\n  } = useSchedulerTable();\n\n  if (shouldLoad) {\n    return <Loader />;\n  }\n\n  return (\n    <div className=\"scheduler\">\n      <div className=\"scheduler__header\">\n        <div />\n        <div>\n          <table>\n            <tbody>\n              <tr>\n                {rooms.map(({ title }: any) => (\n                  <td\n                    key={title}\n                    style={{ width: `calc(100% / ${rooms.length})` }}\n                  >\n                    {title}\n                  </td>\n                ))}\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <div className=\"scheduler__body\">\n        <div className=\"scheduler__dayBar\">\n          {days.map((item: any) => (\n            <SchedulerDay day={item} hours={hours} key={uuidv4()} />\n          ))}\n        </div>\n        <div className=\"scheduler__appointments\">\n          <GridTable raws={tableRaws} columns={tableColumns} />\n          <GridLayout\n            appointments={appointments}\n            cols={tableColumns.length}\n            handleDrag={handleAppointmentDrag}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SchedulerTable;\n","/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable import/prefer-default-export */\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport fetchCalendarData from '../../../../../../actions/fetchCalendarData';\n\nexport const useSchedulerTable = () => {\n  const dispatch = useDispatch();\n  const token = useSelector((state: any) => state.token.token);\n  const { options, isLoading } = useSelector((state: any) => state.calendar);\n\n  useEffect(() => {\n    if (token && !isLoading) {\n      fetchCalendarData(dispatch, token);\n    }\n  }, [token]);\n\n  const rooms = useMemo(() => options?.rooms, [options]);\n  const hours = useMemo(() => options?.work_time, [options]);\n\n  const shouldLoad = useMemo(() => isLoading || !options, [\n    isLoading,\n    rooms,\n    hours,\n  ]);\n\n  const tableColumns = useMemo(() => new Array(rooms?.length || 0).fill(1), [\n    rooms,\n  ]);\n\n  const days = useMemo(() => options?.day_and_date, [options]);\n\n  const tableRaws = useMemo(\n    () => new Array(hours?.length * days?.length || 0).fill(1),\n    [hours]\n  );\n\n  const appointments = useMemo(() => Object.values(options?.contracts || {}), [\n    options,\n  ]);\n\n  const handleAppointmentDrag = useCallback(\n    (appointment) => {\n      const { y } = appointment;\n      const { day } = days[Math.floor(y / hours.length)];\n      const { time } = hours[y % hours.length];\n      // eslint-disable-next-line no-console\n      console.log(day, time);\n    },\n    [hours, days]\n  );\n\n  return {\n    shouldLoad,\n    rooms,\n    hours,\n    tableRaws,\n    tableColumns,\n    days,\n    appointments,\n    handleAppointmentDrag,\n  };\n};\n","import React from 'react';\nimport './index.scss';\n\nconst SchedulerFilter = () => (\n  <div className=\"scheduler__filter\">Filter block</div>\n);\n\nexport default SchedulerFilter;\n","import React from 'react';\n\nconst SchedulerForm = () => <div>Form field</div>;\n\nexport default SchedulerForm;\n","import React from 'react';\nimport './index.scss';\n\n// Components\nimport SchedulerTable from './components/Table/SchedulerTable';\nimport SchedulerFilter from './components/Filter';\nimport SchedulerForm from './components/Form';\n\nconst SchedulerContainer = () => (\n  <div className=\"scheduler__container\">\n    <div className=\"scheduler__dataView\">\n      <SchedulerFilter />\n      <SchedulerTable />\n    </div>\n    <div className=\"scheduler__form\">\n      <SchedulerForm />\n    </div>\n  </div>\n);\n\nexport default SchedulerContainer;\n","import React from 'react';\nimport SchedulerContainer from './components/SchedulerContainer';\n\nconst SchedulerScreen = () => <SchedulerContainer />;\n\nexport default SchedulerScreen;\n","import React from 'react';\nimport './App.css';\nimport { useApp } from './useApp';\nimport SchedulerScreen from '../Screens/SchedulerScreen';\n\nconst App: React.FC = () => {\n  useApp();\n\n  return <SchedulerScreen />;\n};\n\nexport default App;\n","/* eslint-disable import/prefer-default-export */\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport fetchTag from '../actions/fetchTag';\n\nexport const useApp = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    fetchTag(dispatch);\n  }, []);\n};\n","import { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\ntype InitialState = {\n  token: null | string;\n};\n\nconst initialState: InitialState = {\n  token: null,\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_TOKEN:\n      return { ...state, token: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\ntype InitialState = {\n  options: any;\n  isLoading: boolean;\n};\n\nconst initialState: InitialState = {\n  options: null,\n  isLoading: false,\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_OPTIONS:\n      return { ...state, options: action.payload };\n    case ACTIONS.SET_IS_LOADING:\n      return { ...state, isLoading: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers, createStore } from 'redux';\nimport token from './token/store';\nimport calendar from './calendar/store';\n\nconst reducer = combineReducers({\n  token,\n  calendar,\n});\n\nexport default createStore(reducer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  // eslint-disable-next-line\n  document.getElementById('root')\n);\n"],"sourceRoot":""}