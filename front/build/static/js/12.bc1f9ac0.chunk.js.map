{"version":3,"sources":["components/PrimaryButton/PrimaryButton.tsx","components/CustomInput/index.ts","components/CustomInput/CustomInput.tsx","components/RequestModal/useRequestModal.ts","components/RequestModal/RequestModal.tsx","components/Carousel/Carousel.tsx","components/CustomCheckBox/CustomCheckBox.tsx","components/CustomPasswordInput/CustomPasswordInput.tsx","services/getLoginCarouselImages.ts","Screens/LoginScreen/components/Authorization/Authorization.tsx","Screens/LoginScreen/components/Authorization/useAuthorization.tsx","Screens/LoginScreen/components/ForgotPassword/ForgotPassword.tsx","Screens/LoginScreen/components/ForgotPassword/useForgotPassword.ts","Screens/LoginScreen/components/UpdatePassword/UpdatePassword.tsx","Screens/LoginScreen/components/UpdatePassword/useUpdatePassword.ts","Screens/LoginScreen/LoginScreen.tsx"],"names":["PrimaryButton","label","onClick","disabled","className","useState","isClicked","setIsClicked","handleClick","useCallback","e","useEffect","CustomInput","onChange","value","type","required","text","setText","error","variant","event","target","useRequestModal","dispatch","useDispatch","modalInfo","useSelector","state","main","useMemo","handleClose","setModalInfo","open","RequestModal","success","message","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Carousel","images","dots","infinite","speed","arrows","slidesToShow","slidesToScroll","map","item","src","alt","memo","CustomCheckBox","checked","setValue","handleChange","FormControlLabel","control","Checkbox","color","CustomPasswordInput","password","setPassword","showPassword","setShowPassword","FormControl","InputLabel","htmlFor","OutlinedInput","endAdornment","InputAdornment","position","IconButton","aria-label","prev","onMouseDown","preventDefault","edge","Visibility","VisibilityOff","labelWidth","getLoginCarouselImages","a","requestApi","url","DEFAULT_URL","data","console","log","Authorization","meta","setImages","email","setEmail","remember","setRemember","handleLogin","sendLogin","disabledButton","res","image","fetchImages","useAuthorization","Loader","autoComplete","onSubmit","to","ForgotPassword","handleReset","forgotPassword","useForgotPassword","UpdatePassword","token","useParams","repeatPassword","setRepeatPassword","handleUpdate","c_password","resetPassword","useUpdatePassword","LoginScreen","modalProps","path","exact"],"mappings":"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","file":"static/js/12.bc1f9ac0.chunk.js","sourcesContent":["/* eslint-disable prettier/prettier */\n/* eslint-disable react/button-has-type */\nimport React, { useCallback, useState, useEffect } from 'react';\nimport './index.scss';\n\ntype Props = {\n  label: string;\n  onClick: (e: any) => void;\n  disabled?: boolean;\n  className?: string;\n};\n\nconst PrimaryButton = ({\n  label, onClick, disabled, className\n}: Props) => {\n  const [isClicked, setIsClicked] = useState<boolean>(false);\n\n  const handleClick = useCallback((e) => {\n    setIsClicked(true);\n    onClick(e);\n  }, [onClick]);\n\n  useEffect(() => {\n    setIsClicked(false);\n  }, [onClick]);\n\n  return (\n    <button\n      className={\n        `primary-button\n        ${disabled ? 'disabled' : ''}\n        ${className || ''}\n        ${isClicked ? 'clicked' : ''}\n        `\n      }\n      onClick={handleClick}\n      disabled={disabled}\n    >\n      {label}\n    </button>\n  );\n};\n\nexport default PrimaryButton;\n","export { default } from './CustomInput';\n","/* eslint-disable no-unused-vars */\n/* eslint-disable react/react-in-jsx-scope */\nimport React, { useState, useEffect } from 'react';\nimport './index.scss';\nimport { TextField } from '@material-ui/core';\n\ntype Props = {\n  label: string;\n  value?: string | number | null;\n  onChange?: (value: string) => void;\n  type?: string;\n  disabled?: boolean;\n  required?: boolean;\n};\n\nconst CustomInput = ({\n  label,\n  onChange,\n  value = '',\n  type = 'string',\n  disabled,\n  required,\n}: Props) => {\n  const [text, setText] = useState(value || '');\n\n  useEffect(() => {\n    setText(value || '');\n  }, [value]);\n\n  const handleChange = (event: any) => {\n    setText(event.target.value);\n    onChange && onChange(event.target.value);\n  };\n\n  return (\n    <TextField\n      error={required && !text}\n      label={label}\n      variant=\"outlined\"\n      value={text}\n      onChange={handleChange}\n      type={type}\n      className=\"custom-input\"\n      disabled={disabled || false}\n    />\n  );\n};\n\nexport default CustomInput;\n","/* eslint-disable implicit-arrow-linebreak */\nimport { useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setModalInfo } from '../../store/main/actions';\nimport { State } from '../../store/types';\n\nexport const useRequestModal = () => {\n  const dispatch = useDispatch();\n  const { modalInfo } = useSelector((state: State) => state.main);\n\n  const modalProps = useMemo(\n    () => ({\n      ...modalInfo,\n      handleClose: () =>\n        dispatch(\n          setModalInfo({\n            ...modalInfo,\n            open: false,\n          })\n        ),\n    }),\n    [modalInfo]\n  );\n\n  return modalProps;\n};\n","import React from 'react';\nimport './index.scss';\nimport MModal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\ntype Props = {\n  open: boolean;\n  handleClose: () => void;\n  success: boolean;\n  message: string;\n};\n\n// eslint-disable-next-line prettier/prettier\nconst RequestModal = ({\n  open, handleClose, success, message\n}: Props) => (\n  <MModal\n    className=\"modal-container\"\n    open={open}\n    onClose={handleClose}\n    closeAfterTransition\n    BackdropComponent={Backdrop}\n    BackdropProps={{\n      timeout: 500,\n    }}\n  >\n    <Fade in={open}>\n      <div className={`modal ${success ? 'modal-success' : 'modal-failed'}`}>\n        <p className=\"message\">{message}</p>\n      </div>\n    </Fade>\n  </MModal>\n);\n\nexport default RequestModal;\n","import React, { memo } from 'react';\nimport Slider from 'react-slick';\nimport './index.scss';\n\ntype Props = {\n  images: string[];\n};\n\nconst Carousel = ({ images }: Props) => {\n  const settings = {\n    dots: true,\n    infinite: false,\n    speed: 800,\n    arrows: true,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n  };\n\n  return (\n    <div className=\"carousel\">\n      <div className=\"container\">\n        <Slider {...settings}>\n          {images.map((item: string) => (\n            <img\n              src={item}\n              alt={item}\n              key={item}\n              className=\"officeMapMain__image\"\n            />\n          ))}\n        </Slider>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Carousel);\n","import { Checkbox, FormControlLabel } from '@material-ui/core';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport './index.scss';\n\ntype Props = {\n  onChange: (value: boolean) => void;\n  label: string;\n  checked?: boolean;\n};\n\nconst CustomCheckBox = ({ onChange, label, checked = false }: Props) => {\n  const [value, setValue] = useState<boolean>(checked);\n\n  useEffect(() => {\n    setValue(checked);\n  }, [checked]);\n\n  const handleChange = useCallback(\n    (e: any) => {\n      setValue(e.target.checked);\n      onChange(e.target.checked);\n    },\n    [checked]\n  );\n\n  return (\n    <FormControlLabel\n      control={\n        <Checkbox checked={value} onChange={handleChange} color=\"default\" />\n      }\n      label={label}\n      className=\"custom-checkBox\"\n    />\n  );\n};\n\nexport default CustomCheckBox;\n","/* eslint-disable react/jsx-wrap-multilines */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/react-in-jsx-scope */\nimport React, { useState, useEffect } from 'react';\nimport './index.scss';\nimport {\n  FormControl,\n  InputLabel,\n  OutlinedInput,\n  InputAdornment,\n  IconButton,\n} from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\n\ntype Props = {\n  label: string;\n  onChange: (value: string) => void;\n  value?: string | number | null;\n  type?: string;\n  disabled?: boolean;\n};\n\nconst CustomPasswordInput = ({ label, onChange, value = '' }: Props) => {\n  const [password, setPassword] = useState(value || '');\n  const [showPassword, setShowPassword] = useState<boolean>(false);\n\n  useEffect(() => {\n    setPassword(value || '');\n  }, [value]);\n\n  const handleClickShowPassword = () => {\n    setShowPassword((prev) => !prev);\n  };\n\n  const handleMouseDownPassword = (event: any) => {\n    event.preventDefault();\n  };\n\n  const handleChange = (event: any) => {\n    setPassword(event.target.value);\n    onChange(event.target.value);\n  };\n\n  return (\n    <FormControl variant=\"outlined\" className=\"custom-input\">\n      <InputLabel htmlFor=\"outlined-adornment-password\">{label}</InputLabel>\n      <OutlinedInput\n        type={showPassword ? 'text' : 'password'}\n        value={password}\n        onChange={handleChange}\n        endAdornment={\n          <InputAdornment position=\"end\">\n            <IconButton\n              aria-label=\"toggle password visibility\"\n              onClick={handleClickShowPassword}\n              onMouseDown={handleMouseDownPassword}\n              edge=\"end\"\n            >\n              {showPassword ? <Visibility /> : <VisibilityOff />}\n            </IconButton>\n          </InputAdornment>\n        }\n        labelWidth={70}\n      />\n    </FormControl>\n  );\n};\n\nexport default CustomPasswordInput;\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getLoginCarouselImages() {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/slides`,\n    });\n\n    return data.data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport Carousel from '../../../../components/Carousel/Carousel';\nimport CustomCheckBox from '../../../../components/CustomCheckBox';\nimport CustomInput from '../../../../components/CustomInput';\nimport CustomPasswordInput from '../../../../components/CustomPasswordInput';\nimport Loader from '../../../../components/Loader/Loader';\nimport Modal from '../../../../components/RequestModal';\nimport { useRequestModal } from '../../../../components/RequestModal/useRequestModal';\nimport PrimaryButton from '../../../../components/PrimaryButton';\nimport { useAuthorization } from './useAuthorization';\n\nconst Authorization = () => {\n  const meta = useAuthorization();\n\n  return (\n    <div className=\"login__authorization\">\n      <div className=\"login__carousel\">\n        {!meta.images && <Loader />}\n        {meta.images && <Carousel images={meta.images} />}\n      </div>\n      <form\n        className=\"login__form\"\n        autoComplete=\"on\"\n        onSubmit={meta.handleLogin}\n      >\n        <img src=\"/images/logo-full.svg\" alt=\"Rakul\" />\n\n        <div className=\"mv12\">\n          <CustomInput\n            label=\"E-mail\"\n            value={meta.email}\n            onChange={meta.setEmail}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomPasswordInput\n            label=\"Пароль\"\n            value={meta.password}\n            onChange={meta.setPassword}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <PrimaryButton\n            label=\"Авторизуватися\"\n            onClick={meta.handleLogin}\n            disabled={meta.disabledButton}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomCheckBox\n            label=\"Запам’ятати мене\"\n            onChange={meta.setRemember}\n          />\n        </div>\n\n        <Link to=\"/forgot\" className=\"link\">\n          Забули пароль?\n        </Link>\n      </form>\n    </div>\n  );\n};\n\nexport default Authorization;\n","// eslint-disable-next-line object-curly-newline\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport getLoginCarouselImages from '../../../../services/getLoginCarouselImages';\nimport { sendLogin } from '../../../../store/main/actions';\n\nexport const useAuthorization = () => {\n  const dispatch = useDispatch();\n  const [images, setImages] = useState<string[]>([]);\n  const [email, setEmail] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n  const [remember, setRemember] = useState<boolean>(false);\n\n  const handleLogin = useCallback(\n    (e: any) => {\n      e.preventDefault();\n      dispatch(sendLogin({ email, password }, remember));\n    },\n    [password, email, remember]\n  );\n\n  const disabledButton = useMemo(() => !email || !password, [email, password]);\n\n  useEffect(() => {\n    const fetchImages = async () => {\n      const res = await getLoginCarouselImages();\n      if (!res) return;\n      setImages(res.map((item: any) => item.image));\n    };\n    fetchImages();\n  }, []);\n\n  return {\n    email,\n    password,\n    images,\n    disabledButton,\n    handleLogin,\n    setRemember,\n    setPassword,\n    setEmail,\n  };\n};\n","import React, { memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport CustomInput from '../../../../components/CustomInput';\nimport Modal from '../../../../components/RequestModal';\nimport { useRequestModal } from '../../../../components/RequestModal/useRequestModal';\nimport PrimaryButton from '../../../../components/PrimaryButton';\nimport { useForgotPassword } from './useForgotPassword';\n\nconst ForgotPassword = () => {\n  const meta = useForgotPassword();\n\n  return (\n    <>\n      <form className=\"login__forgot\" onSubmit={meta.handleReset}>\n        <img src=\"/images/logo-full.svg\" alt=\"Rakul\" />\n        <h1 className=\"login__forgot-title mv12\">Відновлення паролю</h1>\n\n        <div className=\"mv12\">\n          <CustomInput\n            label=\"E-mail\"\n            value={meta.email}\n            onChange={meta.setEmail}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <PrimaryButton\n            label=\"Відновити пароль\"\n            onClick={meta.handleReset}\n            disabled={meta.disabledButton}\n          />\n        </div>\n\n        <Link to=\"/\" className=\"link\">\n          Повернутися до авторизації\n        </Link>\n      </form>\n    </>\n  );\n};\n\nexport default memo(ForgotPassword);\n","/* eslint-disable implicit-arrow-linebreak */\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState, useCallback, useMemo } from 'react';\nimport { State } from '../../../../store/types';\nimport { setModalInfo, forgotPassword } from '../../../../store/main/actions';\n\nexport const useForgotPassword = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState<string>('');\n\n  const handleReset = useCallback(\n    (e: any) => {\n      e.preventDefault();\n      dispatch(forgotPassword({ email }));\n    },\n    [email]\n  );\n\n  const disabledButton = useMemo(() => !email, [email]);\n\n  return {\n    email,\n    disabledButton,\n    setEmail,\n    handleReset,\n  };\n};\n","import React, { memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport CustomInput from '../../../../components/CustomInput';\nimport CustomPasswordInput from '../../../../components/CustomPasswordInput';\nimport Modal from '../../../../components/RequestModal';\nimport { useRequestModal } from '../../../../components/RequestModal/useRequestModal';\nimport PrimaryButton from '../../../../components/PrimaryButton';\nimport { useUpdatePassword } from './useUpdatePassword';\n\nconst UpdatePassword = () => {\n  const meta = useUpdatePassword();\n\n  return (\n    <>\n      <form className=\"login__update\" onSubmit={meta.handleUpdate}>\n        <img src=\"/images/logo-full.svg\" alt=\"Rakul\" />\n        <h1 className=\"login__forgot-title mv12\">Новий пароль</h1>\n\n        <div className=\"mv12\">\n          <CustomInput\n            label=\"Email\"\n            value={meta.email}\n            onChange={meta.setEmail}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomPasswordInput\n            label=\"Пароль\"\n            value={meta.password}\n            onChange={meta.setPassword}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomPasswordInput\n            label=\"Повторіть пароль\"\n            value={meta.repeatPassword}\n            onChange={meta.setRepeatPassword}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <PrimaryButton\n            label=\"Відновити пароль\"\n            onClick={meta.handleUpdate}\n            disabled={meta.disabledButton}\n          />\n        </div>\n\n        <Link to=\"/\" className=\"link\">\n          Повернутися до авторизації\n        </Link>\n      </form>\n    </>\n  );\n};\n\nexport default UpdatePassword;\n","/* eslint-disable implicit-arrow-linebreak */\nimport { useDispatch } from 'react-redux';\nimport { useState, useCallback, useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport resetPassword, {\n  ResetPasswordType,\n} from '../../../../services/login/resetPassword';\n\nexport const useUpdatePassword = () => {\n  const { token } = useParams<{ token: string }>();\n  const dispatch = useDispatch();\n\n  const [email, setEmail] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n  const [repeatPassword, setRepeatPassword] = useState<string>('');\n\n  const handleUpdate = useCallback(\n    (e: any) => {\n      e.preventDefault();\n      const data: ResetPasswordType = {\n        email,\n        password,\n        token,\n        c_password: repeatPassword,\n      };\n\n      dispatch(resetPassword(data));\n    },\n    [password, repeatPassword, email]\n  );\n\n  const disabledButton = useMemo(\n    () => !password || !repeatPassword || password !== repeatPassword || !email,\n    [password, repeatPassword, email]\n  );\n\n  return {\n    email,\n    password,\n    repeatPassword,\n    disabledButton,\n    setEmail,\n    setPassword,\n    setRepeatPassword,\n    handleUpdate,\n  };\n};\n","import * as React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Authorization from './components/Authorization';\nimport './index.scss';\nimport ForgotPassword from './components/ForgotPassword';\nimport UpdatePassword from './components/UpdatePassword';\nimport Modal from '../../components/RequestModal';\nimport { useRequestModal } from '../../components/RequestModal/useRequestModal';\n\nconst LoginScreen = () => {\n  const modalProps = useRequestModal();\n\n  return (\n    <main className=\"login\">\n      <Switch>\n        <Route path=\"/forgot\" exact>\n          <ForgotPassword />\n        </Route>\n        <Route path=\"/password/reset/:token\" exact>\n          <UpdatePassword />\n        </Route>\n        <Authorization />\n      </Switch>\n      <Modal {...modalProps} />\n    </main>\n  );\n};\n\nexport default LoginScreen;\n"],"sourceRoot":""}