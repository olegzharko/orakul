{"version":3,"sources":["services/Constants.ts","services/utils/requestApi.ts","services/getToken.ts","store/token/actions.ts","actions/fetchTag.ts","services/getAppointments.ts","store/scheduler/actions.ts","actions/fetchAppointments.ts","services/getCalendarCard.ts","actions/fetchCalendarCard.ts","services/getCalendar.ts","actions/fetchSchedulerSettings.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/utils/formatAppointmentDate.ts","services/moveCalendarCard.ts","actions/moveCalendarCard.ts","components/Loader/Loader.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/SchedulerDay/SchedulerDay.js","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridLayout/GridLayout.js","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTableCell/GridTableCell.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTableCell/useGridTableCell.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTable/GridTable.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTable/useGridTable.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/SchedulerTable.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/useSchedulerTable.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/Filter/Filter.tsx","components/Modal/Modal.tsx","components/RadioButtonsGroup/RadioButtonsGroup.tsx","components/CustomSelect/CustomSelect.tsx","components/AddFormButton/AddFormButton.tsx","components/CustomInput/CustomInput.tsx","components/RemoveFormButton/RemoveFormButton.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/components/Clients/Clients.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/components/Clients/useClients.ts","components/PrimaryButton/PrimaryButton.tsx","components/CustomSwitch/CustomSwitch.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/components/ImmovableContainer/ImmovableContainer.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/components/ImmovableContainer/useImmovableContainer.ts","services/getDeveloperInfo.ts","actions/fetchDeveloperInfo.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/types.ts","services/createNewCard.ts","actions/createNewCard.ts","services/editCalendarCard.ts","actions/editCalendarCard.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/Form.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/useForm.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/SchedulerForm.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/useSchedulerForm.ts","Screens/SchedulerScreen/components/SchedulerContainer/SchedulerContainer.tsx","Screens/SchedulerScreen/SchedulerScreen.tsx","App/App.tsx","App/useApp.ts","store/token/store.ts","store/scheduler/store.ts","store/index.ts","index.tsx"],"names":["DEFAULT_URL","requestApi","options","a","url","method","headers","bodyData","params","body","undefined","Accept","JSON","stringify","fetch","res","json","getToken","data","token","console","log","ACTIONS","fetchTag","dispatch","type","payload","getAppointments","Authorization","setDevelopersInfo","setSelectedNewAppointment","setSelectedOldAppointment","setEditAppointmentData","setEditAppointmens","setModalInfo","setIsLoading","fetchAppointments","Object","values","getCalendarCard","id","fetchCalendarCard","getCalendar","fetchSchedulerSettings","formatAppointmentDate","hours","rooms","days","raw","cell","Math","floor","length","day","date","year","time","room","split","reverse","join","moveCalendarCard","moveCalendarCardService","success","Loader","color","SchedulerDay","className","map","ReactGridLayout","WidthProvider","RGL","GridLayout","appointments","cols","handleDrag","handleClick","useState","dragAndDropWidth","setDragAndDropWidth","useEffect","$","width","rowHeight","margin","containerPadding","verticalCompact","preventCollision","layout","onDragStop","all","current","currentApp","find","item","i","appointment","style","borderLeft","onClick","title","short_info","uuidv4","GridLayoutCell","props","useSelector","state","scheduler","useDispatch","useMemo","work_time","day_and_date","useCallback","moment","isBefore","useGridTableCell","rowsQuantity","backgroundColor","selected","GridTable","rows","columns","newSelectedAppointment","_","rowIndex","cellIndex","GridTableCell","SchedulerTable","isLoading","shouldLoad","tableColumns","Array","fill","tableRows","handleAppointmentDrag","y","x","date_time","room_id","onAppointmentClick","useSchedulerTable","SchedulerFilter","Modal","open","handleClose","message","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","RadioButtonsGroup","buttons","onChange","unicId","selectedValue","setSelectedValue","handleChange","value","checked","htmlFor","memo","CustomSelect","label","disabled","setSelected","FormControl","variant","InputLabel","Select","event","val","target","MenuItem","AddFormButton","onKeyPress","src","alt","CustomInput","text","setText","TextField","RemoveFormButton","index","Clients","meta","clients","onPhoneChange","phone","onNameChange","full_name","useClients","marginLeft","onRemove","onAdd","PrimaryButton","CustomSwitch","setValue","FormControlLabel","control","Switch","name","labelPlacement","ImmovableContainer","immovables","developersInfo","building","contracts","form_data","contract_type","immovableTypes","immovable_type","onContractChange","contract_type_id","onBuildingChange","building_id","onImmovableTypeChange","imm_type_id","onBankChange","bank","onProxyChange","proxy","onImmNumChange","imm_number","useImmovableContainer","filter","getDeveloperInfo","immovableItem","clientItem","createNewCard","createNewCardService","editCalendarCard","editCalendarCardService","SchedulerForm","selectedCard","initialValues","edit","insideEdit","setEdit","card","notary_id","notary","setNotary","devCompanyId","setDevCompanyId","devRepresentativeId","setDevRepresentativeId","devManagerId","setDevManagerId","setImmovables","setClients","notaries","developers","developer","manager","representative","onNotaryChange","dev_company_id","dev_representative_id","dev_manager_id","fetchDeveloperInfo","onDeveloperChange","onRepresentativeChange","onManagerChange","onImmovablesChange","onClientsChange","onClearAll","onAddImmovables","onRemoveImmovable","prev","mapIndex","onAddClients","onRemoveClient","activeAddButton","Boolean","every","onFormCreate","imm_num","then","onCloseForm","selectedNotaryId","selectedDeveloperId","selectedDevRepresentativeId","selecedDevManagerId","useForm","selectedTab","setSelectedTab","oldSelectedAppointment","editAppointmentData","modalInfo","modalProps","useSchedulerForm","SchedulerContainer","SchedulerScreen","App","useApp","initialState","reducer","action","combineReducers","createStore","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.d1c619a5.chunk.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\nexport const DEFAULT_URL = 'http://app.synction.space';\n","/* eslint-disable comma-dangle */\ntype RequestOptions = {\n  url: string;\n  method?: 'GET' | 'POST' | 'DELETE' | 'PATCH' | 'PUT';\n  bodyData?: any;\n  headers?: {};\n};\n\nconst requestApi = async (options: RequestOptions) => {\n  // eslint-disable-next-line object-curly-newline\n  const { url, method = 'GET', headers = {}, bodyData } = options;\n\n  const params = {\n    body: undefined as string | undefined,\n    method: method || 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'applicatioin/json',\n      ...headers,\n    },\n  };\n\n  if (bodyData) {\n    params.body = JSON.stringify(bodyData);\n  }\n\n  const res: any = await fetch(url, params);\n  const json: any = await res.json();\n\n  // if (!json.success) {\n  //   const { status, message } = res;\n  //   throw new Error(\n  //     `[${status}, ${message}] Could not fetch on URL (${url}) data:\\n${JSON.stringify(\n  //       json,\n  //       null,\n  //       2\n  //     )}`\n  //   );\n  // }\n\n  return json;\n};\n\nexport default requestApi;\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getToken() {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/login?email=oleg99@gmail.com&password=admin123`,\n      method: 'POST',\n    });\n\n    return data.data.token;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","export const ACTIONS = {\n  SET_TOKEN: 'SET_TOKEN',\n  SET_LOADING: 'SET_LOADING',\n};\n\nexport const setToken = (payload: string) => ({\n  type: ACTIONS.SET_TOKEN,\n  payload,\n});\n","import getToken from '../services/getToken';\nimport { setToken } from '../store/token/actions';\n\nconst fetchTag = async (dispatch: any) => {\n  const token = await getToken();\n  dispatch(setToken(token));\n};\n\nexport default fetchTag;\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getAppointments(token: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data.data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","export const ACTIONS = {\n  SET_OPTIONS: 'SET_OPTIONS',\n  SET_APPOINTMENTS: 'SET_APPOINTMENTS',\n  SET_DEVELOPERS_INFO: 'SET_DEVELOPERS_INFO',\n  SET_SELECTED_NEW_APPOINTMENT: 'SET_SELECTED_NEW_APPOINTMENT',\n  SET_SELECTED_OLD_APPOINTMENT: 'SET_SELECTED_OLD_APPOINTMENT',\n  SET_EDIT_APPOINTMENT_DATA: 'SET_EDIT_APPOINTMENT_DATA',\n  SET_IS_LOADING: 'SET_IS_LOADING',\n  ADD_NEW_APPOINTMENT: 'ADD_NEW_APPOINTMENT',\n  SET_MODAL_INFO: 'SET_MODAL_INFO',\n  EDIT_APPOINTMENTS: 'EDIT_APPOINTMENTS',\n};\n\nexport const setSchedulerOptions = (payload: any) => ({\n  type: ACTIONS.SET_OPTIONS,\n  payload,\n});\n\nexport const setAppointments = (payload: any) => ({\n  type: ACTIONS.SET_APPOINTMENTS,\n  payload,\n});\n\nexport const setDevelopersInfo = (payload: any) => ({\n  type: ACTIONS.SET_DEVELOPERS_INFO,\n  payload,\n});\n\nexport const setSelectedNewAppointment = (payload: any) => ({\n  type: ACTIONS.SET_SELECTED_NEW_APPOINTMENT,\n  payload,\n});\n\nexport const setSelectedOldAppointment = (payload: any) => ({\n  type: ACTIONS.SET_SELECTED_OLD_APPOINTMENT,\n  payload,\n});\n\nexport const addNewAppointment = (payload: any) => ({\n  type: ACTIONS.ADD_NEW_APPOINTMENT,\n  payload,\n});\n\nexport const setEditAppointmentData = (payload: any) => ({\n  type: ACTIONS.SET_EDIT_APPOINTMENT_DATA,\n  payload,\n});\n\nexport const setEditAppointmens = (payload: any) => ({\n  type: ACTIONS.EDIT_APPOINTMENTS,\n  payload,\n});\n\nexport const setModalInfo = (payload: any) => ({\n  type: ACTIONS.SET_MODAL_INFO,\n  payload,\n});\n\nexport const setIsLoading = (payload: boolean) => ({\n  type: ACTIONS.SET_IS_LOADING,\n  payload,\n});\n","import getAppointments from '../services/getAppointments';\nimport { setAppointments, setIsLoading } from '../store/scheduler/actions';\n\nconst fetchAppointments = async (dispatch: any, token: string) => {\n  dispatch(setIsLoading(true));\n  const data = await getAppointments(token);\n\n  dispatch(setAppointments(Object.values(data)));\n  dispatch(setIsLoading(false));\n};\n\nexport default fetchAppointments;\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getCalendarCard(token: string, id: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data.data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { setEditAppointmentData } from '../store/scheduler/actions';\nimport getCalendarCard from '../services/getCalendarCard';\n\nconst fetchCalendarCard = async (dispatch: any, token: string, id: string) => {\n  const data = await getCalendarCard(token, id);\n  dispatch(setEditAppointmentData(data));\n};\n\nexport default fetchCalendarCard;\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getCalendar(token: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/calendar`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data.data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import getCalendar from '../services/getCalendar';\nimport { setSchedulerOptions, setIsLoading } from '../store/scheduler/actions';\n\nconst fetchSchedulerSettings = async (dispatch: any, token: string) => {\n  dispatch(setIsLoading(true));\n  const data = await getCalendar(token);\n\n  dispatch(setSchedulerOptions(data));\n  dispatch(setIsLoading(false));\n};\n\nexport default fetchSchedulerSettings;\n","const formatAppointmentDate = (\n  hours: any,\n  rooms: any,\n  days: any,\n  raw: number,\n  cell: number\n) => {\n  const { day, date, year } = days[Math.floor(raw / hours.length)];\n  const { time } = hours[raw % hours.length];\n  const room = rooms[cell].id;\n  return {\n    day,\n    date: date.split('.').reverse().join('.'),\n    year,\n    time,\n    room,\n  };\n};\n\nexport default formatAppointmentDate;\n","import { NewCard } from '../types';\nimport { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function moveCalendarCard(\n  token: string,\n  bodyData: {\n    date_time: string;\n    room_id: number;\n  },\n  id: number\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards/move/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'PUT',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import moveCalendarCardService from '../services/moveCalendarCard';\nimport { setEditAppointmens } from '../store/scheduler/actions';\n\nconst moveCalendarCard = async (\n  dispatch: any,\n  token: string,\n  bodyData: {\n    date_time: string;\n    room_id: number;\n  },\n  id: number\n) => {\n  const { success, data } = await moveCalendarCardService(token, bodyData, id);\n\n  if (success) {\n    dispatch(setEditAppointmens(data));\n  }\n};\n\nexport default moveCalendarCard;\n","import React from 'react';\nimport { LoopCircleLoading } from 'react-loadingg';\n\nconst Loader = () => <LoopCircleLoading color=\"#165153\" />;\n\nexport default Loader;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport './SchedulerDay.scss';\n\nconst SchedulerDay = ({ day, hours }) => (\n  <div className=\"scheduler__weekDay\">\n    <div className=\"scheduler__day\">\n      <p>\n        {day.day}\n        <br />\n        {day.date}\n      </p>\n    </div>\n    <div className=\"scheduler__timeLine\">\n      {hours.map(({ time }) => (\n        <p key={time}>{time}</p>\n      ))}\n    </div>\n  </div>\n);\n\nexport default SchedulerDay;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable object-curly-newline */\n/* eslint-disable camelcase */\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport './GridLayout.scss';\nimport RGL, { WidthProvider } from 'react-grid-layout';\nimport $ from 'jquery';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst ReactGridLayout = WidthProvider(RGL);\n\nexport default function GridLayout({\n  appointments,\n  cols,\n  handleDrag,\n  handleClick,\n}) {\n  const [dragAndDropWidth, setDragAndDropWidth] = useState(1200);\n\n  useEffect(() => {\n    setDragAndDropWidth($('.scheduler__appointments').width());\n  }, []);\n\n  const onDrag = (all, current) => {\n    const currentApp = all.find((item) => item.i === current.i);\n    handleDrag(currentApp);\n  };\n\n  if (!appointments) {\n    return <span>Loading...</span>;\n  }\n\n  return (\n    <ReactGridLayout\n      className=\"scheduler__dragAndDrop\"\n      cols={cols}\n      rowHeight={75}\n      width={dragAndDropWidth}\n      margin={[0, 0]}\n      containerPadding={[0, 0]}\n      verticalCompact={false}\n      preventCollision\n      layout={appointments}\n      onDragStop={onDrag}\n    >\n      {appointments.map((appointment) => (\n        <div\n          key={appointment.i}\n          className=\"appointment\"\n          style={{ borderLeft: `4px solid ${appointment.color}` }}\n          onClick={() => handleClick(appointment)}\n        >\n          <div className=\"appointment__title\">{appointment.title}</div>\n          <table className=\"appointment__table\">\n            <tbody>\n              <tr>\n                {Object.values(appointment.short_info).map((item) => (\n                  <td key={uuidv4()}>{item}</td>\n                ))}\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      ))}\n    </ReactGridLayout>\n  );\n}\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React from 'react';\nimport { Props, useGridTableCell } from './useGridTableCell';\n\nconst GridLayoutCell = (props: Props) => {\n  const { onClick } = useGridTableCell(props);\n\n  return (\n    <td\n      onClick={onClick}\n      style={{\n        width: `calc(100% / ${props.rowsQuantity})`,\n        backgroundColor: props.selected ? '#E5E5E5' : '',\n      }}\n    />\n  );\n};\n\nexport default GridLayoutCell;\n","/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable operator-linebreak */\nimport { useMemo, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { State } from '../../../../../../../../store/types';\nimport formatAppointmentDate from '../../utils/formatAppointmentDate';\nimport { setSelectedNewAppointment } from '../../../../../../../../store/scheduler/actions';\n\nexport type Props = {\n  rowsQuantity: number;\n  raw: number;\n  cell: number;\n  selected: boolean;\n};\n\nexport const useGridTableCell = ({ raw, cell }: Props) => {\n  const { options } = useSelector((state: State) => state.scheduler);\n  const dispatch = useDispatch();\n\n  const rooms = useMemo(() => options?.rooms, [options]);\n  const hours = useMemo(() => options?.work_time, [options]);\n  const days = useMemo(() => options?.day_and_date, [options]);\n\n  const onClick = useCallback(() => {\n    const payload = formatAppointmentDate(hours, rooms, days, raw, cell);\n    const isBefore = moment(\n      `${payload.year}.${payload.date}. ${payload.time}`\n    ).isBefore(moment());\n\n    if (isBefore) return;\n    dispatch(setSelectedNewAppointment({ ...payload, raw, cell }));\n  }, [hours, rooms, days, raw, cell]);\n\n  return { onClick };\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport GridTableCell from '../GridTableCell/GridTableCell';\nimport { Props, useGridTable } from './useGridTable';\n\nexport default function GridTable({ rows, columns }: Props) {\n  const { newSelectedAppointment } = useGridTable();\n\n  return (\n    <div className=\"scheduler__bodyTable\">\n      <table>\n        <tbody>\n          {rows.map((_: any, rowIndex: number) => (\n            <tr key={uuidv4()}>\n              {columns.map((day: any, cellIndex: number) => (\n                <GridTableCell\n                  selected={\n                    // eslint-disable-next-line prettier/prettier\n                    newSelectedAppointment?.raw === rowIndex\n                    // eslint-disable-next-line prettier/prettier\n                    && newSelectedAppointment?.cell === cellIndex\n                  }\n                  rowsQuantity={rows.length}\n                  raw={rowIndex}\n                  cell={cellIndex}\n                  key={uuidv4()}\n                />\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { State } from '../../../../../../../../store/types';\n\nexport type Props = {\n  rows: any;\n  columns: any;\n};\n\nexport const useGridTable = () => {\n  const newSelectedAppointment = useSelector(\n    (state: State) => state.scheduler.newSelectedAppointment\n  );\n\n  return { newSelectedAppointment };\n};\n","import React from 'react';\nimport './index.scss';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useSchedulerTable } from './useSchedulerTable';\nimport Loader from '../../../../../../components/Loader/Loader';\n\n// components\nimport SchedulerDay from './components/SchedulerDay/SchedulerDay';\nimport GridLayout from './components/GridLayout/GridLayout';\nimport GridTable from './components/GridTable/GridTable';\n\nconst SchedulerTable = () => {\n  const {\n    shouldLoad,\n    rooms,\n    hours,\n    tableRows,\n    tableColumns,\n    days,\n    appointments,\n    handleAppointmentDrag,\n    onAppointmentClick,\n  } = useSchedulerTable();\n\n  if (shouldLoad) {\n    return (\n      <div className=\"scheduler\">\n        <Loader />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"scheduler\">\n      <div className=\"scheduler__header\">\n        <div />\n        <div>\n          <table>\n            <tbody>\n              <tr>\n                {rooms.map(({ title }: any) => (\n                  <td\n                    key={title}\n                    style={{ width: `calc(100% / ${rooms.length})` }}\n                  >\n                    {title}\n                  </td>\n                ))}\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <div className=\"scheduler__body\">\n        <div className=\"scheduler__dayBar\">\n          {days.map((item: any) => (\n            <SchedulerDay day={item} hours={hours} key={uuidv4()} />\n          ))}\n        </div>\n        <div className=\"scheduler__appointments\">\n          <GridTable rows={tableRows} columns={tableColumns} />\n          <GridLayout\n            appointments={appointments}\n            cols={tableColumns.length}\n            handleDrag={handleAppointmentDrag}\n            handleClick={onAppointmentClick}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SchedulerTable;\n","/* eslint-disable object-curly-newline */\n/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable import/prefer-default-export */\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport fetchAppointments from '../../../../../../actions/fetchAppointments';\nimport fetchCalendarCard from '../../../../../../actions/fetchCalendarCard';\nimport fetchSchedulerSettings from '../../../../../../actions/fetchSchedulerSettings';\nimport { setSelectedOldAppointment } from '../../../../../../store/scheduler/actions';\nimport { State } from '../../../../../../store/types';\nimport formatAppointmentDate from './utils/formatAppointmentDate';\nimport moveCalendarCard from '../../../../../../actions/moveCalendarCard';\n\nexport const useSchedulerTable = () => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.token);\n  const { options, isLoading, appointments } = useSelector(\n    (state: State) => state.scheduler\n  );\n\n  useEffect(() => {\n    if (token && !isLoading) {\n      fetchSchedulerSettings(dispatch, token);\n      fetchAppointments(dispatch, token);\n    }\n  }, [token]);\n\n  const rooms = useMemo(() => options?.rooms, [options]);\n  const hours = useMemo(() => options?.work_time, [options]);\n\n  const shouldLoad = useMemo(() => isLoading || !options, [\n    isLoading,\n    rooms,\n    hours,\n  ]);\n\n  const tableColumns = useMemo(() => new Array(rooms?.length || 0).fill(1), [\n    rooms,\n  ]);\n\n  const days = useMemo(() => options?.day_and_date, [options]);\n\n  const tableRows = useMemo(\n    () => new Array(hours?.length * days?.length || 0).fill(1),\n    [hours]\n  );\n\n  const handleAppointmentDrag = useCallback(\n    (appointment) => {\n      const { year, date, time, room } = formatAppointmentDate(\n        hours,\n        rooms,\n        days,\n        appointment.y,\n        appointment.x\n      );\n\n      const date_time = `${year}.${date}. ${time}`;\n\n      const data = {\n        date_time,\n        room_id: room,\n      };\n\n      if (token) {\n        moveCalendarCard(dispatch, token, data, appointment.i);\n      }\n    },\n    [hours, days, rooms, days]\n  );\n\n  const onAppointmentClick = useCallback(\n    async ({ x, y, i }: any) => {\n      const payload = formatAppointmentDate(hours, rooms, days, y, x);\n\n      if (token) {\n        await fetchCalendarCard(dispatch, token, i);\n      }\n\n      dispatch(\n        setSelectedOldAppointment({\n          ...payload,\n          i,\n        })\n      );\n    },\n    [hours, rooms, days]\n  );\n\n  return {\n    shouldLoad,\n    rooms,\n    hours,\n    tableRows,\n    tableColumns,\n    days,\n    appointments,\n    handleAppointmentDrag,\n    onAppointmentClick,\n  };\n};\n","import React from 'react';\nimport './index.scss';\n\nconst SchedulerFilter = () => (\n  <div className=\"scheduler__filter\">Filter block</div>\n);\n\nexport default SchedulerFilter;\n","import React from 'react';\nimport './index.scss';\nimport MModal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\ntype Props = {\n  open: boolean;\n  handleClose: () => void;\n  success: boolean;\n  message: string;\n};\n\n// eslint-disable-next-line prettier/prettier\nconst Modal = ({\n  open, handleClose, success, message\n}: Props) => (\n  <MModal\n    className=\"modal-container\"\n    open={open}\n    onClose={handleClose}\n    closeAfterTransition\n    BackdropComponent={Backdrop}\n    BackdropProps={{\n      timeout: 500,\n    }}\n  >\n    <Fade in={open}>\n      <div className={`modal ${success ? 'modal-success' : 'modal-failed'}`}>\n        <p className=\"message\">{message}</p>\n      </div>\n    </Fade>\n  </MModal>\n);\n\nexport default Modal;\n","/* eslint-disable react/require-default-props */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/no-unused-prop-types */\nimport React, { useState, memo, useEffect } from 'react';\nimport './index.scss';\n\ntype Button = {\n  id: number;\n  title: string;\n};\n\ntype Props = {\n  buttons: Button[];\n  unicId: string;\n  onChange: (id: number) => void;\n  selected?: number | null;\n};\n\nexport const RadioButtonsGroup = ({\n  buttons,\n  onChange,\n  selected,\n  unicId,\n}: Props) => {\n  const [selectedValue, setSelectedValue] = useState(selected || buttons[0].id);\n\n  useEffect(() => {\n    setSelectedValue(selected || buttons[0].id);\n  }, [selected]);\n\n  const handleChange = (id: number) => {\n    onChange(id);\n  };\n\n  return (\n    <div className=\"radio-buttons-group\">\n      {buttons.map(({ id, title }: Button) => (\n        <div\n          className={`radio-buttons-group__element ${\n            buttons.length === 1 ? 'edit' : ''\n          }`}\n        >\n          <input\n            type=\"radio\"\n            id={unicId + title}\n            value={id}\n            checked={selectedValue === id}\n            onChange={() => handleChange(id)}\n            className=\"input\"\n          />\n          <label htmlFor={unicId + title} className=\"label\">\n            {title}\n          </label>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioButtonsGroup);\n","/* eslint-disable object-curly-newline */\n/* eslint-disable no-unused-vars */\nimport React, { useState, memo, useEffect } from 'react';\nimport './index.scss';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\ntype Data = {\n  id: number;\n  title: string;\n};\n\ntype Props = {\n  onChange: (value: string) => void;\n  data: Data[];\n  label: string;\n  selectedValue?: string | null | number;\n  disabled?: boolean;\n};\n\nconst CustomSelect = ({\n  onChange,\n  data,\n  label,\n  selectedValue,\n  disabled,\n}: Props) => {\n  const [selected, setSelected] = useState(selectedValue || '');\n\n  useEffect(() => {\n    setSelected(selectedValue || '');\n  }, [selectedValue]);\n\n  const handleChange = (event: any) => {\n    const val = event.target.value;\n    setSelected(val);\n    onChange(val);\n  };\n\n  return (\n    <FormControl variant=\"outlined\" className=\"customSelect\">\n      <InputLabel>{label}</InputLabel>\n      <Select\n        value={selected}\n        onChange={handleChange}\n        disabled={disabled || data.length === 0}\n      >\n        <MenuItem value=\"\">\n          <em>Выбрать</em>\n        </MenuItem>\n        {data.map(({ id, title }: Data) => (\n          <MenuItem value={id} key={id}>\n            {title}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default memo(CustomSelect);\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport './index.scss';\n\ntype Props = {\n  onClick: () => void;\n  disabled?: boolean;\n};\n\nconst AddFormButton = ({ onClick, disabled }: Props) => {\n  const handleClick = () => {\n    if (disabled) return;\n    onClick();\n  };\n\n  return (\n    <div\n      className={`add-form-button ${disabled ? 'disabled' : ''}`}\n      onClick={handleClick}\n      onKeyPress={handleClick}\n    >\n      <img src=\"/icons/plus.svg\" alt=\"plus\" />\n    </div>\n  );\n};\n\nexport default AddFormButton;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable react/react-in-jsx-scope */\nimport React, { useState, useEffect } from 'react';\nimport './index.scss';\nimport { TextField } from '@material-ui/core';\n\ntype Props = {\n  label: string;\n  onChange: (value: string) => void;\n  value?: string | number | null;\n  type?: string;\n  disabled?: boolean;\n};\n\nconst CustomInput = ({\n  label,\n  onChange,\n  value = '',\n  type = 'string',\n  disabled,\n}: Props) => {\n  const [text, setText] = useState(value || '');\n\n  useEffect(() => {\n    setText(value || '');\n  }, [value]);\n\n  const handleChange = (event: any) => {\n    setText(event.target.value);\n    onChange(event.target.value);\n  };\n\n  return (\n    <TextField\n      label={label}\n      variant=\"outlined\"\n      value={text}\n      onChange={handleChange}\n      type={type}\n      className=\"custom-input\"\n      disabled={disabled || false}\n    />\n  );\n};\n\nexport default CustomInput;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport './index.scss';\n\ntype Props = {\n  onClick: (index: number) => void;\n  index: number;\n  disabled?: boolean;\n};\n\nconst RemoveFormButton = ({ onClick, index, disabled }: Props) => {\n  const handleClick = () => {\n    if (disabled) return;\n    onClick(index);\n  };\n\n  return (\n    <div\n      className={`remove-form-button ${disabled ? 'disabled' : ''}`}\n      onClick={handleClick}\n      onKeyPress={() => onClick(index)}\n    >\n      <img src=\"/icons/minus.svg\" alt=\"minus\" />\n    </div>\n  );\n};\n\nexport default RemoveFormButton;\n","/* eslint-disable react/destructuring-assignment */\nimport React, { memo } from 'react';\nimport './index.scss';\nimport AddFormButton from '../../../../../../../../../../components/AddFormButton';\nimport CustomInput from '../../../../../../../../../../components/CustomInput/CustomInput';\nimport RemoveFormButton from '../../../../../../../../../../components/RemoveFormButton';\nimport { Props, useClients } from './useClients';\n\nconst Clients = (props: Props) => {\n  const meta = useClients(props);\n\n  return (\n    <div className=\"mv12\">\n      {props.clients.map((item, index) => (\n        <div className=\"clients__item mv12\">\n          <CustomInput\n            label=\"ПІБ\"\n            value={item.full_name}\n            onChange={(val) => meta.onNameChange(index, val)}\n            disabled={props.disabled || false}\n          />\n\n          <div className=\"mv12 df-jc-sb\">\n            <CustomInput\n              label=\"Номер телефону\"\n              value={item.phone}\n              onChange={(val) => meta.onPhoneChange(index, val)}\n              disabled={props.disabled || false}\n            />\n\n            {props.clients.length > 1 && (\n              <div style={{ marginLeft: '12px' }}>\n                <RemoveFormButton\n                  onClick={props.onRemove}\n                  index={index}\n                  disabled={props.disabled || false}\n                />\n              </div>\n            )}\n\n            {index === props.clients.length - 1 && (\n              <div style={{ marginLeft: '12px' }}>\n                <AddFormButton\n                  onClick={props.onAdd}\n                  disabled={props.disabled || false}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(Clients);\n","import { useCallback } from 'react';\nimport { CodeFixAction } from 'typescript';\nimport { ClientItem } from '../../../../../../../../../../types';\n\nexport type Props = {\n  clients: ClientItem[];\n  onChange: (index: number, value: ClientItem) => void;\n  onAdd: () => void;\n  onRemove: (index: number) => void;\n  disabled?: boolean;\n};\n\nexport const useClients = ({ onChange, clients }: Props) => {\n  const onPhoneChange = useCallback(\n    (index: number, value: string) => {\n      onChange(index, {\n        ...clients[index],\n        phone: value,\n      });\n    },\n    [clients]\n  );\n\n  const onNameChange = useCallback(\n    (index: number, value: string) => {\n      onChange(index, {\n        ...clients[index],\n        full_name: value,\n      });\n    },\n    [clients]\n  );\n\n  return { onPhoneChange, onNameChange };\n};\n","/* eslint-disable prettier/prettier */\n/* eslint-disable react/button-has-type */\nimport React from 'react';\nimport './index.scss';\n\ntype Props = {\n  label: string;\n  onClick: () => void;\n  disabled: boolean;\n  className?: string;\n};\n\nconst PrimaryButton = ({\n  label, onClick, disabled, className\n}: Props) => (\n  <button\n    className={`primary-button ${disabled ? 'disabled' : ''} ${\n      className || ''\n    }`}\n    onClick={onClick}\n    disabled={disabled}\n  >\n    {label}\n  </button>\n);\n\nexport default PrimaryButton;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable prettier/prettier */\nimport React, { useEffect, useState, memo } from 'react';\nimport { FormControlLabel, Switch } from '@material-ui/core';\nimport './index.scss';\n\ntype Props = {\n  label: string\n  onChange: (val: boolean) => void;\n  selected: boolean;\n  disabled?: boolean;\n};\n\nconst CustomSwitch = ({\n  label,\n  onChange,\n  selected,\n  disabled\n}: Props) => {\n  const [value, setValue] = useState(selected);\n\n  const handleChange = (event: any) => {\n    setValue(event.target.checked);\n    onChange(event.target.checked);\n  };\n\n  useEffect(() => {\n    setValue(selected);\n  }, [selected]);\n\n  return (\n    <FormControlLabel\n      control={(\n        <Switch\n          checked={value}\n          onChange={handleChange}\n          name=\"checkedB\"\n          color=\"primary\"\n        />\n      )}\n      label={label}\n      labelPlacement=\"start\"\n      className=\"custom-switch\"\n      disabled={disabled || false}\n    />\n  );\n};\n\nexport default memo(CustomSwitch);\n","/* eslint-disable prettier/prettier */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable no-unused-vars */\nimport React, { memo } from 'react';\nimport './index.scss';\nimport AddFormButton from '../../../../../../../../../../components/AddFormButton';\nimport CustomInput from '../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../components/CustomSelect';\nimport CustomSwitch from '../../../../../../../../../../components/CustomSwitch';\nimport RadioButtonsGroup from '../../../../../../../../../../components/RadioButtonsGroup';\nimport RemoveFormButton from '../../../../../../../../../../components/RemoveFormButton';\nimport { ImmovableItem } from '../../../../../../../../../../types';\nimport { useImmovableContainer, Props } from './useImmovableContainer';\n\nconst ImmovableContainer = (props: Props) => {\n  const meta = useImmovableContainer(props);\n  return (\n    <div className=\"mv12 immovables__group\">\n      {props.immovables.map((item: ImmovableItem, index: number) => (\n        <div className=\"immovables__item mv12\">\n          <RadioButtonsGroup\n            buttons={\n              props.disabled\n                ? meta.contracts.filter(\n                  ({ id }: any) => id === (item.contract_type_id || meta.contracts[0].id)\n                )\n                : meta.contracts\n            }\n            onChange={(val) => meta.onContractChange(index, val)}\n            selected={item.contract_type_id}\n            unicId={`contract-${index}`}\n          />\n\n          <div className=\"mv12\">\n            <CustomSelect\n              onChange={(val) => meta.onBuildingChange(index, val)}\n              data={meta.building}\n              label=\"Будинок\"\n              selectedValue={item.building_id}\n              disabled={props.disabled || false}\n            />\n          </div>\n\n          <RadioButtonsGroup\n            buttons={\n              props.disabled\n                ? meta.immovableTypes.filter(\n                  ({ id }: any) => id === (item.imm_type_id || meta.immovableTypes[0].id)\n                )\n                : meta.immovableTypes\n            }\n            onChange={(val) => meta.onImmovableTypeChange(index, val)}\n            selected={item.imm_type_id}\n            unicId={`types-${index}`}\n          />\n\n          <div className=\"mv12\">\n            <CustomSwitch\n              label=\"Банк\"\n              onChange={(val) => meta.onBankChange(index, val)}\n              selected={item.bank}\n              disabled={props.disabled}\n            />\n          </div>\n\n          <div className=\"mv12\">\n            <CustomSwitch\n              label=\"Довіреність\"\n              onChange={(val) => meta.onProxyChange(index, val)}\n              selected={item.proxy}\n              disabled={props.disabled}\n            />\n          </div>\n\n          <div className=\"mv12 df-jc-sb\">\n            <CustomInput\n              key=\"test\"\n              label=\"Номер приміщення\"\n              onChange={(val) => meta.onImmNumChange(index, val)}\n              value={item.imm_number}\n              disabled={props.disabled}\n            />\n\n            {props.immovables.length > 1 && (\n              <div style={{ marginLeft: '12px' }}>\n                <RemoveFormButton\n                  onClick={props.onRemove}\n                  index={index}\n                  disabled={props.disabled}\n                />\n              </div>\n            )}\n\n            {index === props.immovables.length - 1 && (\n              <div style={{ marginLeft: '12px' }}>\n                <AddFormButton\n                  onClick={props.onAdd}\n                  disabled={props.disabled}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(ImmovableContainer);\n","import { useMemo, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport { State } from '../../../../../../../../../../store/types';\nimport {\n  ImmovableItem,\n  ImmovableItems,\n} from '../../../../../../../../../../types';\n\nexport type Props = {\n  immovables: ImmovableItems;\n  onChange: (index: number, value: ImmovableItem) => void;\n  onAdd: () => void;\n  onRemove: (index: number) => void;\n  disabled?: boolean;\n};\n\nexport const useImmovableContainer = ({ immovables, onChange }: Props) => {\n  const { options, developersInfo } = useSelector(\n    (state: State) => state.scheduler\n  );\n\n  const building = useMemo(() => developersInfo?.building || [], [\n    developersInfo,\n  ]);\n\n  const contracts = useMemo(() => options?.form_data.contract_type, [options]);\n\n  const immovableTypes = useMemo(() => options?.form_data.immovable_type, [\n    options,\n  ]);\n\n  // onChange functions\n  const onContractChange = useCallback(\n    (index: number, id: number) => {\n      onChange(index, {\n        ...immovables[index],\n        contract_type_id: id,\n      });\n    },\n    [immovables]\n  );\n\n  const onBuildingChange = useCallback(\n    (index: number, id: string) => {\n      onChange(index, {\n        ...immovables[index],\n        building_id: +id,\n      });\n    },\n    [immovables]\n  );\n\n  const onImmovableTypeChange = useCallback(\n    (index: number, id: number) => {\n      onChange(index, {\n        ...immovables[index],\n        imm_type_id: id,\n      });\n    },\n    [immovables]\n  );\n\n  const onBankChange = useCallback(\n    (index: number, val: boolean) => {\n      onChange(index, {\n        ...immovables[index],\n        bank: val,\n      });\n    },\n    [immovables]\n  );\n\n  const onProxyChange = useCallback(\n    (index: number, val: boolean) => {\n      onChange(index, {\n        ...immovables[index],\n        proxy: val,\n      });\n    },\n    [immovables]\n  );\n\n  const onImmNumChange = useCallback(\n    (index: number, val: string) => {\n      onChange(index, {\n        ...immovables[index],\n        imm_number: +val,\n      });\n    },\n    [immovables]\n  );\n\n  return {\n    building,\n    contracts,\n    immovableTypes,\n    onContractChange,\n    onBuildingChange,\n    onImmovableTypeChange,\n    onBankChange,\n    onProxyChange,\n    onImmNumChange,\n  };\n};\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getDeveloperInfo(token: string, id: number) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/filter/developer/info/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data.data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import getDeveloperInfo from '../services/getDeveloperInfo';\nimport { setDevelopersInfo } from '../store/scheduler/actions';\n\nconst fetchCalendarCard = async (dispatch: any, token: string, id: number) => {\n  const data = await getDeveloperInfo(token, id);\n  dispatch(setDevelopersInfo(data));\n};\n\nexport default fetchCalendarCard;\n","import { ClientItem, ImmovableItem } from '../../../../../../../../types';\n\nexport type ImmovableItemKey = keyof ImmovableItem;\n\nexport const immovableItem: ImmovableItem = {\n  contract_type_id: null,\n  building_id: null,\n  imm_type_id: null,\n  imm_number: null,\n  bank: false,\n  proxy: false,\n};\n\nexport const clientItem: ClientItem = {\n  phone: null,\n  full_name: null,\n};\n","import { NewCard } from '../types';\nimport { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function createNewCard(token: string, bodyData: NewCard) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import createNewCardService from '../services/createNewCard';\nimport { addNewAppointment, setModalInfo } from '../store/scheduler/actions';\nimport { NewCard } from '../types';\n\nconst createNewCard = async (dispatch: any, token: string, data: NewCard) => {\n  const res = await createNewCardService(token, data);\n\n  dispatch(\n    setModalInfo({\n      open: true,\n      success: res.success,\n      message: res.message,\n    })\n  );\n\n  if (res.success) {\n    dispatch(addNewAppointment(res.data));\n  }\n\n  return { success: res.success };\n};\n\nexport default createNewCard;\n","import { NewCard } from '../types';\nimport { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function editCalendarCard(\n  token: string,\n  bodyData: NewCard,\n  id: number\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'PUT',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import editCalendarCardService from '../services/editCalendarCard';\nimport { setEditAppointmens, setModalInfo } from '../store/scheduler/actions';\nimport { NewCard } from '../types';\n\nconst editCalendarCard = async (\n  dispatch: any,\n  token: string,\n  bodyData: NewCard,\n  id: number\n) => {\n  const { success, message, data } = await editCalendarCardService(\n    token,\n    bodyData,\n    id\n  );\n\n  dispatch(\n    setModalInfo({\n      open: true,\n      success,\n      message,\n    })\n  );\n\n  if (success) {\n    dispatch(setEditAppointmens(data));\n  }\n};\n\nexport default editCalendarCard;\n","/* eslint-disable indent */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React, { memo } from 'react';\nimport RadioButtonsGroup from '../../../../../../../../components/RadioButtonsGroup';\nimport CustomSelect from '../../../../../../../../components/CustomSelect';\nimport './index.scss';\nimport Clients from './components/Clients/Clients';\nimport PrimaryButton from '../../../../../../../../components/PrimaryButton';\nimport Loader from '../../../../../../../../components/Loader/Loader';\nimport ImmovableContainer from './components/ImmovableContainer';\nimport { useForm, Props } from './useForm';\n\nconst SchedulerForm = (props: Props) => {\n  const meta = useForm(props);\n\n  if (meta.shouldLoad) {\n    return (\n      <div className=\"scheduler__form schedulerForm\">\n        <Loader />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"schedulerForm\">\n      <div className=\"schedulerForm__forms\">\n        <div className=\"schedulerForm__header\">\n          <p className=\"title\">\n            {meta.insideEdit || props.edit\n              ? `Запис № ${props.selectedCard.i}`\n              : 'Новий запис'}\n          </p>\n          {meta.insideEdit ? (\n            <img\n              src=\"/icons/x.svg\"\n              alt=\"clear icon\"\n              className=\"clear-icon\"\n              onClick={meta.onCloseForm}\n            />\n          ) : (\n            <img\n              src=\"/icons/clear.svg\"\n              alt=\"clear icon\"\n              className=\"clear-icon\"\n              onClick={meta.onClearAll}\n            />\n          )}\n        </div>\n\n        <div className=\"mv12\">\n          <RadioButtonsGroup\n            buttons={\n              meta.insideEdit\n                ? meta.notaries.filter(\n                    ({ id }: any) => id === meta.selectedNotaryId\n                  )\n                : meta.notaries\n            }\n            onChange={meta.onNotaryChange}\n            selected={meta.selectedNotaryId}\n            unicId=\"notaries\"\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomSelect\n            label=\"Забудовник\"\n            data={meta.developers}\n            onChange={meta.onDeveloperChange}\n            selectedValue={meta.selectedDeveloperId}\n            disabled={meta.insideEdit || false}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomSelect\n            onChange={meta.onRepresentativeChange}\n            data={meta.representative}\n            label=\"Підписант\"\n            selectedValue={meta.selectedDevRepresentativeId}\n            disabled={meta.insideEdit || false}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomSelect\n            onChange={meta.onManagerChange}\n            data={meta.manager}\n            label=\"Менеджер\"\n            selectedValue={meta.selecedDevManagerId}\n            disabled={meta.insideEdit || false}\n          />\n        </div>\n\n        <ImmovableContainer\n          immovables={meta.immovables}\n          onChange={meta.onImmovablesChange}\n          onAdd={meta.onAddImmovables}\n          onRemove={meta.onRemoveImmovable}\n          disabled={meta.insideEdit || false}\n        />\n\n        <Clients\n          clients={meta.clients}\n          onChange={meta.onClientsChange}\n          onAdd={meta.onAddClients}\n          onRemove={meta.onRemoveClient}\n          disabled={meta.insideEdit || false}\n        />\n\n        <div className=\"mv12\">\n          {meta.insideEdit && (\n            <PrimaryButton\n              label=\"Редагувати\"\n              onClick={() => meta.setEdit(false)}\n              disabled={props.edit ? false : !meta.activeAddButton}\n              className=\"schedulerForm__editButton\"\n            />\n          )}\n\n          {!meta.insideEdit && (\n            <PrimaryButton\n              label={`${props.edit ? 'Зберегти' : 'Створити'}`}\n              onClick={meta.onFormCreate}\n              disabled={!meta.activeAddButton}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SchedulerForm);\n","/* eslint-disable prettier/prettier */\n/* eslint-disable arrow-body-style */\nimport {\n  useMemo,\n  useState,\n  useCallback,\n  useEffect\n} from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { State } from '../../../../../../../../store/types';\nimport fetchDeveloperInfo from '../../../../../../../../actions/fetchDeveloperInfo';\n\nimport {\n  setDevelopersInfo,\n  setEditAppointmentData,\n  setSelectedNewAppointment,\n  setSelectedOldAppointment\n} from '../../../../../../../../store/scheduler/actions';\n\nimport { clientItem, immovableItem } from './types';\nimport createNewCard from '../../../../../../../../actions/createNewCard';\nimport editCalendarCard from '../../../../../../../../actions/editCalendarCard';\n\nimport {\n  ClientItem,\n  ImmovableItem,\n  ImmovableItems,\n  NewCard\n} from '../../../../../../../../types';\n\nexport type Props = {\n  selectedCard: any,\n  initialValues?: any,\n  edit?: boolean,\n}\n\nexport const useForm = ({ selectedCard, initialValues, edit }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.token);\n  const { options, developersInfo, isLoading } = useSelector(\n    (state: State) => state.scheduler\n  );\n  const [insideEdit, setEdit] = useState<boolean>(edit || false);\n\n  // Form State\n  const [notary, setNotary] = useState<number | null>(initialValues?.card.notary_id || null);\n  const [devCompanyId, setDevCompanyId] = useState<number | null>(null);\n  const [devRepresentativeId, setDevRepresentativeId] = useState<number | null>(null);\n  const [devManagerId, setDevManagerId] = useState<number | null>(null);\n  const [immovables, setImmovables] = useState<ImmovableItems>([immovableItem]);\n  const [clients, setClients] = useState<ClientItem[]>([clientItem]);\n\n  // Form Memo Values\n  const shouldLoad = useMemo(() => isLoading || !options, [options, isLoading]);\n\n  const notaries = useMemo(() => options?.form_data.notary, [options]);\n\n  const developers = useMemo(() => options?.form_data.developer, [options]);\n\n  const manager = useMemo(() => developersInfo?.manager || [], [\n    developersInfo,\n  ]);\n\n  const representative = useMemo(() => developersInfo?.representative || [], [\n    developersInfo,\n  ]);\n\n  // Form onChange functions\n  const onNotaryChange = useCallback((value) => {\n    setNotary(value);\n  }, []);\n\n  useEffect(() => {\n    if (initialValues) {\n      setEdit(true);\n      setNotary(initialValues.card.notary_id);\n      setDevCompanyId(initialValues.card.dev_company_id);\n      setDevRepresentativeId(initialValues.card.dev_representative_id);\n      setDevManagerId(initialValues.card.dev_manager_id);\n      setImmovables(\n        initialValues.immovables.length === 0\n          ? [immovableItem]\n          : initialValues.immovables\n      );\n      setClients(\n        initialValues.clients.length === 0\n          ? [clientItem]\n          : initialValues.clients\n      );\n    }\n\n    if (initialValues?.card.dev_company_id && token) {\n      fetchDeveloperInfo(dispatch, token, initialValues.card.dev_company_id);\n    }\n  }, [initialValues]);\n\n  const onDeveloperChange = useCallback(\n    (value) => {\n      setDevCompanyId(value);\n\n      if (!value) {\n        dispatch(setDevelopersInfo({}));\n      }\n\n      if (token) {\n        fetchDeveloperInfo(dispatch, token, value);\n      }\n    },\n    [token, devCompanyId]\n  );\n\n  const onRepresentativeChange = useCallback(\n    (value) => {\n      setDevRepresentativeId(value);\n    },\n    [devRepresentativeId]\n  );\n\n  const onManagerChange = useCallback(\n    (value) => {\n      setDevManagerId(value);\n    },\n    [devManagerId]\n  );\n\n  const onImmovablesChange = useCallback(\n    (index: number, value: any) => {\n      immovables[index] = value;\n      setImmovables([...immovables]);\n    },\n    [immovables]\n  );\n\n  const onClientsChange = useCallback(\n    (index: number, value: ClientItem) => {\n      clients[index] = value;\n      setClients([...clients]);\n    },\n    [clients]\n  );\n\n  // Form CTA\n  const onClearAll = useCallback(() => {\n    setNotary(null);\n    setDevCompanyId(null);\n    setDevRepresentativeId(null);\n    setDevManagerId(null);\n    setImmovables([immovableItem]);\n    setClients([clientItem]);\n  }, []);\n\n  const onAddImmovables = useCallback(() => {\n    setImmovables([...immovables, immovableItem]);\n  }, [immovables]);\n\n  const onRemoveImmovable = useCallback((index: number) => {\n    setImmovables((prev) => prev.filter((_, mapIndex) => mapIndex !== index));\n  }, [immovables]);\n\n  const onAddClients = useCallback(() => {\n    setClients([...clients, clientItem]);\n  }, [clients]);\n\n  const onRemoveClient = useCallback((index: number) => {\n    setClients((prev) => prev.filter((_, mapIndex) => mapIndex !== index));\n  }, [clients]);\n\n  const activeAddButton = useMemo(() => {\n    return Boolean(devCompanyId)\n    && immovables.length\n    && immovables.every((item: ImmovableItem) => item.building_id && item.imm_number)\n    && selectedCard;\n  }, [devCompanyId, immovables, selectedCard]);\n\n  const onFormCreate = useCallback(() => {\n    const date_time = `${selectedCard.year}.${selectedCard.date}. ${selectedCard.time}`;\n\n    const formatImmovables = immovables.map((item: ImmovableItem) => ({\n      ...item,\n      contract_type_id: item.contract_type_id || options.form_data.immovable_type[0].id,\n      imm_type_id: item.imm_type_id || options.form_data.immovable_type[0].id,\n      imm_num: item.imm_number\n    }));\n\n    const data: NewCard = {\n      immovables: formatImmovables,\n      clients,\n      date_time,\n      dev_company_id: devCompanyId,\n      dev_representative_id: devRepresentativeId,\n      dev_manager_id: devManagerId,\n      room_id: selectedCard.room,\n      notary_id: notary || notaries[0].id,\n    };\n\n    if (token) {\n      if (edit) {\n        editCalendarCard(dispatch, token, data, selectedCard.i);\n        setEdit(true);\n      } else {\n        createNewCard(dispatch, token, data)\n          .then(({ success }: any) => {\n            if (success) {\n              onClearAll();\n            }\n          });\n        dispatch(setSelectedNewAppointment(null));\n      }\n    }\n  }, [\n    devCompanyId,\n    devRepresentativeId,\n    devManagerId,\n    notary,\n    immovables,\n    clients,\n    edit,\n    selectedCard,\n  ]);\n\n  const onCloseForm = useCallback(() => {\n    dispatch(setSelectedOldAppointment(null));\n    dispatch(setEditAppointmentData(null));\n  }, []);\n\n  return {\n    shouldLoad,\n    notaries,\n    representative,\n    developers,\n    manager,\n    selectedNotaryId: notary,\n    selectedDeveloperId: devCompanyId,\n    selectedDevRepresentativeId: devRepresentativeId,\n    selecedDevManagerId: devManagerId,\n    immovables,\n    clients,\n    activeAddButton,\n    insideEdit,\n    onNotaryChange,\n    onDeveloperChange,\n    onRepresentativeChange,\n    onManagerChange,\n    onImmovablesChange,\n    onAddImmovables,\n    onRemoveImmovable,\n    onRemoveClient,\n    onClientsChange,\n    onAddClients,\n    onClearAll,\n    onFormCreate,\n    onCloseForm,\n    setEdit,\n  };\n};\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport './index.scss';\nimport Modal from '../../../../../../components/Modal';\nimport Form from './components/Form';\nimport { useSchedulerForm } from './useSchedulerForm';\n\nconst SchedulerForm = () => {\n  const meta = useSchedulerForm();\n\n  return (\n    <div className=\"schedulerForm scheduler__form\">\n      <div className=\"schedulerForm__tabs\">\n        <div\n          className={`item ${meta.selectedTab === 0 ? 'selected' : ''}`}\n          onClick={() => meta.setSelectedTab(0)}\n        >\n          {meta.newSelectedAppointment\n            ? `${meta.newSelectedAppointment.day} ${meta.newSelectedAppointment.time} ${meta.newSelectedAppointment.date}`\n            : 'Виберіть дату'}\n        </div>\n\n        {meta.oldSelectedAppointment && meta.editAppointmentData && (\n          <div\n            className={`item ${meta.selectedTab === 1 ? 'selected' : ''}`}\n            onClick={() => meta.setSelectedTab(1)}\n          >\n            {`${meta.oldSelectedAppointment.day} ${meta.oldSelectedAppointment.time} ${meta.oldSelectedAppointment.date}`}\n          </div>\n        )}\n      </div>\n\n      {meta.selectedTab === 0 && (\n        <Form selectedCard={meta.newSelectedAppointment} />\n      )}\n\n      {meta.selectedTab === 1 && meta.editAppointmentData && (\n        <Form\n          selectedCard={meta.oldSelectedAppointment}\n          initialValues={meta.editAppointmentData}\n          edit\n        />\n      )}\n\n      <Modal {...meta.modalProps} />\n    </div>\n  );\n};\n\nexport default SchedulerForm;\n","/* eslint-disable prettier/prettier */\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useMemo, useState, useEffect } from 'react';\nimport { State } from '../../../../../../store/types';\nimport { setModalInfo } from '../../../../../../store/scheduler/actions';\n\nexport const useSchedulerForm = () => {\n  const [selectedTab, setSelectedTab] = useState(0);\n\n  const dispatch = useDispatch();\n  const newSelectedAppointment = useSelector(\n    (state: State) => state.scheduler.newSelectedAppointment\n  );\n  const oldSelectedAppointment = useSelector(\n    (state: State) => state.scheduler.oldSelectedAppointment\n  );\n  const editAppointmentData = useSelector(\n    (state: State) => state.scheduler.editAppointmentData\n  );\n\n  useEffect(() => {\n    setSelectedTab(editAppointmentData ? 1 : 0);\n  }, [editAppointmentData]);\n\n  useEffect(() => {\n    setSelectedTab(0);\n  }, [newSelectedAppointment]);\n\n  const modalInfo = useSelector((state: State) => state.scheduler.modalInfo);\n\n  const modalProps = useMemo(\n    () => ({\n      ...modalInfo,\n      handleClose: () => dispatch(\n        setModalInfo({\n          ...modalInfo,\n          open: false\n        })\n      ),\n    }),\n    [modalInfo]\n  );\n\n  return {\n    newSelectedAppointment,\n    oldSelectedAppointment,\n    editAppointmentData,\n    modalProps,\n    selectedTab,\n    setSelectedTab\n  };\n};\n","import React from 'react';\nimport './index.scss';\n\n// Components\nimport SchedulerTable from './components/Table/SchedulerTable';\nimport SchedulerFilter from './components/Filter';\nimport SchedulerForm from './components/SchedulerForm';\n\nconst SchedulerContainer = () => (\n  <div className=\"scheduler__container\">\n    <div className=\"scheduler__dataView\">\n      <SchedulerFilter />\n      <SchedulerTable />\n    </div>\n    <SchedulerForm />\n  </div>\n);\n\nexport default SchedulerContainer;\n","import React from 'react';\nimport SchedulerContainer from './components/SchedulerContainer';\n\nconst SchedulerScreen = () => <SchedulerContainer />;\n\nexport default SchedulerScreen;\n","import React from 'react';\nimport './index.scss';\nimport { useApp } from './useApp';\nimport SchedulerScreen from '../Screens/SchedulerScreen';\n\nconst App: React.FC = () => {\n  useApp();\n\n  return <SchedulerScreen />;\n};\n\nexport default App;\n","/* eslint-disable import/prefer-default-export */\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport fetchTag from '../actions/fetchTag';\n\nexport const useApp = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    fetchTag(dispatch);\n  }, []);\n};\n","import { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\nexport type TokenState = {\n  token: null | string;\n};\n\nconst initialState: TokenState = {\n  token: null,\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_TOKEN:\n      return { ...state, token: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\nexport type SchedulerState = {\n  options: any;\n  appointments: any;\n  developersInfo: any;\n  newSelectedAppointment: any;\n  oldSelectedAppointment: any;\n  editAppointmentData: any;\n  isLoading: boolean;\n  modalInfo: {\n    open: boolean;\n    success: boolean;\n    message: string;\n  };\n};\n\nconst initialState: SchedulerState = {\n  options: null,\n  appointments: [],\n  developersInfo: {},\n  newSelectedAppointment: null,\n  oldSelectedAppointment: null,\n  editAppointmentData: null,\n  modalInfo: {\n    open: false,\n    success: false,\n    message: '',\n  },\n  isLoading: false,\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_OPTIONS:\n      return { ...state, options: action.payload };\n    case ACTIONS.SET_APPOINTMENTS:\n      return { ...state, appointments: action.payload };\n    case ACTIONS.ADD_NEW_APPOINTMENT:\n      return {\n        ...state,\n        appointments: [...state.appointments, action.payload],\n      };\n    case ACTIONS.EDIT_APPOINTMENTS:\n      return {\n        ...state,\n        appointments: [\n          ...state.appointments.filter(\n            (item: any) => item.i !== action.payload.i\n          ),\n          action.payload,\n        ],\n      };\n    case ACTIONS.SET_DEVELOPERS_INFO:\n      return { ...state, developersInfo: action.payload };\n    case ACTIONS.SET_IS_LOADING:\n      return { ...state, isLoading: action.payload };\n    case ACTIONS.SET_SELECTED_NEW_APPOINTMENT:\n      return { ...state, newSelectedAppointment: action.payload };\n    case ACTIONS.SET_SELECTED_OLD_APPOINTMENT:\n      return { ...state, oldSelectedAppointment: action.payload };\n    case ACTIONS.SET_EDIT_APPOINTMENT_DATA:\n      return { ...state, editAppointmentData: action.payload };\n    case ACTIONS.SET_MODAL_INFO:\n      return { ...state, modalInfo: { ...action.payload } };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers, createStore } from 'redux';\nimport token from './token/store';\nimport scheduler from './scheduler/store';\n\nconst reducer = combineReducers({\n  token,\n  scheduler,\n});\n\nexport default createStore(reducer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  // eslint-disable-next-line\n  document.getElementById('root')\n);\n"],"sourceRoot":""}