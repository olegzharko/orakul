{"version":3,"sources":["services/Constants.ts","services/utils/requestApi.ts","services/login/Login.ts","services/login/forgotPassword.ts","services/login/resetPassword.ts","store/main/actions.ts","services/createNewCard.ts","services/editCalendarCard.ts","services/getAppointments.ts","services/setSchedulerFilter.ts","services/getCalendarCard.ts","services/getDeveloperInfo.ts","services/getSchedulerFilter.ts","services/getCalendar.ts","services/moveCalendarCard.ts","services/searchAppointments.ts","store/scheduler/actions.ts","components/Header/utils/useDebounce.ts","components/Header/useHeader.ts","components/Header/Header.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/utils/formatAppointmentDate.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/useSchedulerTable.ts","components/Loader/Loader.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/SchedulerDay/SchedulerDay.js","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridLayout/GridLayout.js","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTableCell/GridTableCell.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTableCell/useGridTableCell.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTable/GridTable.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTable/useGridTable.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/SchedulerTable.tsx","components/CustomSelect/CustomSelect.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerFilter/components/Filter/useFilter.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerFilter/components/Filter/Filter.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerFilter/components/QuantityLabel.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerFilter/components/SchedulerLock/useSchedulerLock.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerFilter/components/SchedulerLock/SchedulerLock.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerFilter/SchedulerFilter.tsx","components/Modal/Modal.tsx","components/RadioButtonsGroup/RadioButtonsGroup.tsx","components/AddFormButton/AddFormButton.tsx","components/CustomInput/CustomInput.tsx","components/RemoveFormButton/RemoveFormButton.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/components/Clients/Clients.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/components/Clients/useClients.ts","components/PrimaryButton/PrimaryButton.tsx","components/CustomSwitch/CustomSwitch.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/components/ImmovableContainer/ImmovableContainer.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/components/ImmovableContainer/useImmovableContainer.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/types.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/useForm.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/Form.tsx","components/Modal/useModal.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/SchedulerForm.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/useSchedulerForm.ts","Screens/SchedulerScreen/components/SchedulerContainer/SchedulerContainer.tsx","Screens/SchedulerScreen/SchedulerScreen.tsx","Screens/DashboardScreen/components/DashboardContainer/components/Dashboard/Dashboard.tsx","Screens/DashboardScreen/components/DashboardContainer/components/Filter/components/Contracts/Contracts.tsx","Screens/DashboardScreen/components/DashboardContainer/components/Filter/Filter.tsx","Screens/DashboardScreen/components/DashboardContainer/DashboardContainer.tsx","Screens/DashboardScreen/DashboardScreen.tsx","components/Carousel/Carousel.tsx","components/CustomCheckBox/CustomCheckBox.tsx","components/CustomPasswordInput/CustomPasswordInput.tsx","services/getLoginCarouselImages.ts","Screens/LoginScreen/components/Authorization/useAuthorization.tsx","types.ts","Screens/LoginScreen/components/Authorization/Authorization.tsx","Screens/LoginScreen/components/ForgotPassword/useForgotPassword.ts","Screens/LoginScreen/components/ForgotPassword/ForgotPassword.tsx","Screens/LoginScreen/components/UpdatePassword/UpdatePassword.tsx","Screens/LoginScreen/components/UpdatePassword/useUpdatePassword.ts","Screens/LoginScreen/LoginScreen.tsx","App/App.tsx","App/useApp.ts","store/main/store.ts","store/scheduler/store.ts","store/index.ts","index.tsx"],"names":["DEFAULT_URL","requestApi","options","a","url","method","headers","bodyData","params","body","undefined","Accept","JSON","stringify","fetch","res","json","login","data","console","log","forgotPassword","resetPassword","ACTIONS","setToken","payload","type","setUser","setModalInfo","createNewCard","token","Authorization","editCalendarCard","id","getAppointments","setSchedulerFilter","getCalendarCard","getDeveloperInfo","getSchedulerFilter","getCalendar","moveCalendarCard","searchAppointments","setAppointments","setDevelopersInfo","setSelectedNewAppointment","setSelectedOldAppointment","setEditAppointmentData","setEditAppointmens","setIsLoading","fetchCalendarCard","dispatch","getState","main","user","fetchDeveloperInfo","notDispatch","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useHeader","useDispatch","searchText","setSearchText","count","setCount","text","page","searchAppointmentsServices","success","prev","onSearch","useCallback","e","target","onLogout","localStorage","clear","Header","className","src","alt","placeholder","onChange","onClick","formatAppointmentDate","hours","rooms","days","raw","cell","Math","floor","length","day","date","year","time","room","split","reverse","join","useSchedulerTable","useSelector","state","scheduler","isLoading","appointments","Object","values","useMemo","work_time","shouldLoad","tableColumns","Array","fill","day_and_date","tableRows","handleAppointmentDrag","appointment","y","x","date_time","room_id","i","moveCalendarCardService","onAppointmentClick","Loader","color","SchedulerDay","map","ReactGridLayout","WidthProvider","RGL","GridLayout","cols","handleDrag","handleClick","dragAndDropWidth","setDragAndDropWidth","schedulerLock","$","width","rowHeight","margin","containerPadding","verticalCompact","preventCollision","layout","onDragStop","all","current","currentApp","find","item","isDraggable","style","borderLeft","title","short_info","uuidv4","GridLayoutCell","props","moment","isBefore","useGridTableCell","rowsQuantity","backgroundColor","selected","GridTable","rows","columns","newSelectedAppointment","_","rowIndex","cellIndex","GridTableCell","SchedulerTable","CustomSelect","label","selectedValue","disabled","size","setSelected","FormControl","variant","InputLabel","Select","event","val","MenuItem","memo","useFilter","filterInitialData","readers","reader","notaries","notary","accompanyings","accompanying","contractTypes","contract_type","developers","developer","representative","setRepresentative","shouldRenderFilter","Boolean","selectedNotary","setSelectedNotary","selectedReader","setSelectedReader","selectedAccompanying","setSelectedAccompanying","selectedContractType","setSelectedContractType","selectedDeveloper","setSelectedDeveloper","selectedRepresentative","setSelectedRepresentative","clearAll","then","notary_id","reader_id","giver_id","contract_type_id","developer_id","dev_assistant_id","Filter","meta","whiteSpace","QuantityLabel","useSchedulerLock","SchedulerLock","SchedulerFilter","Modal","open","handleClose","message","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","RadioButtonsGroup","buttons","unicId","setSelectedValue","handleChange","checked","htmlFor","AddFormButton","onKeyPress","CustomInput","setText","TextField","RemoveFormButton","index","Clients","clients","onPhoneChange","phone","onNameChange","full_name","useClients","marginLeft","onRemove","onAdd","PrimaryButton","CustomSwitch","setValue","FormControlLabel","control","Switch","name","labelPlacement","ImmovableContainer","immovables","developersInfo","building","contracts","form_data","immovableTypes","immovable_type","onContractChange","onBuildingChange","building_id","onImmovableTypeChange","imm_type_id","onBankChange","bank","onProxyChange","proxy","onImmNumChange","imm_number","useImmovableContainer","filter","immovableItem","clientItem","useForm","selectedCard","initialValues","edit","insideEdit","setEdit","card","setNotary","devCompanyId","setDevCompanyId","devRepresentativeId","setDevRepresentativeId","devManagerId","setDevManagerId","setImmovables","setClients","manager","onNotaryChange","dev_company_id","dev_representative_id","dev_manager_id","onDeveloperChange","onRepresentativeChange","onManagerChange","onImmovablesChange","onClientsChange","onClearAll","onAddImmovables","onRemoveImmovable","mapIndex","onAddClients","onRemoveClient","activeAddButton","every","onFormCreate","imm_num","editCalendarCardService","createNewCardService","onCloseForm","selectedNotaryId","selectedDeveloperId","selectedDevRepresentativeId","selecedDevManagerId","SchedulerForm","useModal","modalInfo","modalProps","selectedTab","setSelectedTab","oldSelectedAppointment","editAppointmentData","useSchedulerForm","SchedulerContainer","SchedulerScreen","Dashboard","key","quantity","Contracts","DashboardContainer","DashboardScreen","Carousel","images","dots","infinite","speed","arrows","slidesToShow","slidesToScroll","CustomCheckBox","Checkbox","CustomPasswordInput","password","setPassword","showPassword","setShowPassword","OutlinedInput","endAdornment","InputAdornment","position","IconButton","aria-label","onMouseDown","preventDefault","edge","Visibility","VisibilityOff","labelWidth","getLoginCarouselImages","UserTypes","useAuthorization","setImages","email","setEmail","remember","setRemember","handleLogin","setItem","sendLogin","disabledButton","image","fetchImages","autoComplete","onSubmit","to","useForgotPassword","handleReset","forgotPasswordService","ForgotPassword","UpdatePassword","useParams","repeatPassword","setRepeatPassword","handleUpdate","c_password","useUpdatePassword","LoginScreen","path","exact","App","localUser","getItem","parse","useApp","RECEPTION","PRINTER","initialState","reducer","action","combineReducers","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.6f8d8e51.chunk.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\nexport const DEFAULT_URL = 'http://app.synction.space';\n","/* eslint-disable comma-dangle */\ntype RequestOptions = {\n  url: string;\n  method?: 'GET' | 'POST' | 'DELETE' | 'PATCH' | 'PUT';\n  bodyData?: any;\n  headers?: {};\n};\n\nconst requestApi = async (options: RequestOptions) => {\n  // eslint-disable-next-line object-curly-newline\n  const { url, method = 'GET', headers = {}, bodyData } = options;\n\n  const params = {\n    body: undefined as string | undefined,\n    method: method || 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'applicatioin/json',\n      ...headers,\n    },\n  };\n\n  if (bodyData) {\n    params.body = JSON.stringify(bodyData);\n  }\n\n  const res: any = await fetch(url, params);\n  const json: any = await res.json();\n\n  // if (!json.success) {\n  //   const { status, message } = res;\n  //   throw new Error(\n  //     `[${status}, ${message}] Could not fetch on URL (${url}) data:\\n${JSON.stringify(\n  //       json,\n  //       null,\n  //       2\n  //     )}`\n  //   );\n  // }\n\n  return json;\n};\n\nexport default requestApi;\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\ntype BodyData = {\n  email: string;\n  password: string;\n};\n\nexport default async function login(bodyData: BodyData) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/login`,\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\ntype BodyData = {\n  email: string;\n};\n\nexport default async function forgotPassword(bodyData: BodyData) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/password/forgot`,\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\nexport type ResetPasswordType = {\n  token: string;\n  password: string;\n  c_password: string;\n};\n\nexport default async function resetPassword(bodyData: ResetPasswordType) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/password/update`,\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { Dispatch } from 'redux';\nimport getToken from '../../services/getToken';\nimport login from '../../services/login/Login';\nimport forgotPasswordService from '../../services/login/forgotPassword';\nimport resetPasswordService, {\n  ResetPasswordType,\n} from '../../services/login/resetPassword';\n\nexport const ACTIONS = {\n  SET_TOKEN: 'SET_TOKEN',\n  SET_USER: 'SET_USER',\n  SET_LOADING: 'SET_LOADING',\n  SET_MODAL_INFO: 'SET_MODAL_INFO',\n};\n\nexport const setToken = (payload: string) => ({\n  type: ACTIONS.SET_TOKEN,\n  payload,\n});\n\nexport const setLogin = (payload: string) => ({\n  type: ACTIONS.SET_TOKEN,\n  payload,\n});\n\nexport const setUser = (payload: any) => ({\n  type: ACTIONS.SET_USER,\n  payload,\n});\n\nexport const setModalInfo = (payload: any) => ({\n  type: ACTIONS.SET_MODAL_INFO,\n  payload,\n});\n\n// Thunk actions\nexport const fetchToken = () => async (dispatch: Dispatch<any>) => {\n  const token = await getToken();\n  dispatch(setToken(token));\n};\n\nexport const sendLogin = (\n  bodyData: {\n    email: string;\n    password: string;\n  },\n  remember: boolean\n) => async (dispatch: Dispatch<any>) => {\n  const { success, data } = await login(bodyData);\n  if (success) {\n    dispatch(setToken(data.token));\n    dispatch(setUser(data));\n  }\n\n  if (remember) localStorage.setItem('user', JSON.stringify(data));\n};\n\nexport const forgotPassword = ({ email }: { email: string }) => async (\n  dispatch: Dispatch<any>\n) => {\n  const { success, message } = await forgotPasswordService({ email });\n\n  if (success) dispatch(setModalInfo({ success, message, open: true }));\n};\n\nexport const resetPassword = (data: ResetPasswordType) => async (\n  dispatch: Dispatch<any>\n) => {\n  const { success, message } = await resetPasswordService(data);\n\n  if (success) dispatch(setModalInfo({ success, message, open: true }));\n};\n","import { NewCard } from '../types';\nimport { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function createNewCard(token: string, bodyData: NewCard) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { NewCard } from '../types';\nimport { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function editCalendarCard(\n  token: string,\n  bodyData: NewCard,\n  id: number\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'PUT',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getAppointments(token: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data.data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { NewCard } from '../types';\nimport { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function setSchedulerFilter(\n  token: string,\n  bodyData: NewCard\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/filter/sort/calendar`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getCalendarCard(token: string, id: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data.data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getDeveloperInfo(token: string, id: number) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/filter/developer/info/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data.data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getSchedulerFilter(token: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/filter/dropdown`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data.data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getCalendar(token: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/calendar`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data.data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { NewCard } from '../types';\nimport { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function moveCalendarCard(\n  token: string,\n  bodyData: {\n    date_time: string;\n    room_id: number;\n  },\n  id: number\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards/move/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'PUT',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function searchAppointments(\n  token: string,\n  bodyData: {\n    text: string;\n    page: string;\n  }\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/filter/search`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","/* eslint-disable consistent-return */\nimport { Dispatch } from 'react';\nimport { NewCard } from '../../types';\nimport { State } from '../types';\nimport createNewCardService from '../../services/createNewCard';\nimport editCalendarCardService from '../../services/editCalendarCard';\nimport getAppointments from '../../services/getAppointments';\nimport setSchedulerFilter from '../../services/setSchedulerFilter';\nimport getCalendarCard from '../../services/getCalendarCard';\nimport getDeveloperInfo from '../../services/getDeveloperInfo';\nimport getSchedulerFilter from '../../services/getSchedulerFilter';\nimport getCalendar from '../../services/getCalendar';\nimport moveCalendarCardService from '../../services/moveCalendarCard';\nimport searchAppointmentsServices from '../../services/searchAppointments';\nimport { setModalInfo } from '../main/actions';\n\nexport const ACTIONS = {\n  SET_OPTIONS: 'SET_OPTIONS',\n  SET_APPOINTMENTS: 'SET_APPOINTMENTS',\n  SET_DEVELOPERS_INFO: 'SET_DEVELOPERS_INFO',\n  SET_SELECTED_NEW_APPOINTMENT: 'SET_SELECTED_NEW_APPOINTMENT',\n  SET_SELECTED_OLD_APPOINTMENT: 'SET_SELECTED_OLD_APPOINTMENT',\n  SET_EDIT_APPOINTMENT_DATA: 'SET_EDIT_APPOINTMENT_DATA',\n  SET_IS_LOADING: 'SET_IS_LOADING',\n  ADD_NEW_APPOINTMENT: 'ADD_NEW_APPOINTMENT',\n  EDIT_APPOINTMENTS: 'EDIT_APPOINTMENTS',\n  SET_FILTER_INITIAL_DATA: 'SET_FILTER_INITIAL_DATA',\n  SET_SCHEDULER_LOCK: 'SET_SCHEDULER_LOCK',\n};\n\nexport const setSchedulerOptions = (payload: any) => ({\n  type: ACTIONS.SET_OPTIONS,\n  payload,\n});\n\nexport const setAppointments = (payload: any) => ({\n  type: ACTIONS.SET_APPOINTMENTS,\n  payload,\n});\n\nexport const setDevelopersInfo = (payload: any) => ({\n  type: ACTIONS.SET_DEVELOPERS_INFO,\n  payload,\n});\n\nexport const setSelectedNewAppointment = (payload: any) => ({\n  type: ACTIONS.SET_SELECTED_NEW_APPOINTMENT,\n  payload,\n});\n\nexport const setSelectedOldAppointment = (payload: any) => ({\n  type: ACTIONS.SET_SELECTED_OLD_APPOINTMENT,\n  payload,\n});\n\nexport const addNewAppointment = (payload: any) => ({\n  type: ACTIONS.ADD_NEW_APPOINTMENT,\n  payload,\n});\n\nexport const setEditAppointmentData = (payload: any) => ({\n  type: ACTIONS.SET_EDIT_APPOINTMENT_DATA,\n  payload,\n});\n\nexport const setEditAppointmens = (payload: any) => ({\n  type: ACTIONS.EDIT_APPOINTMENTS,\n  payload,\n});\n\nexport const setFilterInitialData = (payload: any) => ({\n  type: ACTIONS.SET_FILTER_INITIAL_DATA,\n  payload,\n});\n\nexport const setSchedulerLock = (payload: boolean) => ({\n  type: ACTIONS.SET_SCHEDULER_LOCK,\n  payload,\n});\n\nexport const setIsLoading = (payload: boolean) => ({\n  type: ACTIONS.SET_IS_LOADING,\n  payload,\n});\n\n// Thunk actions\nexport const createNewCard = (data: NewCard) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const res = await createNewCardService(token, data);\n\n    dispatch(\n      setModalInfo({\n        open: true,\n        success: res.success,\n        message: res.message,\n      })\n    );\n\n    if (res.success) {\n      dispatch(addNewAppointment(res.data));\n    }\n  }\n};\n\nexport const editCalendarCard = (bodyData: NewCard, id: number) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const { success, message, data } = await editCalendarCardService(\n      token,\n      bodyData,\n      id\n    );\n\n    dispatch(\n      setModalInfo({\n        open: true,\n        success,\n        message,\n      })\n    );\n\n    if (success) {\n      dispatch(setEditAppointmens(data));\n    }\n  }\n};\n\nexport const fetchAppointments = () => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    dispatch(setIsLoading(true));\n    const data = await getAppointments(token);\n\n    dispatch(setAppointments(Object.values(data)));\n    dispatch(setIsLoading(false));\n  }\n};\n\nexport const fetchAppointmentsByFilter = (bodyData: any) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const { data, success } = await setSchedulerFilter(token, bodyData);\n\n    if (success) {\n      dispatch(setAppointments(Object.values(data)));\n    }\n  }\n};\n\nexport const fetchCalendarCard = (id: string) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const data = await getCalendarCard(token, id);\n    dispatch(setEditAppointmentData(data));\n  }\n};\n\nexport const fetchDeveloperInfo = (\n  id: number,\n  notDispatch: boolean = false\n) => async (dispatch: Dispatch<any>, getState: () => State) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const data = await getDeveloperInfo(token, id);\n\n    if (!notDispatch) {\n      dispatch(setDevelopersInfo(data));\n    }\n  }\n};\n\nexport const fetchSchedulerFilter = () => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const data = await getSchedulerFilter(token);\n    dispatch(setFilterInitialData(data));\n  }\n};\n\nexport const fetchSchedulerSettings = () => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    dispatch(setIsLoading(true));\n    const data = await getCalendar(token);\n    dispatch(setSchedulerOptions(data));\n    dispatch(setIsLoading(false));\n  }\n};\n\nexport const moveCalendarCard = (\n  bodyData: {\n    date_time: string;\n    room_id: number;\n  },\n  id: number\n) => async (dispatch: Dispatch<any>, getState: () => State) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const { success, data } = await moveCalendarCardService(\n      token,\n      bodyData,\n      id\n    );\n\n    if (success) {\n      dispatch(setEditAppointmens(data));\n    }\n  }\n};\n\nexport const searchAppointments = (text: string, page: string) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const { success, data } = await searchAppointmentsServices(token, {\n      text,\n      page,\n    });\n\n    if (success) {\n      dispatch(setAppointments(data));\n    }\n  }\n};\n","import React, { useState, useEffect } from 'react';\n\nconst useDebounce = (value: string, delay: number) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value]);\n\n  return debouncedValue;\n};\n\nexport default useDebounce;\n","/* eslint-disable prettier/prettier */\nimport { useDispatch } from 'react-redux';\nimport {\n  ChangeEvent, useState, useEffect, useCallback\n} from 'react';\nimport { setUser } from '../../store/main/actions';\nimport { searchAppointments } from '../../store/scheduler/actions';\nimport useDebounce from './utils/useDebounce';\n\nexport const useHeader = () => {\n  const dispatch = useDispatch();\n  const [searchText, setSearchText] = useState<string>('');\n  const [count, setCount] = useState<number>(0);\n\n  const debouncedValue = useDebounce(searchText, 1000);\n\n  useEffect(() => {\n    if (!count) {\n      setCount((prev: number) => prev + 1);\n      return;\n    }\n\n    dispatch(searchAppointments(debouncedValue, 'calendar'));\n  }, [debouncedValue]);\n\n  const onSearch = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value);\n  }, [searchText]);\n\n  const onLogout = useCallback(() => {\n    localStorage.clear();\n    dispatch(setUser({ type: null, token: null }));\n  }, []);\n\n  return { onSearch, onLogout, searchText };\n};\n","import * as React from 'react';\nimport './index.scss';\nimport { useHeader } from './useHeader';\n\nconst Header = () => {\n  const { onSearch, onLogout, searchText } = useHeader();\n\n  return (\n    <div className=\"header container\">\n      <div className=\"header__logo\">\n        <img src=\"/icons/logo.svg\" alt=\"logo\" />\n      </div>\n      <div className=\"header__search\">\n        <input\n          type=\"text\"\n          placeholder=\"Пошук...\"\n          onChange={onSearch}\n          value={searchText}\n        />\n        <img src=\"/icons/search.svg\" alt=\"search\" />\n      </div>\n      <div className=\"header__control\">\n        <img src=\"/icons/log-out.svg\" alt=\"logout\" onClick={onLogout} />\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","const formatAppointmentDate = (\n  hours: any,\n  rooms: any,\n  days: any,\n  raw: number,\n  cell: number\n) => {\n  const { day, date, year } = days[Math.floor(raw / hours.length)];\n  const { time } = hours[raw % hours.length];\n  const room = rooms[cell].id;\n  return {\n    day,\n    date: date.split('.').reverse().join('.'),\n    year,\n    time,\n    room,\n  };\n};\n\nexport default formatAppointmentDate;\n","/* eslint-disable object-curly-newline */\n/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable import/prefer-default-export */\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  setSelectedOldAppointment,\n  fetchAppointments,\n  fetchCalendarCard,\n  fetchSchedulerSettings,\n  moveCalendarCard,\n} from '../../../../../../store/scheduler/actions';\nimport { State } from '../../../../../../store/types';\nimport formatAppointmentDate from './utils/formatAppointmentDate';\n\nexport const useSchedulerTable = () => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n  const { options, isLoading, appointments } = useSelector(\n    (state: State) => state.scheduler\n  );\n\n  useEffect(() => {\n    if (!isLoading) {\n      dispatch(fetchSchedulerSettings());\n      dispatch(fetchAppointments());\n    }\n  }, [token]);\n\n  const rooms = useMemo(() => options?.rooms, [options]);\n  const hours = useMemo(() => options?.work_time, [options]);\n\n  const shouldLoad = useMemo(() => isLoading || !options, [\n    isLoading,\n    rooms,\n    hours,\n  ]);\n\n  const tableColumns = useMemo(() => new Array(rooms?.length || 0).fill(1), [\n    rooms,\n  ]);\n\n  const days = useMemo(() => options?.day_and_date, [options]);\n\n  const tableRows = useMemo(\n    () => new Array(hours?.length * days?.length || 0).fill(1),\n    [hours]\n  );\n\n  const handleAppointmentDrag = useCallback(\n    (appointment) => {\n      const { year, date, time, room } = formatAppointmentDate(\n        hours,\n        rooms,\n        days,\n        appointment.y,\n        appointment.x\n      );\n\n      const date_time = `${year}.${date}. ${time}`;\n\n      const data = {\n        date_time,\n        room_id: room,\n      };\n\n      dispatch(moveCalendarCard(data, appointment.i));\n    },\n    [hours, days, rooms, days]\n  );\n\n  const onAppointmentClick = useCallback(\n    async ({ x, y, i }: any) => {\n      const payload = formatAppointmentDate(hours, rooms, days, y, x);\n\n      dispatch(fetchCalendarCard(i));\n\n      dispatch(\n        setSelectedOldAppointment({\n          ...payload,\n          i,\n        })\n      );\n    },\n    [hours, rooms, days]\n  );\n\n  return {\n    shouldLoad,\n    rooms,\n    hours,\n    tableRows,\n    tableColumns,\n    days,\n    appointments,\n    handleAppointmentDrag,\n    onAppointmentClick,\n  };\n};\n","import React from 'react';\nimport { LoopCircleLoading } from 'react-loadingg';\n\nconst Loader = () => <LoopCircleLoading color=\"#165153\" />;\n\nexport default Loader;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport './SchedulerDay.scss';\n\nconst SchedulerDay = ({ day, hours }) => (\n  <div className=\"scheduler__weekDay\">\n    <div className=\"scheduler__day\">\n      <p>\n        {day.day}\n        <br />\n        {day.date}\n      </p>\n    </div>\n    <div className=\"scheduler__timeLine\">\n      {hours.map(({ time }) => (\n        <p key={time}>{time}</p>\n      ))}\n    </div>\n  </div>\n);\n\nexport default SchedulerDay;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport './GridLayout.scss';\nimport RGL, { WidthProvider } from 'react-grid-layout';\nimport $ from 'jquery';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useSelector } from 'react-redux';\n\nconst ReactGridLayout = WidthProvider(RGL);\n\nexport default function GridLayout({\n  appointments,\n  cols,\n  handleDrag,\n  handleClick,\n}) {\n  const [dragAndDropWidth, setDragAndDropWidth] = useState(1200);\n  const { schedulerLock } = useSelector((state) => state.scheduler);\n\n  useEffect(() => {\n    setDragAndDropWidth($('.scheduler__appointments').width());\n  }, []);\n\n  const onDrag = (all, current) => {\n    const currentApp = all.find((item) => item.i === current.i);\n    handleDrag(currentApp);\n  };\n\n  if (!appointments) {\n    return <span>Loading...</span>;\n  }\n\n  return (\n    <ReactGridLayout\n      className=\"scheduler__dragAndDrop\"\n      cols={cols}\n      rowHeight={75}\n      width={dragAndDropWidth}\n      margin={[0, 0]}\n      containerPadding={[0, 0]}\n      verticalCompact={false}\n      preventCollision\n      layout={appointments}\n      onDragStop={onDrag}\n      isDraggable={!schedulerLock}\n    >\n      {appointments.map((appointment) => (\n        <div\n          key={appointment.i}\n          className=\"appointment\"\n          style={{ borderLeft: `4px solid ${appointment.color}` }}\n          onClick={() => handleClick(appointment)}\n        >\n          <div className=\"appointment__title\">{appointment.title}</div>\n          <table className=\"appointment__table\">\n            <tbody>\n              <tr>\n                {Object.values(appointment.short_info).map((item) => (\n                  <td key={uuidv4()}>{item}</td>\n                ))}\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      ))}\n    </ReactGridLayout>\n  );\n}\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React from 'react';\nimport { Props, useGridTableCell } from './useGridTableCell';\n\nconst GridLayoutCell = (props: Props) => {\n  const { onClick } = useGridTableCell(props);\n\n  return (\n    <td\n      onClick={onClick}\n      style={{\n        width: `calc(100% / ${props.rowsQuantity})`,\n        backgroundColor: props.selected ? '#E5E5E5' : '',\n      }}\n    />\n  );\n};\n\nexport default GridLayoutCell;\n","/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable operator-linebreak */\nimport { useMemo, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { State } from '../../../../../../../../store/types';\nimport formatAppointmentDate from '../../utils/formatAppointmentDate';\nimport { setSelectedNewAppointment } from '../../../../../../../../store/scheduler/actions';\n\nexport type Props = {\n  rowsQuantity: number;\n  raw: number;\n  cell: number;\n  selected: boolean;\n};\n\nexport const useGridTableCell = ({ raw, cell }: Props) => {\n  const { options } = useSelector((state: State) => state.scheduler);\n  const dispatch = useDispatch();\n\n  const rooms = useMemo(() => options?.rooms, [options]);\n  const hours = useMemo(() => options?.work_time, [options]);\n  const days = useMemo(() => options?.day_and_date, [options]);\n\n  const onClick = useCallback(() => {\n    const payload = formatAppointmentDate(hours, rooms, days, raw, cell);\n    const isBefore = moment(\n      `${payload.year}.${payload.date}. ${payload.time}`\n    ).isBefore(moment());\n\n    if (isBefore) return;\n    dispatch(setSelectedNewAppointment({ ...payload, raw, cell }));\n  }, [hours, rooms, days, raw, cell]);\n\n  return { onClick };\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport GridTableCell from '../GridTableCell/GridTableCell';\nimport { Props, useGridTable } from './useGridTable';\n\nexport default function GridTable({ rows, columns }: Props) {\n  const { newSelectedAppointment } = useGridTable();\n\n  return (\n    <div className=\"scheduler__bodyTable\">\n      <table>\n        <tbody>\n          {rows.map((_: any, rowIndex: number) => (\n            <tr key={uuidv4()}>\n              {columns.map((day: any, cellIndex: number) => (\n                <GridTableCell\n                  selected={\n                    // eslint-disable-next-line prettier/prettier\n                    newSelectedAppointment?.raw === rowIndex\n                    // eslint-disable-next-line prettier/prettier\n                    && newSelectedAppointment?.cell === cellIndex\n                  }\n                  rowsQuantity={rows.length}\n                  raw={rowIndex}\n                  cell={cellIndex}\n                  key={uuidv4()}\n                />\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { State } from '../../../../../../../../store/types';\n\nexport type Props = {\n  rows: any;\n  columns: any;\n};\n\nexport const useGridTable = () => {\n  const newSelectedAppointment = useSelector(\n    (state: State) => state.scheduler.newSelectedAppointment\n  );\n\n  return { newSelectedAppointment };\n};\n","import React from 'react';\nimport './index.scss';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useSchedulerTable } from './useSchedulerTable';\nimport Loader from '../../../../../../components/Loader/Loader';\n\n// components\nimport SchedulerDay from './components/SchedulerDay/SchedulerDay';\nimport GridLayout from './components/GridLayout/GridLayout';\nimport GridTable from './components/GridTable/GridTable';\n\nconst SchedulerTable = () => {\n  const {\n    shouldLoad,\n    rooms,\n    hours,\n    tableRows,\n    tableColumns,\n    days,\n    appointments,\n    handleAppointmentDrag,\n    onAppointmentClick,\n  } = useSchedulerTable();\n\n  if (shouldLoad) {\n    return (\n      <div className=\"scheduler\">\n        <Loader />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"scheduler\">\n      <div className=\"scheduler__header\">\n        <div />\n        <div>\n          <table>\n            <tbody>\n              <tr>\n                {rooms.map(({ title }: any) => (\n                  <td\n                    key={title}\n                    style={{ width: `calc(100% / ${rooms.length})` }}\n                  >\n                    {title}\n                  </td>\n                ))}\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <div className=\"scheduler__body\">\n        <div className=\"scheduler__dayBar\">\n          {days.map((item: any) => (\n            <SchedulerDay day={item} hours={hours} key={uuidv4()} />\n          ))}\n        </div>\n        <div className=\"scheduler__appointments\">\n          <GridTable rows={tableRows} columns={tableColumns} />\n          <GridLayout\n            appointments={appointments}\n            cols={tableColumns.length}\n            handleDrag={handleAppointmentDrag}\n            handleClick={onAppointmentClick}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SchedulerTable;\n","/* eslint-disable object-curly-newline */\n/* eslint-disable no-unused-vars */\nimport React, { useState, memo, useEffect } from 'react';\nimport './index.scss';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\ntype Data = {\n  id: number;\n  title: string;\n};\n\ntype Props = {\n  onChange: (value: string) => void;\n  data: Data[];\n  label: string;\n  selectedValue?: string | null | number;\n  disabled?: boolean;\n  size?: 'medium' | 'small';\n};\n\nconst CustomSelect = ({\n  onChange,\n  data,\n  label,\n  selectedValue,\n  disabled,\n  size = 'medium',\n}: Props) => {\n  const [selected, setSelected] = useState(selectedValue || '');\n\n  useEffect(() => {\n    setSelected(selectedValue || '');\n  }, [selectedValue]);\n\n  const handleChange = (event: any) => {\n    const val = event.target.value;\n    setSelected(val);\n    onChange(val);\n  };\n\n  return (\n    <FormControl variant=\"outlined\" className=\"customSelect\" size={size}>\n      <InputLabel>{label}</InputLabel>\n      <Select\n        value={selected}\n        onChange={handleChange}\n        disabled={disabled || data.length === 0}\n      >\n        <MenuItem value=\"\">\n          <em>Выбрать</em>\n        </MenuItem>\n        {data.map(({ id, title }: Data) => (\n          <MenuItem value={id} key={id}>\n            {title}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default memo(CustomSelect);\n","/* eslint-disable prettier/prettier */\nimport {\n  useEffect, useMemo, useState, useCallback\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { State } from '../../../../../../../../store/types';\nimport { SelectItem } from '../../../../../../../../types';\nimport { fetchAppointmentsByFilter, fetchSchedulerFilter } from '../../../../../../../../store/scheduler/actions';\nimport getDeveloperInfo from '../../../../../../../../services/getDeveloperInfo';\n\nexport const useFilter = () => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n  const { filterInitialData } = useSelector((state: State) => state.scheduler);\n\n  useEffect(() => {\n    dispatch(fetchSchedulerFilter());\n  }, [token]);\n\n  const readers = useMemo(() => filterInitialData?.reader, [filterInitialData]);\n  const notaries = useMemo(() => filterInitialData?.notary, [\n    filterInitialData,\n  ]);\n  const accompanyings = useMemo(() => filterInitialData?.accompanying, [\n    filterInitialData,\n  ]);\n  const contractTypes = useMemo(() => filterInitialData?.contract_type, [\n    filterInitialData,\n  ]);\n  const developers = useMemo(() => filterInitialData?.developer, [\n    filterInitialData,\n  ]);\n  const [representative, setRepresentative] = useState<SelectItem[]>([]);\n\n  const shouldRenderFilter = useMemo(() => Boolean(filterInitialData), [\n    filterInitialData,\n  ]);\n\n  // selected values and CTA\n  const [selectedNotary, setSelectedNotary] = useState<string | null>(null);\n  const [selectedReader, setSelectedReader] = useState<string | null>(null);\n  const [selectedAccompanying, setSelectedAccompanying] = useState<\n    string | null\n  >(null);\n  const [selectedContractType, setSelectedContractType] = useState<\n    string | null\n  >(null);\n  const [selectedDeveloper, setSelectedDeveloper] = useState<string | null>(\n    null\n  );\n  const [selectedRepresentative, setSelectedRepresentative] = useState<\n    string | null\n  >(null);\n\n  const clearAll = useCallback(() => {\n    setSelectedNotary(null);\n    setSelectedReader(null);\n    setSelectedAccompanying(null);\n    setSelectedContractType(null);\n    setSelectedDeveloper(null);\n    setSelectedRepresentative(null);\n  }, []);\n\n  // useEffects\n  useEffect(() => {\n    setSelectedRepresentative(null);\n    if (token && selectedDeveloper) {\n      getDeveloperInfo(token, +selectedDeveloper)\n        .then((data) => setRepresentative(data.representative || []));\n    }\n  }, [selectedDeveloper]);\n\n  useEffect(() => {\n    const data = {\n      notary_id: selectedNotary,\n      reader_id: selectedReader,\n      giver_id: selectedAccompanying,\n      contract_type_id: selectedContractType,\n      developer_id: selectedDeveloper,\n      dev_assistant_id: selectedRepresentative,\n    };\n\n    dispatch(fetchAppointmentsByFilter(data));\n  }, [\n    selectedNotary,\n    selectedReader,\n    selectedAccompanying,\n    selectedContractType,\n    selectedDeveloper,\n    selectedRepresentative,\n  ]);\n\n  return {\n    shouldRenderFilter,\n    notaries,\n    readers,\n    accompanyings,\n    contractTypes,\n    developers,\n    representative,\n    selectedNotary,\n    selectedReader,\n    selectedRepresentative,\n    selectedDeveloper,\n    selectedContractType,\n    selectedAccompanying,\n    setSelectedNotary,\n    setSelectedReader,\n    setSelectedAccompanying,\n    setSelectedContractType,\n    setSelectedDeveloper,\n    setSelectedRepresentative,\n    clearAll,\n  };\n};\n","import React from 'react';\nimport CustomSelect from '../../../../../../../../components/CustomSelect';\nimport { useFilter } from './useFilter';\nimport Loader from '../../../../../../../../components/Loader/Loader';\n\nconst Filter = () => {\n  const meta = useFilter();\n\n  if (!meta.shouldRenderFilter) {\n    return null;\n  }\n\n  return (\n    <div className=\"filter\">\n      <span style={{ whiteSpace: 'nowrap' }}>Сортувати по:</span>\n      <div className=\"mh6 filter__select\" style={{ width: '115px' }}>\n        <CustomSelect\n          data={meta.notaries}\n          selectedValue={meta.selectedNotary}\n          onChange={meta.setSelectedNotary}\n          label=\"Нотаріус\"\n          size=\"small\"\n        />\n      </div>\n\n      <div className=\"mh6 filter__select\" style={{ width: '90px' }}>\n        <CustomSelect\n          data={meta.readers}\n          selectedValue={meta.selectedReader}\n          onChange={meta.setSelectedReader}\n          label=\"Читач\"\n          size=\"small\"\n        />\n      </div>\n\n      <div className=\"mh6 filter__select\" style={{ width: '110px' }}>\n        <CustomSelect\n          data={meta.accompanyings}\n          selectedValue={meta.selectedAccompanying}\n          onChange={meta.setSelectedAccompanying}\n          label=\"Видавач\"\n          size=\"small\"\n        />\n      </div>\n\n      <div className=\"mh6 filter__select\" style={{ width: '150px' }}>\n        <CustomSelect\n          data={[]}\n          selectedValue={meta.selectedContractType}\n          onChange={meta.setSelectedContractType}\n          label=\"Тип договору\"\n          size=\"small\"\n        />\n      </div>\n\n      <div className=\"mh6 filter__select\" style={{ width: '140px' }}>\n        <CustomSelect\n          data={meta.developers}\n          selectedValue={meta.selectedDeveloper}\n          onChange={meta.setSelectedDeveloper}\n          label=\"Забудовник\"\n          size=\"small\"\n        />\n      </div>\n\n      <div className=\"mh6 filter__select\" style={{ width: '125px' }}>\n        <CustomSelect\n          data={meta.representative}\n          selectedValue={meta.selectedRepresentative}\n          onChange={meta.setSelectedRepresentative}\n          label=\"Підписант\"\n          size=\"small\"\n        />\n      </div>\n\n      <div className=\"mh6 df\">\n        <img\n          src=\"/icons/clear-form.svg\"\n          alt=\"clear form\"\n          onClick={meta.clearAll}\n          className=\"filter__clear\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { State } from '../../../../../../../store/types';\n\nexport const QuantityLabel = () => {\n  const { appointments } = useSelector((state: State) => state.scheduler);\n\n  return (\n    <span style={{ whiteSpace: 'nowrap' }}>\n      {`В роботі: ${appointments?.length}`}\n    </span>\n  );\n};\n\nexport default QuantityLabel;\n","import { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSchedulerLock } from '../../../../../../../../store/scheduler/actions';\nimport { State } from '../../../../../../../../store/types';\n\nexport const useSchedulerLock = () => {\n  const dispatch = useDispatch();\n  const { schedulerLock } = useSelector((state: State) => state.scheduler);\n\n  const onClick = useCallback(() => {\n    dispatch(setSchedulerLock(!schedulerLock));\n  }, [schedulerLock]);\n\n  return { onClick, schedulerLock };\n};\n","import React from 'react';\nimport { useSchedulerLock } from './useSchedulerLock';\nimport './index.scss';\n\nconst SchedulerLock = () => {\n  const { onClick, schedulerLock } = useSchedulerLock();\n\n  return (\n    <div className={`scheduler__lock-button ${schedulerLock ? '' : 'unLock'}`}>\n      <img src=\"/icons/lock.svg\" alt=\"lock\" onClick={onClick} />\n    </div>\n  );\n};\n\nexport default SchedulerLock;\n","import React from 'react';\nimport Filter from './components/Filter';\nimport QuantityLabel from './components/QuantityLabel';\nimport SchedulerLock from './components/SchedulerLock';\nimport './index.scss';\n\nconst SchedulerFilter = () => (\n  <div className=\"scheduler__filter\">\n    <QuantityLabel />\n    <Filter />\n    <SchedulerLock />\n  </div>\n);\n\nexport default SchedulerFilter;\n","import React from 'react';\nimport './index.scss';\nimport MModal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\ntype Props = {\n  open: boolean;\n  handleClose: () => void;\n  success: boolean;\n  message: string;\n};\n\n// eslint-disable-next-line prettier/prettier\nconst Modal = ({\n  open, handleClose, success, message\n}: Props) => (\n  <MModal\n    className=\"modal-container\"\n    open={open}\n    onClose={handleClose}\n    closeAfterTransition\n    BackdropComponent={Backdrop}\n    BackdropProps={{\n      timeout: 500,\n    }}\n  >\n    <Fade in={open}>\n      <div className={`modal ${success ? 'modal-success' : 'modal-failed'}`}>\n        <p className=\"message\">{message}</p>\n      </div>\n    </Fade>\n  </MModal>\n);\n\nexport default Modal;\n","/* eslint-disable react/require-default-props */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/no-unused-prop-types */\nimport React, { useState, memo, useEffect } from 'react';\nimport './index.scss';\n\ntype Button = {\n  id: number;\n  title: string;\n};\n\ntype Props = {\n  buttons: Button[];\n  unicId: string;\n  onChange: (id: number) => void;\n  selected?: number | null;\n};\n\nexport const RadioButtonsGroup = ({\n  buttons,\n  onChange,\n  selected,\n  unicId,\n}: Props) => {\n  const [selectedValue, setSelectedValue] = useState(selected || buttons[0].id);\n\n  useEffect(() => {\n    setSelectedValue(selected || buttons[0].id);\n  }, [selected]);\n\n  const handleChange = (id: number) => {\n    onChange(id);\n  };\n\n  return (\n    <div className=\"radio-buttons-group\">\n      {buttons.map(({ id, title }: Button) => (\n        <div\n          className={`radio-buttons-group__element ${\n            buttons.length === 1 ? 'edit' : ''\n          }`}\n        >\n          <input\n            type=\"radio\"\n            id={unicId + title}\n            value={id}\n            checked={selectedValue === id}\n            onChange={() => handleChange(id)}\n            className=\"input\"\n          />\n          <label htmlFor={unicId + title} className=\"label\">\n            {title}\n          </label>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioButtonsGroup);\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport './index.scss';\n\ntype Props = {\n  onClick: () => void;\n  disabled?: boolean;\n};\n\nconst AddFormButton = ({ onClick, disabled }: Props) => {\n  const handleClick = () => {\n    if (disabled) return;\n    onClick();\n  };\n\n  return (\n    <div\n      className={`add-form-button ${disabled ? 'disabled' : ''}`}\n      onClick={handleClick}\n      onKeyPress={handleClick}\n    >\n      <img src=\"/icons/plus.svg\" alt=\"plus\" />\n    </div>\n  );\n};\n\nexport default AddFormButton;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable react/react-in-jsx-scope */\nimport React, { useState, useEffect } from 'react';\nimport './index.scss';\nimport { TextField } from '@material-ui/core';\n\ntype Props = {\n  label: string;\n  onChange: (value: string) => void;\n  value?: string | number | null;\n  type?: string;\n  disabled?: boolean;\n};\n\nconst CustomInput = ({\n  label,\n  onChange,\n  value = '',\n  type = 'string',\n  disabled,\n}: Props) => {\n  const [text, setText] = useState(value || '');\n\n  useEffect(() => {\n    setText(value || '');\n  }, [value]);\n\n  const handleChange = (event: any) => {\n    setText(event.target.value);\n    onChange(event.target.value);\n  };\n\n  return (\n    <TextField\n      label={label}\n      variant=\"outlined\"\n      value={text}\n      onChange={handleChange}\n      type={type}\n      className=\"custom-input\"\n      disabled={disabled || false}\n    />\n  );\n};\n\nexport default CustomInput;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport './index.scss';\n\ntype Props = {\n  onClick: (index: number) => void;\n  index: number;\n  disabled?: boolean;\n};\n\nconst RemoveFormButton = ({ onClick, index, disabled }: Props) => {\n  const handleClick = () => {\n    if (disabled) return;\n    onClick(index);\n  };\n\n  return (\n    <div\n      className={`remove-form-button ${disabled ? 'disabled' : ''}`}\n      onClick={handleClick}\n      onKeyPress={() => onClick(index)}\n    >\n      <img src=\"/icons/minus.svg\" alt=\"minus\" />\n    </div>\n  );\n};\n\nexport default RemoveFormButton;\n","/* eslint-disable react/destructuring-assignment */\nimport React, { memo } from 'react';\nimport './index.scss';\nimport AddFormButton from '../../../../../../../../../../components/AddFormButton';\nimport CustomInput from '../../../../../../../../../../components/CustomInput/CustomInput';\nimport RemoveFormButton from '../../../../../../../../../../components/RemoveFormButton';\nimport { Props, useClients } from './useClients';\n\nconst Clients = (props: Props) => {\n  const meta = useClients(props);\n\n  return (\n    <div className=\"mv12\">\n      {props.clients.map((item, index) => (\n        <div className=\"clients__item mv12\">\n          <CustomInput\n            label=\"ПІБ\"\n            value={item.full_name}\n            onChange={(val) => meta.onNameChange(index, val)}\n            disabled={props.disabled || false}\n          />\n\n          <div className=\"mv12 df-jc-sb\">\n            <CustomInput\n              label=\"Номер телефону\"\n              value={item.phone}\n              onChange={(val) => meta.onPhoneChange(index, val)}\n              disabled={props.disabled || false}\n            />\n\n            {props.clients.length > 1 && (\n              <div style={{ marginLeft: '12px' }}>\n                <RemoveFormButton\n                  onClick={props.onRemove}\n                  index={index}\n                  disabled={props.disabled || false}\n                />\n              </div>\n            )}\n\n            {index === props.clients.length - 1 && (\n              <div style={{ marginLeft: '12px' }}>\n                <AddFormButton\n                  onClick={props.onAdd}\n                  disabled={props.disabled || false}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(Clients);\n","import { useCallback } from 'react';\nimport { CodeFixAction } from 'typescript';\nimport { ClientItem } from '../../../../../../../../../../types';\n\nexport type Props = {\n  clients: ClientItem[];\n  onChange: (index: number, value: ClientItem) => void;\n  onAdd: () => void;\n  onRemove: (index: number) => void;\n  disabled?: boolean;\n};\n\nexport const useClients = ({ onChange, clients }: Props) => {\n  const onPhoneChange = useCallback(\n    (index: number, value: string) => {\n      onChange(index, {\n        ...clients[index],\n        phone: value,\n      });\n    },\n    [clients]\n  );\n\n  const onNameChange = useCallback(\n    (index: number, value: string) => {\n      onChange(index, {\n        ...clients[index],\n        full_name: value,\n      });\n    },\n    [clients]\n  );\n\n  return { onPhoneChange, onNameChange };\n};\n","/* eslint-disable prettier/prettier */\n/* eslint-disable react/button-has-type */\nimport React from 'react';\nimport './index.scss';\n\ntype Props = {\n  label: string;\n  onClick: (e: any) => void;\n  disabled: boolean;\n  className?: string;\n};\n\nconst PrimaryButton = ({\n  label, onClick, disabled, className\n}: Props) => (\n  <button\n    className={`primary-button ${disabled ? 'disabled' : ''} ${\n      className || ''\n    }`}\n    onClick={onClick}\n    disabled={disabled}\n  >\n    {label}\n  </button>\n);\n\nexport default PrimaryButton;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable prettier/prettier */\nimport React, { useEffect, useState, memo } from 'react';\nimport { FormControlLabel, Switch } from '@material-ui/core';\nimport './index.scss';\n\ntype Props = {\n  label: string\n  onChange: (val: boolean) => void;\n  selected: boolean;\n  disabled?: boolean;\n};\n\nconst CustomSwitch = ({\n  label,\n  onChange,\n  selected,\n  disabled\n}: Props) => {\n  const [value, setValue] = useState(selected);\n\n  const handleChange = (event: any) => {\n    setValue(event.target.checked);\n    onChange(event.target.checked);\n  };\n\n  useEffect(() => {\n    setValue(selected);\n  }, [selected]);\n\n  return (\n    <FormControlLabel\n      control={(\n        <Switch\n          checked={value}\n          onChange={handleChange}\n          name=\"checkedB\"\n          color=\"primary\"\n        />\n      )}\n      label={label}\n      labelPlacement=\"start\"\n      className=\"custom-switch\"\n      disabled={disabled || false}\n    />\n  );\n};\n\nexport default memo(CustomSwitch);\n","/* eslint-disable prettier/prettier */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable no-unused-vars */\nimport React, { memo } from 'react';\nimport './index.scss';\nimport AddFormButton from '../../../../../../../../../../components/AddFormButton';\nimport CustomInput from '../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../components/CustomSelect';\nimport CustomSwitch from '../../../../../../../../../../components/CustomSwitch';\nimport RadioButtonsGroup from '../../../../../../../../../../components/RadioButtonsGroup';\nimport RemoveFormButton from '../../../../../../../../../../components/RemoveFormButton';\nimport { ImmovableItem } from '../../../../../../../../../../types';\nimport { useImmovableContainer, Props } from './useImmovableContainer';\n\nconst ImmovableContainer = (props: Props) => {\n  const meta = useImmovableContainer(props);\n  return (\n    <div className=\"mv12 immovables__group\">\n      {props.immovables.map((item: ImmovableItem, index: number) => (\n        <div className=\"immovables__item mv12\">\n          <RadioButtonsGroup\n            buttons={\n              props.disabled\n                ? meta.contracts.filter(\n                  ({ id }: any) => id === (item.contract_type_id || meta.contracts[0].id)\n                )\n                : meta.contracts\n            }\n            onChange={(val) => meta.onContractChange(index, val)}\n            selected={item.contract_type_id}\n            unicId={`contract-${index}`}\n          />\n\n          <div className=\"mv12\">\n            <CustomSelect\n              onChange={(val) => meta.onBuildingChange(index, val)}\n              data={meta.building}\n              label=\"Будинок\"\n              selectedValue={item.building_id}\n              disabled={props.disabled || false}\n            />\n          </div>\n\n          <RadioButtonsGroup\n            buttons={\n              props.disabled\n                ? meta.immovableTypes.filter(\n                  ({ id }: any) => id === (item.imm_type_id || meta.immovableTypes[0].id)\n                )\n                : meta.immovableTypes\n            }\n            onChange={(val) => meta.onImmovableTypeChange(index, val)}\n            selected={item.imm_type_id}\n            unicId={`types-${index}`}\n          />\n\n          <div className=\"mv12\">\n            <CustomSwitch\n              label=\"Банк\"\n              onChange={(val) => meta.onBankChange(index, val)}\n              selected={item.bank}\n              disabled={props.disabled}\n            />\n          </div>\n\n          <div className=\"mv12\">\n            <CustomSwitch\n              label=\"Довіреність\"\n              onChange={(val) => meta.onProxyChange(index, val)}\n              selected={item.proxy}\n              disabled={props.disabled}\n            />\n          </div>\n\n          <div className=\"mv12 df-jc-sb\">\n            <CustomInput\n              key=\"test\"\n              label=\"Номер приміщення\"\n              onChange={(val) => meta.onImmNumChange(index, val)}\n              value={item.imm_number}\n              disabled={props.disabled}\n            />\n\n            {props.immovables.length > 1 && (\n              <div style={{ marginLeft: '12px' }}>\n                <RemoveFormButton\n                  onClick={props.onRemove}\n                  index={index}\n                  disabled={props.disabled}\n                />\n              </div>\n            )}\n\n            {index === props.immovables.length - 1 && (\n              <div style={{ marginLeft: '12px' }}>\n                <AddFormButton\n                  onClick={props.onAdd}\n                  disabled={props.disabled}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(ImmovableContainer);\n","import { useMemo, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport { State } from '../../../../../../../../../../store/types';\nimport {\n  ImmovableItem,\n  ImmovableItems,\n} from '../../../../../../../../../../types';\n\nexport type Props = {\n  immovables: ImmovableItems;\n  onChange: (index: number, value: ImmovableItem) => void;\n  onAdd: () => void;\n  onRemove: (index: number) => void;\n  disabled?: boolean;\n};\n\nexport const useImmovableContainer = ({ immovables, onChange }: Props) => {\n  const { options, developersInfo } = useSelector(\n    (state: State) => state.scheduler\n  );\n\n  const building = useMemo(() => developersInfo?.building || [], [\n    developersInfo,\n  ]);\n\n  const contracts = useMemo(() => options?.form_data.contract_type, [options]);\n\n  const immovableTypes = useMemo(() => options?.form_data.immovable_type, [\n    options,\n  ]);\n\n  // onChange functions\n  const onContractChange = useCallback(\n    (index: number, id: number) => {\n      onChange(index, {\n        ...immovables[index],\n        contract_type_id: id,\n      });\n    },\n    [immovables]\n  );\n\n  const onBuildingChange = useCallback(\n    (index: number, id: string) => {\n      onChange(index, {\n        ...immovables[index],\n        building_id: +id,\n      });\n    },\n    [immovables]\n  );\n\n  const onImmovableTypeChange = useCallback(\n    (index: number, id: number) => {\n      onChange(index, {\n        ...immovables[index],\n        imm_type_id: id,\n      });\n    },\n    [immovables]\n  );\n\n  const onBankChange = useCallback(\n    (index: number, val: boolean) => {\n      onChange(index, {\n        ...immovables[index],\n        bank: val,\n      });\n    },\n    [immovables]\n  );\n\n  const onProxyChange = useCallback(\n    (index: number, val: boolean) => {\n      onChange(index, {\n        ...immovables[index],\n        proxy: val,\n      });\n    },\n    [immovables]\n  );\n\n  const onImmNumChange = useCallback(\n    (index: number, val: string) => {\n      onChange(index, {\n        ...immovables[index],\n        imm_number: +val,\n      });\n    },\n    [immovables]\n  );\n\n  return {\n    building,\n    contracts,\n    immovableTypes,\n    onContractChange,\n    onBuildingChange,\n    onImmovableTypeChange,\n    onBankChange,\n    onProxyChange,\n    onImmNumChange,\n  };\n};\n","import { ClientItem, ImmovableItem } from '../../../../../../../../types';\n\nexport type ImmovableItemKey = keyof ImmovableItem;\n\nexport const immovableItem: ImmovableItem = {\n  contract_type_id: null,\n  building_id: null,\n  imm_type_id: null,\n  imm_number: null,\n  bank: false,\n  proxy: false,\n};\n\nexport const clientItem: ClientItem = {\n  phone: null,\n  full_name: null,\n};\n","/* eslint-disable prettier/prettier */\n/* eslint-disable arrow-body-style */\nimport {\n  useMemo,\n  useState,\n  useCallback,\n  useEffect\n} from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { State } from '../../../../../../../../store/types';\n\nimport {\n  setDevelopersInfo,\n  setEditAppointmentData,\n  setSelectedNewAppointment,\n  setSelectedOldAppointment,\n  createNewCard,\n  editCalendarCard,\n  fetchDeveloperInfo\n} from '../../../../../../../../store/scheduler/actions';\n\nimport { clientItem, immovableItem } from './types';\n\nimport {\n  ClientItem,\n  ImmovableItem,\n  ImmovableItems,\n  NewCard\n} from '../../../../../../../../types';\n\nexport type Props = {\n  selectedCard: any,\n  initialValues?: any,\n  edit?: boolean,\n}\n\nexport const useForm = ({ selectedCard, initialValues, edit }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n  const { options, developersInfo, isLoading } = useSelector(\n    (state: State) => state.scheduler\n  );\n  const [insideEdit, setEdit] = useState<boolean>(edit || false);\n\n  // Form State\n  const [notary, setNotary] = useState<number | null>(initialValues?.card.notary_id || null);\n  const [devCompanyId, setDevCompanyId] = useState<number | null>(null);\n  const [devRepresentativeId, setDevRepresentativeId] = useState<number | null>(null);\n  const [devManagerId, setDevManagerId] = useState<number | null>(null);\n  const [immovables, setImmovables] = useState<ImmovableItems>([immovableItem]);\n  const [clients, setClients] = useState<ClientItem[]>([clientItem]);\n\n  // Form Memo Values\n  const shouldLoad = useMemo(() => isLoading || !options, [options, isLoading]);\n\n  const notaries = useMemo(() => options?.form_data.notary, [options]);\n\n  const developers = useMemo(() => options?.form_data.developer, [options]);\n\n  const manager = useMemo(() => developersInfo?.manager || [], [\n    developersInfo,\n  ]);\n\n  const representative = useMemo(() => developersInfo?.representative || [], [\n    developersInfo,\n  ]);\n\n  // Form onChange functions\n  const onNotaryChange = useCallback((value) => {\n    setNotary(value);\n  }, []);\n\n  useEffect(() => {\n    if (initialValues) {\n      setEdit(true);\n      setNotary(initialValues.card.notary_id);\n      setDevCompanyId(initialValues.card.dev_company_id);\n      setDevRepresentativeId(initialValues.card.dev_representative_id);\n      setDevManagerId(initialValues.card.dev_manager_id);\n      setImmovables(\n        initialValues.immovables.length === 0\n          ? [immovableItem]\n          : initialValues.immovables\n      );\n      setClients(\n        initialValues.clients.length === 0\n          ? [clientItem]\n          : initialValues.clients\n      );\n    }\n\n    if (initialValues?.card.dev_company_id) {\n      dispatch(fetchDeveloperInfo(initialValues.card.dev_company_id));\n    }\n  }, [initialValues]);\n\n  const onDeveloperChange = useCallback(\n    (value) => {\n      setDevCompanyId(value);\n\n      if (!value) {\n        dispatch(setDevelopersInfo({}));\n      }\n\n      dispatch(fetchDeveloperInfo(value));\n    },\n    []\n  );\n\n  const onRepresentativeChange = useCallback(\n    (value) => {\n      setDevRepresentativeId(value);\n    },\n    [devRepresentativeId]\n  );\n\n  const onManagerChange = useCallback(\n    (value) => {\n      setDevManagerId(value);\n    },\n    [devManagerId]\n  );\n\n  const onImmovablesChange = useCallback(\n    (index: number, value: any) => {\n      immovables[index] = value;\n      setImmovables([...immovables]);\n    },\n    [immovables]\n  );\n\n  const onClientsChange = useCallback(\n    (index: number, value: ClientItem) => {\n      clients[index] = value;\n      setClients([...clients]);\n    },\n    [clients]\n  );\n\n  // Form CTA\n  const onClearAll = useCallback(() => {\n    setNotary(null);\n    setDevCompanyId(null);\n    setDevRepresentativeId(null);\n    setDevManagerId(null);\n    setImmovables([immovableItem]);\n    setClients([clientItem]);\n  }, []);\n\n  const onAddImmovables = useCallback(() => {\n    setImmovables([...immovables, immovableItem]);\n  }, [immovables]);\n\n  const onRemoveImmovable = useCallback((index: number) => {\n    setImmovables((prev) => prev.filter((_, mapIndex) => mapIndex !== index));\n  }, [immovables]);\n\n  const onAddClients = useCallback(() => {\n    setClients([...clients, clientItem]);\n  }, [clients]);\n\n  const onRemoveClient = useCallback((index: number) => {\n    setClients((prev) => prev.filter((_, mapIndex) => mapIndex !== index));\n  }, [clients]);\n\n  const activeAddButton = useMemo(() => {\n    return Boolean(devCompanyId)\n    && immovables.length\n    && immovables.every((item: ImmovableItem) => item.building_id && item.imm_number)\n    && selectedCard;\n  }, [devCompanyId, immovables, selectedCard]);\n\n  const onFormCreate = useCallback(() => {\n    const date_time = `${selectedCard.year}.${selectedCard.date}. ${selectedCard.time}`;\n\n    const formatImmovables = immovables.map((item: ImmovableItem) => ({\n      ...item,\n      contract_type_id: item.contract_type_id || options.form_data.immovable_type[0].id,\n      imm_type_id: item.imm_type_id || options.form_data.immovable_type[0].id,\n      imm_num: item.imm_number\n    }));\n\n    const data: NewCard = {\n      immovables: formatImmovables,\n      clients,\n      date_time,\n      dev_company_id: devCompanyId,\n      dev_representative_id: devRepresentativeId,\n      dev_manager_id: devManagerId,\n      room_id: selectedCard.room,\n      notary_id: notary || notaries[0].id,\n    };\n\n    if (token) {\n      if (edit) {\n        dispatch(editCalendarCard(data, selectedCard.i));\n        setEdit(true);\n      } else {\n        dispatch(createNewCard(data));\n        dispatch(setSelectedNewAppointment(null));\n        onClearAll();\n      }\n    }\n  }, [\n    devCompanyId,\n    devRepresentativeId,\n    devManagerId,\n    notary,\n    immovables,\n    clients,\n    edit,\n    selectedCard,\n  ]);\n\n  const onCloseForm = useCallback(() => {\n    dispatch(setSelectedOldAppointment(null));\n    dispatch(setEditAppointmentData(null));\n  }, []);\n\n  return {\n    shouldLoad,\n    notaries,\n    representative,\n    developers,\n    manager,\n    immovables,\n    clients,\n    activeAddButton,\n    insideEdit,\n    onNotaryChange,\n    onDeveloperChange,\n    onRepresentativeChange,\n    onManagerChange,\n    onImmovablesChange,\n    onAddImmovables,\n    onRemoveImmovable,\n    onRemoveClient,\n    onClientsChange,\n    onAddClients,\n    onClearAll,\n    onFormCreate,\n    onCloseForm,\n    setEdit,\n    selectedNotaryId: notary,\n    selectedDeveloperId: devCompanyId,\n    selectedDevRepresentativeId: devRepresentativeId,\n    selecedDevManagerId: devManagerId,\n  };\n};\n","/* eslint-disable indent */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React, { memo } from 'react';\nimport RadioButtonsGroup from '../../../../../../../../components/RadioButtonsGroup';\nimport CustomSelect from '../../../../../../../../components/CustomSelect';\nimport './index.scss';\nimport Clients from './components/Clients/Clients';\nimport PrimaryButton from '../../../../../../../../components/PrimaryButton';\nimport Loader from '../../../../../../../../components/Loader/Loader';\nimport ImmovableContainer from './components/ImmovableContainer';\nimport { useForm, Props } from './useForm';\n\nconst SchedulerForm = (props: Props) => {\n  const meta = useForm(props);\n\n  if (meta.shouldLoad) {\n    return (\n      <div className=\"schedulerForm\">\n        <Loader />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"schedulerForm\">\n      <div className=\"schedulerForm__forms\">\n        <div className=\"schedulerForm__header\">\n          <p className=\"title\">\n            {meta.insideEdit || props.edit\n              ? `Запис № ${props.selectedCard.i}`\n              : 'Новий запис'}\n          </p>\n          {meta.insideEdit ? (\n            <img\n              src=\"/icons/x.svg\"\n              alt=\"clear icon\"\n              className=\"clear-icon\"\n              onClick={meta.onCloseForm}\n            />\n          ) : (\n            <img\n              src=\"/icons/clear.svg\"\n              alt=\"clear icon\"\n              className=\"clear-icon\"\n              onClick={meta.onClearAll}\n            />\n          )}\n        </div>\n\n        <div className=\"mv12\">\n          <RadioButtonsGroup\n            buttons={\n              meta.insideEdit\n                ? meta.notaries.filter(\n                    ({ id }: any) => id === meta.selectedNotaryId\n                  )\n                : meta.notaries\n            }\n            onChange={meta.onNotaryChange}\n            selected={meta.selectedNotaryId}\n            unicId=\"notaries\"\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomSelect\n            label=\"Забудовник\"\n            data={meta.developers}\n            onChange={meta.onDeveloperChange}\n            selectedValue={meta.selectedDeveloperId}\n            disabled={meta.insideEdit || false}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomSelect\n            onChange={meta.onRepresentativeChange}\n            data={meta.representative}\n            label=\"Підписант\"\n            selectedValue={meta.selectedDevRepresentativeId}\n            disabled={meta.insideEdit || false}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomSelect\n            onChange={meta.onManagerChange}\n            data={meta.manager}\n            label=\"Менеджер\"\n            selectedValue={meta.selecedDevManagerId}\n            disabled={meta.insideEdit || false}\n          />\n        </div>\n\n        <ImmovableContainer\n          immovables={meta.immovables}\n          onChange={meta.onImmovablesChange}\n          onAdd={meta.onAddImmovables}\n          onRemove={meta.onRemoveImmovable}\n          disabled={meta.insideEdit || false}\n        />\n\n        <Clients\n          clients={meta.clients}\n          onChange={meta.onClientsChange}\n          onAdd={meta.onAddClients}\n          onRemove={meta.onRemoveClient}\n          disabled={meta.insideEdit || false}\n        />\n\n        <div className=\"mv12\">\n          {meta.insideEdit && (\n            <PrimaryButton\n              label=\"Редагувати\"\n              onClick={() => meta.setEdit(false)}\n              disabled={props.edit ? false : !meta.activeAddButton}\n              className=\"schedulerForm__editButton\"\n            />\n          )}\n\n          {!meta.insideEdit && (\n            <PrimaryButton\n              label={`${props.edit ? 'Зберегти' : 'Створити'}`}\n              onClick={meta.onFormCreate}\n              disabled={!meta.activeAddButton}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SchedulerForm);\n","/* eslint-disable implicit-arrow-linebreak */\nimport { useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setModalInfo } from '../../store/main/actions';\nimport { State } from '../../store/types';\n\nexport const useModal = () => {\n  const dispatch = useDispatch();\n  const { modalInfo } = useSelector((state: State) => state.main);\n\n  const modalProps = useMemo(\n    () => ({\n      ...modalInfo,\n      handleClose: () =>\n        dispatch(\n          setModalInfo({\n            ...modalInfo,\n            open: false,\n          })\n        ),\n    }),\n    [modalInfo]\n  );\n\n  return { modalProps };\n};\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport './index.scss';\nimport Modal from '../../../../../../components/Modal';\nimport Form from './components/Form';\nimport { useSchedulerForm } from './useSchedulerForm';\nimport { useModal } from '../../../../../../components/Modal/useModal';\n\nconst SchedulerForm = () => {\n  const meta = useSchedulerForm();\n  const { modalProps } = useModal();\n\n  return (\n    <div className=\"schedulerForm scheduler__form\">\n      <div className=\"schedulerForm__tabs\">\n        <div\n          className={`item ${meta.selectedTab === 0 ? 'selected' : ''}`}\n          style={{ backgroundColor: !meta.editAppointmentData ? 'white' : '' }}\n          onClick={() => meta.setSelectedTab(0)}\n        >\n          {meta.newSelectedAppointment\n            ? `${meta.newSelectedAppointment.day} ${meta.newSelectedAppointment.time} ${meta.newSelectedAppointment.date}`\n            : 'Виберіть дату'}\n        </div>\n\n        {meta.oldSelectedAppointment && meta.editAppointmentData && (\n          <div\n            className={`item ${meta.selectedTab === 1 ? 'selected' : ''}`}\n            onClick={() => meta.setSelectedTab(1)}\n          >\n            {`${meta.oldSelectedAppointment.day} ${meta.oldSelectedAppointment.time} ${meta.oldSelectedAppointment.date}`}\n          </div>\n        )}\n      </div>\n\n      {meta.selectedTab === 0 && (\n        <Form selectedCard={meta.newSelectedAppointment} />\n      )}\n\n      {meta.selectedTab === 1 && meta.editAppointmentData && (\n        <Form\n          selectedCard={meta.oldSelectedAppointment}\n          initialValues={meta.editAppointmentData}\n          edit\n        />\n      )}\n\n      <Modal {...modalProps} />\n    </div>\n  );\n};\n\nexport default SchedulerForm;\n","/* eslint-disable prettier/prettier */\nimport { useSelector } from 'react-redux';\nimport { useState, useEffect } from 'react';\nimport { State } from '../../../../../../store/types';\n\nexport const useSchedulerForm = () => {\n  const [selectedTab, setSelectedTab] = useState(0);\n\n  const newSelectedAppointment = useSelector(\n    (state: State) => state.scheduler.newSelectedAppointment\n  );\n  const oldSelectedAppointment = useSelector(\n    (state: State) => state.scheduler.oldSelectedAppointment\n  );\n  const editAppointmentData = useSelector(\n    (state: State) => state.scheduler.editAppointmentData\n  );\n\n  useEffect(() => {\n    setSelectedTab(editAppointmentData ? 1 : 0);\n  }, [editAppointmentData]);\n\n  useEffect(() => {\n    setSelectedTab(0);\n  }, [newSelectedAppointment]);\n\n  return {\n    newSelectedAppointment,\n    oldSelectedAppointment,\n    editAppointmentData,\n    selectedTab,\n    setSelectedTab\n  };\n};\n","import React from 'react';\nimport './index.scss';\n\n// Components\nimport SchedulerTable from './components/Table/SchedulerTable';\nimport SchedulerFilter from './components/SchedulerFilter';\nimport SchedulerForm from './components/SchedulerForm';\n\nconst SchedulerContainer = () => (\n  <div className=\"scheduler__container\">\n    <div className=\"scheduler__dataView\">\n      <SchedulerFilter />\n      <SchedulerTable />\n    </div>\n    <SchedulerForm />\n  </div>\n);\n\nexport default SchedulerContainer;\n","import React from 'react';\nimport Header from '../../components/Header';\nimport SchedulerContainer from './components/SchedulerContainer';\n\nconst SchedulerScreen = () => (\n  <>\n    <Header />\n    <SchedulerContainer />\n  </>\n);\n\nexport default SchedulerScreen;\n","import React from 'react';\nimport './index.scss';\n\nconst Dashboard = () => (\n  <div className=\"dashboard__space\">\n    <h1>dashboard</h1>\n  </div>\n);\n\nexport default Dashboard;\n","import * as React from 'react';\nimport './index.scss';\n\nconst data = [\n  {\n    key: 0,\n    title: 'Усі',\n    quantity: 50,\n  },\n  {\n    key: 1,\n    title: 'Готові',\n    quantity: 10,\n  },\n  {\n    key: 2,\n    title: 'Основних',\n    quantity: 30,\n  },\n  {\n    key: 3,\n    title: 'Попередніх',\n    quantity: 4,\n  },\n  {\n    key: 4,\n    title: 'Скасовано',\n    quantity: 2,\n  },\n];\n\nconst Contracts = () => (\n  <div className=\"dashboard__filter-contracts\">\n    <span className=\"title\">Договори</span>\n    <div className=\"cards\">\n      {data.map((item: any) => (\n        <div className=\"item\">\n          <div className=\"item__left\">\n            <img src=\"/icons/contract.svg\" alt=\"contract\" />\n            <span className=\"name\">{item.title}</span>\n          </div>\n          <span className=\"quantity\">{item.quantity}</span>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n\nexport default Contracts;\n","import React from 'react';\nimport Contracts from './components/Contracts';\nimport './index.scss';\n\nconst Filter = () => (\n  <div className=\"dashboard__filter\">\n    <Contracts />\n  </div>\n);\n\nexport default Filter;\n","import React from 'react';\nimport './index.scss';\nimport Dashboard from './components/Dashboard';\nimport Filter from './components/Filter';\n\nconst DashboardContainer = () => (\n  <div className=\"dashboard\">\n    <Filter />\n    <Dashboard />\n  </div>\n);\n\nexport default DashboardContainer;\n","import React from 'react';\nimport Header from '../../components/Header';\nimport DashboardContainer from './components/DashboardContainer';\n\nconst DashboardScreen = () => (\n  <>\n    <Header />\n    <DashboardContainer />\n  </>\n);\n\nexport default DashboardScreen;\n","import React, { memo } from 'react';\nimport Slider from 'react-slick';\nimport './index.scss';\n\ntype Props = {\n  images: string[];\n};\n\nconst Carousel = ({ images }: Props) => {\n  const settings = {\n    dots: true,\n    infinite: false,\n    speed: 800,\n    arrows: true,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n  };\n\n  return (\n    <div className=\"carousel\">\n      <div className=\"container\">\n        <Slider {...settings}>\n          {images.map((item: string) => (\n            <img\n              src={item}\n              alt={item}\n              key={item}\n              className=\"officeMapMain__image\"\n            />\n          ))}\n        </Slider>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Carousel);\n","import { Checkbox, FormControlLabel } from '@material-ui/core';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport './index.scss';\n\ntype Props = {\n  onChange: (value: boolean) => void;\n  label: string;\n  checked?: boolean;\n};\n\nconst CustomCheckBox = ({ onChange, label, checked = false }: Props) => {\n  const [value, setValue] = useState<boolean>(checked);\n\n  useEffect(() => {\n    setValue(checked);\n  }, [checked]);\n\n  const handleChange = useCallback(\n    (e: any) => {\n      setValue(e.target.checked);\n      onChange(e.target.checked);\n    },\n    [checked]\n  );\n\n  return (\n    <FormControlLabel\n      control={\n        <Checkbox checked={value} onChange={handleChange} color=\"default\" />\n      }\n      label={label}\n      className=\"custom-checkBox\"\n    />\n  );\n};\n\nexport default CustomCheckBox;\n","/* eslint-disable react/jsx-wrap-multilines */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/react-in-jsx-scope */\nimport React, { useState, useEffect } from 'react';\nimport './index.scss';\nimport {\n  FormControl,\n  InputLabel,\n  OutlinedInput,\n  InputAdornment,\n  IconButton,\n} from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\n\ntype Props = {\n  label: string;\n  onChange: (value: string) => void;\n  value?: string | number | null;\n  type?: string;\n  disabled?: boolean;\n};\n\nconst CustomPasswordInput = ({ label, onChange, value = '' }: Props) => {\n  const [password, setPassword] = useState(value || '');\n  const [showPassword, setShowPassword] = useState<boolean>(false);\n\n  useEffect(() => {\n    setPassword(value || '');\n  }, [value]);\n\n  const handleClickShowPassword = () => {\n    setShowPassword((prev) => !prev);\n  };\n\n  const handleMouseDownPassword = (event: any) => {\n    event.preventDefault();\n  };\n\n  const handleChange = (event: any) => {\n    setPassword(event.target.value);\n    onChange(event.target.value);\n  };\n\n  return (\n    <FormControl variant=\"outlined\" className=\"custom-input\">\n      <InputLabel htmlFor=\"outlined-adornment-password\">{label}</InputLabel>\n      <OutlinedInput\n        type={showPassword ? 'text' : 'password'}\n        value={password}\n        onChange={handleChange}\n        endAdornment={\n          <InputAdornment position=\"end\">\n            <IconButton\n              aria-label=\"toggle password visibility\"\n              onClick={handleClickShowPassword}\n              onMouseDown={handleMouseDownPassword}\n              edge=\"end\"\n            >\n              {showPassword ? <Visibility /> : <VisibilityOff />}\n            </IconButton>\n          </InputAdornment>\n        }\n        labelWidth={70}\n      />\n    </FormControl>\n  );\n};\n\nexport default CustomPasswordInput;\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getLoginCarouselImages() {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/slides`,\n    });\n\n    return data.data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","// eslint-disable-next-line object-curly-newline\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport getLoginCarouselImages from '../../../../services/getLoginCarouselImages';\nimport { sendLogin } from '../../../../store/main/actions';\n\nexport const useAuthorization = () => {\n  const dispatch = useDispatch();\n  const [images, setImages] = useState<string[] | null>(null);\n  const [email, setEmail] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n  const [remember, setRemember] = useState<boolean>(false);\n\n  const handleLogin = useCallback(\n    (e: any) => {\n      e.preventDefault();\n      dispatch(sendLogin({ email, password }, remember));\n    },\n    [password, email, remember]\n  );\n\n  const disabledButton = useMemo(() => !email || !password, [email, password]);\n\n  useEffect(() => {\n    const fetchImages = async () => {\n      const res = await getLoginCarouselImages();\n      setImages(res.map((item: any) => item.image));\n    };\n    fetchImages();\n  }, []);\n\n  return {\n    email,\n    password,\n    images,\n    disabledButton,\n    handleLogin,\n    setRemember,\n    setPassword,\n    setEmail,\n  };\n};\n","export type ImmovableItem = {\n  contract_type_id: number | null;\n  building_id: number | null;\n  imm_type_id: number | null;\n  imm_number: number | null;\n  bank: boolean;\n  proxy: boolean;\n};\n\nexport type ImmovableItems = ImmovableItem[];\n\nexport type SelectItem = {\n  id: number;\n  title: string;\n};\n\nexport type ClientItem = {\n  phone: string | null;\n  full_name: string | null;\n};\n\nexport type NewCard = {\n  immovables: ImmovableItems;\n  clients: ClientItem[];\n  date_time: string;\n  dev_company_id: number | null;\n  dev_representative_id: number | null;\n  dev_manager_id: number | null;\n  room_id: number;\n  notary_id: number | null;\n};\n\n// eslint-disable-next-line no-shadow\nexport enum UserTypes {\n  PRINTER = 'printer',\n  RECEPTION = 'reception',\n}\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport Carousel from '../../../../components/Carousel/Carousel';\nimport CustomCheckBox from '../../../../components/CustomCheckBox';\nimport CustomInput from '../../../../components/CustomInput';\nimport CustomPasswordInput from '../../../../components/CustomPasswordInput';\nimport Loader from '../../../../components/Loader/Loader';\nimport PrimaryButton from '../../../../components/PrimaryButton';\nimport { useAuthorization } from './useAuthorization';\n\nconst Authorization = () => {\n  const meta = useAuthorization();\n\n  return (\n    <div className=\"login__authorization\">\n      <div className=\"login__carousel\">\n        {!meta.images && <Loader />}\n        {meta.images && <Carousel images={meta.images} />}\n      </div>\n      <form\n        className=\"login__form\"\n        autoComplete=\"on\"\n        onSubmit={meta.handleLogin}\n      >\n        <img src=\"/icons/logo-full.svg\" alt=\"Rakul\" />\n\n        <div className=\"mv12\">\n          <CustomInput\n            label=\"E-mail\"\n            value={meta.email}\n            onChange={meta.setEmail}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomPasswordInput\n            label=\"Пароль\"\n            value={meta.password}\n            onChange={meta.setPassword}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <PrimaryButton\n            label=\"Авторизуватися\"\n            onClick={meta.handleLogin}\n            disabled={meta.disabledButton}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomCheckBox\n            label=\"Запам’ятати мене\"\n            onChange={meta.setRemember}\n          />\n        </div>\n\n        <Link to=\"/forgot\" className=\"link\">\n          Забули пароль?\n        </Link>\n      </form>\n    </div>\n  );\n};\n\nexport default Authorization;\n","/* eslint-disable implicit-arrow-linebreak */\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState, useCallback, useMemo } from 'react';\nimport { State } from '../../../../store/types';\nimport { setModalInfo, forgotPassword } from '../../../../store/main/actions';\n\nexport const useForgotPassword = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState<string>('');\n\n  const handleReset = useCallback(\n    (e: any) => {\n      e.preventDefault();\n      dispatch(forgotPassword({ email }));\n    },\n    [email]\n  );\n\n  const disabledButton = useMemo(() => !email, [email]);\n\n  return {\n    email,\n    disabledButton,\n    setEmail,\n    handleReset,\n  };\n};\n","import React, { memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport CustomInput from '../../../../components/CustomInput';\nimport Modal from '../../../../components/Modal';\nimport { useModal } from '../../../../components/Modal/useModal';\nimport PrimaryButton from '../../../../components/PrimaryButton';\nimport { useForgotPassword } from './useForgotPassword';\n\nconst ForgotPassword = () => {\n  const meta = useForgotPassword();\n  const { modalProps } = useModal();\n\n  return (\n    <>\n      <form className=\"login__forgot\" onSubmit={meta.handleReset}>\n        <img src=\"/icons/logo-full.svg\" alt=\"Rakul\" />\n        <h1 className=\"login__forgot-title mv12\">Відновлення паролю</h1>\n\n        <div className=\"mv12\">\n          <CustomInput\n            label=\"E-mail\"\n            value={meta.email}\n            onChange={meta.setEmail}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <PrimaryButton\n            label=\"Відновити пароль\"\n            onClick={meta.handleReset}\n            disabled={meta.disabledButton}\n          />\n        </div>\n\n        <Link to=\"/\" className=\"link\">\n          Повернутися до авторизації\n        </Link>\n      </form>\n      <Modal {...modalProps} />\n    </>\n  );\n};\n\nexport default memo(ForgotPassword);\n","import React, { memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport CustomPasswordInput from '../../../../components/CustomPasswordInput';\nimport Modal from '../../../../components/Modal';\nimport { useModal } from '../../../../components/Modal/useModal';\nimport PrimaryButton from '../../../../components/PrimaryButton';\nimport { useUpdatePassword } from './useUpdatePassword';\n\nconst UpdatePassword = () => {\n  const meta = useUpdatePassword();\n  const { modalProps } = useModal();\n\n  return (\n    <>\n      <form className=\"login__update\" onSubmit={meta.handleUpdate}>\n        <img src=\"/icons/logo-full.svg\" alt=\"Rakul\" />\n        <h1 className=\"login__forgot-title mv12\">Новий пароль</h1>\n\n        <div className=\"mv12\">\n          <CustomPasswordInput\n            label=\"Пароль\"\n            value={meta.password}\n            onChange={meta.setPassword}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomPasswordInput\n            label=\"Повторіть пароль\"\n            value={meta.repeatPassword}\n            onChange={meta.setRepeatPassword}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <PrimaryButton\n            label=\"Відновити пароль\"\n            onClick={meta.handleUpdate}\n            disabled={meta.disabledButton}\n          />\n        </div>\n\n        <Link to=\"/\" className=\"link\">\n          Повернутися до авторизації\n        </Link>\n      </form>\n      <Modal {...modalProps} />\n    </>\n  );\n};\n\nexport default UpdatePassword;\n","/* eslint-disable implicit-arrow-linebreak */\nimport { useDispatch } from 'react-redux';\nimport { useState, useCallback, useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport resetPassword, {\n  ResetPasswordType,\n} from '../../../../services/login/resetPassword';\n\nexport const useUpdatePassword = () => {\n  const { token } = useParams<{ token: string }>();\n  const dispatch = useDispatch();\n  const [password, setPassword] = useState<string>('');\n  const [repeatPassword, setRepeatPassword] = useState<string>('');\n\n  const handleUpdate = useCallback(\n    (e: any) => {\n      e.preventDefault();\n      const data: ResetPasswordType = {\n        password,\n        token,\n        c_password: repeatPassword,\n      };\n\n      dispatch(resetPassword(data));\n    },\n    [password, repeatPassword]\n  );\n\n  const disabledButton = useMemo(\n    () => !password || !repeatPassword || password !== repeatPassword,\n    [password, repeatPassword]\n  );\n\n  return {\n    password,\n    repeatPassword,\n    disabledButton,\n    setPassword,\n    setRepeatPassword,\n    handleUpdate,\n  };\n};\n","import * as React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Authorization from './components/Authorization';\nimport './index.scss';\nimport ForgotPassword from './components/ForgotPassword';\nimport UpdatePassword from './components/UpdatePassword';\n\nconst LoginScreen = () => (\n  <main className=\"login\">\n    <Switch>\n      <Route path=\"/forgot\" exact>\n        <ForgotPassword />\n      </Route>\n      <Route path=\"/update-password/:token\">\n        <UpdatePassword />\n      </Route>\n      <Authorization />\n    </Switch>\n  </main>\n);\n\nexport default LoginScreen;\n","import React from 'react';\nimport './index.scss';\nimport { useApp } from './useApp';\nimport Scheduler from '../Screens/SchedulerScreen';\nimport Dashboard from '../Screens/DashboardScreen';\nimport Login from '../Screens/LoginScreen';\nimport { UserTypes } from '../types';\n\nconst App: React.FC = () => {\n  const { type } = useApp();\n\n  if (!type) {\n    return <Login />;\n  }\n\n  if (type === UserTypes.RECEPTION) {\n    return <Scheduler />;\n  }\n\n  if (type === UserTypes.PRINTER) {\n    return <Dashboard />;\n  }\n\n  return null;\n};\n\nexport default App;\n","import { useSelector, useDispatch } from 'react-redux';\n/* eslint-disable import/prefer-default-export */\nimport { useEffect } from 'react';\nimport { setUser } from '../store/main/actions';\nimport { State } from '../store/types';\n\nexport const useApp = () => {\n  const dispatch = useDispatch();\n  const { user } = useSelector((state: State) => state.main);\n\n  useEffect(() => {\n    const localUser = localStorage.getItem('user');\n\n    if (localUser) {\n      dispatch(setUser(JSON.parse(localUser)));\n    }\n  }, []);\n\n  return { type: user.type };\n};\n","import { UserTypes } from '../../types';\nimport { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\nexport type User = {\n  type: UserTypes | null;\n  token: null | string;\n};\n\nexport type ModalInfo = {\n  open: boolean;\n  success: boolean;\n  message: string;\n};\n\nexport type MainState = {\n  user: User;\n  modalInfo: ModalInfo;\n};\n\nconst initialState: MainState = {\n  user: {\n    type: null,\n    token: null,\n  },\n  modalInfo: {\n    open: false,\n    success: false,\n    message: '',\n  },\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_USER:\n      return { ...state, user: { ...state.user, ...action.payload } };\n    case ACTIONS.SET_MODAL_INFO:\n      return { ...state, modalInfo: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\nexport type SchedulerState = {\n  options: any;\n  appointments: any;\n  developersInfo: any;\n  newSelectedAppointment: any;\n  oldSelectedAppointment: any;\n  editAppointmentData: any;\n  isLoading: boolean;\n  filterInitialData: any;\n  schedulerLock: boolean;\n};\n\nconst initialState: SchedulerState = {\n  options: null,\n  appointments: [],\n  developersInfo: {},\n  newSelectedAppointment: null,\n  oldSelectedAppointment: null,\n  editAppointmentData: null,\n  isLoading: false,\n  filterInitialData: null,\n  schedulerLock: true,\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_OPTIONS:\n      return { ...state, options: action.payload };\n    case ACTIONS.SET_APPOINTMENTS:\n      return { ...state, appointments: action.payload };\n    case ACTIONS.ADD_NEW_APPOINTMENT:\n      return {\n        ...state,\n        appointments: [...state.appointments, action.payload],\n      };\n    case ACTIONS.EDIT_APPOINTMENTS:\n      return {\n        ...state,\n        appointments: [\n          ...state.appointments.filter(\n            (item: any) => item.i !== action.payload.i\n          ),\n          action.payload,\n        ],\n      };\n    case ACTIONS.SET_DEVELOPERS_INFO:\n      return { ...state, developersInfo: action.payload };\n    case ACTIONS.SET_IS_LOADING:\n      return { ...state, isLoading: action.payload };\n    case ACTIONS.SET_SELECTED_NEW_APPOINTMENT:\n      return { ...state, newSelectedAppointment: action.payload };\n    case ACTIONS.SET_SELECTED_OLD_APPOINTMENT:\n      return { ...state, oldSelectedAppointment: action.payload };\n    case ACTIONS.SET_EDIT_APPOINTMENT_DATA:\n      return { ...state, editAppointmentData: action.payload };\n    case ACTIONS.SET_FILTER_INITIAL_DATA:\n      return { ...state, filterInitialData: action.payload };\n    case ACTIONS.SET_SCHEDULER_LOCK:\n      return { ...state, schedulerLock: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","/* eslint-disable import/no-extraneous-dependencies */\nimport { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport main from './main/store';\nimport scheduler from './scheduler/store';\n\nconst reducer = combineReducers({\n  main,\n  scheduler,\n});\n\nexport default createStore(reducer, applyMiddleware(thunk));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  // eslint-disable-next-line\n  document.getElementById('root')\n);\n"],"sourceRoot":""}