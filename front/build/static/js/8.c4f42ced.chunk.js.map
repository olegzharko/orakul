{"version":3,"sources":["components/PrimaryButton/PrimaryButton.tsx","components/CustomInput/index.ts","components/CustomSelect/CustomSelect.tsx","components/CustomInput/CustomInput.tsx","components/CustomSwitch/CustomSwitch.tsx","components/RequestModal/useRequestModal.ts","components/RequestModal/RequestModal.tsx","components/RadioButtonsGroup/RadioButtonsGroup.tsx","components/Header/utils/useDebounce.ts","components/Modal/Modal.tsx","components/Header/components/UserSelect/UserSelect.tsx","components/Header/components/UserSelect/useUserSelect.ts","components/Header/components/PageNavigationControl/PageNavigationControl.tsx","components/Header/components/PageNavigationControl/usePageNavigationControl.ts","components/Header/Header.tsx","components/Header/useHeader.ts","components/PhoneMaskInput/PhoneMaskInput.tsx","components/AddFormButton/AddFormButton.tsx","components/RadioButtonsGroup/index.ts","components/ConfirmDialog/ConfirmDialog.tsx","components/RemoveFormButton/RemoveFormButton.tsx","components/Filter/Filter.tsx","components/Filter/useFilter.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/utils/formatAppointmentDate.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/SchedulerDay/SchedulerDay.js","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridLayout/GridLayout.js","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTableCell/GridTableCell.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTableCell/useGridTableCell.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTable/utils.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTable/GridTable.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/components/GridTable/useGridTable.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/SchedulerTable.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/Table/useSchedulerTable.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerFilterContainer/components/QuantityLabel.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerFilterContainer/components/SchedulerFilter/SchedulerFilter.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerFilterContainer/components/SchedulerFilter/useSchedulerFilter.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerFilterContainer/components/SchedulerLock/SchedulerLock.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerFilterContainer/components/SchedulerLock/useSchedulerLock.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerFilterContainer/SchedulerFilterContainer.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/components/Clients/Clients.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/components/Clients/useClients.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/components/ImmovableContainer/ImmovableContainer.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/components/ImmovableContainer/useImmovableContainer.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/types.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/Form.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/components/Form/useForm.ts","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/SchedulerForm.tsx","Screens/SchedulerScreen/components/SchedulerContainer/components/SchedulerForm/useSchedulerForm.ts","Screens/SchedulerScreen/components/SchedulerContainer/SchedulerContainer.tsx","Screens/SchedulerScreen/SchedulerScreen.tsx"],"names":["PrimaryButton","label","onClick","disabled","className","useState","isClicked","setIsClicked","handleClick","useCallback","e","useEffect","CustomSelect","onChange","data","selectedValue","size","required","disableDefaultValue","selected","setSelected","FormControl","variant","InputLabel","Select","error","value","event","val","target","length","defaultValue","MenuItem","map","id","title","memo","CustomInput","type","text","setText","CustomSwitch","FormControlLabel","control","Switch","checked","name","color","labelPlacement","useRequestModal","dispatch","useDispatch","modalInfo","useSelector","state","main","useMemo","handleClose","setModalInfo","open","RequestModal","success","message","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","RadioButtonsGroup","buttons","unicId","setSelectedValue","handleChange","htmlFor","uuidv4","useDebounce","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","Modal","children","UserSelect","history","useHistory","isOpen","setIsOpen","extra_type","user","userType","handleOpen","handleUserType","push","setUserTypeAction","userTypeButtons","filter","useUserSelect","src","alt","PageNavigationControl","onLogoClick","onReloadButtonClick","window","location","reload","onBackButtonClick","pathname","goBack","onForwardButtonClick","goForward","usePageNavigationControl","Header","searchText","setSearchText","count","setCount","searchAppointments","prev","onSearch","onLogout","localStorage","clear","setUser","token","useHeader","placeholder","PhoneMaskInput","mask","TextField","AddFormButton","onKeyPress","ConfirmDialog","handleConfirm","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","RemoveFormButton","index","Filter","props","meta","onFilterDataChange","horizontal","filterInitialData","schedulerLock","scheduler","shouldRender","setShouldRender","readers","reader","notaries","notary","accompanyings","accompanying","contractTypes","contract_type","developers","developer","sortType","sort_type","representative","setRepresentative","shouldRenderFilter","Boolean","selectedNotary","setSelectedNotary","selectedReader","setSelectedReader","selectedAccompanying","setSelectedAccompanying","selectedContractType","setSelectedContractType","selectedDeveloper","setSelectedDeveloper","selectedRepresentative","setSelectedRepresentative","selectedSortType","setSelectedSortType","clearAll","fetchFilterData","getDeveloperInfo","then","notary_id","reader_id","accompanying_id","contract_type_id","developer_id","dev_representative_id","useFilter","style","width","formatAppointmentDate","hours","rooms","days","raw","cell","Math","floor","day","date","year","time","room","split","reverse","join","SchedulerDay","ReactGridLayout","WidthProvider","RGL","GridLayout","appointments","cols","handleDrag","dragAndDropWidth","setDragAndDropWidth","oldSelectedAppointment","$","isSelected","rowHeight","margin","containerPadding","verticalCompact","preventCollision","layout","onDragStop","all","current","currentApp","find","item","i","isDraggable","appointment","borderLeft","backgroundColor","y","x","onClickCapture","ReactHtmlParser","short_info","Object","values","GridLayoutCell","roomsWithBackground","options","backGroundColor","hasBackGround","colour","work_time","day_and_date","payload","moment","isBefore","setSelectedNewAppointment","useGridTableCell","rowsQuantity","checkIsSelected","newSelectedAppointment","row","GridTable","separatedRooms","forEach","useGridTable","rows","_","rowIndex","columns","cellIndex","GridTableCell","SchedulerTable","isLoading","fetchSchedulerSettings","fetchAppointments","clearAppointments","shouldLoad","tableColumns","Array","fill","tableRows","handleAppointmentDrag","date_time","room_id","moveCalendarCard","onAppointmentClick","a","fetchCalendarCard","setSelectedOldAppointment","useSchedulerTable","Loader","QuantityLabel","whiteSpace","SchedulerFilter","fetchAppointmentsByFilter","useSchedulerFilter","SchedulerLock","setSchedulerLock","useSchedulerLock","SchedulerFilterContainer","Clients","clients","onPhoneChange","phone","onNameChange","full_name","useClients","marginLeft","onRemove","onAdd","ImmovableContainer","immovables","developersInfo","building","contracts","form_data","immovableTypes","immovable_type","onContractChange","onBuildingChange","building_id","onImmovableTypeChange","imm_type_id","onBankChange","bank","onProxyChange","proxy","onImmNumChange","imm_number","useImmovableContainer","immovableItem","clientItem","SchedulerForm","selectedCard","initialValues","edit","insideEdit","setEdit","card","setNotary","devCompanyId","setDevCompanyId","devRepresentativeId","setDevRepresentativeId","devManagerId","setDevManagerId","setImmovables","setClients","manager","activeAddButton","every","isDeleteDisabled","generator_step","ready","editButtonLabel","onNotaryChange","onDeveloperChange","setDevelopersInfo","fetchDeveloperInfo","onRepresentativeChange","onManagerChange","onImmovablesChange","onClientsChange","onClearAll","onAddImmovables","onRemoveImmovable","mapIndex","onAddClients","onRemoveClient","onFormCreate","dev_company_id","dev_manager_id","editCalendarCard","createNewCard","isConfirmDialogOpen","setIsConfirmDialogOpen","confirmDialogContent","onDeleteCardClick","onConfirmDialogClose","onConfirmDialogAgreed","removeCalendarCard","selectedNotaryId","selectedDeveloperId","selectedDevRepresentativeId","selectedDevManagerId","useForm","selectedTab","setSelectedTab","editAppointmentData","onCloseTab","setEditAppointmentData","useSchedulerForm","SchedulerContainer","modalProps","SchedulerScreen"],"mappings":"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","file":"static/js/8.c4f42ced.chunk.js","sourcesContent":["/* eslint-disable prettier/prettier */\n/* eslint-disable react/button-has-type */\nimport React, { useCallback, useState, useEffect } from 'react';\nimport './index.scss';\n\ntype Props = {\n  label: string;\n  onClick: (e: any) => void;\n  disabled?: boolean;\n  className?: string;\n};\n\nconst PrimaryButton = ({\n  label, onClick, disabled, className\n}: Props) => {\n  const [isClicked, setIsClicked] = useState<boolean>(false);\n\n  const handleClick = useCallback((e) => {\n    setIsClicked(true);\n    onClick(e);\n  }, [onClick]);\n\n  useEffect(() => {\n    setIsClicked(false);\n  }, [onClick]);\n\n  return (\n    <button\n      className={\n        `primary-button\n        ${disabled ? 'disabled' : ''}\n        ${className || ''}\n        ${isClicked ? 'clicked' : ''}\n        `\n      }\n      onClick={handleClick}\n      disabled={disabled}\n    >\n      {label}\n    </button>\n  );\n};\n\nexport default PrimaryButton;\n","export { default } from './CustomInput';\n","/* eslint-disable object-curly-newline */\n/* eslint-disable no-unused-vars */\nimport React, { useState, memo, useEffect } from 'react';\nimport './index.scss';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\ntype Data = {\n  id: number;\n  title: string;\n};\n\ntype Props = {\n  onChange: (value: string) => void;\n  data: Data[];\n  label: string;\n  selectedValue?: string | null | number;\n  disabled?: boolean;\n  size?: 'medium' | 'small';\n  className?: string;\n  required?: boolean;\n  disableDefaultValue?: boolean;\n};\n\nconst CustomSelect = ({\n  onChange,\n  data,\n  label,\n  selectedValue,\n  disabled,\n  size = 'medium',\n  className,\n  required,\n  disableDefaultValue,\n}: Props) => {\n  const [selected, setSelected] = useState(selectedValue || '');\n\n  useEffect(() => {\n    setSelected(selectedValue || '');\n  }, [selectedValue]);\n\n  const handleChange = (event: any) => {\n    const val = event.target.value;\n    setSelected(val);\n    onChange(val);\n  };\n\n  return (\n    <FormControl variant=\"outlined\" className={`customSelect ${className || ''}`} size={size}>\n      <InputLabel>{label}</InputLabel>\n      <Select\n        error={required && !selected}\n        value={selected}\n        onChange={handleChange}\n        disabled={disabled || data.length === 0}\n        defaultValue=\"\"\n      >\n        {!disableDefaultValue && (\n          <MenuItem value=\"\">\n            <em>Выбрать</em>\n          </MenuItem>\n        )}\n        {data.map(({ id, title }: Data) => (\n          <MenuItem value={id} key={id}>\n            {title}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default memo(CustomSelect);\n","/* eslint-disable no-unused-vars */\n/* eslint-disable react/react-in-jsx-scope */\nimport React, { useState, useEffect } from 'react';\nimport './index.scss';\nimport { TextField } from '@material-ui/core';\n\ntype Props = {\n  label: string;\n  value?: string | number | null;\n  onChange?: (value: string) => void;\n  type?: string;\n  disabled?: boolean;\n  required?: boolean;\n};\n\nconst CustomInput = ({\n  label,\n  onChange,\n  value = '',\n  type = 'string',\n  disabled,\n  required,\n}: Props) => {\n  const [text, setText] = useState(value || '');\n\n  useEffect(() => {\n    setText(value || '');\n  }, [value]);\n\n  const handleChange = (event: any) => {\n    setText(event.target.value);\n    onChange && onChange(event.target.value);\n  };\n\n  return (\n    <TextField\n      error={required && !text}\n      label={label}\n      variant=\"outlined\"\n      value={text}\n      onChange={handleChange}\n      type={type}\n      className=\"custom-input\"\n      disabled={disabled || false}\n    />\n  );\n};\n\nexport default CustomInput;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable prettier/prettier */\nimport React, { useEffect, useState, memo } from 'react';\nimport { FormControlLabel, Switch } from '@material-ui/core';\nimport './index.scss';\n\ntype Props = {\n  label: string\n  onChange: (val: boolean) => void;\n  selected: boolean;\n  disabled?: boolean;\n};\n\nconst CustomSwitch = ({\n  label,\n  onChange,\n  selected,\n  disabled\n}: Props) => {\n  const handleChange = (event: any) => {\n    onChange(event.target.checked);\n  };\n\n  return (\n    <FormControlLabel\n      control={(\n        <Switch\n          checked={selected || false}\n          onChange={handleChange}\n          name=\"checkedB\"\n          color=\"primary\"\n        />\n      )}\n      label={label}\n      labelPlacement=\"start\"\n      className=\"custom-switch\"\n      disabled={disabled || false}\n    />\n  );\n};\n\nexport default memo(CustomSwitch);\n","/* eslint-disable implicit-arrow-linebreak */\nimport { useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setModalInfo } from '../../store/main/actions';\nimport { State } from '../../store/types';\n\nexport const useRequestModal = () => {\n  const dispatch = useDispatch();\n  const { modalInfo } = useSelector((state: State) => state.main);\n\n  const modalProps = useMemo(\n    () => ({\n      ...modalInfo,\n      handleClose: () =>\n        dispatch(\n          setModalInfo({\n            ...modalInfo,\n            open: false,\n          })\n        ),\n    }),\n    [modalInfo]\n  );\n\n  return modalProps;\n};\n","import React from 'react';\nimport './index.scss';\nimport MModal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\ntype Props = {\n  open: boolean;\n  handleClose: () => void;\n  success: boolean;\n  message: string;\n};\n\n// eslint-disable-next-line prettier/prettier\nconst RequestModal = ({\n  open, handleClose, success, message\n}: Props) => (\n  <MModal\n    className=\"modal-container\"\n    open={open}\n    onClose={handleClose}\n    closeAfterTransition\n    BackdropComponent={Backdrop}\n    BackdropProps={{\n      timeout: 500,\n    }}\n  >\n    <Fade in={open}>\n      <div className={`modal ${success ? 'modal-success' : 'modal-failed'}`}>\n        <p className=\"message\">{message}</p>\n      </div>\n    </Fade>\n  </MModal>\n);\n\nexport default RequestModal;\n","/* eslint-disable react/require-default-props */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/no-unused-prop-types */\nimport React, { useState, memo, useEffect } from 'react';\nimport './index.scss';\nimport { v4 as uuidv4 } from 'uuid';\n\ntype Button = {\n  id: number | string;\n  title: string;\n};\n\ntype Props = {\n  buttons: Button[];\n  unicId: string;\n  onChange: (id: number | string) => void;\n  selected?: number | string | null;\n};\n\nexport const RadioButtonsGroup = ({\n  buttons,\n  onChange,\n  selected,\n  unicId,\n}: Props) => {\n  const [selectedValue, setSelectedValue] = useState(selected || buttons[0].id);\n\n  useEffect(() => {\n    setSelectedValue(selected || buttons[0].id);\n    onChange(selected || buttons[0].id);\n  }, [selected]);\n\n  const handleChange = (id: number | string) => {\n    setSelectedValue(id);\n    onChange(id);\n  };\n\n  return (\n    <div className=\"radio-buttons-group\">\n      {buttons.map(({ id, title }: Button) => (\n        <div\n          key={uuidv4()}\n          className={`radio-buttons-group__element ${\n            buttons.length === 1 ? 'edit' : ''\n          }`}\n        >\n          <input\n            type=\"radio\"\n            id={unicId + title}\n            value={id}\n            // eslint-disable-next-line eqeqeq\n            checked={selectedValue == id}\n            onChange={() => handleChange(id)}\n            className=\"input\"\n          />\n          <label htmlFor={unicId + title} className=\"label\">\n            {title}\n          </label>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioButtonsGroup);\n","import React, { useState, useEffect } from 'react';\n\nconst useDebounce = (value: string, delay: number) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value]);\n\n  return debouncedValue;\n};\n\nexport default useDebounce;\n","import React, { ReactElement } from 'react';\nimport MModal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\ntype Props = {\n  open: boolean;\n  handleClose: () => void;\n  children: ReactElement;\n};\n\nconst Modal = ({\n  open, handleClose, children\n}: Props) => (\n  <MModal\n    className=\"modal-container\"\n    open={open}\n    onClose={handleClose}\n    closeAfterTransition\n    BackdropComponent={Backdrop}\n    BackdropProps={{\n      timeout: 500,\n    }}\n  >\n    <Fade in={open}>{children}</Fade>\n  </MModal>\n);\n\nexport default Modal;\n","import React, { useState, useCallback } from 'react';\nimport Modal from '../../../Modal';\nimport PrimaryButton from '../../../PrimaryButton';\nimport './index.scss';\nimport { useUserSelect } from './useUserSelect';\n\nconst UserSelect = () => {\n  const {\n    isOpen,\n    userTypeButtons,\n    handleOpen,\n    handleClose,\n  } = useUserSelect();\n\n  if (!userTypeButtons.length) return null;\n\n  return (\n    <div className=\"user-select\">\n      <img src=\"/images/user.svg\" alt=\"user\" onClick={handleOpen} />\n      <Modal\n        open={isOpen}\n        handleClose={handleClose}\n      >\n        <div className=\"user-select__modal\">\n          {\n            userTypeButtons.map(({ label, onClick }) => (\n              <PrimaryButton\n                key={label}\n                label={label}\n                onClick={onClick}\n                className=\"user-select__button\"\n              />\n            ))\n          }\n\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default UserSelect;\n","import { useCallback, useState, useMemo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { setUserTypeAction } from '../../../../store/main/actions';\nimport { State } from '../../../../store/types';\nimport { UserTypes } from '../../../../types';\n\nexport const useUserSelect = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const extra_type = useSelector((state: State) => state.main.user.extra_type);\n  const userType = useSelector((state: State) => state.main.user.type);\n\n  const handleOpen = useCallback(() => {\n    setIsOpen(true);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setIsOpen(false);\n  }, []);\n\n  const handleUserType = useCallback((type: UserTypes) => {\n    setIsOpen(false);\n    setTimeout(() => {\n      history.push('/');\n      dispatch(setUserTypeAction(type));\n    }, 100);\n  }, []);\n\n  const userTypeButtons = useMemo(() => (\n    extra_type\n      .filter(({ type }) => type !== userType)\n      .map(({ title, type }) => ({\n        label: title,\n        onClick: () => handleUserType(type),\n      }))\n  ), [extra_type, userType]);\n\n  return {\n    isOpen,\n    userTypeButtons,\n    handleOpen,\n    handleClose,\n  };\n};\n","import React from 'react';\nimport { usePageNavigationControl } from './usePageNavigationControl';\n\nconst PageNavigationControl = () => {\n  const {\n    onLogoClick,\n    onBackButtonClick,\n    onReloadButtonClick,\n    onForwardButtonClick,\n  } = usePageNavigationControl();\n\n  return (\n    <div className=\"header__navigation\">\n      <img\n        className=\"header__logo\"\n        src=\"/images/logo.svg\"\n        alt=\"logo\"\n        onClick={onLogoClick}\n      />\n\n      <img\n        className=\"header__navButton\"\n        src=\"/images/arrow-left-nav.svg\"\n        alt=\"logo\"\n        onClick={onBackButtonClick}\n      />\n\n      <img\n        className=\"header__navButton\"\n        src=\"/images/arrow-right-nav.svg\"\n        alt=\"logo\"\n        onClick={onForwardButtonClick}\n      />\n\n      <img\n        className=\"header__navButton\"\n        src=\"/images/reload.svg\"\n        alt=\"logo\"\n        onClick={onReloadButtonClick}\n      />\n    </div>\n  );\n};\n\nexport default PageNavigationControl;\n","import { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nexport const usePageNavigationControl = () => {\n  const history = useHistory();\n\n  const onLogoClick = useCallback(() => {\n    history.push('/');\n  }, []);\n\n  const onReloadButtonClick = useCallback(() => {\n    window.location.reload();\n  }, []);\n\n  const onBackButtonClick = useCallback(() => {\n    if (history.location.pathname === '/') return;\n    history.goBack();\n  }, []);\n\n  const onForwardButtonClick = useCallback(() => {\n    history.goForward();\n  }, []);\n\n  return {\n    onLogoClick,\n    onBackButtonClick,\n    onReloadButtonClick,\n    onForwardButtonClick,\n  };\n};\n","import * as React from 'react';\nimport './index.scss';\n\nimport { useHeader } from './useHeader';\nimport UserSelect from './components/UserSelect';\nimport PageNavigationControl from './components/PageNavigationControl';\n\nconst Header = () => {\n  const {\n    onSearch,\n    onLogout,\n    searchText,\n  } = useHeader();\n\n  return (\n    <div className=\"header container\">\n      <PageNavigationControl />\n      <div className=\"header__search\">\n        <input\n          type=\"text\"\n          placeholder=\"Пошук...\"\n          onChange={onSearch}\n          value={searchText}\n        />\n        <img src=\"/images/search.svg\" alt=\"search\" />\n      </div>\n      <div className=\"header__control\">\n        <UserSelect />\n        <img src=\"/images/log-out.svg\" alt=\"logout\" onClick={onLogout} />\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport {\n  ChangeEvent, useState, useEffect, useCallback\n} from 'react';\nimport { setUser } from '../../store/main/actions';\nimport { searchAppointments } from '../../store/appointments/actions';\nimport useDebounce from './utils/useDebounce';\n\nexport const useHeader = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [searchText, setSearchText] = useState<string>('');\n  const [count, setCount] = useState<number>(0);\n\n  const debouncedValue = useDebounce(searchText, 1000);\n\n  useEffect(() => {\n    if (!count) {\n      setCount((prev: number) => prev + 1);\n      return;\n    }\n\n    dispatch(searchAppointments(debouncedValue));\n  }, [debouncedValue]);\n\n  const onSearch = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value);\n  }, [searchText]);\n\n  const onLogout = useCallback(() => {\n    localStorage.clear();\n    dispatch(setUser({ type: null, token: null }));\n    history.push('/');\n  }, []);\n\n  return {\n    onSearch,\n    onLogout,\n    searchText,\n  };\n};\n","/* eslint-disable no-unused-vars */\n/* eslint-disable react/react-in-jsx-scope */\nimport React, { useState, useEffect } from 'react';\nimport './index.scss';\nimport InputMask from 'react-input-mask';\nimport { TextField } from '@material-ui/core';\n\ntype Props = {\n  label: string;\n  value?: string | number | null;\n  onChange?: (value: string) => void;\n  disabled?: boolean;\n  required?: boolean;\n};\n\nconst PhoneMaskInput = ({\n  label,\n  onChange,\n  value = '',\n  disabled,\n}: Props) => {\n  const [text, setText] = useState(value || '');\n\n  useEffect(() => {\n    setText(value || '');\n  }, [value]);\n\n  const handleChange = (event: any) => {\n    setText(event.target.value);\n    onChange && onChange(event.target.value);\n  };\n\n  return (\n    <InputMask\n      className=\"custom-input\"\n      mask=\"+38(999)999-99-99\"\n      value={text}\n      disabled={disabled || false}\n      onChange={handleChange}\n    >\n      {() => <TextField variant=\"outlined\" label={label} disabled={disabled || false} />}\n    </InputMask>\n  );\n};\n\nexport default PhoneMaskInput;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport './index.scss';\n\ntype Props = {\n  onClick: () => void;\n  disabled?: boolean;\n};\n\nconst AddFormButton = ({ onClick, disabled }: Props) => {\n  const handleClick = () => {\n    if (disabled) return;\n    onClick();\n  };\n\n  return (\n    <div\n      className={`add-form-button ${disabled ? 'disabled' : ''}`}\n      onClick={handleClick}\n      onKeyPress={handleClick}\n    >\n      <img src=\"/images/plus.svg\" alt=\"plus\" />\n    </div>\n  );\n};\n\nexport default AddFormButton;\n","export { default } from './RadioButtonsGroup';\n","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport React from 'react';\n\ntype Props = {\n  open: boolean;\n  handleClose: () => void;\n  handleConfirm: () => void;\n  title: string;\n  message: string;\n}\n\nconst ConfirmDialog = ({ open, handleClose, handleConfirm, title, message }: Props) => (\n  <Dialog\n    open={open}\n    onClose={handleClose}\n    aria-labelledby=\"alert-dialog-title\"\n    aria-describedby=\"alert-dialog-description\"\n  >\n    <DialogTitle>{title}</DialogTitle>\n    <DialogContent>\n      <DialogContentText>{message}</DialogContentText>\n    </DialogContent>\n    <DialogActions>\n      <Button onClick={handleClose} color=\"primary\">\n        Закрити\n      </Button>\n      <Button onClick={handleConfirm} color=\"primary\" autoFocus>\n        Підтвердити\n      </Button>\n    </DialogActions>\n  </Dialog>\n);\n\nexport default ConfirmDialog;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport './index.scss';\n\ntype Props = {\n  onClick: (index: number) => void;\n  index: number;\n  disabled?: boolean;\n};\n\nconst RemoveFormButton = ({ onClick, index, disabled }: Props) => {\n  const handleClick = () => {\n    if (disabled) return;\n    onClick(index);\n  };\n\n  return (\n    <div\n      className={`remove-form-button ${disabled ? 'disabled' : ''}`}\n      onClick={handleClick}\n      onKeyPress={() => onClick(index)}\n    >\n      <img src=\"/images/minus.svg\" alt=\"minus\" />\n    </div>\n  );\n};\n\nexport default RemoveFormButton;\n","import React from 'react';\nimport './index.scss';\nimport CustomSelect from '../CustomSelect';\nimport { useFilter, Props } from './useFilter';\n\nconst Filter = (props: Props) => {\n  const meta = useFilter(props);\n\n  if (!meta.shouldRenderFilter) {\n    return null;\n  }\n\n  return (\n    <div className={`filter ${props.horizontal ? 'horizontal' : ''}`}>\n      {!props.horizontal && (\n        <div className=\"filter__header\">\n          <span className=\"title\">Фільтр</span>\n          <img\n            src=\"/images/clear-form.svg\"\n            alt=\"clear form\"\n            onClick={meta.clearAll}\n            className=\"filter__clear\"\n          />\n        </div>\n      )}\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '115px' : '100%' }}>\n        <CustomSelect\n          data={meta.notaries}\n          selectedValue={meta.selectedNotary}\n          onChange={meta.setSelectedNotary}\n          label=\"Нотаріус\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '90px' : '100%' }}>\n        <CustomSelect\n          data={meta.readers}\n          selectedValue={meta.selectedReader}\n          onChange={meta.setSelectedReader}\n          label=\"Читач\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '110px' : '100%' }}>\n        <CustomSelect\n          data={meta.accompanyings}\n          selectedValue={meta.selectedAccompanying}\n          onChange={meta.setSelectedAccompanying}\n          label=\"Видавач\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '150px' : '100%' }}>\n        <CustomSelect\n          data={meta.contractTypes}\n          selectedValue={meta.selectedContractType}\n          onChange={meta.setSelectedContractType}\n          label=\"Тип договору\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '140px' : '100%' }}>\n        <CustomSelect\n          data={meta.developers}\n          selectedValue={meta.selectedDeveloper}\n          onChange={meta.setSelectedDeveloper}\n          label=\"Забудовник\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      <div className=\"filter__select\" style={{ width: props.horizontal ? '125px' : '100%' }}>\n        <CustomSelect\n          data={meta.representative}\n          selectedValue={meta.selectedRepresentative}\n          onChange={meta.setSelectedRepresentative}\n          label=\"Підписант\"\n          size={props.horizontal ? 'small' : 'medium'}\n        />\n      </div>\n\n      {!props.horizontal && (\n        <div\n          className=\"filter__select\"\n        >\n          <CustomSelect\n            data={meta.sortType}\n            selectedValue={meta.selectedSortType}\n            onChange={meta.setSelectedSortType}\n            label=\"Сортувати\"\n            size=\"medium\"\n          />\n        </div>\n      )}\n\n      {props.horizontal && (\n        <div className=\" df\">\n          <img\n            src=\"/images/clear-form.svg\"\n            alt=\"clear form\"\n            onClick={meta.clearAll}\n            className=\"filter__clear\"\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Filter;\n","import {\n  useEffect, useMemo, useState, useCallback\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FilterData, State } from '../../store/types';\nimport { SelectItem } from '../../types';\nimport { fetchFilterData } from '../../store/filter/actions';\nimport getDeveloperInfo from '../../services/getDeveloperInfo';\n\nexport type Props = {\n  onFilterDataChange: (data: FilterData) => void;\n  horizontal?: boolean;\n}\n\nexport const useFilter = ({ onFilterDataChange, horizontal }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n  const { filterInitialData } = useSelector((state: State) => state.filter);\n  const { schedulerLock } = useSelector((state: State) => state.scheduler);\n\n  const [shouldRender, setShouldRender] = useState<boolean>(false);\n\n  const readers = useMemo(() => filterInitialData?.reader, [filterInitialData]);\n  const notaries = useMemo(() => filterInitialData?.notary, [\n    filterInitialData,\n  ]);\n  const accompanyings = useMemo(() => filterInitialData?.accompanying, [\n    filterInitialData,\n  ]);\n  const contractTypes = useMemo(() => filterInitialData?.contract_type, [\n    filterInitialData,\n  ]);\n  const developers = useMemo(() => filterInitialData?.developer, [\n    filterInitialData,\n  ]);\n  const sortType = useMemo(() => filterInitialData?.sort_type, [\n    filterInitialData,\n  ]);\n  const [representative, setRepresentative] = useState<SelectItem[]>([]);\n\n  const shouldRenderFilter = useMemo(() => Boolean(filterInitialData), [\n    filterInitialData,\n  ]);\n\n  // selected values and CTA\n  const [selectedNotary, setSelectedNotary] = useState<string | null>(null);\n  const [selectedReader, setSelectedReader] = useState<string | null>(null);\n  const [selectedAccompanying, setSelectedAccompanying] = useState<\n    string | null\n  >(null);\n  const [selectedContractType, setSelectedContractType] = useState<\n    string | null\n  >(null);\n  const [selectedDeveloper, setSelectedDeveloper] = useState<string | null>(\n    null\n  );\n  const [selectedRepresentative, setSelectedRepresentative] = useState<\n    string | null\n  >(null);\n  const [selectedSortType, setSelectedSortType] = useState<string | null>(null);\n\n  const clearAll = useCallback(() => {\n    setSelectedNotary(null);\n    setSelectedReader(null);\n    setSelectedAccompanying(null);\n    setSelectedContractType(null);\n    setSelectedDeveloper(null);\n    setSelectedRepresentative(null);\n    setSelectedSortType(null);\n  }, []);\n\n  // useEffects\n  useEffect(() => {\n    dispatch(fetchFilterData());\n  }, []);\n\n  useEffect(() => {\n    setSelectedRepresentative(null);\n    if (token && selectedDeveloper) {\n      getDeveloperInfo(token, +selectedDeveloper)\n        .then((data) => setRepresentative(data.representative || []));\n    }\n  }, [selectedDeveloper]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      setShouldRender(true);\n      return;\n    }\n\n    const data: FilterData = {\n      notary_id: selectedNotary || null,\n      reader_id: selectedReader || null,\n      accompanying_id: selectedAccompanying || null,\n      contract_type_id: selectedContractType || null,\n      developer_id: selectedDeveloper || null,\n      dev_representative_id: selectedRepresentative || null,\n    };\n\n    if (!horizontal) {\n      data.sort_type = selectedSortType;\n    }\n\n    onFilterDataChange(data);\n  }, [\n    selectedNotary,\n    selectedReader,\n    selectedAccompanying,\n    selectedContractType,\n    selectedDeveloper,\n    selectedRepresentative,\n    selectedSortType,\n  ]);\n\n  useEffect(() => {\n    if (schedulerLock) return;\n    clearAll();\n  }, [schedulerLock]);\n\n  return {\n    shouldRenderFilter,\n    notaries,\n    readers,\n    accompanyings,\n    contractTypes,\n    developers,\n    representative,\n    sortType,\n    selectedNotary,\n    selectedReader,\n    selectedRepresentative,\n    selectedDeveloper,\n    selectedContractType,\n    selectedAccompanying,\n    selectedSortType,\n    setSelectedNotary,\n    setSelectedReader,\n    setSelectedAccompanying,\n    setSelectedContractType,\n    setSelectedDeveloper,\n    setSelectedRepresentative,\n    setSelectedSortType,\n    clearAll,\n  };\n};\n","const formatAppointmentDate = (\n  hours: any,\n  rooms: any,\n  days: any,\n  raw: number,\n  cell: number\n) => {\n  const { day, date, year } = days[Math.floor(raw / hours.length)];\n  const { time } = hours[raw % hours.length];\n  const room = rooms[cell].id;\n  return {\n    day,\n    date: date.split('.').reverse().join('.'),\n    year,\n    time,\n    room,\n  };\n};\n\nexport default formatAppointmentDate;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport './SchedulerDay.scss';\n\nconst SchedulerDay = ({ day, hours }) => (\n  <div className=\"scheduler__weekDay\">\n    <div className=\"scheduler__day\">\n      <p>\n        {day.day}\n        <br />\n        {day.date}\n      </p>\n    </div>\n    <div className=\"scheduler__timeLine\">\n      {hours.map(({ time }) => (\n        <p key={time}>{time}</p>\n      ))}\n    </div>\n  </div>\n);\n\nexport default SchedulerDay;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './GridLayout.scss';\nimport RGL, { WidthProvider } from 'react-grid-layout';\nimport $ from 'jquery';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useSelector } from 'react-redux';\nimport ReactHtmlParser from 'react-html-parser';\n\nconst ReactGridLayout = WidthProvider(RGL);\n\nexport default function GridLayout({\n  appointments,\n  cols,\n  handleDrag,\n  handleClick,\n}) {\n  const [dragAndDropWidth, setDragAndDropWidth] = useState(1200);\n  const { schedulerLock } = useSelector((state) => state.scheduler);\n  const oldSelectedAppointment = useSelector(\n    (state) => state.scheduler.oldSelectedAppointment\n  );\n\n  useEffect(() => {\n    setDragAndDropWidth($('.scheduler__appointments').width());\n  }, []);\n\n  const onDrag = (all, current) => {\n    const currentApp = all.find((item) => item.i === current.i);\n    handleDrag(currentApp);\n    handleClick(currentApp);\n  };\n\n  const isSelected = useCallback((raw, cell) => oldSelectedAppointment?.raw === raw\n    && oldSelectedAppointment?.cell === cell, [oldSelectedAppointment]);\n\n  if (!appointments) {\n    return <span>Loading...</span>;\n  }\n\n  return (\n    <ReactGridLayout\n      className=\"scheduler__dragAndDrop\"\n      cols={cols}\n      rowHeight={80}\n      width={dragAndDropWidth}\n      margin={[0, 0]}\n      containerPadding={[0, 0]}\n      verticalCompact={false}\n      preventCollision\n      layout={appointments}\n      onDragStop={onDrag}\n      isDraggable={!schedulerLock}\n    >\n      {appointments.map((appointment) => (\n        <div\n          key={appointment.i}\n          className=\"appointment\"\n          style={{\n            borderLeft: `4px solid ${appointment.color}`,\n            backgroundColor: isSelected(appointment.y, appointment.x) ? appointment.color : ''\n          }}\n          onClickCapture={() => handleClick(appointment)}\n        >\n          <div className=\"appointment__title\">{ReactHtmlParser(appointment.title)}</div>\n          <table className=\"appointment__table\">\n            <tbody>\n              <tr>\n                {\n                  appointment.short_info && (\n                    Object.values(appointment.short_info).map((item) => (\n                      <td key={uuidv4()}>{item}</td>\n                    ))\n                  )\n                }\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      ))}\n    </ReactGridLayout>\n  );\n}\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React from 'react';\nimport { Props, useGridTableCell } from './useGridTableCell';\n\nconst GridLayoutCell = (props: Props) => {\n  const { backGroundColor, onClick } = useGridTableCell(props);\n\n  return (\n    <td\n      onClick={onClick}\n      style={{\n        width: `calc(100% / ${props.rowsQuantity})`,\n        backgroundColor: props.selected ? '#E5E5E5' : backGroundColor,\n      }}\n    />\n  );\n};\n\nexport default GridLayoutCell;\n","/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable operator-linebreak */\nimport { useMemo, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { State } from '../../../../../../../../store/types';\nimport formatAppointmentDate from '../../utils/formatAppointmentDate';\nimport { setSelectedNewAppointment } from '../../../../../../../../store/scheduler/actions';\nimport { RoomWithBackground } from '../GridTable/useGridTable';\n\nexport type Props = {\n  rowsQuantity: number;\n  raw: number;\n  cell: number;\n  selected: boolean;\n  roomsWithBackground: RoomWithBackground[];\n};\n\nexport const useGridTableCell = ({ raw, cell, roomsWithBackground }: Props) => {\n  const { options } = useSelector((state: State) => state.scheduler);\n  const dispatch = useDispatch();\n\n  const backGroundColor = useMemo(() => {\n    const hasBackGround = roomsWithBackground.find((room: any) => room.index === cell);\n    if (hasBackGround) {\n      return hasBackGround?.colour;\n    }\n\n    return '';\n  }, []);\n\n  const rooms = useMemo(() => options?.rooms, [options]);\n  const hours = useMemo(() => options?.work_time, [options]);\n  const days = useMemo(() => options?.day_and_date, [options]);\n\n  const onClick = useCallback(() => {\n    const payload = formatAppointmentDate(hours, rooms, days, raw, cell);\n    const isBefore = moment(\n      `${payload.year}.${payload.date}. ${payload.time}`\n    ).isBefore(moment());\n\n    if (isBefore) return;\n    dispatch(setSelectedNewAppointment({\n      ...payload,\n      raw,\n      cell,\n      date: payload.date\n    }));\n  }, [hours, rooms, days, raw, cell]);\n\n  return { backGroundColor, onClick };\n};\n","/* eslint-disable arrow-body-style */\n\nexport const checkIsSelected = (newSelectedAppointment: any, row: number, cell: number) => {\n  return newSelectedAppointment?.raw === row && newSelectedAppointment?.cell === cell;\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport GridTableCell from '../GridTableCell/GridTableCell';\nimport { Props, useGridTable } from './useGridTable';\nimport { checkIsSelected } from './utils';\n\nexport default function GridTable(props: Props) {\n  const { newSelectedAppointment, roomsWithBackground } = useGridTable(props);\n\n  return (\n    <div className=\"scheduler__bodyTable\">\n      <table>\n        <tbody>\n          {props.rows.map((_: any, rowIndex: number) => (\n            <tr key={uuidv4()}>\n              {props.columns.map((day: any, cellIndex: number) => (\n                <GridTableCell\n                  selected={checkIsSelected(newSelectedAppointment, rowIndex, cellIndex)}\n                  roomsWithBackground={roomsWithBackground}\n                  rowsQuantity={props.rows.length}\n                  raw={rowIndex}\n                  cell={cellIndex}\n                  key={uuidv4()}\n                />\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { State } from '../../../../../../../../store/types';\n\nexport type Props = {\n  rows: any;\n  columns: any;\n  rooms: any;\n};\n\nexport type RoomWithBackground = {\n  index: number;\n  colour: string;\n}\n\nexport const useGridTable = (props: Props) => {\n  const newSelectedAppointment = useSelector(\n    (state: State) => state.scheduler.newSelectedAppointment\n  );\n\n  // eslint-disable-next-line array-callback-return\n  const roomsWithBackground = useMemo(() => {\n    const separatedRooms: RoomWithBackground[] = [];\n    props.rooms.forEach((room: any, index: number) => {\n      if (room.color) {\n        separatedRooms.push({ index, colour: room.color });\n      }\n    });\n\n    return separatedRooms;\n  }, []);\n\n  return { newSelectedAppointment, roomsWithBackground };\n};\n","import React from 'react';\nimport './index.scss';\nimport { v4 as uuidv4 } from 'uuid';\n\n// components\nimport { useSchedulerTable } from './useSchedulerTable';\nimport Loader from '../../../../../../components/Loader/Loader';\nimport SchedulerDay from './components/SchedulerDay/SchedulerDay';\nimport GridLayout from './components/GridLayout/GridLayout';\nimport GridTable from './components/GridTable/GridTable';\n\nconst SchedulerTable = () => {\n  const {\n    shouldLoad,\n    rooms,\n    hours,\n    tableRows,\n    tableColumns,\n    days,\n    appointments,\n    handleAppointmentDrag,\n    onAppointmentClick,\n  } = useSchedulerTable();\n\n  if (shouldLoad) {\n    return (\n      <div className=\"scheduler\">\n        <Loader />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"scheduler\">\n      <div className=\"scheduler__header\">\n        <div />\n        <div>\n          <table>\n            <tbody>\n              <tr>\n                {rooms.map(({ title }: any) => (\n                  <td\n                    key={title}\n                    style={{ width: `calc(100% / ${rooms.length})` }}\n                  >\n                    {title}\n                  </td>\n                ))}\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <div className=\"scheduler__body\">\n        <div className=\"scheduler__dayBar\">\n          {days.map((item: any) => (\n            <SchedulerDay day={item} hours={hours} key={uuidv4()} />\n          ))}\n        </div>\n        <div className=\"scheduler__appointments\">\n          <GridTable rows={tableRows} columns={tableColumns} rooms={rooms} />\n          <GridLayout\n            appointments={appointments}\n            cols={tableColumns.length}\n            handleDrag={handleAppointmentDrag}\n            handleClick={onAppointmentClick}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SchedulerTable;\n","import { useCallback, useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UserTypes } from '../../../../../../types';\nimport {\n  setSelectedOldAppointment,\n  fetchCalendarCard,\n  fetchSchedulerSettings,\n  moveCalendarCard,\n} from '../../../../../../store/scheduler/actions';\nimport { clearAppointments, fetchAppointments } from '../../../../../../store/appointments/actions';\nimport { State } from '../../../../../../store/types';\nimport formatAppointmentDate from './utils/formatAppointmentDate';\n\nexport const useSchedulerTable = () => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n  const { options, isLoading } = useSelector((state: State) => state.scheduler);\n  const { appointments } = useSelector((state: State) => state.appointments);\n\n  useEffect(() => {\n    if (!isLoading) {\n      dispatch(fetchSchedulerSettings());\n      dispatch(fetchAppointments());\n    }\n\n    return () => {\n      dispatch(clearAppointments());\n    };\n  }, [token]);\n\n  const rooms = useMemo(() => options?.rooms, [options]);\n  const hours = useMemo(() => options?.work_time, [options]);\n\n  const shouldLoad = useMemo(() => isLoading || !options, [\n    isLoading,\n    rooms,\n    hours,\n  ]);\n\n  const tableColumns = useMemo(() => new Array(rooms?.length || 0).fill(1), [\n    rooms,\n  ]);\n\n  const days = useMemo(() => options?.day_and_date, [options]);\n\n  const tableRows = useMemo(\n    () => new Array(hours?.length * days?.length || 0).fill(1),\n    [hours]\n  );\n\n  const handleAppointmentDrag = useCallback(\n    (appointment) => {\n      const payload = formatAppointmentDate(\n        hours,\n        rooms,\n        days,\n        appointment.y,\n        appointment.x\n      );\n\n      const date_time = `${payload.year}.${payload.date}. ${payload.time}`;\n\n      const data = {\n        date_time,\n        room_id: payload.room,\n      };\n\n      dispatch(moveCalendarCard(data, appointment.i));\n    },\n    [hours, days, rooms, days]\n  );\n\n  const onAppointmentClick = useCallback(\n    async ({ x, y, i }: any) => {\n      const payload = formatAppointmentDate(hours, rooms, days, y, x);\n\n      dispatch(fetchCalendarCard(i));\n\n      dispatch(\n        setSelectedOldAppointment({\n          ...payload,\n          raw: y,\n          cell: x,\n          i,\n          date: payload.date,\n        })\n      );\n    },\n    [hours, rooms, days]\n  );\n\n  return {\n    shouldLoad,\n    rooms,\n    hours,\n    tableRows,\n    tableColumns,\n    days,\n    appointments,\n    handleAppointmentDrag,\n    onAppointmentClick,\n  };\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { State } from '../../../../../../../store/types';\n\nexport const QuantityLabel = () => {\n  const { appointments } = useSelector((state: State) => state.appointments);\n\n  return (\n    <span style={{ whiteSpace: 'nowrap' }}>\n      {`В роботі: ${appointments?.length}`}\n    </span>\n  );\n};\n\nexport default QuantityLabel;\n","import * as React from 'react';\nimport Filter from '../../../../../../../../components/Filter';\nimport { useSchedulerFilter } from './useSchedulerFilter';\n\nconst SchedulerFilter = () => {\n  const { onFilterDataChange } = useSchedulerFilter();\n\n  return (\n    <Filter onFilterDataChange={onFilterDataChange} horizontal />\n  );\n};\n\nexport default SchedulerFilter;\n","import { useDispatch } from 'react-redux';\nimport { useCallback, useState } from 'react';\nimport { FilterData } from '../../../../../../../../store/types';\nimport { fetchAppointmentsByFilter } from '../../../../../../../../store/appointments/actions';\n\nexport const useSchedulerFilter = () => {\n  const dispatch = useDispatch();\n\n  const onFilterDataChange = useCallback((data: FilterData) => {\n    dispatch(fetchAppointmentsByFilter(data));\n  }, []);\n\n  return { onFilterDataChange };\n};\n","import React from 'react';\nimport { useSchedulerLock } from './useSchedulerLock';\nimport './index.scss';\n\nconst SchedulerLock = () => {\n  const { onClick, schedulerLock } = useSchedulerLock();\n\n  return (\n    <div className={`scheduler__lock-button ${schedulerLock ? '' : 'unLock'}`}>\n      <img src=\"/images/lock.svg\" alt=\"lock\" onClick={onClick} />\n    </div>\n  );\n};\n\nexport default SchedulerLock;\n","import { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setSchedulerLock } from '../../../../../../../../store/scheduler/actions';\nimport { State } from '../../../../../../../../store/types';\n\nexport const useSchedulerLock = () => {\n  const dispatch = useDispatch();\n  const { schedulerLock } = useSelector((state: State) => state.scheduler);\n\n  const onClick = useCallback(() => {\n    dispatch(setSchedulerLock(!schedulerLock));\n  }, [schedulerLock]);\n\n  return { onClick, schedulerLock };\n};\n","import React from 'react';\nimport Filter from '../../../../../../components/Filter';\nimport QuantityLabel from './components/QuantityLabel';\nimport SchedulerFilter from './components/SchedulerFilter';\nimport SchedulerLock from './components/SchedulerLock';\nimport './index.scss';\n\nconst SchedulerFilterContainer = () => (\n  <div className=\"scheduler__filter\">\n    <QuantityLabel />\n    <SchedulerFilter />\n    <SchedulerLock />\n  </div>\n);\n\nexport default SchedulerFilterContainer;\n","/* eslint-disable react/destructuring-assignment */\nimport React, { memo } from 'react';\nimport './index.scss';\nimport { v4 as uuidv4 } from 'uuid';\nimport AddFormButton from '../../../../../../../../../../components/AddFormButton';\nimport CustomInput from '../../../../../../../../../../components/CustomInput/CustomInput';\nimport RemoveFormButton from '../../../../../../../../../../components/RemoveFormButton';\nimport { Props, useClients } from './useClients';\nimport PhoneMaskInput from '../../../../../../../../../../components/PhoneMaskInput';\n\nconst Clients = (props: Props) => {\n  const meta = useClients(props);\n\n  return (\n    <div className=\"mv12\">\n      {props.clients.map((item, index) => (\n        <div className=\"clients__item mv12\">\n          <CustomInput\n            label=\"ПІБ\"\n            value={item.full_name}\n            onChange={(val) => meta.onNameChange(index, val)}\n            disabled={props.disabled || false}\n          />\n\n          <div className=\"mv12 df-jc-sb\">\n            <PhoneMaskInput\n              label=\"Номер телефону\"\n              value={item.phone}\n              onChange={(val) => meta.onPhoneChange(index, val)}\n              disabled={props.disabled || false}\n            />\n\n            {props.clients.length > 1 && (\n              <div style={{ marginLeft: '12px' }}>\n                <RemoveFormButton\n                  onClick={props.onRemove}\n                  index={index}\n                  disabled={props.disabled || false}\n                />\n              </div>\n            )}\n\n            {index === props.clients.length - 1 && (\n              <div style={{ marginLeft: '12px' }}>\n                <AddFormButton\n                  onClick={props.onAdd}\n                  disabled={props.disabled || false}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(Clients);\n","import { useCallback } from 'react';\nimport { CodeFixAction } from 'typescript';\nimport { ClientItem } from '../../../../../../../../../../types';\n\nexport type Props = {\n  clients: ClientItem[];\n  onChange: (index: number, value: ClientItem) => void;\n  onAdd: () => void;\n  onRemove: (index: number) => void;\n  disabled?: boolean;\n};\n\nexport const useClients = ({ onChange, clients }: Props) => {\n  const onPhoneChange = useCallback(\n    (index: number, value: string) => {\n      onChange(index, {\n        ...clients[index],\n        phone: value,\n      });\n    },\n    [clients]\n  );\n\n  const onNameChange = useCallback(\n    (index: number, value: string) => {\n      onChange(index, {\n        ...clients[index],\n        full_name: value,\n      });\n    },\n    [clients]\n  );\n\n  return { onPhoneChange, onNameChange };\n};\n","/* eslint-disable prettier/prettier */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable no-unused-vars */\nimport React, { memo } from 'react';\nimport './index.scss';\nimport { v4 as uuidv4 } from 'uuid';\nimport AddFormButton from '../../../../../../../../../../components/AddFormButton';\nimport CustomInput from '../../../../../../../../../../components/CustomInput';\nimport CustomSelect from '../../../../../../../../../../components/CustomSelect';\nimport CustomSwitch from '../../../../../../../../../../components/CustomSwitch';\nimport RadioButtonsGroup from '../../../../../../../../../../components/RadioButtonsGroup';\nimport RemoveFormButton from '../../../../../../../../../../components/RemoveFormButton';\nimport { ImmovableItem } from '../../../../../../../../../../types';\nimport { useImmovableContainer, Props } from './useImmovableContainer';\n\nconst ImmovableContainer = (props: Props) => {\n  const meta = useImmovableContainer(props);\n  return (\n    <div className=\"mv12 immovables__group\">\n      {props.immovables.map((item: ImmovableItem, index: number) => (\n        <div className=\"immovables__item mv12\">\n          <RadioButtonsGroup\n            buttons={\n              props.disabled\n                ? meta.contracts.filter(\n                  ({ id }: any) => id === (item.contract_type_id || meta.contracts[0].id)\n                )\n                : meta.contracts\n            }\n            onChange={(val) => meta.onContractChange(index, +val)}\n            selected={item.contract_type_id}\n            unicId={`contract-${index}`}\n          />\n\n          <div className=\"mv12\">\n            <CustomSelect\n              required\n              onChange={(val) => meta.onBuildingChange(index, val)}\n              data={meta.building}\n              label=\"Будинок\"\n              selectedValue={item.building_id}\n              disabled={props.disabled || false}\n            />\n          </div>\n\n          <RadioButtonsGroup\n            buttons={\n              props.disabled\n                ? meta.immovableTypes.filter(\n                  ({ id }: any) => id === (item.imm_type_id || meta.immovableTypes[0].id)\n                )\n                : meta.immovableTypes\n            }\n            onChange={(val) => meta.onImmovableTypeChange(index, +val)}\n            selected={item.imm_type_id}\n            unicId={`types-${index}`}\n          />\n\n          <div className=\"mv12\">\n            <CustomSwitch\n              label=\"Банк\"\n              onChange={(val) => meta.onBankChange(index, val)}\n              selected={item.bank}\n              disabled={props.disabled}\n            />\n          </div>\n\n          <div className=\"mv12\">\n            <CustomSwitch\n              label=\"Довіреність\"\n              onChange={(val) => meta.onProxyChange(index, val)}\n              selected={item.proxy}\n              disabled={props.disabled}\n            />\n          </div>\n\n          <div className=\"mv12 df-jc-sb\">\n            <CustomInput\n              required\n              label=\"Номер нерухомості\"\n              onChange={(val) => meta.onImmNumChange(index, val)}\n              value={item.imm_number}\n              disabled={props.disabled}\n            />\n\n            {props.immovables.length > 1 && (\n              <div style={{ marginLeft: '12px' }}>\n                <RemoveFormButton\n                  onClick={props.onRemove}\n                  index={index}\n                  disabled={props.disabled}\n                />\n              </div>\n            )}\n\n            {index === props.immovables.length - 1 && (\n              <div style={{ marginLeft: '12px' }}>\n                <AddFormButton\n                  onClick={props.onAdd}\n                  disabled={props.disabled}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(ImmovableContainer);\n","import { useMemo, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport { State } from '../../../../../../../../../../store/types';\nimport {\n  ImmovableItem,\n  ImmovableItems,\n} from '../../../../../../../../../../types';\n\nexport type Props = {\n  immovables: ImmovableItems;\n  onChange: (index: number, value: ImmovableItem) => void;\n  onAdd: () => void;\n  onRemove: (index: number) => void;\n  disabled?: boolean;\n};\n\nexport const useImmovableContainer = ({ immovables, onChange }: Props) => {\n  const { options, developersInfo } = useSelector(\n    (state: State) => state.scheduler\n  );\n\n  const building = useMemo(() => developersInfo?.building || [], [\n    developersInfo,\n  ]);\n\n  const contracts = useMemo(() => options?.form_data.contract_type, [options]);\n\n  const immovableTypes = useMemo(() => options?.form_data.immovable_type, [\n    options,\n  ]);\n\n  // onChange functions\n  const onContractChange = useCallback(\n    (index: number, id: number) => {\n      onChange(index, {\n        ...immovables[index],\n        contract_type_id: id,\n      });\n    },\n    [immovables]\n  );\n\n  const onBuildingChange = useCallback(\n    (index: number, id: string) => {\n      onChange(index, {\n        ...immovables[index],\n        building_id: +id,\n      });\n    },\n    [immovables]\n  );\n\n  const onImmovableTypeChange = useCallback(\n    (index: number, id: number) => {\n      onChange(index, {\n        ...immovables[index],\n        imm_type_id: id,\n      });\n    },\n    [immovables]\n  );\n\n  const onBankChange = useCallback(\n    (index: number, val: boolean) => {\n      onChange(index, {\n        ...immovables[index],\n        bank: val,\n      });\n    },\n    [immovables]\n  );\n\n  const onProxyChange = useCallback(\n    (index: number, val: boolean) => {\n      onChange(index, {\n        ...immovables[index],\n        proxy: val,\n      });\n    },\n    [immovables]\n  );\n\n  const onImmNumChange = useCallback(\n    (index: number, val: string) => {\n      onChange(index, {\n        ...immovables[index],\n        imm_number: val,\n      });\n    },\n    [immovables]\n  );\n\n  return {\n    building,\n    contracts,\n    immovableTypes,\n    onContractChange,\n    onBuildingChange,\n    onImmovableTypeChange,\n    onBankChange,\n    onProxyChange,\n    onImmNumChange,\n  };\n};\n","import { ClientItem, ImmovableItem } from '../../../../../../../../types';\n\nexport type ImmovableItemKey = keyof ImmovableItem;\n\nexport const immovableItem: ImmovableItem = {\n  contract_type_id: null,\n  building_id: null,\n  imm_type_id: null,\n  imm_number: null,\n  bank: false,\n  proxy: false,\n};\n\nexport const clientItem: ClientItem = {\n  phone: null,\n  full_name: null,\n};\n","/* eslint-disable indent */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React, { memo } from 'react';\nimport RadioButtonsGroup from '../../../../../../../../components/RadioButtonsGroup';\nimport CustomSelect from '../../../../../../../../components/CustomSelect';\nimport './index.scss';\nimport Clients from './components/Clients/Clients';\nimport PrimaryButton from '../../../../../../../../components/PrimaryButton';\nimport Loader from '../../../../../../../../components/Loader/Loader';\nimport ImmovableContainer from './components/ImmovableContainer';\nimport { useForm, Props } from './useForm';\nimport ConfirmDialog from '../../../../../../../../components/ConfirmDialog';\n\nconst SchedulerForm = (props: Props) => {\n  const meta = useForm(props);\n\n  if (meta.shouldLoad) {\n    return (\n      <div className=\"schedulerForm\">\n        <Loader />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"schedulerForm\">\n      <div className=\"schedulerForm__forms\">\n        <div className=\"schedulerForm__header\">\n          <p className=\"title\">\n            {meta.insideEdit || props.edit\n              ? `Запис № ${props.selectedCard.i}`\n              : 'Новий запис'}\n          </p>\n          {meta.insideEdit ? (\n            <img\n              src=\"/images/delete.svg\"\n              alt=\"delete\"\n              className={`clear-icon ${meta.isDeleteDisabled ? 'disabled' : ''}`}\n              onClick={meta.onDeleteCardClick}\n            />\n          ) : (\n            <img\n              src=\"/images/clear.svg\"\n              alt=\"clear\"\n              className=\"clear-icon\"\n              onClick={meta.onClearAll}\n            />\n          )}\n        </div>\n\n        <div className=\"mv12\">\n          <RadioButtonsGroup\n            buttons={\n              meta.insideEdit\n                ? meta.notaries.filter(\n                    ({ id }: any) => id === meta.selectedNotaryId\n                  )\n                : meta.notaries\n            }\n            onChange={meta.onNotaryChange}\n            selected={meta.selectedNotaryId}\n            unicId=\"notaries\"\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomSelect\n            required\n            label=\"Забудовник\"\n            data={meta.developers}\n            onChange={meta.onDeveloperChange}\n            selectedValue={meta.selectedDeveloperId}\n            disabled={meta.insideEdit || false}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomSelect\n            onChange={meta.onRepresentativeChange}\n            data={meta.representative}\n            label=\"Підписант\"\n            selectedValue={meta.selectedDevRepresentativeId}\n            disabled={meta.insideEdit || false}\n          />\n        </div>\n\n        <div className=\"mv12\">\n          <CustomSelect\n            onChange={meta.onManagerChange}\n            data={meta.manager}\n            label=\"Менеджер\"\n            selectedValue={meta.selectedDevManagerId}\n            disabled={meta.insideEdit || false}\n          />\n        </div>\n\n        <ImmovableContainer\n          immovables={meta.immovables}\n          onChange={meta.onImmovablesChange}\n          onAdd={meta.onAddImmovables}\n          onRemove={meta.onRemoveImmovable}\n          disabled={meta.insideEdit || false}\n        />\n\n        <Clients\n          clients={meta.clients}\n          onChange={meta.onClientsChange}\n          onAdd={meta.onAddClients}\n          onRemove={meta.onRemoveClient}\n          disabled={meta.insideEdit || false}\n        />\n\n        <div className=\"mv12\">\n          {meta.insideEdit && (\n            <PrimaryButton\n              label={meta.editButtonLabel}\n              onClick={() => meta.setEdit(false)}\n              disabled={meta.isDeleteDisabled}\n              className=\"schedulerForm__editButton\"\n            />\n          )}\n\n          {!meta.insideEdit && (\n            <PrimaryButton\n              label={`${props.edit ? 'Зберегти' : 'Створити'}`}\n              onClick={meta.onFormCreate}\n              disabled={!meta.activeAddButton}\n            />\n          )}\n        </div>\n      </div>\n\n      <ConfirmDialog\n        open={meta.isConfirmDialogOpen}\n        title={meta.confirmDialogContent.title}\n        message={meta.confirmDialogContent.message}\n        handleClose={meta.onConfirmDialogClose}\n        handleConfirm={meta.onConfirmDialogAgreed}\n      />\n    </div>\n  );\n};\n\nexport default memo(SchedulerForm);\n","/* eslint-disable prettier/prettier */\n/* eslint-disable arrow-body-style */\nimport {\n  useMemo,\n  useState,\n  useCallback,\n  useEffect\n} from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { State } from '../../../../../../../../store/types';\n\nimport {\n  setDevelopersInfo,\n  setSelectedNewAppointment,\n  createNewCard,\n  editCalendarCard,\n  fetchDeveloperInfo,\n  removeCalendarCard\n} from '../../../../../../../../store/scheduler/actions';\n\nimport { clientItem, immovableItem } from './types';\n\nimport {\n  ClientItem,\n  ImmovableItem,\n  ImmovableItems,\n  NewCard\n} from '../../../../../../../../types';\n\nexport type Props = {\n  selectedCard: any,\n  initialValues?: any,\n  edit?: boolean,\n}\n\nexport const useForm = ({ selectedCard, initialValues, edit }: Props) => {\n  const dispatch = useDispatch();\n  const { token } = useSelector((state: State) => state.main.user);\n  const { options, developersInfo, isLoading } = useSelector(\n    (state: State) => state.scheduler\n  );\n  const [insideEdit, setEdit] = useState<boolean>(edit || false);\n\n  // Form State\n  const [notary, setNotary] = useState<number | null>(initialValues?.card.notary_id || null);\n  const [devCompanyId, setDevCompanyId] = useState<number | null>(null);\n  const [devRepresentativeId, setDevRepresentativeId] = useState<number | null>(null);\n  const [devManagerId, setDevManagerId] = useState<number | null>(null);\n  const [immovables, setImmovables] = useState<ImmovableItems>([immovableItem]);\n  const [clients, setClients] = useState<ClientItem[]>([clientItem]);\n\n  // Form Memo Values\n  const shouldLoad = useMemo(() => isLoading || !options, [options, isLoading]);\n\n  const notaries = useMemo(() => options?.form_data.notary, [options]);\n\n  const developers = useMemo(() => options?.form_data.developer, [options]);\n\n  const manager = useMemo(() => developersInfo?.manager || [], [\n    developersInfo,\n  ]);\n\n  const representative = useMemo(() => developersInfo?.representative || [], [\n    developersInfo,\n  ]);\n\n  const activeAddButton = useMemo(() => {\n    return Boolean(devCompanyId)\n    && immovables.length\n    && immovables.every((item: ImmovableItem) => item.building_id && item.imm_number)\n    && selectedCard;\n  }, [devCompanyId, immovables, selectedCard]);\n\n  const isDeleteDisabled = useMemo(() => {\n    const generator_step = initialValues?.card.generator_step;\n    const ready = initialValues?.card.ready;\n    return generator_step || ready;\n  }, [initialValues]);\n\n  const editButtonLabel = useMemo(() => {\n    const generator_step = initialValues?.card.generator_step;\n    const ready = initialValues?.card.ready;\n\n    if (generator_step) {\n      return 'Передано до генерації';\n    }\n\n    if (ready) {\n      return 'Почати видачу';\n    }\n\n    return 'Редагувати';\n  }, [initialValues]);\n\n  // Form onChange functions\n  const onNotaryChange = useCallback((value) => {\n    setNotary(value);\n  }, []);\n\n  const onDeveloperChange = useCallback(\n    (value) => {\n      setDevCompanyId(value);\n      setDevManagerId(null);\n      setDevRepresentativeId(null);\n      setImmovables((prev) => prev.map((item) => ({ ...item, building_id: null })));\n\n      if (!value) {\n        dispatch(setDevelopersInfo({}));\n      }\n\n      dispatch(fetchDeveloperInfo(value));\n    },\n    []\n  );\n\n  const onRepresentativeChange = useCallback(\n    (value) => {\n      setDevRepresentativeId(value);\n    },\n    [devRepresentativeId]\n  );\n\n  const onManagerChange = useCallback(\n    (value) => {\n      setDevManagerId(value);\n    },\n    [devManagerId]\n  );\n\n  const onImmovablesChange = useCallback(\n    (index: number, value: any) => {\n      immovables[index] = value;\n      setImmovables([...immovables]);\n    },\n    [immovables]\n  );\n\n  const onClientsChange = useCallback(\n    (index: number, value: ClientItem) => {\n      clients[index] = value;\n      setClients([...clients]);\n    },\n    [clients]\n  );\n\n  // Form CTA\n  const onClearAll = useCallback(() => {\n    setNotary(null);\n    setDevCompanyId(null);\n    setDevRepresentativeId(null);\n    setDevManagerId(null);\n    setImmovables([immovableItem]);\n    setClients([clientItem]);\n  }, []);\n\n  const onAddImmovables = useCallback(() => {\n    setImmovables([...immovables, immovableItem]);\n  }, [immovables]);\n\n  const onRemoveImmovable = useCallback((index: number) => {\n    setImmovables((prev) => prev.filter((_, mapIndex) => mapIndex !== index));\n  }, [immovables]);\n\n  const onAddClients = useCallback(() => {\n    setClients([...clients, clientItem]);\n  }, [clients]);\n\n  const onRemoveClient = useCallback((index: number) => {\n    setClients((prev) => prev.filter((_, mapIndex) => mapIndex !== index));\n  }, [clients]);\n\n  const onFormCreate = useCallback(() => {\n    const date_time = `${selectedCard.year}.${selectedCard.date}. ${selectedCard.time}`;\n\n    const formatImmovables = immovables.map((item: ImmovableItem) => ({\n      ...item,\n      contract_type_id: item.contract_type_id || options.form_data.immovable_type[0].id,\n      imm_type_id: item.imm_type_id || options.form_data.immovable_type[0].id,\n    }));\n\n    const data: NewCard = {\n      immovables: formatImmovables,\n      clients,\n      date_time,\n      dev_company_id: devCompanyId,\n      dev_representative_id: devRepresentativeId,\n      dev_manager_id: devManagerId,\n      room_id: selectedCard.room,\n      notary_id: notary || notaries[0].id,\n    };\n\n    if (token) {\n      if (edit) {\n        dispatch(editCalendarCard(data, selectedCard.i));\n        setEdit(true);\n      } else {\n        dispatch(createNewCard(data));\n        dispatch(setSelectedNewAppointment(null));\n        onClearAll();\n      }\n    }\n  }, [\n    devCompanyId,\n    devRepresentativeId,\n    devManagerId,\n    notary,\n    immovables,\n    clients,\n    edit,\n    selectedCard,\n  ]);\n\n  // Confirm Dialog Props\n  const [isConfirmDialogOpen, setIsConfirmDialogOpen] = useState<boolean>(false);\n\n  const confirmDialogContent = useMemo(() => {\n    return {\n      title: `Видалити картку ${selectedCard?.i}`,\n      message: 'Ви впевнені, що бажаєте видалити картку?'\n    };\n  }, [selectedCard]);\n\n  const onDeleteCardClick = useCallback(() => {\n    if (isDeleteDisabled) return;\n    setIsConfirmDialogOpen(true);\n  }, [isDeleteDisabled]);\n\n  const onConfirmDialogClose = useCallback(() => {\n    setIsConfirmDialogOpen(false);\n  }, []);\n\n  const onConfirmDialogAgreed = useCallback(() => {\n    dispatch(removeCalendarCard(selectedCard?.i));\n  }, [selectedCard, removeCalendarCard]);\n\n  useEffect(() => {\n    if (initialValues) {\n      setEdit(true);\n      setNotary(initialValues.card.notary_id);\n      setDevCompanyId(initialValues.card.dev_company_id);\n      setDevRepresentativeId(initialValues.card.dev_representative_id);\n      setDevManagerId(initialValues.card.dev_manager_id);\n      setImmovables(\n        initialValues.immovables.length === 0\n          ? [immovableItem]\n          : initialValues.immovables\n      );\n      setClients(\n        initialValues.clients.length === 0\n          ? [clientItem]\n          : initialValues.clients\n      );\n    }\n\n    if (initialValues?.card.dev_company_id) {\n      dispatch(fetchDeveloperInfo(initialValues.card.dev_company_id));\n    }\n  }, [initialValues]);\n\n  return {\n    shouldLoad,\n    notaries,\n    representative,\n    developers,\n    manager,\n    immovables,\n    clients,\n    activeAddButton,\n    insideEdit,\n    isConfirmDialogOpen,\n    confirmDialogContent,\n    isDeleteDisabled,\n    editButtonLabel,\n    onDeleteCardClick,\n    onConfirmDialogClose,\n    onConfirmDialogAgreed,\n    onNotaryChange,\n    onDeveloperChange,\n    onRepresentativeChange,\n    onManagerChange,\n    onImmovablesChange,\n    onAddImmovables,\n    onRemoveImmovable,\n    onRemoveClient,\n    onClientsChange,\n    onAddClients,\n    onClearAll,\n    onFormCreate,\n    setEdit,\n    selectedNotaryId: notary,\n    selectedDeveloperId: devCompanyId,\n    selectedDevRepresentativeId: devRepresentativeId,\n    selectedDevManagerId: devManagerId,\n  };\n};\n","import React from 'react';\nimport './index.scss';\nimport Form from './components/Form';\nimport { useSchedulerForm } from './useSchedulerForm';\n\nconst SchedulerForm = () => {\n  const meta = useSchedulerForm();\n\n  return (\n    <div className=\"schedulerForm scheduler__form\">\n      <div className=\"schedulerForm__tabs\">\n        <div\n          className={`item ${meta.selectedTab === 0 ? 'selected' : ''}`}\n          style={{ backgroundColor: !meta.editAppointmentData ? 'white' : '' }}\n          onClick={() => meta.setSelectedTab(0)}\n        >\n          {meta.newSelectedAppointment\n            ? `${meta.newSelectedAppointment.day} ${meta.newSelectedAppointment.time} ${meta.newSelectedAppointment.date.split('.').reverse().join('.')}`\n            : 'Виберіть дату'}\n        </div>\n\n        {meta.oldSelectedAppointment && meta.editAppointmentData && (\n          <div\n            className={`item ${meta.selectedTab === 1 ? 'selected' : ''}`}\n            onClick={() => meta.setSelectedTab(1)}\n          >\n            {`${meta.oldSelectedAppointment.day} ${meta.oldSelectedAppointment.time} ${meta.oldSelectedAppointment.date.split('.').reverse().join('.')}`}\n            <img\n              src=\"/images/x.svg\"\n              alt=\"close\"\n              className=\"clear-icon\"\n              onClick={meta.onCloseTab}\n            />\n          </div>\n        )}\n      </div>\n\n      {meta.selectedTab === 0 && (\n        <Form selectedCard={meta.newSelectedAppointment} />\n      )}\n\n      {meta.selectedTab === 1 && meta.editAppointmentData && meta.oldSelectedAppointment && (\n        <Form\n          selectedCard={meta.oldSelectedAppointment}\n          initialValues={meta.editAppointmentData}\n          edit\n        />\n      )}\n    </div>\n  );\n};\n\nexport default SchedulerForm;\n","import { useCallback, useState, useEffect } from 'react';\n/* eslint-disable prettier/prettier */\nimport { useSelector, useDispatch } from 'react-redux';\nimport { State } from '../../../../../../store/types';\nimport { setEditAppointmentData, setSelectedOldAppointment } from '../../../../../../store/scheduler/actions';\n\nexport const useSchedulerForm = () => {\n  const dispatch = useDispatch();\n  const [selectedTab, setSelectedTab] = useState(0);\n\n  const newSelectedAppointment = useSelector(\n    (state: State) => state.scheduler.newSelectedAppointment\n  );\n  const oldSelectedAppointment = useSelector(\n    (state: State) => state.scheduler.oldSelectedAppointment\n  );\n  const editAppointmentData = useSelector(\n    (state: State) => state.scheduler.editAppointmentData\n  );\n\n  const onCloseTab = useCallback(() => {\n    dispatch(setSelectedOldAppointment(null));\n    dispatch(setEditAppointmentData(null));\n  }, []);\n\n  useEffect(() => {\n    setSelectedTab(editAppointmentData ? 1 : 0);\n  }, [editAppointmentData]);\n\n  useEffect(() => {\n    setSelectedTab(0);\n  }, [newSelectedAppointment]);\n\n  return {\n    newSelectedAppointment,\n    oldSelectedAppointment,\n    editAppointmentData,\n    selectedTab,\n    setSelectedTab,\n    onCloseTab,\n  };\n};\n","import React from 'react';\nimport './index.scss';\n\n// Components\nimport SchedulerTable from './components/Table/SchedulerTable';\nimport SchedulerFilter from './components/SchedulerFilterContainer';\nimport SchedulerForm from './components/SchedulerForm';\nimport { useRequestModal } from '../../../../components/RequestModal/useRequestModal';\nimport Modal from '../../../../components/RequestModal';\n\nconst SchedulerContainer = () => {\n  const modalProps = useRequestModal();\n\n  return (\n    <div className=\"scheduler__container\">\n      <div className=\"scheduler__dataView\">\n        <SchedulerFilter />\n        <SchedulerTable />\n      </div>\n      <SchedulerForm />\n      <Modal {...modalProps} />\n    </div>\n  );\n};\n\nexport default SchedulerContainer;\n","import React from 'react';\nimport Header from '../../components/Header';\nimport SchedulerContainer from './components/SchedulerContainer';\n\nconst SchedulerScreen = () => (\n  <>\n    <Header />\n    <SchedulerContainer />\n  </>\n);\n\nexport default SchedulerScreen;\n"],"sourceRoot":""}