{"version":3,"sources":["App/App.tsx","App/useApp.ts","store/main/store.ts","store/scheduler/store.ts","store/appointments/store.ts","store/filter/store.ts","store/registrator/store.ts","store/clients/store.ts","store/immovables/store.ts","store/index.ts","index.tsx","services/login/Login.ts","services/login/forgotPassword.ts","store/main/actions.ts","services/getAppointments.ts","services/setSchedulerFilter.ts","services/searchAppointments.ts","store/appointments/actions.ts","services/createNewCard.ts","services/editCalendarCard.ts","services/getCalendarCard.ts","services/getCalendar.ts","services/moveCalendarCard.ts","services/deleteCalendarCard.ts","store/scheduler/actions.ts","types.ts","components/Loader/Loader.tsx","services/registrator/getDevelopers.ts","services/registrator/getImmovables.ts","services/registrator/putDeveloper.ts","services/registrator/putImmovable.ts","store/registrator/actions.ts","services/generator/Client/getClients.ts","store/clients/actions.ts","services/generator/Immovable/getImmovables.ts","store/immovables/actions.ts","services/Constants.ts","services/getDeveloperInfo.ts","services/getFilterData.ts","store/filter/actions.ts","services/login/resetPassword.ts","services/utils/requestApi.ts"],"names":["RegistratorScreen","React","lazy","Dashboard","Scheduler","Login","App","type","dispatch","useDispatch","user","useSelector","state","main","useEffect","localUser","localStorage","getItem","setUser","JSON","parse","useApp","UserTypes","RECEPTION","fallback","Loader","REGISTRATOR","GENERATOR","ASSISTANT","MANAGER","initialState","token","id","modalInfo","open","success","message","reducer","action","ACTIONS","SET_USER","payload","SET_MODAL_INFO","options","developersInfo","newSelectedAppointment","oldSelectedAppointment","editAppointmentData","isLoading","schedulerLock","SET_OPTIONS","SET_DEVELOPERS_INFO","SET_IS_LOADING","SET_SELECTED_NEW_APPOINTMENT","SET_SELECTED_OLD_APPOINTMENT","SET_EDIT_APPOINTMENT_DATA","SET_SCHEDULER_LOCK","appointments","SET_LOADING","SET_APPOINTMENTS","ADD_NEW_APPOINTMENT","DELETE_APPOINTMENT","filter","item","i","EDIT_APPOINTMENTS","filterInitialData","SET_FILTER_INITIAL_DATA","developers","immovables","SET_DEVELOPERS","SET_IMMOVABLES","clients","idLoading","SET_CLIENTS","combineReducers","scheduler","registrator","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","store","document","getElementById","login","bodyData","a","requestApi","url","DEFAULT_URL","method","data","console","log","forgotPassword","SET_TOKEN","setModalInfo","sendLogin","remember","setItem","stringify","email","forgotPasswordService","getAppointments","headers","Authorization","setSchedulerFilter","searchAppointments","setIsLoading","setAppointments","addNewAppointment","setEditAppointments","deleteAppointment","fetchAppointments","getState","Object","values","fetchAppointmentsByFilter","text","searchAppointmentsServices","createNewCard","editCalendarCard","getCalendarCard","getCalendar","moveCalendarCard","deleteCalendarCard","setDevelopersInfo","setSelectedNewAppointment","setSelectedOldAppointment","setEditAppointmentData","setSchedulerLock","editCalendarCardService","fetchCalendarCard","removeCalendarCard","fetchDeveloperInfo","notDispatch","getDeveloperInfo","fetchSchedulerSettings","moveCalendarCardService","createNewCardService","res","color","getDevelopers","getImmovables","putDeveloper","putImmovable","fetchDevelopers","fetchImmovables","editDeveloperStatus","editImmovableStatus","getClients","setClients","fetchClients","getFilterData","fetchFilterData","resetPassword","params","body","undefined","Accept","fetch","json"],"mappings":"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","file":"static/js/main.3fa6f9b6.chunk.js","sourcesContent":["import React, { Suspense } from 'react';\nimport './index.scss';\nimport { useApp } from './useApp';\nimport { UserTypes } from '../types';\nimport Loader from '../components/Loader/Loader';\n\n// Lazy\nconst RegistratorScreen = React.lazy(() => import('../Screens/RegistratorScreen'));\nconst Dashboard = React.lazy(() => import('../Screens/DashboardScreen'));\nconst Scheduler = React.lazy(() => import('../Screens/SchedulerScreen'));\nconst Login = React.lazy(() => import('../Screens/LoginScreen'));\n\nconst App: React.FC = () => {\n  const { type } = useApp();\n\n  if (!type) {\n    return (\n      <Suspense fallback={<Loader />}>\n        <Login />\n      </Suspense>\n    );\n  }\n\n  if (type === UserTypes.RECEPTION) {\n    return (\n      <Suspense fallback={<Loader />}>\n        <Scheduler />\n      </Suspense>\n    );\n  }\n\n  if (type === UserTypes.REGISTRATOR) {\n    return (\n      <Suspense fallback={<Loader />}>\n        <RegistratorScreen />\n      </Suspense>\n    );\n  }\n\n  if (type === UserTypes.GENERATOR\n    || type === UserTypes.ASSISTANT\n    || type === UserTypes.MANAGER\n  ) {\n    return (\n      <Suspense fallback={<Loader />}>\n        <Dashboard />\n      </Suspense>\n    );\n  }\n\n  return <h1>You have not access</h1>;\n};\n\nexport default App;\n","import { useSelector, useDispatch } from 'react-redux';\n/* eslint-disable import/prefer-default-export */\nimport { useEffect } from 'react';\nimport { setUser } from '../store/main/actions';\nimport { State } from '../store/types';\n\nexport const useApp = () => {\n  const dispatch = useDispatch();\n  const { user } = useSelector((state: State) => state.main);\n\n  useEffect(() => {\n    const localUser = localStorage.getItem('user');\n\n    if (localUser) {\n      dispatch(setUser(JSON.parse(localUser)));\n    }\n  }, []);\n\n  return { type: user.type };\n};\n","import { UserTypes } from '../../types';\nimport { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\nexport type User = {\n  type: UserTypes | null;\n  token: null | string;\n  id: number | null;\n};\n\nexport type ModalInfo = {\n  open: boolean;\n  success: boolean;\n  message: string;\n};\n\nexport type MainState = {\n  user: User;\n  modalInfo: ModalInfo;\n};\n\nconst initialState: MainState = {\n  user: {\n    type: null,\n    token: null,\n    id: null,\n  },\n  modalInfo: {\n    open: false,\n    success: false,\n    message: '',\n  },\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_USER:\n      return { ...state, user: { ...state.user, ...action.payload } };\n    case ACTIONS.SET_MODAL_INFO:\n      return { ...state, modalInfo: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\nexport type SchedulerState = {\n  options: any;\n  developersInfo: any;\n  newSelectedAppointment: any;\n  oldSelectedAppointment: any;\n  editAppointmentData: any;\n  isLoading: boolean;\n  schedulerLock: boolean;\n};\n\nconst initialState: SchedulerState = {\n  options: null,\n  developersInfo: {},\n  newSelectedAppointment: null,\n  oldSelectedAppointment: null,\n  editAppointmentData: null,\n  isLoading: false,\n  schedulerLock: true,\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_OPTIONS:\n      return { ...state, options: action.payload };\n    case ACTIONS.SET_DEVELOPERS_INFO:\n      return { ...state, developersInfo: action.payload };\n    case ACTIONS.SET_IS_LOADING:\n      return { ...state, isLoading: action.payload };\n    case ACTIONS.SET_SELECTED_NEW_APPOINTMENT:\n      return { ...state, newSelectedAppointment: action.payload };\n    case ACTIONS.SET_SELECTED_OLD_APPOINTMENT:\n      return { ...state, oldSelectedAppointment: action.payload };\n    case ACTIONS.SET_EDIT_APPOINTMENT_DATA:\n      return { ...state, editAppointmentData: action.payload };\n    case ACTIONS.SET_SCHEDULER_LOCK:\n      return { ...state, schedulerLock: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\nexport type AppointmentsState = {\n  appointments: [];\n  isLoading: false;\n};\n\nconst initialState: AppointmentsState = {\n  appointments: [],\n  isLoading: false,\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_LOADING:\n      return { ...state, isLoading: action.payload };\n    case ACTIONS.SET_APPOINTMENTS:\n      return { ...state, appointments: action.payload };\n    case ACTIONS.ADD_NEW_APPOINTMENT:\n      return {\n        ...state,\n        appointments: [...state.appointments, action.payload],\n      };\n    case ACTIONS.DELETE_APPOINTMENT:\n      return {\n        ...state,\n        appointments: [\n          ...state.appointments.filter((item: any) => item.i !== action.payload)\n        ],\n      };\n    case ACTIONS.EDIT_APPOINTMENTS:\n      return {\n        ...state,\n        appointments: [\n          ...state.appointments.filter(\n            (item: any) => item.i !== action.payload.i\n          ),\n          action.payload,\n        ],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\nexport type FilterState = {\n  filterInitialData: any;\n};\n\nconst initialState: FilterState = {\n  filterInitialData: null,\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_FILTER_INITIAL_DATA:\n      return { ...state, filterInitialData: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\nexport type Developer = {\n  id: number;\n  title: string;\n  full_name: string;\n  tax_code: string;\n  date: string;\n  number: number;\n  pass: boolean;\n  prev: number;\n  next: number;\n  color?: string;\n}\n\nexport type Immovable = {\n  id: number;\n  title: string;\n  immovable_code: string;\n  date: string;\n  number: number;\n  pass: boolean;\n  prev: number;\n  next: number;\n}\n\nexport type DeveloperState = {\n  date_info: string;\n  developers: Developer[]\n}\n\nexport type ImmovableState = {\n  date_info: string;\n  immovables: Immovable[];\n}\n\nexport type RegistratorState = {\n  isLoading: boolean,\n  developers: DeveloperState | null,\n  immovables: ImmovableState | null,\n};\n\nconst initialState: RegistratorState = {\n  isLoading: false,\n  developers: null,\n  immovables: null,\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_LOADING:\n      return { ...state, isLoading: action.payload };\n    case ACTIONS.SET_DEVELOPERS:\n      return { ...state, developers: action.payload };\n    case ACTIONS.SET_IMMOVABLES:\n      return { ...state, immovables: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\ntype ClientCardInfo = {\n  full_name: string;\n  id: number;\n  list: string[];\n}\n\nexport type GenerateClient = {\n  client: null | ClientCardInfo,\n  representative: null | ClientCardInfo,\n  spouse: null | ClientCardInfo,\n}\n\nexport type ClientsState = {\n  clients: GenerateClient[];\n  isLoading: false;\n};\n\nconst initialState: ClientsState = {\n  clients: [],\n  isLoading: false,\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_LOADING:\n      return { ...state, idLoading: action.payload };\n    case ACTIONS.SET_CLIENTS:\n      return { ...state, clients: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { REDUX_ACTION } from '../types';\nimport { ACTIONS } from './actions';\n\ntype ImmovableCardsType = {\n  id: number,\n  title: string,\n  list: string[],\n}\n\nexport type ImmovablesState = {\n  immovables: ImmovableCardsType[];\n  isLoading: false;\n};\n\nconst initialState: ImmovablesState = {\n  immovables: [],\n  isLoading: false,\n};\n\nconst reducer = (state = initialState, action: REDUX_ACTION) => {\n  switch (action.type) {\n    case ACTIONS.SET_LOADING:\n      return { ...state, idLoading: action.payload };\n    case ACTIONS.SET_IMMOVABLES:\n      return { ...state, immovables: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","/* eslint-disable import/no-extraneous-dependencies */\nimport { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport main from './main/store';\nimport scheduler from './scheduler/store';\nimport appointments from './appointments/store';\nimport filter from './filter/store';\nimport registrator from './registrator/store';\nimport clients from './clients/store';\nimport immovables from './immovables/store';\n\nconst reducer = combineReducers({\n  main,\n  scheduler,\n  appointments,\n  filter,\n  registrator,\n  clients,\n  immovables,\n});\n\nexport default createStore(reducer, applyMiddleware(thunk));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  // eslint-disable-next-line\n  document.getElementById('root')\n);\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\ntype BodyData = {\n  email: string;\n  password: string;\n};\n\nexport default async function login(bodyData: BodyData) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/login`,\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\ntype BodyData = {\n  email: string;\n};\n\nexport default async function forgotPassword(bodyData: BodyData) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/password/forgot`,\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { Dispatch } from 'redux';\nimport login from '../../services/login/Login';\nimport forgotPasswordService from '../../services/login/forgotPassword';\nimport resetPasswordService, {\n  ResetPasswordType,\n} from '../../services/login/resetPassword';\n\nexport const ACTIONS = {\n  SET_TOKEN: 'SET_TOKEN',\n  SET_USER: 'SET_USER',\n  SET_LOADING: 'SET_LOADING',\n  SET_MODAL_INFO: 'SET_MODAL_INFO',\n};\n\nexport const setToken = (payload: string) => ({\n  type: ACTIONS.SET_TOKEN,\n  payload,\n});\n\nexport const setLogin = (payload: string) => ({\n  type: ACTIONS.SET_TOKEN,\n  payload,\n});\n\nexport const setUser = (payload: any) => ({\n  type: ACTIONS.SET_USER,\n  payload,\n});\n\nexport const setModalInfo = (payload: any) => ({\n  type: ACTIONS.SET_MODAL_INFO,\n  payload,\n});\n\n// Thunk actions\nexport const sendLogin = (\n  bodyData: {\n    email: string;\n    password: string;\n  },\n  remember: boolean\n) => async (dispatch: Dispatch<any>) => {\n  const { success, message, data } = await login(bodyData);\n\n  if (success) {\n    dispatch(setToken(data.token));\n    dispatch(setUser(data));\n  } else {\n    dispatch(\n      setModalInfo({\n        success,\n        message,\n        open: true,\n      })\n    );\n  }\n\n  if (remember) localStorage.setItem('user', JSON.stringify(data));\n};\n\nexport const forgotPassword = ({ email }: { email: string }) => async (\n  dispatch: Dispatch<any>\n) => {\n  const { success, message } = await forgotPasswordService({ email });\n\n  if (success) dispatch(setModalInfo({ success, message, open: true }));\n};\n\nexport const resetPassword = (data: ResetPasswordType) => async (\n  dispatch: Dispatch<any>\n) => {\n  const { success, message } = await resetPasswordService(data);\n\n  if (success) dispatch(setModalInfo({ success, message, open: true }));\n};\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getAppointments(token: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { FilterData } from '../store/types';\nimport { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function setSchedulerFilter(\n  token: string,\n  bodyData: FilterData\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/filter/sort`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function searchAppointments(\n  token: string,\n  bodyData: {\n    text: string;\n  }\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/filter/search`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { Dispatch } from 'redux';\nimport { FilterData, State } from '../types';\nimport getAppointments from '../../services/getAppointments';\nimport setSchedulerFilter from '../../services/setSchedulerFilter';\nimport searchAppointmentsServices from '../../services/searchAppointments';\n\nexport const ACTIONS = {\n  SET_LOADING: 'SET_LOADING',\n  SET_APPOINTMENTS: 'SET_APPOINTMENTS',\n  ADD_NEW_APPOINTMENT: 'ADD_NEW_APPOINTMENT',\n  EDIT_APPOINTMENTS: 'EDIT_APPOINTMENTS',\n  DELETE_APPOINTMENT: 'DELETE_APPOINTMENT',\n};\n\nexport const setIsLoading = (payload: boolean) => ({\n  type: ACTIONS.SET_LOADING,\n  payload,\n});\n\nexport const setAppointments = (payload: any) => ({\n  type: ACTIONS.SET_APPOINTMENTS,\n  payload,\n});\n\nexport const addNewAppointment = (payload: any) => ({\n  type: ACTIONS.ADD_NEW_APPOINTMENT,\n  payload,\n});\n\nexport const setEditAppointments = (payload: any) => ({\n  type: ACTIONS.EDIT_APPOINTMENTS,\n  payload,\n});\n\nexport const deleteAppointment = (id: string) => ({\n  type: ACTIONS.DELETE_APPOINTMENT,\n  payload: id,\n});\n\nexport const fetchAppointments = () => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token, type, id } = getState().main.user;\n\n  if (token && type && id) {\n    dispatch(setIsLoading(true));\n    const { data, success } = await getAppointments(token);\n\n    if (data && success) {\n      dispatch(setAppointments(Object.values(data)));\n    }\n\n    dispatch(setIsLoading(false));\n  }\n};\n\nexport const fetchAppointmentsByFilter = (bodyData: FilterData) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const { data, success } = await setSchedulerFilter(token, bodyData);\n\n    if (success) {\n      dispatch(setAppointments(Object.values(data)));\n    }\n  }\n};\n\nexport const searchAppointments = (text: string) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const { success, data } = await searchAppointmentsServices(token, { text });\n\n    if (data && success) {\n      dispatch(setAppointments(Object.values(data)));\n    }\n  }\n};\n","import { NewCard } from '../types';\nimport { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function createNewCard(token: string, bodyData: NewCard) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { NewCard } from '../types';\nimport { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function editCalendarCard(\n  token: string,\n  bodyData: NewCard,\n  id: number\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'PUT',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getCalendarCard(token: string, id: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data.data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getCalendar(token: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/calendar`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data.data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { NewCard } from '../types';\nimport { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function moveCalendarCard(\n  token: string,\n  bodyData: {\n    date_time: string;\n    room_id: number;\n  },\n  id: number\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards/move/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'PUT',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function deleteCalendarCard(token: string, id: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/cards/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'DELETE',\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","/* eslint-disable consistent-return */\nimport { Dispatch } from 'react';\nimport { NewCard } from '../../types';\nimport { State } from '../types';\nimport createNewCardService from '../../services/createNewCard';\nimport editCalendarCardService from '../../services/editCalendarCard';\nimport getCalendarCard from '../../services/getCalendarCard';\nimport getDeveloperInfo from '../../services/getDeveloperInfo';\nimport getCalendar from '../../services/getCalendar';\nimport moveCalendarCardService from '../../services/moveCalendarCard';\nimport { setModalInfo } from '../main/actions';\nimport { addNewAppointment, deleteAppointment, setEditAppointments } from '../appointments/actions';\nimport deleteCalendarCard from '../../services/deleteCalendarCard';\n\nexport const ACTIONS = {\n  SET_OPTIONS: 'SET_OPTIONS',\n  SET_DEVELOPERS_INFO: 'SET_DEVELOPERS_INFO',\n  SET_SELECTED_NEW_APPOINTMENT: 'SET_SELECTED_NEW_APPOINTMENT',\n  SET_SELECTED_OLD_APPOINTMENT: 'SET_SELECTED_OLD_APPOINTMENT',\n  SET_EDIT_APPOINTMENT_DATA: 'SET_EDIT_APPOINTMENT_DATA',\n  SET_IS_LOADING: 'SET_IS_LOADING',\n  SET_SCHEDULER_LOCK: 'SET_SCHEDULER_LOCK',\n};\n\nexport const setSchedulerOptions = (payload: any) => ({\n  type: ACTIONS.SET_OPTIONS,\n  payload,\n});\n\nexport const setDevelopersInfo = (payload: any) => ({\n  type: ACTIONS.SET_DEVELOPERS_INFO,\n  payload,\n});\n\nexport const setSelectedNewAppointment = (payload: any) => ({\n  type: ACTIONS.SET_SELECTED_NEW_APPOINTMENT,\n  payload,\n});\n\nexport const setSelectedOldAppointment = (payload: any) => ({\n  type: ACTIONS.SET_SELECTED_OLD_APPOINTMENT,\n  payload,\n});\n\nexport const setEditAppointmentData = (payload: any) => ({\n  type: ACTIONS.SET_EDIT_APPOINTMENT_DATA,\n  payload,\n});\n\nexport const setSchedulerLock = (payload: boolean) => ({\n  type: ACTIONS.SET_SCHEDULER_LOCK,\n  payload,\n});\n\nexport const setIsLoading = (payload: boolean) => ({\n  type: ACTIONS.SET_IS_LOADING,\n  payload,\n});\n\n// Thunk actions\nexport const editCalendarCard = (bodyData: NewCard, id: number) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const { success, message, data } = await editCalendarCardService(\n      token,\n      bodyData,\n      id\n    );\n\n    dispatch(\n      setModalInfo({\n        open: true,\n        success,\n        message,\n      })\n    );\n\n    if (success) {\n      dispatch(setEditAppointments(data));\n    }\n  }\n};\n\nexport const fetchCalendarCard = (id: string) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const data = await getCalendarCard(token, id);\n    dispatch(setEditAppointmentData(data));\n  }\n};\n\nexport const removeCalendarCard = (id: string) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const { data, success, message } = await deleteCalendarCard(token, id);\n\n    dispatch(\n      setModalInfo({\n        open: true,\n        success,\n        message,\n      })\n    );\n\n    if (success) {\n      dispatch(setSelectedOldAppointment(null));\n      dispatch(setEditAppointmentData(null));\n      dispatch(deleteAppointment(id));\n    }\n  }\n};\n\nexport const fetchDeveloperInfo = (\n  id: number,\n  notDispatch: boolean = false\n) => async (dispatch: Dispatch<any>, getState: () => State) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const data = await getDeveloperInfo(token, id);\n\n    if (!notDispatch) {\n      dispatch(setDevelopersInfo(data));\n    }\n  }\n};\n\nexport const fetchSchedulerSettings = () => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    dispatch(setIsLoading(true));\n    const data = await getCalendar(token);\n    dispatch(setSchedulerOptions(data));\n    dispatch(setIsLoading(false));\n  }\n};\n\nexport const moveCalendarCard = (\n  bodyData: {\n    date_time: string;\n    room_id: number;\n  },\n  id: number\n) => async (dispatch: Dispatch<any>, getState: () => State) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const { success, data } = await moveCalendarCardService(\n      token,\n      bodyData,\n      id\n    );\n\n    if (success) {\n      dispatch(setEditAppointments(data));\n    }\n  }\n};\n\nexport const createNewCard = (data: NewCard) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const res = await createNewCardService(token, data);\n\n    dispatch(\n      setModalInfo({\n        open: true,\n        success: res.success,\n        message: res.message,\n      })\n    );\n\n    if (res.success) {\n      dispatch(addNewAppointment(res.data));\n    }\n  }\n};\n","export type ImmovableItem = {\n  contract_type_id: number | null;\n  building_id: number | null;\n  imm_type_id: number | null;\n  imm_number: number | null;\n  bank: boolean;\n  proxy: boolean;\n};\n\nexport type ImmovableItems = ImmovableItem[];\n\nexport type SelectItem = {\n  id: number;\n  title: string;\n};\n\nexport type ClientItem = {\n  phone: string | null;\n  full_name: string | null;\n};\n\nexport type NewCard = {\n  immovables: ImmovableItems;\n  clients: ClientItem[];\n  date_time: string;\n  dev_company_id: number | null;\n  dev_representative_id: number | null;\n  dev_manager_id: number | null;\n  room_id: number;\n  notary_id: number | null;\n};\n\n// eslint-disable-next-line no-shadow\nexport enum UserTypes {\n  GENERATOR = 'generator',\n  RECEPTION = 'reception',\n  MANAGER = 'manager',\n  ASSISTANT = 'assistant',\n  REGISTRATOR = 'registrator',\n}\n\nexport type ManagerAppointmentCard = {\n  id: number;\n  color: string;\n  instructions: string[];\n  short_info: {\n    dev_representative_id: string;\n    notary: string;\n    notary_assistant_giver: string;\n    notary_assistant_reader: string;\n  };\n  title: string;\n};\n\nexport type ManagerAppointment = {\n  day: string;\n  date: string;\n  cards: ManagerAppointmentCard[];\n};\n\nexport type ManagerAppointments = ManagerAppointment[];\n","import React from 'react';\nimport { LoopCircleLoading } from 'react-loadingg';\n\nconst Loader = () => <LoopCircleLoading color=\"#165153\" />;\n\nexport default Loader;\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\nexport default async function getDevelopers(token: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/registrator/developers`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\nexport default async function getImmovables(token: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/registrator/immovables`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\nexport type EditDeveloperProps = {\n  date: string,\n  number: string,\n  pass: boolean,\n}\n\nexport default async function putDeveloper(\n  token: string, id: string, bodyData: EditDeveloperProps\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/registrator/developer/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'PUT',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\nexport type EditImmovableProps = {\n  date: string,\n  number: string,\n  pass: boolean,\n}\n\nexport default async function putImmovable(\n  token: string, id: string, bodyData: EditImmovableProps\n) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/registrator/immovable/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n      method: 'PUT',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { Dispatch } from 'redux';\nimport getDevelopers from '../../services/registrator/getDevelopers';\nimport getImmovables from '../../services/registrator/getImmovables';\nimport putDeveloper, { EditDeveloperProps } from '../../services/registrator/putDeveloper';\nimport putImmovable from '../../services/registrator/putImmovable';\nimport { setModalInfo } from '../main/actions';\nimport { State } from '../types';\nimport { Developer, Immovable } from './store';\n\nexport const ACTIONS = {\n  SET_LOADING: 'SET_LOADING',\n  SET_DEVELOPERS: 'SET_DEVELOPERS',\n  SET_IMMOVABLES: 'SET_IMMOVABLES',\n};\n\nconst setIsLoading = (payload: boolean) => ({\n  type: ACTIONS.SET_LOADING,\n  payload,\n});\n\nconst setDevelopers = (payload: Developer) => ({ type: ACTIONS.SET_DEVELOPERS, payload });\nconst setImmovables = (payload: Immovable) => ({ type: ACTIONS.SET_IMMOVABLES, payload });\n\nexport const fetchDevelopers = () => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  dispatch(setIsLoading(true));\n  const { token } = getState().main.user;\n\n  if (token) {\n    const { success, data } = await getDevelopers(token);\n\n    if (success) {\n      dispatch(setDevelopers(data));\n    }\n  }\n  dispatch(setIsLoading(false));\n};\n\nexport const fetchImmovables = () => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  dispatch(setIsLoading(true));\n  const { token } = getState().main.user;\n\n  if (token) {\n    const { success, data } = await getImmovables(token);\n\n    if (success) {\n      dispatch(setImmovables(data));\n    }\n  }\n  dispatch(setIsLoading(false));\n};\n\nexport const editDeveloperStatus = (id: string, bodyData: EditDeveloperProps) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const { success, message } = await putDeveloper(token, id, bodyData);\n\n    dispatch(\n      setModalInfo({\n        open: true,\n        success,\n        message,\n      })\n    );\n  }\n};\n\nexport const editImmovableStatus = (id: string, bodyData: EditDeveloperProps) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const { success, message } = await putImmovable(token, id, bodyData);\n\n    dispatch(\n      setModalInfo({\n        open: true,\n        success,\n        message,\n      })\n    );\n  }\n};\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function getClients(token: string, id: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/client/main/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { Dispatch } from 'redux';\nimport getClients from '../../services/generator/Client/getClients';\nimport { State } from '../types';\n\nexport const ACTIONS = {\n  SET_CLIENTS: 'SET_CLIENTS',\n  SET_LOADING: 'SET_LOADING',\n};\n\nexport const setClients = (payload: any) => ({ type: ACTIONS.SET_CLIENTS, payload });\nexport const setIsLoading = (payload: boolean) => ({ type: ACTIONS.SET_LOADING, payload });\n\n// Thunk actions\nexport const fetchClients = (id: string) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    dispatch(setIsLoading(true));\n    const { success, data } = await getClients(token, id);\n\n    if (success) {\n      dispatch(setClients(data));\n    }\n    dispatch(setIsLoading(false));\n  }\n};\n","import { DEFAULT_URL } from '../../Constants';\nimport requestApi from '../../utils/requestApi';\n\nexport default async function getImmovables(token: string, id: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/generator/immovable/main/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { Dispatch } from 'redux';\nimport getImmovables from '../../services/generator/Immovable/getImmovables';\nimport { State } from '../types';\n\nexport const ACTIONS = {\n  SET_IMMOVABLES: 'SET_IMMOVABLES',\n  SET_LOADING: 'SET_LOADING',\n};\n\nexport const setImmovables = (payload: any) => ({ type: ACTIONS.SET_IMMOVABLES, payload });\nexport const setIsLoading = (payload: boolean) => ({ type: ACTIONS.SET_LOADING, payload });\n\n// Thunk actions\nexport const fetchImmovables = (id: string) => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    dispatch(setIsLoading(true));\n    const { success, data } = await getImmovables(token, id);\n\n    if (success) {\n      dispatch(setImmovables(data));\n    }\n    dispatch(setIsLoading(false));\n  }\n};\n","/* eslint-disable import/prefer-default-export */\nexport const DEFAULT_URL = 'https://app.synction.space';\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getDeveloperInfo(token: string, id: number) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/filter/developer/info/${id}`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data.data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { DEFAULT_URL } from './Constants';\nimport requestApi from './utils/requestApi';\n\nexport default async function getFilterData(token: string) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/filter/dropdown`,\n      headers: { Authorization: `Bearer ${token}` },\n    });\n\n    return data.data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","import { Dispatch } from 'redux';\nimport getFilterData from '../../services/getFilterData';\nimport { State } from '../types';\n\nexport const ACTIONS = {\n  SET_FILTER_INITIAL_DATA: 'SET_FILTER_INITIAL_DATA',\n};\n\nexport const setFilterInitialData = (payload: any) => ({\n  type: ACTIONS.SET_FILTER_INITIAL_DATA,\n  payload,\n});\n\nexport const fetchFilterData = () => async (\n  dispatch: Dispatch<any>,\n  getState: () => State\n) => {\n  const { token } = getState().main.user;\n\n  if (token) {\n    const data = await getFilterData(token);\n    dispatch(setFilterInitialData(data));\n  }\n};\n","import { DEFAULT_URL } from '../Constants';\nimport requestApi from '../utils/requestApi';\n\nexport type ResetPasswordType = {\n  token: string;\n  password: string;\n  c_password: string;\n};\n\nexport default async function resetPassword(bodyData: ResetPasswordType) {\n  try {\n    const data = await requestApi({\n      url: `${DEFAULT_URL}/api/password/update`,\n      method: 'POST',\n      bodyData,\n    });\n\n    return data;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    return null;\n  }\n}\n","/* eslint-disable comma-dangle */\ntype RequestOptions = {\n  url: string;\n  method?: 'GET' | 'POST' | 'DELETE' | 'PATCH' | 'PUT';\n  bodyData?: any;\n  headers?: {};\n};\n\nconst requestApi = async (options: RequestOptions) => {\n  // eslint-disable-next-line object-curly-newline\n  const { url, method = 'GET', headers = {}, bodyData } = options;\n\n  const params = {\n    body: undefined as string | undefined,\n    method: method || 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'applicatioin/json',\n      ...headers,\n    },\n  };\n\n  if (bodyData) {\n    params.body = JSON.stringify(bodyData);\n  }\n\n  const res: any = await fetch(url, params);\n  const json: any = await res.json();\n\n  // if (!json.success) {\n  //   const { status, message } = res;\n  //   throw new Error(\n  //     `[${status}, ${message}] Could not fetch on URL (${url}) data:\\n${JSON.stringify(\n  //       json,\n  //       null,\n  //       2\n  //     )}`\n  //   );\n  // }\n\n  return json;\n};\n\nexport default requestApi;\n"],"sourceRoot":""}