{"version":3,"sources":["components/PrimaryButton/PrimaryButton.tsx","components/SectionWithTitle/SectionWithTitle.tsx","components/CustomInput/index.ts","components/CustomInput/CustomInput.tsx","utils/formatDates.ts","components/CustomDatePicker/CustomDatePicker.tsx","components/CustomSwitch/CustomSwitch.tsx","components/RequestModal/useRequestModal.ts","components/RequestModal/RequestModal.tsx","components/Card/Card.tsx","components/Header/utils/useDebounce.ts","components/Modal/Modal.tsx","components/Header/components/UserSelect/UserSelect.tsx","components/Header/components/UserSelect/useUserSelect.ts","components/Header/components/PageNavigationControl/PageNavigationControl.tsx","components/Header/components/PageNavigationControl/usePageNavigationControl.ts","components/Header/Header.tsx","components/Header/useHeader.ts","components/ContentPanel/ContentPanel.tsx","components/ControlPanel/ControlPanel.tsx","components/Dashboard/useDashboard.ts","components/Dashboard/components/DashboardSection/DashboardSection.tsx","components/Dashboard/components/DashbordControl/DashbordControl.tsx","components/Dashboard/Dashboard.tsx","Screens/RegistratorScreen/useRegistratorScreen.ts","Screens/RegistratorScreen/components/Navigation/Navigation.tsx","components/InputWithCopy/InputWithCopy.tsx","components/CheckBanFields/CheckBanFields.tsx","Screens/RegistratorScreen/components/Check/Check.tsx","Screens/RegistratorScreen/components/Immovable/Immovable.tsx","Screens/RegistratorScreen/components/Immovable/useImmovable.ts","Screens/RegistratorScreen/components/Developer/Developer.tsx","Screens/RegistratorScreen/components/Developer/useDeveloper.ts","Screens/RegistratorScreen/RegistratorScreen.tsx"],"names":["PrimaryButton","label","onClick","disabled","className","useState","isClicked","setIsClicked","handleClick","useCallback","e","useEffect","SectionWithTitle","title","children","onClear","headerColor","style","backgroundColor","color","type","src","alt","CustomInput","onChange","value","required","text","setText","error","variant","event","target","changeMonthWitDate","date","Date","replace","formatDate","day","getDate","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","customTheme","createMuiTheme","palette","primary","main","CustomDatePicker","selectedDate","onSelect","setValue","theme","utils","DateFnsUtils","locale","deLocale","margin","format","data","parseDate","parse","Number","isNaN","cancelLabel","okLabel","KeyboardButtonProps","CustomSwitch","selected","FormControlLabel","control","Switch","checked","name","labelPlacement","memo","useRequestModal","dispatch","useDispatch","modalInfo","useSelector","state","useMemo","handleClose","setModalInfo","open","RequestModal","success","message","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Card","link","haveStatus","to","ReactHtmlParser","useDebounce","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","Modal","UserSelect","history","useHistory","isOpen","setIsOpen","extra_type","user","userType","handleOpen","handleUserType","setUserTypeAction","push","userTypeButtons","filter","map","useUserSelect","length","PageNavigationControl","onLogoClick","onReloadButtonClick","window","location","reload","onBackButtonClick","pathname","goBack","onForwardButtonClick","goForward","usePageNavigationControl","Header","searchText","setSearchText","count","setCount","searchAppointments","prev","onSearch","onLogout","localStorage","clear","setUser","token","useHeader","placeholder","ContentPanel","ControlPanel","DashboardViewType","DashboardSection","cards","TABLE","card","id","content","item","DashboardControl","CARDS","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","Dashboard","props","selectedType","setSelectedType","useDashboard","isChangeTypeButton","sections","section","uuidv4","RegistratorNavigationTypes","Navigation","DEVELOPER","IMMOVABLE","InputWithCopy","done","setDone","handleSave","React","navigator","clipboard","writeText","CheckBanFields","setData","val","number","pass","Check","onPrevButtonClick","onSave","onNextButtonClick","disableSaveButton","next","Immovable","meta","onPathChange","immovable","useParams","editImmovableStatus","useImmovable","immovable_code","Developer","developer","editDeveloperStatus","useDeveloper","full_name","tax_code","RegistratorScreen","registrator","isLoading","developers","immovables","selectedNav","setSelectedNav","selectedId","setSelectedId","trigger","setTrigger","onChangeNav","triggerNav","selectedCardData","find","date_info","fetchDevelopers","fetchImmovables","useRegistratorScreen","modalProps","path","exact","Loader"],"mappings":"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","file":"static/js/9.9f26c092.chunk.js","sourcesContent":["/* eslint-disable prettier/prettier */\n/* eslint-disable react/button-has-type */\nimport React, { useCallback, useState, useEffect } from 'react';\nimport './index.scss';\n\ntype Props = {\n  label: string;\n  onClick: (e: any) => void;\n  disabled?: boolean;\n  className?: string;\n};\n\nconst PrimaryButton = ({\n  label, onClick, disabled, className\n}: Props) => {\n  const [isClicked, setIsClicked] = useState<boolean>(false);\n\n  const handleClick = useCallback((e) => {\n    setIsClicked(true);\n    onClick(e);\n  }, [onClick]);\n\n  useEffect(() => {\n    setIsClicked(false);\n  }, [onClick]);\n\n  return (\n    <button\n      className={\n        `primary-button\n        ${disabled ? 'disabled' : ''}\n        ${className || ''}\n        ${isClicked ? 'clicked' : ''}\n        `\n      }\n      onClick={handleClick}\n      disabled={disabled}\n    >\n      {label}\n    </button>\n  );\n};\n\nexport default PrimaryButton;\n","import React from 'react';\nimport './index.scss';\n\ntype Props = {\n  title: string;\n  children: React.ReactNode;\n  headerColor?: string;\n  onClear?: () => void;\n}\n\nconst SectionWithTitle = ({ title, children, onClear, headerColor }: Props) => (\n  <div className=\"section-with-title\">\n    <div\n      className=\"section-with-title__header\"\n      style={{\n        backgroundColor: headerColor || '',\n      }}\n    >\n      <h2\n        className=\"section-title\"\n        style={{\n          color: headerColor ? 'white' : '',\n        }}\n      >\n        {title}\n      </h2>\n      {onClear && (\n        <button type=\"button\" className=\"clear-button\">\n          <img\n            src=\"/images/clear-form.svg\"\n            alt=\"close\"\n            className=\"clear-icon\"\n            onClick={onClear}\n          />\n        </button>\n      )}\n    </div>\n    <div className=\"section-with-title__body\">\n      {children}\n    </div>\n  </div>\n);\n\nexport default SectionWithTitle;\n","export { default } from './CustomInput';\n","/* eslint-disable no-unused-vars */\n/* eslint-disable react/react-in-jsx-scope */\nimport React, { useState, useEffect } from 'react';\nimport './index.scss';\nimport { TextField } from '@material-ui/core';\n\ntype Props = {\n  label: string;\n  value?: string | number | null;\n  onChange?: (value: string) => void;\n  type?: string;\n  disabled?: boolean;\n  required?: boolean;\n};\n\nconst CustomInput = ({\n  label,\n  onChange,\n  value = '',\n  type = 'string',\n  disabled,\n  required,\n}: Props) => {\n  const [text, setText] = useState(value || '');\n\n  useEffect(() => {\n    setText(value || '');\n  }, [value]);\n\n  const handleChange = (event: any) => {\n    setText(event.target.value);\n    onChange && onChange(event.target.value);\n  };\n\n  return (\n    <TextField\n      error={required && !text}\n      label={label}\n      variant=\"outlined\"\n      value={text}\n      onChange={handleChange}\n      type={type}\n      className=\"custom-input\"\n      disabled={disabled || false}\n    />\n  );\n};\n\nexport default CustomInput;\n","export const changeMonthWitDate = (date: string): Date => new Date(date && date.replace(/(\\d{2}).(\\d{2}).(\\d{4})/, '$2.$1.$3'));\n\nexport const formatDate = (date: Date | null): string | null => {\n  if (!date) return null;\n\n  date = new Date(date);\n\n  const day = date.getDate() <= 9 ? `0${date.getDate()}` : date.getDate();\n  const month = date.getMonth() < 9 ? `0${date.getMonth() + 1}` : date.getMonth() + 1;\n  const year = date.getFullYear();\n  const hours = date.getHours() <= 9 ? `0${date.getHours()}` : date.getHours();\n  const minutes = date.getMinutes() <= 9 ? `0${date.getMinutes()}` : date.getMinutes();\n\n  return `${day}.${month}.${year} ${hours}:${minutes}`;\n};\n","/* eslint-disable quotes */\n/* eslint-disable react/jsx-curly-brace-presence */\nimport React, { useEffect, useState } from 'react';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport { MaterialUiPickersDate } from '@material-ui/pickers/typings/date';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core';\nimport deLocale from \"date-fns/locale/uk\";\n\ntype Props = {\n  label: string;\n  onSelect: (value: any) => void;\n  selectedDate?: Date | null;\n  required?: boolean;\n  disabled?: boolean;\n}\n\nconst customTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#165153',\n    }\n  },\n});\n\nconst CustomDatePicker = ({ selectedDate, onSelect, label, required, disabled }: Props) => {\n  const [value, setValue] = useState<MaterialUiPickersDate | undefined>(selectedDate);\n\n  useEffect(() => {\n    setValue(selectedDate);\n  }, [selectedDate]);\n\n  const handleChange = (data: any) => {\n    const parseDate = Date.parse(data);\n    if (Number.isNaN(parseDate) === true) {\n      onSelect(null);\n    } else {\n      onSelect(data);\n    }\n\n    setValue(data);\n  };\n\n  return (\n    <MuiThemeProvider theme={customTheme}>\n      <MuiPickersUtilsProvider utils={DateFnsUtils} locale={deLocale}>\n        <KeyboardDatePicker\n          error={required && !value}\n          margin=\"normal\"\n          label={label}\n          format=\"dd/MM/yyyy\"\n          value={value}\n          onChange={handleChange}\n          cancelLabel=\"Закрити\"\n          okLabel=\"Зберегти\"\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n          disabled={disabled || false}\n        />\n      </MuiPickersUtilsProvider>\n    </MuiThemeProvider>\n\n  );\n};\n\nexport default CustomDatePicker;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable prettier/prettier */\nimport React, { useEffect, useState, memo } from 'react';\nimport { FormControlLabel, Switch } from '@material-ui/core';\nimport './index.scss';\n\ntype Props = {\n  label: string\n  onChange: (val: boolean) => void;\n  selected: boolean;\n  disabled?: boolean;\n};\n\nconst CustomSwitch = ({\n  label,\n  onChange,\n  selected,\n  disabled\n}: Props) => {\n  const handleChange = (event: any) => {\n    onChange(event.target.checked);\n  };\n\n  return (\n    <FormControlLabel\n      control={(\n        <Switch\n          checked={selected || false}\n          onChange={handleChange}\n          name=\"checkedB\"\n          color=\"primary\"\n        />\n      )}\n      label={label}\n      labelPlacement=\"start\"\n      className=\"custom-switch\"\n      disabled={disabled || false}\n    />\n  );\n};\n\nexport default memo(CustomSwitch);\n","/* eslint-disable implicit-arrow-linebreak */\nimport { useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setModalInfo } from '../../store/main/actions';\nimport { State } from '../../store/types';\n\nexport const useRequestModal = () => {\n  const dispatch = useDispatch();\n  const { modalInfo } = useSelector((state: State) => state.main);\n\n  const modalProps = useMemo(\n    () => ({\n      ...modalInfo,\n      handleClose: () =>\n        dispatch(\n          setModalInfo({\n            ...modalInfo,\n            open: false,\n          })\n        ),\n    }),\n    [modalInfo]\n  );\n\n  return modalProps;\n};\n","import React from 'react';\nimport './index.scss';\nimport MModal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\ntype Props = {\n  open: boolean;\n  handleClose: () => void;\n  success: boolean;\n  message: string;\n};\n\n// eslint-disable-next-line prettier/prettier\nconst RequestModal = ({\n  open, handleClose, success, message\n}: Props) => (\n  <MModal\n    className=\"modal-container\"\n    open={open}\n    onClose={handleClose}\n    closeAfterTransition\n    BackdropComponent={Backdrop}\n    BackdropProps={{\n      timeout: 500,\n    }}\n  >\n    <Fade in={open}>\n      <div className={`modal ${success ? 'modal-success' : 'modal-failed'}`}>\n        <p className=\"message\">{message}</p>\n      </div>\n    </Fade>\n  </MModal>\n);\n\nexport default RequestModal;\n","import * as React from 'react';\nimport './index.scss';\nimport { Link } from 'react-router-dom';\nimport ReactHtmlParser from 'react-html-parser';\n\ntype Props = {\n  title: string;\n  children: React.ReactNode;\n  link: string\n  headerColor?: string;\n  haveStatus?: boolean;\n}\n\nconst Card = ({ title, headerColor, children, link, haveStatus }: Props) => {\n  const getTextColor = () => {\n    if (haveStatus) return 'black';\n    if (headerColor) return 'white';\n\n    return '';\n  };\n\n  const getTitleBackgroundColor = () => {\n    if (haveStatus) return '';\n    if (headerColor) return headerColor;\n\n    return '';\n  };\n\n  return (\n    <Link to={link} className=\"card\">\n      <div className=\"card__header\" style={{ backgroundColor: getTitleBackgroundColor() }}>\n        <span style={{ color: getTextColor() }}>{ReactHtmlParser(title)}</span>\n        {haveStatus && (\n          <div className=\"status\" style={{ backgroundColor: headerColor || '' }} />\n        )}\n      </div>\n      <div className=\"card__main\">\n        {children}\n      </div>\n    </Link>\n  );\n};\n\nexport default Card;\n","import React, { useState, useEffect } from 'react';\n\nconst useDebounce = (value: string, delay: number) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value]);\n\n  return debouncedValue;\n};\n\nexport default useDebounce;\n","import React, { ReactElement } from 'react';\nimport MModal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\ntype Props = {\n  open: boolean;\n  handleClose: () => void;\n  children: ReactElement;\n};\n\nconst Modal = ({\n  open, handleClose, children\n}: Props) => (\n  <MModal\n    className=\"modal-container\"\n    open={open}\n    onClose={handleClose}\n    closeAfterTransition\n    BackdropComponent={Backdrop}\n    BackdropProps={{\n      timeout: 500,\n    }}\n  >\n    <Fade in={open}>{children}</Fade>\n  </MModal>\n);\n\nexport default Modal;\n","import React, { useState, useCallback } from 'react';\nimport Modal from '../../../Modal';\nimport PrimaryButton from '../../../PrimaryButton';\nimport './index.scss';\nimport { useUserSelect } from './useUserSelect';\n\nconst UserSelect = () => {\n  const {\n    isOpen,\n    userTypeButtons,\n    handleOpen,\n    handleClose,\n  } = useUserSelect();\n\n  if (!userTypeButtons.length) return null;\n\n  return (\n    <div className=\"user-select\">\n      <img src=\"/images/user.svg\" alt=\"user\" onClick={handleOpen} />\n      <Modal\n        open={isOpen}\n        handleClose={handleClose}\n      >\n        <div className=\"user-select__modal\">\n          {\n            userTypeButtons.map(({ label, onClick }) => (\n              <PrimaryButton\n                key={label}\n                label={label}\n                onClick={onClick}\n                className=\"user-select__button\"\n              />\n            ))\n          }\n\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default UserSelect;\n","import { useCallback, useState, useMemo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { setUserTypeAction } from '../../../../store/main/actions';\nimport { State } from '../../../../store/types';\nimport { UserTypes } from '../../../../types';\n\nexport const useUserSelect = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const extra_type = useSelector((state: State) => state.main.user.extra_type);\n  const userType = useSelector((state: State) => state.main.user.type);\n\n  const handleOpen = useCallback(() => {\n    setIsOpen(true);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setIsOpen(false);\n  }, []);\n\n  const handleUserType = useCallback((type: UserTypes) => {\n    setIsOpen(false);\n    dispatch(setUserTypeAction(type));\n    setTimeout(() => {\n      history.push('/');\n    }, 100);\n  }, []);\n\n  const userTypeButtons = useMemo(() => (\n    extra_type\n      .filter(({ type }) => type !== userType)\n      .map(({ title, type }) => ({\n        label: title,\n        onClick: () => handleUserType(type),\n      }))\n  ), [extra_type, userType]);\n\n  return {\n    isOpen,\n    userTypeButtons,\n    handleOpen,\n    handleClose,\n  };\n};\n","import React from 'react';\nimport { usePageNavigationControl } from './usePageNavigationControl';\n\nconst PageNavigationControl = () => {\n  const {\n    onLogoClick,\n    onBackButtonClick,\n    onReloadButtonClick,\n    onForwardButtonClick,\n  } = usePageNavigationControl();\n\n  return (\n    <div className=\"header__navigation\">\n      <img\n        className=\"header__logo\"\n        src=\"/images/logo.svg\"\n        alt=\"logo\"\n        onClick={onLogoClick}\n      />\n\n      <img\n        className=\"header__navButton\"\n        src=\"/images/arrow-left-nav.svg\"\n        alt=\"logo\"\n        onClick={onBackButtonClick}\n      />\n\n      <img\n        className=\"header__navButton\"\n        src=\"/images/arrow-right-nav.svg\"\n        alt=\"logo\"\n        onClick={onForwardButtonClick}\n      />\n\n      <img\n        className=\"header__navButton\"\n        src=\"/images/reload.svg\"\n        alt=\"logo\"\n        onClick={onReloadButtonClick}\n      />\n    </div>\n  );\n};\n\nexport default PageNavigationControl;\n","import { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nexport const usePageNavigationControl = () => {\n  const history = useHistory();\n\n  const onLogoClick = useCallback(() => {\n    history.push('/');\n  }, []);\n\n  const onReloadButtonClick = useCallback(() => {\n    window.location.reload();\n  }, []);\n\n  const onBackButtonClick = useCallback(() => {\n    if (history.location.pathname === '/') return;\n    history.goBack();\n  }, []);\n\n  const onForwardButtonClick = useCallback(() => {\n    history.goForward();\n  }, []);\n\n  return {\n    onLogoClick,\n    onBackButtonClick,\n    onReloadButtonClick,\n    onForwardButtonClick,\n  };\n};\n","import * as React from 'react';\nimport './index.scss';\n\nimport { useHeader } from './useHeader';\nimport UserSelect from './components/UserSelect';\nimport PageNavigationControl from './components/PageNavigationControl';\n\nconst Header = () => {\n  const {\n    onSearch,\n    onLogout,\n    searchText,\n  } = useHeader();\n\n  return (\n    <div className=\"header container\">\n      <PageNavigationControl />\n      <div className=\"header__search\">\n        <input\n          type=\"text\"\n          placeholder=\"Пошук...\"\n          onChange={onSearch}\n          value={searchText}\n        />\n        <img src=\"/images/search.svg\" alt=\"search\" />\n      </div>\n      <div className=\"header__control\">\n        <UserSelect />\n        <img src=\"/images/log-out.svg\" alt=\"logout\" onClick={onLogout} />\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport {\n  ChangeEvent, useState, useEffect, useCallback\n} from 'react';\nimport { setUser } from '../../store/main/actions';\nimport { searchAppointments } from '../../store/appointments/actions';\nimport useDebounce from './utils/useDebounce';\n\nexport const useHeader = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [searchText, setSearchText] = useState<string>('');\n  const [count, setCount] = useState<number>(0);\n\n  const debouncedValue = useDebounce(searchText, 1000);\n\n  useEffect(() => {\n    if (!count) {\n      setCount((prev: number) => prev + 1);\n      return;\n    }\n\n    dispatch(searchAppointments(debouncedValue));\n  }, [debouncedValue]);\n\n  const onSearch = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value);\n  }, [searchText]);\n\n  const onLogout = useCallback(() => {\n    localStorage.clear();\n    dispatch(setUser({ type: null, token: null }));\n    history.push('/');\n  }, []);\n\n  return {\n    onSearch,\n    onLogout,\n    searchText,\n  };\n};\n","import * as React from 'react';\nimport './index.scss';\n\ntype Props = {\n  children: React.ReactNode\n}\n\nconst ContentPanel = ({ children }: Props) => (\n  <div className=\"contentPanel\">\n    {children}\n  </div>\n);\n\nexport default ContentPanel;\n","import * as React from 'react';\nimport './index.scss';\n\ntype Props = {\n  children: React.ReactNode\n}\n\nconst ControlPanel = ({ children }: Props) => (\n  <div className=\"controlPanel\">\n    {children}\n  </div>\n);\n\nexport default ControlPanel;\n","import { useMemo, useState } from 'react';\nimport { SectionCard } from './components/DashboardSection/DashboardSection';\n\n// eslint-disable-next-line no-shadow\nexport enum DashboardViewType {\n  CARDS,\n  TABLE\n}\n\nexport type Section = {\n  title: string;\n  cards: SectionCard[];\n}\n\nexport type Props = {\n  link: string,\n  sections: Section[],\n  isChangeTypeButton?: boolean,\n  style?: DashboardViewType,\n  haveStatus?: boolean;\n}\n\nexport const useDashboard = ({ style }: Props) => {\n  const [selectedType, setSelectedType] = useState(style || DashboardViewType.CARDS);\n\n  return { selectedType, setSelectedType };\n};\n","import * as React from 'react';\nimport Card from '../../../Card';\nimport { DashboardViewType } from '../../useDashboard';\n\nexport type SectionCard = {\n  id: number;\n  title: string;\n  content: string[];\n  color?: string;\n}\n\ntype Props = {\n  link: string;\n  title: string,\n  cards: SectionCard[],\n  style: DashboardViewType;\n  haveStatus?: boolean;\n}\n\nconst DashboardSection = ({ link, title, cards, style, haveStatus }: Props) => (\n  <div className=\"dashboard__main-section\">\n    <h2>{title}</h2>\n    <div className={`cards ${style === DashboardViewType.TABLE ? 'table' : ''}`}>\n      {cards?.map((card: SectionCard) => (\n        <Card\n          haveStatus={haveStatus}\n          key={card.id}\n          title={card.title}\n          headerColor={card.color}\n          link={`/${link}/${card.id}`}\n        >\n          {card.content.map((item: string) => (\n            <span key={item} className=\"card__content-item\">{item}</span>\n          ))}\n        </Card>\n      ))}\n    </div>\n  </div>\n);\n\nexport default DashboardSection;\n","import * as React from 'react';\nimport { DashboardViewType } from '../../useDashboard';\nimport './index.scss';\n\ntype Props = {\n  selected: DashboardViewType;\n  onClick: (value: DashboardViewType) => void;\n}\n\nconst DashboardControl = ({ selected, onClick }: Props) => (\n  <div className=\"dashboard__space-control\">\n    <svg\n      className={`${DashboardViewType.CARDS === selected ? 'selected' : ''}`}\n      onClick={() => onClick(DashboardViewType.CARDS)}\n      width=\"18\"\n      height=\"18\"\n      viewBox=\"0 0 18 18\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.50008 0.666748H7.33341C7.83341 0.666748 8.16675 1.00008 8.16675 1.50008V7.33341C8.16675 7.83341 7.83341 8.16675 7.33341 8.16675H1.50008C1.00008 8.16675 0.666748 7.83341 0.666748 7.33341V1.50008C0.666748 1.00008 1.00008 0.666748 1.50008 0.666748ZM2.33341 6.50008H6.50008V2.33341H2.33341V6.50008ZM16.5001 0.666748H10.6667C10.1667 0.666748 9.83342 1.00008 9.83342 1.50008V7.33341C9.83342 7.83341 10.1667 8.16675 10.6667 8.16675H16.5001C17.0001 8.16675 17.3334 7.83341 17.3334 7.33341V1.50008C17.3334 1.00008 17.0001 0.666748 16.5001 0.666748ZM11.5001 6.50008H15.6667V2.33341H11.5001V6.50008ZM16.5001 9.83342H10.6667C10.1667 9.83342 9.83342 10.1667 9.83342 10.6667V16.5001C9.83342 17.0001 10.1667 17.3334 10.6667 17.3334H16.5001C17.0001 17.3334 17.3334 17.0001 17.3334 16.5001V10.6667C17.3334 10.1667 17.0001 9.83342 16.5001 9.83342ZM11.5001 15.6667H15.6667V11.5001H11.5001V15.6667ZM7.33341 9.83342H1.50008C1.00008 9.83342 0.666748 10.1667 0.666748 10.6667V16.5001C0.666748 17.0001 1.00008 17.3334 1.50008 17.3334H7.33341C7.83341 17.3334 8.16675 17.0001 8.16675 16.5001V10.6667C8.16675 10.1667 7.83341 9.83342 7.33341 9.83342ZM2.33341 15.6667H6.50008V11.5001H2.33341V15.6667Z\" fill=\"#165153\" />\n    </svg>\n    <svg\n      className={`${DashboardViewType.TABLE === selected ? 'selected' : ''}`}\n      onClick={() => onClick(DashboardViewType.TABLE)}\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 20 20\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M3.33325 0.833252H16.6666C18.0833 0.833252 19.1666 1.91659 19.1666 3.33325V6.66659C19.1666 8.08325 18.0833 9.16658 16.6666 9.16658H3.33325C1.91659 9.16658 0.833252 8.08325 0.833252 6.66659V3.33325C0.833252 1.91659 1.91659 0.833252 3.33325 0.833252ZM16.6666 7.49992C17.1666 7.49992 17.4999 7.16658 17.4999 6.66658V3.33325C17.4999 2.83325 17.1666 2.49992 16.6666 2.49992H3.33325C2.83325 2.49992 2.49992 2.83325 2.49992 3.33325V6.66658C2.49992 7.16658 2.83325 7.49992 3.33325 7.49992H16.6666ZM16.6666 10.8333H3.33325C1.91659 10.8333 0.833252 11.9166 0.833252 13.3333V16.6666C0.833252 18.0833 1.91659 19.1666 3.33325 19.1666H16.6666C18.0833 19.1666 19.1666 18.0833 19.1666 16.6666V13.3333C19.1666 11.9166 18.0833 10.8333 16.6666 10.8333ZM16.6666 17.4999C17.1666 17.4999 17.4999 17.1666 17.4999 16.6666V13.3333C17.4999 12.8333 17.1666 12.4999 16.6666 12.4999H3.33325C2.83325 12.4999 2.49992 12.8333 2.49992 13.3333V16.6666C2.49992 17.1666 2.83325 17.4999 3.33325 17.4999H16.6666ZM5.58325 4.41659C5.74992 4.58325 5.83325 4.74992 5.83325 4.99992C5.83325 5.24992 5.74992 5.41659 5.58325 5.58325C5.41658 5.74992 5.24992 5.83325 4.99992 5.83325C4.74992 5.83325 4.58325 5.74992 4.41659 5.58325C4.33325 5.49992 4.24992 5.41659 4.24992 5.33325C4.16659 5.24992 4.16659 5.08325 4.16659 4.99992C4.16659 4.91659 4.16659 4.74992 4.24992 4.66659C4.29159 4.62492 4.31242 4.58325 4.33325 4.54159C4.35409 4.49992 4.37492 4.45825 4.41659 4.41659C4.49992 4.33325 4.58325 4.24992 4.66659 4.24992C4.91658 4.16659 5.08325 4.16659 5.33325 4.24992C5.41658 4.24992 5.49992 4.33325 5.58325 4.41659ZM5.83325 14.9999C5.83325 14.7499 5.74992 14.5833 5.58325 14.4166C5.24992 14.0833 4.74992 14.0833 4.41659 14.4166C4.37492 14.4583 4.35409 14.4999 4.33325 14.5416C4.31242 14.5833 4.29159 14.6249 4.24992 14.6666C4.16659 14.7499 4.16659 14.9166 4.16659 14.9999C4.16659 15.2499 4.24992 15.4166 4.41659 15.5833C4.58325 15.7499 4.74992 15.8333 4.99992 15.8333C5.24992 15.8333 5.41658 15.7499 5.58325 15.5833C5.74992 15.4166 5.83325 15.2499 5.83325 14.9999Z\" fill=\"#C0C1C1\" />\n    </svg>\n  </div>\n);\n\nexport default DashboardControl;\n","import React from 'react';\nimport './index.scss';\nimport { v4 as uuidv4 } from 'uuid';\nimport DashboardSection from './components/DashboardSection';\nimport DashboardControl from './components/DashbordControl';\nimport { Section, Props, useDashboard } from './useDashboard';\n\nconst Dashboard = (props: Props) => {\n  const { selectedType, setSelectedType } = useDashboard(props);\n\n  return (\n    <div className=\"dashboard\">\n      {props.isChangeTypeButton\n        && <DashboardControl selected={selectedType} onClick={setSelectedType} />}\n      {props.sections && (\n        <div className=\"dashboard__main\">\n          {props.sections.map((section: Section) => (\n            <DashboardSection\n              key={uuidv4()}\n              link={props.link}\n              title={section.title}\n              style={selectedType}\n              cards={section.cards}\n              haveStatus={props.haveStatus}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import { useEffect, useMemo, useState, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SectionCard } from '../../components/Dashboard/components/DashboardSection/DashboardSection';\nimport { fetchImmovables, fetchDevelopers } from '../../store/registrator/actions';\nimport { State } from '../../store/types';\n\n/* eslint-disable no-shadow */\nexport enum RegistratorNavigationTypes {\n  DEVELOPER = 'developer',\n  IMMOVABLE = 'immovable',\n}\n\nexport const useRegistratorScreen = () => {\n  const dispatch = useDispatch();\n  const { isLoading, developers, immovables } = useSelector((state: State) => state.registrator);\n  const [selectedNav, setSelectedNav] = useState(RegistratorNavigationTypes.DEVELOPER);\n  const [selectedId, setSelectedId] = useState<any>();\n  const [trigger, setTrigger] = useState(true);\n\n  const onChangeNav = useCallback((id, type) => {\n    setSelectedId(id);\n    setSelectedNav(type);\n  }, []);\n\n  const triggerNav = useCallback((val) => {\n    setSelectedNav(val);\n    setTrigger((prev) => !prev);\n  }, []);\n\n  const selectedCardData = useMemo(() => {\n    if (selectedNav === RegistratorNavigationTypes.IMMOVABLE) {\n      return immovables ? immovables.immovables\n        .find((item: any) => item.id === Number(selectedId)) : null;\n    }\n\n    return developers ? developers.developers\n      .find((item: any) => item.id === Number(selectedId)) : null;\n  }, [selectedId, developers, immovables]);\n\n  const sections = useMemo(() => {\n    let title = '';\n    let cards: SectionCard[] = [];\n\n    if (selectedNav === RegistratorNavigationTypes.DEVELOPER) {\n      title = developers?.date_info || '';\n      cards = (developers?.developers || []).map((item: any) => ({\n        id: item.id,\n        title: item.title,\n        content: [`Дата: ${item.date}`, `Номер: ${item.number}`],\n        color: item.color,\n      }));\n    } else if (selectedNav === RegistratorNavigationTypes.IMMOVABLE) {\n      title = immovables?.date_info || '';\n      cards = (immovables?.immovables || []).map((item: any) => ({\n        id: item.id,\n        title: item.title,\n        content: [`Дата: ${item.date}`, `Номер: ${item.number}`],\n        color: item.color,\n      }));\n    }\n\n    return [{\n      title,\n      cards,\n    }];\n  }, [selectedNav, immovables, developers]);\n\n  useEffect(() => {\n    if (selectedNav === RegistratorNavigationTypes.DEVELOPER) {\n      dispatch(fetchDevelopers());\n    } else {\n      dispatch(fetchImmovables());\n    }\n  }, [trigger, selectedId]);\n\n  return { selectedNav, triggerNav, isLoading, sections, onChangeNav, selectedCardData };\n};\n","import * as React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport ControlPanel from '../../../../components/ControlPanel';\nimport { RegistratorNavigationTypes } from '../../useRegistratorScreen';\n\ntype Props = {\n  selected: RegistratorNavigationTypes;\n  onSelect: (value: RegistratorNavigationTypes) => void;\n}\n\nconst Navigation = ({ onSelect, selected }: Props) => {\n  const history = useHistory();\n\n  const handleClick = (type: RegistratorNavigationTypes) => {\n    onSelect(type);\n    history.push(`/${type}`);\n  };\n\n  return (\n    <ControlPanel>\n      <button\n        className={`navigation-button ${\n          selected === RegistratorNavigationTypes.DEVELOPER ? 'selected' : ''\n        }`}\n        type=\"button\"\n        onClick={() => handleClick(RegistratorNavigationTypes.DEVELOPER)}\n      >\n        <img src=\"/images/navigation/developer.svg\" alt=\"developer\" />\n        Заборони на продавця\n      </button>\n      <button\n        className={`navigation-button ${\n          selected === RegistratorNavigationTypes.IMMOVABLE ? 'selected' : ''\n        }`}\n        type=\"button\"\n        onClick={() => handleClick(RegistratorNavigationTypes.IMMOVABLE)}\n      >\n        <img src=\"/images/navigation/immovable.svg\" alt=\"immovable\" />\n        Заборони по нерухомості\n      </button>\n    </ControlPanel>\n  );\n};\n\nexport default Navigation;\n","import * as React from 'react';\nimport './index.scss';\nimport { useState, useEffect } from 'react';\nimport CustomInput from '../CustomInput';\n\ntype Props = {\n  label: string;\n  value: string;\n  onChange?: (val: string) => void;\n  disabled?: boolean;\n}\n\nconst InputWithCopy = ({ label, value, disabled, onChange }: Props) => {\n  const [done, setDone] = useState<boolean>(false);\n\n  const handleSave = React.useCallback(() => {\n    if (!value) return;\n\n    navigator.clipboard.writeText(value);\n\n    setDone(true);\n    setTimeout(() => setDone(false), 3000);\n  }, [value]);\n\n  return (\n    <div className=\"clipboard-input\">\n      <CustomInput label={label} onChange={onChange} value={value} disabled={disabled} />\n      <button\n        type=\"button\"\n        onClick={handleSave}\n      >\n        {done ? <img src=\"/images/check.svg\" alt=\"copy\" /> : <img src=\"/images/copy.svg\" alt=\"copy\" />}\n      </button>\n    </div>\n  );\n};\n\nexport default InputWithCopy;\n","import * as React from 'react';\nimport CustomDatePicker from '../CustomDatePicker';\nimport CustomInput from '../CustomInput';\nimport CustomSwitch from '../CustomSwitch';\nimport SectionWithTitle from '../SectionWithTitle';\n\nexport type CheckBanFieldsData = {\n  date: any,\n  number: string,\n  pass: boolean,\n}\n\ntype Props = {\n  data: CheckBanFieldsData,\n  setData: (data: CheckBanFieldsData) => void,\n  title: string;\n}\n\nconst CheckBanFields = ({ data, setData, title }: Props) => (\n  <SectionWithTitle title={title}>\n    <div className=\"grid\">\n      <CustomDatePicker\n        required\n        label=\"Дата перевірки\"\n        onSelect={(val) => setData({ ...data, date: val })}\n        selectedDate={data.date}\n      />\n      <CustomInput\n        required\n        label=\"Номер перевірки\"\n        onChange={(val) => setData({ ...data, number: val })}\n        value={data.number}\n      />\n      <CustomSwitch\n        label=\"Пройшов перевірку\"\n        onChange={(val) => setData({ ...data, pass: val })}\n        selected={data.pass}\n      />\n    </div>\n  </SectionWithTitle>\n);\n\nexport default CheckBanFields;\n","import React from 'react';\nimport CheckBanFields, { CheckBanFieldsData } from '../../../../components/CheckBanFields/CheckBanFields';\nimport CustomDatePicker from '../../../../components/CustomDatePicker';\nimport CustomInput from '../../../../components/CustomInput';\nimport CustomSwitch from '../../../../components/CustomSwitch';\nimport PrimaryButton from '../../../../components/PrimaryButton';\nimport SectionWithTitle from '../../../../components/SectionWithTitle';\n\ntype Props = {\n  data: CheckBanFieldsData,\n  setData: (data: CheckBanFieldsData) => void,\n  onPrevButtonClick: () => void,\n  onSave: () => void,\n  onNextButtonClick: () => void,\n  disableSaveButton: boolean,\n  next: number | undefined,\n  prev: number | undefined,\n}\n\nconst Check = ({\n  data,\n  setData,\n  onPrevButtonClick,\n  onSave,\n  onNextButtonClick,\n  disableSaveButton,\n  next,\n  prev,\n}: Props) => (\n  <>\n    <CheckBanFields data={data} setData={setData} title=\"Перевірка\" />\n\n    <div className=\"buttons-group\">\n      <button\n        type=\"button\"\n        onClick={onPrevButtonClick}\n        disabled={!prev}\n        className=\"custom-button\"\n      >\n        <img src=\"/images/arrow-left.svg\" alt=\"previous\" className=\"left\" />\n        Попередній\n      </button>\n\n      <div className=\"button-container\">\n        <PrimaryButton label=\"Зберегти\" onClick={onSave} disabled={disableSaveButton} />\n      </div>\n\n      <button\n        type=\"button\"\n        onClick={onNextButtonClick}\n        disabled={!next}\n        className=\"custom-button\"\n      >\n        Наступний\n        <img src=\"/images/arrow-right.svg\" alt=\"next\" className=\"right\" />\n      </button>\n    </div>\n  </>\n);\n\nexport default Check;\n","import React, { memo } from 'react';\nimport InputWithCopy from '../../../../components/InputWithCopy';\nimport SectionWithTitle from '../../../../components/SectionWithTitle';\nimport Check from '../Check';\nimport { Props, useImmovable } from './useImmovable';\n\nconst Immovable = (props: Props) => {\n  const meta = useImmovable(props);\n\n  if (!props.immovable) {\n    return null;\n  }\n\n  return (\n    <div className=\"registrator__immovable\">\n      <SectionWithTitle title={props.immovable.title}>\n        <div className=\"grid\">\n          <InputWithCopy label=\"Реєстраційни номер\" value={props.immovable.immovable_code} disabled />\n        </div>\n      </SectionWithTitle>\n\n      <Check\n        data={meta.data}\n        setData={meta.setData}\n        onPrevButtonClick={meta.onPrevButtonClick}\n        onSave={meta.onSave}\n        onNextButtonClick={meta.onNextButtonClick}\n        disableSaveButton={meta.disableSaveButton}\n        next={props.immovable.next}\n        prev={props.immovable.prev}\n      />\n    </div>\n  );\n};\n\nexport default memo(Immovable);\n","import { useDispatch } from 'react-redux';\nimport { useEffect, useState, useCallback, useMemo } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { RegistratorNavigationTypes } from '../../useRegistratorScreen';\nimport { editImmovableStatus } from '../../../../store/registrator/actions';\nimport { CheckBanFieldsData } from '../../../../components/CheckBanFields/CheckBanFields';\nimport { changeMonthWitDate, formatDate } from '../../../../utils/formatDates';\n\nexport type Props = {\n  onPathChange: (id: string, type: RegistratorNavigationTypes) => void;\n  immovable: any;\n}\n\nexport const useImmovable = ({ onPathChange, immovable }: Props) => {\n  const history = useHistory();\n  const { id } = useParams<{ id: string }>();\n\n  const dispatch = useDispatch();\n\n  const [data, setData] = useState<CheckBanFieldsData>({\n    date: null,\n    number: '',\n    pass: false,\n  });\n\n  const disableSaveButton = useMemo(() => !data.date || !data.number, [data]);\n\n  const onSave = useCallback(() => {\n    dispatch(editImmovableStatus(id, { ...data, date: formatDate(data.date) }));\n  }, [data, id]);\n\n  const onPrevButtonClick = useCallback(() => {\n    if (!immovable.prev) return;\n\n    history.push(`/immovable/${immovable.prev}`);\n  }, [immovable]);\n\n  const onNextButtonClick = useCallback(() => {\n    if (!immovable.next) return;\n\n    history.push(`/immovable/${immovable.next}`);\n  }, [immovable]);\n\n  useEffect(() => {\n    setData({\n      date: immovable?.date ? changeMonthWitDate(immovable?.date) : null,\n      number: immovable?.number || '',\n      pass: immovable?.pass || false,\n    });\n  }, [immovable]);\n\n  useEffect(() => onPathChange(id, RegistratorNavigationTypes.IMMOVABLE), [id]);\n\n  return {\n    data,\n    disableSaveButton,\n    setData,\n    onPrevButtonClick,\n    onNextButtonClick,\n    onSave,\n  };\n};\n","import React from 'react';\nimport InputWithCopy from '../../../../components/InputWithCopy';\nimport SectionWithTitle from '../../../../components/SectionWithTitle';\nimport Check from '../Check';\nimport { Props, useDeveloper } from './useDeveloper';\n\nconst Developer = (props: Props) => {\n  const meta = useDeveloper(props);\n\n  if (!props.developer) {\n    return null;\n  }\n\n  return (\n    <div className=\"registrator__developer\">\n      <SectionWithTitle title={props.developer.title}>\n        <div className=\"grid\">\n          <InputWithCopy label=\"ПІБ\" value={props.developer.full_name} disabled />\n          <InputWithCopy label=\"Код\" value={props.developer.tax_code} disabled />\n        </div>\n      </SectionWithTitle>\n\n      <Check\n        data={meta.data}\n        setData={meta.setData}\n        onPrevButtonClick={meta.onPrevButtonClick}\n        onSave={meta.onSave}\n        onNextButtonClick={meta.onNextButtonClick}\n        disableSaveButton={meta.disableSaveButton}\n        next={props.developer.next}\n        prev={props.developer.prev}\n      />\n    </div>\n  );\n};\n\nexport default Developer;\n","import { useDispatch } from 'react-redux';\nimport { useEffect, useState, useCallback, useMemo } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { RegistratorNavigationTypes } from '../../useRegistratorScreen';\nimport { editDeveloperStatus } from '../../../../store/registrator/actions';\nimport { CheckBanFieldsData } from '../../../../components/CheckBanFields/CheckBanFields';\nimport { changeMonthWitDate, formatDate } from '../../../../utils/formatDates';\n\nexport type Props = {\n  onPathChange: (id: string, type: RegistratorNavigationTypes) => void;\n  developer: any;\n}\n\nexport const useDeveloper = ({ onPathChange, developer }: Props) => {\n  const history = useHistory();\n  const { id } = useParams<{ id: string }>();\n\n  const dispatch = useDispatch();\n\n  const [data, setData] = useState<CheckBanFieldsData>({\n    date: new Date(),\n    number: '',\n    pass: false,\n  });\n\n  const disableSaveButton = useMemo(() => !data.date || !data.number, [data]);\n\n  const onSave = useCallback(() => {\n    dispatch(editDeveloperStatus(id, { ...data, date: formatDate(data.date) }));\n  }, [data, id]);\n\n  const onPrevButtonClick = useCallback(() => {\n    if (!developer.prev) return;\n\n    history.push(`/developer/${developer.prev}`);\n  }, [developer]);\n\n  const onNextButtonClick = useCallback(() => {\n    if (!developer.next) return;\n\n    history.push(`/developer/${developer.next}`);\n  }, [developer]);\n\n  useEffect(() => {\n    setData({\n      date: developer?.date ? changeMonthWitDate(developer?.date) : new Date(),\n      number: developer?.number || '',\n      pass: developer?.pass || false,\n    });\n  }, [developer]);\n\n  useEffect(() => onPathChange(id, RegistratorNavigationTypes.DEVELOPER), [id]);\n\n  return {\n    data,\n    disableSaveButton,\n    setData,\n    onPrevButtonClick,\n    onNextButtonClick,\n    onSave,\n  };\n};\n","import * as React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport './index.scss';\nimport Header from '../../components/Header';\nimport Navigation from './components/Navigation';\nimport { useRegistratorScreen } from './useRegistratorScreen';\nimport Loader from '../../components/Loader/Loader';\nimport ContentPanel from '../../components/ContentPanel';\nimport Dashboard from '../../components/Dashboard';\nimport Immovable from './components/Immovable';\nimport Developer from './components/Developer';\nimport Modal from '../../components/RequestModal';\nimport { useRequestModal } from '../../components/RequestModal/useRequestModal';\n\nconst RegistratorScreen = () => {\n  const meta = useRegistratorScreen();\n  const modalProps = useRequestModal();\n\n  return (\n    <>\n      <Header />\n      <main className=\"registrator\">\n        <Navigation onSelect={meta.triggerNav} selected={meta.selectedNav} />\n        <ContentPanel>\n          <Switch>\n            <Route path=\"/developer/:id\" exact>\n              <Developer onPathChange={meta.onChangeNav} developer={meta.selectedCardData} />\n            </Route>\n\n            <Route path=\"/immovable/:id\" exact>\n              <Immovable onPathChange={meta.onChangeNav} immovable={meta.selectedCardData} />\n            </Route>\n\n            {meta.isLoading && <Loader />}\n            {!meta.isLoading\n              && <Dashboard link={meta.selectedNav} sections={meta.sections} haveStatus />}\n          </Switch>\n        </ContentPanel>\n      </main>\n      <Modal {...modalProps} />\n    </>\n  );\n};\n\nexport default RegistratorScreen;\n"],"sourceRoot":""}