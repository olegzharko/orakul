{"version":3,"sources":["components/CustomInput/CustomInput.tsx","components/CustomInput/index.ts","components/Header/utils/useDebounce.ts","components/Header/Header.tsx","components/Header/useHeader.ts","components/Dashboard/useDashboard.ts","components/Card/Card.tsx","components/Dashboard/components/DashboardSection/DashboardSection.tsx","components/Dashboard/components/DashbordControl/DashbordControl.tsx","components/Dashboard/Dashboard.tsx","components/ControlPanel/ControlPanel.tsx","../node_modules/@material-ui/core/esm/FormHelperText/FormHelperText.js","../node_modules/@material-ui/core/esm/TextField/TextField.js","Screens/RegistratorScreen/useRegistratorScreen.ts","Screens/RegistratorScreen/components/Navigation/Navigation.tsx","components/ContentPanel/ContentPanel.tsx","components/InputWithCopy/InputWithCopy.tsx","components/SectionWithTitle/SectionWithTitle.tsx","Screens/RegistratorScreen/components/Immovable/Immovable.tsx","Screens/RegistratorScreen/components/Developer/Developer.tsx","Screens/RegistratorScreen/RegistratorScreen.tsx"],"names":["CustomInput","label","onChange","value","type","disabled","useState","text","setText","useEffect","variant","event","target","className","useDebounce","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","Header","dispatch","useDispatch","searchText","setSearchText","count","setCount","searchAppointments","prev","onSearch","useCallback","e","onLogout","localStorage","clear","setUser","token","useHeader","src","alt","placeholder","onClick","DashboardViewType","Card","title","headerColor","children","link","to","style","backgroundColor","color","DashboardSection","cards","TABLE","map","card","id","content","item","DashboardControl","selected","CARDS","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","Dashboard","props","selectedType","setSelectedType","useDashboard","isChangeTypeButton","sections","section","ControlPanel","FormHelperText","React","ref","classes","_props$component","component","Component","other","error","filled","focused","margin","required","_objectWithoutProperties","muiFormControl","useFormControl","fcs","formControlState","states","_extends","clsx","root","contained","marginDense","dangerouslySetInnerHTML","__html","withStyles","theme","palette","secondary","typography","caption","textAlign","marginTop","main","marginLeft","marginRight","name","variantComponent","standard","Input","FilledInput","outlined","OutlinedInput","TextField","autoComplete","_props$autoFocus","autoFocus","_props$color","defaultValue","_props$disabled","_props$error","FormHelperTextProps","_props$fullWidth","fullWidth","helperText","hiddenLabel","InputLabelProps","inputProps","InputProps","inputRef","_props$multiline","multiline","onBlur","onFocus","_props$required","rows","rowsMax","_props$select","select","SelectProps","_props$variant","InputMore","shrink","notched","_InputLabelProps$requ","displayRequired","native","undefined","helperTextId","concat","inputLabelId","InputComponent","InputElement","FormControl","InputLabel","htmlFor","Select","labelId","input","RegistratorNavigationTypes","Navigation","onSelect","history","useHistory","handleClick","push","IMMOVABLE","DEVELOPER","ContentPanel","InputWithCopy","done","setDone","handleSave","navigator","clipboard","writeText","SectionWithTitle","Immovable","onImmovableChange","data","useParams","immovable_code","Developer","full_name","tax_code","RegistratorScreen","meta","useSelector","state","registrator","isLoading","developers","immovables","selectedNav","setSelectedNav","selectedId","setSelectedId","fetchDevelopers","fetchImmovables","selectedCardData","useMemo","find","Number","date_info","date","number","useRegistratorScreen","path","Loader"],"mappings":"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","file":"static/js/9.c68d79f7.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\n/* eslint-disable react/react-in-jsx-scope */\nimport React, { useState, useEffect } from 'react';\nimport './index.scss';\nimport { TextField } from '@material-ui/core';\n\ntype Props = {\n  label: string;\n  value?: string | number | null;\n  onChange?: (value: string) => void;\n  type?: string;\n  disabled?: boolean;\n};\n\nconst CustomInput = ({\n  label,\n  onChange,\n  value = '',\n  type = 'string',\n  disabled,\n}: Props) => {\n  const [text, setText] = useState(value || '');\n\n  useEffect(() => {\n    setText(value || '');\n  }, [value]);\n\n  const handleChange = (event: any) => {\n    setText(event.target.value);\n    onChange && onChange(event.target.value);\n  };\n\n  return (\n    <TextField\n      label={label}\n      variant=\"outlined\"\n      value={text}\n      onChange={handleChange}\n      type={type}\n      className=\"custom-input\"\n      disabled={disabled || false}\n    />\n  );\n};\n\nexport default CustomInput;\n","export { default } from './CustomInput';\n","import React, { useState, useEffect } from 'react';\n\nconst useDebounce = (value: string, delay: number) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value]);\n\n  return debouncedValue;\n};\n\nexport default useDebounce;\n","import * as React from 'react';\nimport './index.scss';\nimport { useHeader } from './useHeader';\n\nconst Header = () => {\n  const { onSearch, onLogout, searchText } = useHeader();\n\n  return (\n    <div className=\"header container\">\n      <div className=\"header__logo\">\n        <img src=\"/icons/logo.svg\" alt=\"logo\" />\n      </div>\n      <div className=\"header__search\">\n        <input\n          type=\"text\"\n          placeholder=\"Пошук...\"\n          onChange={onSearch}\n          value={searchText}\n        />\n        <img src=\"/icons/search.svg\" alt=\"search\" />\n      </div>\n      <div className=\"header__control\">\n        <img src=\"/icons/log-out.svg\" alt=\"logout\" onClick={onLogout} />\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import { useDispatch } from 'react-redux';\nimport {\n  ChangeEvent, useState, useEffect, useCallback\n} from 'react';\nimport { setUser } from '../../store/main/actions';\nimport { searchAppointments } from '../../store/appointments/actions';\nimport useDebounce from './utils/useDebounce';\n\nexport const useHeader = () => {\n  const dispatch = useDispatch();\n  const [searchText, setSearchText] = useState<string>('');\n  const [count, setCount] = useState<number>(0);\n\n  const debouncedValue = useDebounce(searchText, 1000);\n\n  useEffect(() => {\n    if (!count) {\n      setCount((prev: number) => prev + 1);\n      return;\n    }\n\n    dispatch(searchAppointments(debouncedValue));\n  }, [debouncedValue]);\n\n  const onSearch = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value);\n  }, [searchText]);\n\n  const onLogout = useCallback(() => {\n    localStorage.clear();\n    dispatch(setUser({ type: null, token: null }));\n  }, []);\n\n  return { onSearch, onLogout, searchText };\n};\n","import { useState } from 'react';\nimport { SectionCard } from './components/DashboardSection/DashboardSection';\n\n// eslint-disable-next-line no-shadow\nexport enum DashboardViewType {\n  CARDS,\n  TABLE\n}\n\nexport type Section = {\n  title: string;\n  cards: SectionCard[];\n}\n\nexport type Props = {\n  link: string,\n  sections: Section[],\n  isChangeTypeButton?: boolean;\n  style?: DashboardViewType,\n}\n\nexport const useDashboard = ({ style }: Props) => {\n  const [selectedType, setSelectedType] = useState(style || DashboardViewType.CARDS);\n\n  return { selectedType, setSelectedType };\n};\n","import * as React from 'react';\nimport './index.scss';\nimport { Link } from 'react-router-dom';\n\ntype Props = {\n  title: string;\n  children: React.ReactNode;\n  link: string\n  headerColor?: string;\n}\n\nconst Card = ({ title, headerColor, children, link }: Props) => (\n  <Link to={link} className=\"card\">\n    <div className=\"card__header\" style={{ backgroundColor: headerColor || '' }}>\n      <span style={{ color: headerColor ? 'white' : '' }}>{title}</span>\n    </div>\n    <div className=\"card__main\">\n      {children}\n    </div>\n  </Link>\n);\n\nexport default Card;\n","import * as React from 'react';\nimport Card from '../../../Card';\nimport { DashboardViewType } from '../../useDashboard';\n\nexport type SectionCard = {\n  id: number;\n  title: string;\n  content: string[];\n  color?: string;\n}\n\ntype Props = {\n  link: string;\n  title: string,\n  cards: SectionCard[],\n  style: DashboardViewType;\n}\n\nconst DashboardSection = ({ link, title, cards, style }: Props) => (\n  <div className=\"dashboard__main-section\">\n    <h2>{title}</h2>\n    <div className={`cards ${style === DashboardViewType.TABLE ? 'table' : ''}`}>\n      {cards.map((card: SectionCard) => (\n        <Card\n          key={card.id}\n          title={card.title}\n          headerColor={card.color}\n          link={`/${link}/${card.id}`}\n        >\n          {card.content.map((item: string) => (\n            <span key={item} className=\"card__content-item\">{item}</span>\n          ))}\n        </Card>\n      ))}\n    </div>\n  </div>\n);\n\nexport default DashboardSection;\n","import * as React from 'react';\nimport { DashboardViewType } from '../../useDashboard';\nimport './index.scss';\n\ntype Props = {\n  selected: DashboardViewType;\n  onClick: (value: DashboardViewType) => void;\n}\n\nconst DashboardControl = ({ selected, onClick }: Props) => (\n  <div className=\"dashboard__space-control\">\n    <svg\n      className={`${DashboardViewType.CARDS === selected ? 'selected' : ''}`}\n      onClick={() => onClick(DashboardViewType.CARDS)}\n      width=\"18\"\n      height=\"18\"\n      viewBox=\"0 0 18 18\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.50008 0.666748H7.33341C7.83341 0.666748 8.16675 1.00008 8.16675 1.50008V7.33341C8.16675 7.83341 7.83341 8.16675 7.33341 8.16675H1.50008C1.00008 8.16675 0.666748 7.83341 0.666748 7.33341V1.50008C0.666748 1.00008 1.00008 0.666748 1.50008 0.666748ZM2.33341 6.50008H6.50008V2.33341H2.33341V6.50008ZM16.5001 0.666748H10.6667C10.1667 0.666748 9.83342 1.00008 9.83342 1.50008V7.33341C9.83342 7.83341 10.1667 8.16675 10.6667 8.16675H16.5001C17.0001 8.16675 17.3334 7.83341 17.3334 7.33341V1.50008C17.3334 1.00008 17.0001 0.666748 16.5001 0.666748ZM11.5001 6.50008H15.6667V2.33341H11.5001V6.50008ZM16.5001 9.83342H10.6667C10.1667 9.83342 9.83342 10.1667 9.83342 10.6667V16.5001C9.83342 17.0001 10.1667 17.3334 10.6667 17.3334H16.5001C17.0001 17.3334 17.3334 17.0001 17.3334 16.5001V10.6667C17.3334 10.1667 17.0001 9.83342 16.5001 9.83342ZM11.5001 15.6667H15.6667V11.5001H11.5001V15.6667ZM7.33341 9.83342H1.50008C1.00008 9.83342 0.666748 10.1667 0.666748 10.6667V16.5001C0.666748 17.0001 1.00008 17.3334 1.50008 17.3334H7.33341C7.83341 17.3334 8.16675 17.0001 8.16675 16.5001V10.6667C8.16675 10.1667 7.83341 9.83342 7.33341 9.83342ZM2.33341 15.6667H6.50008V11.5001H2.33341V15.6667Z\" fill=\"#165153\" />\n    </svg>\n    <svg\n      className={`${DashboardViewType.TABLE === selected ? 'selected' : ''}`}\n      onClick={() => onClick(DashboardViewType.TABLE)}\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 20 20\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M3.33325 0.833252H16.6666C18.0833 0.833252 19.1666 1.91659 19.1666 3.33325V6.66659C19.1666 8.08325 18.0833 9.16658 16.6666 9.16658H3.33325C1.91659 9.16658 0.833252 8.08325 0.833252 6.66659V3.33325C0.833252 1.91659 1.91659 0.833252 3.33325 0.833252ZM16.6666 7.49992C17.1666 7.49992 17.4999 7.16658 17.4999 6.66658V3.33325C17.4999 2.83325 17.1666 2.49992 16.6666 2.49992H3.33325C2.83325 2.49992 2.49992 2.83325 2.49992 3.33325V6.66658C2.49992 7.16658 2.83325 7.49992 3.33325 7.49992H16.6666ZM16.6666 10.8333H3.33325C1.91659 10.8333 0.833252 11.9166 0.833252 13.3333V16.6666C0.833252 18.0833 1.91659 19.1666 3.33325 19.1666H16.6666C18.0833 19.1666 19.1666 18.0833 19.1666 16.6666V13.3333C19.1666 11.9166 18.0833 10.8333 16.6666 10.8333ZM16.6666 17.4999C17.1666 17.4999 17.4999 17.1666 17.4999 16.6666V13.3333C17.4999 12.8333 17.1666 12.4999 16.6666 12.4999H3.33325C2.83325 12.4999 2.49992 12.8333 2.49992 13.3333V16.6666C2.49992 17.1666 2.83325 17.4999 3.33325 17.4999H16.6666ZM5.58325 4.41659C5.74992 4.58325 5.83325 4.74992 5.83325 4.99992C5.83325 5.24992 5.74992 5.41659 5.58325 5.58325C5.41658 5.74992 5.24992 5.83325 4.99992 5.83325C4.74992 5.83325 4.58325 5.74992 4.41659 5.58325C4.33325 5.49992 4.24992 5.41659 4.24992 5.33325C4.16659 5.24992 4.16659 5.08325 4.16659 4.99992C4.16659 4.91659 4.16659 4.74992 4.24992 4.66659C4.29159 4.62492 4.31242 4.58325 4.33325 4.54159C4.35409 4.49992 4.37492 4.45825 4.41659 4.41659C4.49992 4.33325 4.58325 4.24992 4.66659 4.24992C4.91658 4.16659 5.08325 4.16659 5.33325 4.24992C5.41658 4.24992 5.49992 4.33325 5.58325 4.41659ZM5.83325 14.9999C5.83325 14.7499 5.74992 14.5833 5.58325 14.4166C5.24992 14.0833 4.74992 14.0833 4.41659 14.4166C4.37492 14.4583 4.35409 14.4999 4.33325 14.5416C4.31242 14.5833 4.29159 14.6249 4.24992 14.6666C4.16659 14.7499 4.16659 14.9166 4.16659 14.9999C4.16659 15.2499 4.24992 15.4166 4.41659 15.5833C4.58325 15.7499 4.74992 15.8333 4.99992 15.8333C5.24992 15.8333 5.41658 15.7499 5.58325 15.5833C5.74992 15.4166 5.83325 15.2499 5.83325 14.9999Z\" fill=\"#C0C1C1\" />\n    </svg>\n  </div>\n);\n\nexport default DashboardControl;\n","import React from 'react';\nimport './index.scss';\nimport DashboardSection from './components/DashboardSection';\nimport DashboardControl from './components/DashbordControl';\nimport { Section, Props, useDashboard } from './useDashboard';\nimport ContentPanel from '../ContentPanel';\n\nconst Dashboard = (props: Props) => {\n  const { selectedType, setSelectedType } = useDashboard(props);\n\n  return (\n    <>\n      {props.isChangeTypeButton\n        && <DashboardControl selected={selectedType} onClick={setSelectedType} />}\n      {props.sections && (\n        <div className=\"dashboard__main\">\n          {props.sections.map((section: Section) => (\n            <DashboardSection\n              link={props.link}\n              title={section.title}\n              style={selectedType}\n              cards={section.cards}\n            />\n          ))}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Dashboard;\n","import * as React from 'react';\nimport './index.scss';\n\ntype Props = {\n  children: React.ReactNode\n}\n\nconst ControlPanel = ({ children }: Props) => (\n  <div className=\"controlPanel\">\n    {children}\n  </div>\n);\n\nexport default ControlPanel;\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({\n      color: theme.palette.text.secondary\n    }, theme.typography.caption, {\n      textAlign: 'left',\n      marginTop: 3,\n      margin: 0,\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      },\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    }),\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `margin=\"dense\"`. */\n    marginDense: {\n      marginTop: 4\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` or `variant=\"outlined\"`. */\n    contained: {\n      marginLeft: 14,\n      marginRight: 14\n    },\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `filled={true}`. */\n    filled: {},\n\n    /* Pseudo-class applied to the root element if `required={true}`. */\n    required: {}\n  };\n};\nvar FormHelperText = /*#__PURE__*/React.forwardRef(function FormHelperText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'p' : _props$component,\n      disabled = props.disabled,\n      error = props.error,\n      filled = props.filled,\n      focused = props.focused,\n      margin = props.margin,\n      required = props.required,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"margin\", \"required\", \"variant\"]);\n\n  var muiFormControl = useFormControl();\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['variant', 'margin', 'disabled', 'error', 'filled', 'focused', 'required']\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, (fcs.variant === 'filled' || fcs.variant === 'outlined') && classes.contained, className, fcs.disabled && classes.disabled, fcs.error && classes.error, fcs.filled && classes.filled, fcs.focused && classes.focused, fcs.required && classes.required, fcs.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), children === ' ' ?\n  /*#__PURE__*/\n  // eslint-disable-next-line react/no-danger\n  React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: '&#8203;'\n    }\n  }) : children);\n});\nprocess.env.NODE_ENV !== \"production\" ? FormHelperText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   *\n   * If `' '` is provided, the component reserves one line height for displaying a future message.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, helper text should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use focused classes key.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n\n  /**\n   * If `true`, the helper text should use required classes key.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormHelperText'\n})(FormHelperText);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport withStyles from '../styles/withStyles';\nvar variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {}\n};\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/api/form-control/)\n * - [InputLabel](/api/input-label/)\n * - [FilledInput](/api/filled-input/)\n * - [OutlinedInput](/api/outlined-input/)\n * - [Input](/api/input/)\n * - [FormHelperText](/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\n\nvar TextField = /*#__PURE__*/React.forwardRef(function TextField(props, ref) {\n  var autoComplete = props.autoComplete,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      defaultValue = props.defaultValue,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      FormHelperTextProps = props.FormHelperTextProps,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      helperText = props.helperText,\n      hiddenLabel = props.hiddenLabel,\n      id = props.id,\n      InputLabelProps = props.InputLabelProps,\n      inputProps = props.inputProps,\n      InputProps = props.InputProps,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      placeholder = props.placeholder,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required,\n      rows = props.rows,\n      rowsMax = props.rowsMax,\n      _props$select = props.select,\n      select = _props$select === void 0 ? false : _props$select,\n      SelectProps = props.SelectProps,\n      type = props.type,\n      value = props.value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"autoComplete\", \"autoFocus\", \"children\", \"classes\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"hiddenLabel\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"rowsMax\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('Material-UI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n\n  var InputMore = {};\n\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n\n    if (label) {\n      var _InputLabelProps$requ;\n\n      var displayRequired = (_InputLabelProps$requ = InputLabelProps === null || InputLabelProps === void 0 ? void 0 : InputLabelProps.required) !== null && _InputLabelProps$requ !== void 0 ? _InputLabelProps$requ : required;\n      InputMore.label = /*#__PURE__*/React.createElement(React.Fragment, null, label, displayRequired && \"\\xA0*\");\n    }\n  }\n\n  if (select) {\n    // unset defaults from textbox inputs\n    if (!SelectProps || !SelectProps.native) {\n      InputMore.id = undefined;\n    }\n\n    InputMore['aria-describedby'] = undefined;\n  }\n\n  var helperTextId = helperText && id ? \"\".concat(id, \"-helper-text\") : undefined;\n  var inputLabelId = label && id ? \"\".concat(id, \"-label\") : undefined;\n  var InputComponent = variantComponent[variant];\n  var InputElement = /*#__PURE__*/React.createElement(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    rowsMax: rowsMax,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n  return /*#__PURE__*/React.createElement(FormControl, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    hiddenLabel: hiddenLabel,\n    ref: ref,\n    required: required,\n    color: color,\n    variant: variant\n  }, other), label && /*#__PURE__*/React.createElement(InputLabel, _extends({\n    htmlFor: id,\n    id: inputLabelId\n  }, InputLabelProps), label), select ? /*#__PURE__*/React.createElement(Select, _extends({\n    \"aria-describedby\": helperTextId,\n    id: id,\n    labelId: inputLabelId,\n    value: value,\n    input: InputElement\n  }, SelectProps), children) : InputElement, helperText && /*#__PURE__*/React.createElement(FormHelperText, _extends({\n    id: helperTextId\n  }, FormHelperTextProps), helperText));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextField.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The default value of the `input` element.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the `input` element will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * Props applied to the [`FormHelperText`](/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Props applied to the [`InputLabel`](/api/input-label/) element.\n   */\n  InputLabelProps: PropTypes.object,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/api/filled-input/),\n   * [`OutlinedInput`](/api/outlined-input/) or [`Input`](/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\n   * If `true`, a textarea element will be rendered instead of an input.\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The short hint displayed in the input before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * If `true`, the label is displayed as required and the `input` element` will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  rowsMax: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Render a [`Select`](/api/select/) element while passing the Input element to `Select` as `input` parameter.\n   * If this option is set you must pass the options of the select as children.\n   */\n  select: PropTypes.bool,\n\n  /**\n   * Props applied to the [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object,\n\n  /**\n   * The size of the text field.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTextField'\n})(TextField);","import { useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SectionCard } from '../../components/Dashboard/components/DashboardSection/DashboardSection';\nimport { fetchImmovables, fetchDevelopers } from '../../store/registrator/actions';\nimport { State } from '../../store/types';\n\n/* eslint-disable no-shadow */\nexport enum RegistratorNavigationTypes {\n  DEVELOPER = 'developer',\n  IMMOVABLE = 'immovable',\n}\n\nexport const useRegistratorScreen = () => {\n  const dispatch = useDispatch();\n  const { isLoading, developers, immovables } = useSelector((state: State) => state.registrator);\n  const [selectedNav, setSelectedNav] = useState(RegistratorNavigationTypes.IMMOVABLE);\n  const [selectedId, setSelectedId] = useState<string>();\n\n  useEffect(() => {\n    if (selectedNav === RegistratorNavigationTypes.DEVELOPER) {\n      dispatch(fetchDevelopers());\n    } else {\n      dispatch(fetchImmovables());\n    }\n  }, [selectedNav]);\n\n  const selectedCardData = useMemo(() => {\n    if (selectedNav === RegistratorNavigationTypes.IMMOVABLE) {\n      return immovables ? immovables.immovables\n        .find((item: any) => item.id === Number(selectedId)) : null;\n    }\n\n    return developers ? developers.developers\n      .find((item: any) => item.id === Number(selectedId)) : null;\n  }, [selectedId, developers, immovables]);\n\n  const sections = useMemo(() => {\n    let title = '';\n    let cards: SectionCard[] = [];\n\n    if (selectedNav === RegistratorNavigationTypes.DEVELOPER) {\n      title = developers?.date_info || '';\n      cards = (developers?.developers || []).map((item: any) => ({\n        id: item.id,\n        title: item.title,\n        content: [`Дата: ${item.date}`, `Номер: ${item.number}`],\n        color: item.color,\n      }));\n    } else if (selectedNav === RegistratorNavigationTypes.IMMOVABLE) {\n      title = immovables?.date_info || '';\n      cards = (immovables?.immovables || []).map((item: any) => ({\n        id: item.id,\n        title: item.title,\n        content: [`Дата: ${item.date}`, `Номер: ${item.number}`],\n        color: item.color,\n      }));\n    }\n\n    return [{\n      title,\n      cards,\n    }];\n  }, [selectedNav, immovables, developers]);\n\n  return { selectedNav, setSelectedNav, isLoading, sections, setSelectedId, selectedCardData };\n};\n","import * as React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport ControlPanel from '../../../../components/ControlPanel';\nimport { RegistratorNavigationTypes } from '../../useRegistratorScreen';\n\ntype Props = {\n  selected: RegistratorNavigationTypes;\n  onSelect: (value: RegistratorNavigationTypes) => void;\n}\n\nconst Navigation = ({ onSelect, selected }: Props) => {\n  const history = useHistory();\n\n  const handleClick = (type: RegistratorNavigationTypes) => {\n    onSelect(type);\n    history.push(`/${type}`);\n  };\n\n  return (\n    <ControlPanel>\n      <button\n        className={`registrator__navigation-item ${\n          selected === RegistratorNavigationTypes.IMMOVABLE ? 'selected' : ''\n        }`}\n        type=\"button\"\n        onClick={() => handleClick(RegistratorNavigationTypes.IMMOVABLE)}\n      >\n        <img src=\"/icons/registrator/immovable.svg\" alt=\"immovable\" />\n        Заборони на продавця\n      </button>\n      <button\n        className={`registrator__navigation-item ${\n          selected === RegistratorNavigationTypes.DEVELOPER ? 'selected' : ''\n        }`}\n        type=\"button\"\n        onClick={() => handleClick(RegistratorNavigationTypes.DEVELOPER)}\n      >\n        <img src=\"/icons/registrator/developer.svg\" alt=\"developer\" />\n        Заборони по нерухомості\n      </button>\n    </ControlPanel>\n  );\n};\n\nexport default Navigation;\n","import * as React from 'react';\nimport './index.scss';\n\ntype Props = {\n  children: React.ReactNode\n}\n\nconst ContentPanel = ({ children }: Props) => (\n  <div className=\"contentPanel\">\n    {children}\n  </div>\n);\n\nexport default ContentPanel;\n","import * as React from 'react';\nimport './index.scss';\nimport { useState, useEffect } from 'react';\nimport CustomInput from '../CustomInput';\n\ntype Props = {\n  label: string;\n  value: string;\n  onChange?: (val: string) => void;\n  disabled?: boolean;\n}\n\nconst InputWithCopy = ({ label, value, disabled, onChange }: Props) => {\n  const [done, setDone] = useState<boolean>(false);\n\n  const handleSave = React.useCallback(() => {\n    if (!value) return;\n\n    navigator.clipboard.writeText(value);\n\n    setDone(true);\n    setTimeout(() => setDone(false), 3000);\n  }, [value]);\n\n  return (\n    <div className=\"clipboard-input\">\n      <CustomInput label={label} onChange={onChange} value={value} disabled={disabled} />\n      <button\n        type=\"button\"\n        onClick={handleSave}\n      >\n        {done ? <img src=\"/icons/check.svg\" alt=\"copy\" /> : <img src=\"/icons/copy.svg\" alt=\"copy\" />}\n      </button>\n    </div>\n  );\n};\n\nexport default InputWithCopy;\n","import React from 'react';\nimport './index.scss';\n\ntype Props = {\n  title: string;\n  children: React.ReactNode;\n}\n\nconst SectionWithTitle = ({ title, children }: Props) => (\n  <div className=\"section-with-title\">\n    <div className=\"section-with-title__header\">\n      <h2>{title}</h2>\n    </div>\n    <div className=\"section-with-title__body\">\n      {children}\n    </div>\n  </div>\n);\n\nexport default SectionWithTitle;\n","import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport InputWithCopy from '../../../../components/InputWithCopy';\nimport SectionWithTitle from '../../../../components/SectionWithTitle';\n\ntype Props = {\n  onImmovableChange: (id: string) => void;\n  data: any;\n}\n\nconst Immovable = ({ onImmovableChange, data }: Props) => {\n  const { id } = useParams<{ id: string }>();\n\n  useEffect(() => onImmovableChange(id), [id]);\n\n  if (!data) {\n    return null;\n  }\n\n  return (\n    <div className=\"registrator__immovable\">\n      <SectionWithTitle title=\"Заборони по нерухомості\">\n        <div className=\"registrator__immovable-content\">\n          <InputWithCopy label=\"Реєстраційни номер\" value={data.immovable_code} disabled />\n        </div>\n      </SectionWithTitle>\n    </div>\n  );\n};\n\nexport default Immovable;\n","import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport InputWithCopy from '../../../../components/InputWithCopy';\nimport SectionWithTitle from '../../../../components/SectionWithTitle';\n\ntype Props = {\n  onImmovableChange: (id: string) => void;\n  data: any;\n}\n\nconst Developer = ({ onImmovableChange, data }: Props) => {\n  const { id } = useParams<{ id: string }>();\n\n  useEffect(() => onImmovableChange(id), [id]);\n\n  if (!data) {\n    return null;\n  }\n\n  return (\n    <div className=\"registrator__developer\">\n      <SectionWithTitle title={data.title}>\n        <div className=\"registrator__developer-content\">\n          <InputWithCopy label=\"ПІБ\" value={data.full_name} disabled />\n          <InputWithCopy label=\"Код\" value={data.tax_code} disabled />\n        </div>\n      </SectionWithTitle>\n    </div>\n  );\n};\n\nexport default Developer;\n","import * as React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport './index.scss';\nimport Header from '../../components/Header';\nimport Navigation from './components/Navigation';\nimport { useRegistratorScreen } from './useRegistratorScreen';\nimport Loader from '../../components/Loader/Loader';\nimport ContentPanel from '../../components/ContentPanel';\nimport Dashboard from '../../components/Dashboard';\nimport Immovable from './components/Immovable';\nimport Developer from './components/Developer';\n\nconst RegistratorScreen = () => {\n  const meta = useRegistratorScreen();\n\n  return (\n    <>\n      <Header />\n      <main className=\"registrator\">\n        <Navigation onSelect={meta.setSelectedNav} selected={meta.selectedNav} />\n        <ContentPanel>\n          <Switch>\n            <Route path=\"/immovable/:id\">\n              <Immovable onImmovableChange={meta.setSelectedId} data={meta.selectedCardData} />\n            </Route>\n\n            <Route path=\"/developer/:id\">\n              <Developer onImmovableChange={meta.setSelectedId} data={meta.selectedCardData} />\n            </Route>\n\n            {meta.isLoading && <Loader />}\n            {!meta.isLoading\n              && <Dashboard link={meta.selectedNav} sections={meta.sections} />}\n          </Switch>\n        </ContentPanel>\n      </main>\n    </>\n  );\n};\n\nexport default RegistratorScreen;\n"],"sourceRoot":""}